co.aikar.commands.ACFBukkitHelpTopic -> co.aikar.commands.ACFBukkitHelpTopic:
    35:46:void <init>(co.aikar.commands.BukkitCommandManager,co.aikar.commands.BukkitRootCommand) -> <init>
co.aikar.commands.ACFBukkitHelpTopic$1 -> co.aikar.commands.ACFBukkitHelpTopic$1:
    java.util.List val$messages -> a
    38:38:void <init>(co.aikar.commands.ACFBukkitHelpTopic,co.aikar.commands.BukkitCommandManager,org.bukkit.command.CommandSender,java.util.List) -> <init>
    41:42:void sendMessageInternal(java.lang.String) -> sendMessageInternal
co.aikar.commands.ACFBukkitListener -> co.aikar.commands.a:
    co.aikar.commands.BukkitCommandManager manager -> a
    org.bukkit.plugin.Plugin plugin -> b
    40:43:void <init>(co.aikar.commands.BukkitCommandManager,org.bukkit.plugin.Plugin) -> <init>
    47:51:void onPluginDisable(org.bukkit.event.server.PluginDisableEvent) -> a
    55:63:void onPlayerJoin(org.bukkit.event.player.PlayerJoinEvent) -> a
    68:71:void onPlayerQuit(org.bukkit.event.player.PlayerQuitEvent) -> a
    58:58:void lambda$onPlayerJoin$0(org.bukkit.entity.Player) -> a
co.aikar.commands.ACFBukkitScheduler -> co.aikar.commands.ACFBukkitScheduler:
    int localeTask -> a
    30:30:void <init>() -> <init>
    35:36:void registerSchedulerDependencies(co.aikar.commands.BukkitCommandManager) -> registerSchedulerDependencies
    39:40:void createDelayedTask(org.bukkit.plugin.Plugin,java.lang.Runnable,long) -> createDelayedTask
    43:44:void createLocaleTask(org.bukkit.plugin.Plugin,java.lang.Runnable,long,long) -> createLocaleTask
    47:48:void cancelLocaleTask() -> cancelLocaleTask
co.aikar.commands.ACFBukkitUtil -> co.aikar.commands.ACFBukkitUtil:
    45:45:void <init>() -> <init>
    48:57:java.lang.String formatLocation(org.bukkit.Location) -> formatLocation
    61:61:java.lang.String color(java.lang.String) -> color
    71:75:void sendMsg(org.bukkit.command.CommandSender,java.lang.String) -> sendMsg
    78:78:org.bukkit.Location stringToLocation(java.lang.String) -> stringToLocation
    82:108:org.bukkit.Location stringToLocation(java.lang.String,org.bukkit.World) -> stringToLocation
    112:127:java.lang.String fullLocationToString(org.bukkit.Location) -> fullLocationToString
    131:146:java.lang.String fullBlockLocationToString(org.bukkit.Location) -> fullBlockLocationToString
    150:162:java.lang.String blockLocationToString(org.bukkit.Location) -> blockLocationToString
    166:166:double distance(org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> distance
    170:170:double distance2d(org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> distance2d
    174:176:double distance2d(org.bukkit.Location,org.bukkit.Location) -> distance2d
    180:183:double distance(org.bukkit.Location,org.bukkit.Location) -> distance
    187:187:org.bukkit.Location getTargetLoc(org.bukkit.entity.Player) -> getTargetLoc
    191:191:org.bukkit.Location getTargetLoc(org.bukkit.entity.Player,int) -> getTargetLoc
    196:200:org.bukkit.Location getTargetLoc(org.bukkit.entity.Player,int,double) -> getTargetLoc
    205:205:org.bukkit.Location getRandLoc(org.bukkit.Location,int) -> getRandLoc
    209:209:org.bukkit.Location getRandLoc(org.bukkit.Location,int,int) -> getRandLoc
    214:218:org.bukkit.Location getRandLoc(org.bukkit.Location,int,int,int) -> getRandLoc
    223:223:java.lang.String removeColors(java.lang.String) -> removeColors
    227:227:java.lang.String replaceChatString(java.lang.String,java.lang.String,java.lang.String) -> replaceChatString
    231:242:java.lang.String replaceChatString(java.lang.String,java.util.regex.Pattern,java.lang.String) -> replaceChatString
    246:246:boolean isWithinDistance(org.bukkit.entity.Player,org.bukkit.entity.Player,int) -> isWithinDistance
    250:250:boolean isWithinDistance(org.bukkit.Location,org.bukkit.Location,int) -> isWithinDistance
    259:263:org.bukkit.entity.Player findPlayerSmart(org.bukkit.command.CommandSender,java.lang.String) -> findPlayerSmart
    267:300:org.bukkit.entity.Player findPlayerSmart(co.aikar.commands.CommandIssuer,java.lang.String) -> findPlayerSmart
    305:320:void findMatches(java.lang.String,org.bukkit.command.CommandSender,java.util.List,java.util.List) -> a
    323:323:boolean isValidName(java.lang.String) -> isValidName
    327:327:boolean isValidItem(org.bukkit.inventory.ItemStack) -> a
co.aikar.commands.ACFFoliaScheduler -> co.aikar.commands.ACFFoliaScheduler:
    io.papermc.paper.threadedregions.scheduler.ScheduledTask scheduledTask -> a
    33:33:void <init>() -> <init>
    39:40:void registerSchedulerDependencies(co.aikar.commands.BukkitCommandManager) -> registerSchedulerDependencies
    45:46:void createDelayedTask(org.bukkit.plugin.Plugin,java.lang.Runnable,long) -> createDelayedTask
    51:52:void createLocaleTask(org.bukkit.plugin.Plugin,java.lang.Runnable,long,long) -> createLocaleTask
    56:57:void cancelLocaleTask() -> cancelLocaleTask
    51:51:void lambda$createLocaleTask$1(java.lang.Runnable,io.papermc.paper.threadedregions.scheduler.ScheduledTask) -> a
    45:45:void lambda$createDelayedTask$0(java.lang.Runnable,io.papermc.paper.threadedregions.scheduler.ScheduledTask) -> b
co.aikar.commands.ACFPatterns -> co.aikar.commands.b:
    java.util.regex.Pattern COMMA -> a
    java.util.regex.Pattern PERCENTAGE -> b
    java.util.regex.Pattern NEWLINE -> c
    java.util.regex.Pattern DASH -> d
    java.util.regex.Pattern UNDERSCORE -> e
    java.util.regex.Pattern SPACE -> f
    java.util.regex.Pattern COLON -> g
    java.util.regex.Pattern COLONEQUALS -> h
    java.util.regex.Pattern PIPE -> i
    java.util.regex.Pattern NON_ALPHA_NUMERIC -> j
    java.util.regex.Pattern INTEGER -> k
    java.util.regex.Pattern VALID_NAME_PATTERN -> l
    java.util.regex.Pattern NON_PRINTABLE_CHARACTERS -> m
    java.util.regex.Pattern EQUALS -> n
    java.util.regex.Pattern FORMATTER -> o
    java.util.regex.Pattern I18N_STRING -> p
    java.util.regex.Pattern REPLACEMENT_PATTERN -> q
    java.util.Map patternCache -> r
    75:75:java.util.regex.Pattern getPattern(java.lang.String) -> a
    75:75:java.util.regex.Pattern lambda$getPattern$0(java.lang.String,java.lang.String) -> a
    35:62:void <clinit>() -> <clinit>
co.aikar.commands.ACFUtil -> co.aikar.commands.ACFUtil:
    java.util.Random RANDOM -> RANDOM
    51:52:void <init>() -> <init>
    55:55:java.lang.String padRight(java.lang.String,int) -> padRight
    59:59:java.lang.String padLeft(java.lang.String,int) -> padLeft
    63:63:java.lang.String formatNumber(java.lang.Integer) -> formatNumber
    67:67:java.lang.Enum getEnumFromName(java.lang.Enum[],java.lang.String) -> getEnumFromName
    71:76:java.lang.Enum getEnumFromName(java.lang.Enum[],java.lang.String,java.lang.Enum) -> getEnumFromName
    80:85:java.lang.Enum getEnumFromOrdinal(java.lang.Enum[],int) -> getEnumFromOrdinal
    89:89:java.lang.String ucfirst(java.lang.String) -> ucfirst
    93:93:java.lang.Double parseDouble(java.lang.String) -> parseDouble
    97:104:java.lang.Double parseDouble(java.lang.String,java.lang.Double) -> parseDouble
    108:108:java.lang.Float parseFloat(java.lang.String) -> parseFloat
    112:119:java.lang.Float parseFloat(java.lang.String,java.lang.Float) -> parseFloat
    123:123:java.lang.Long parseLong(java.lang.String) -> parseLong
    127:134:java.lang.Long parseLong(java.lang.String,java.lang.Long) -> parseLong
    138:138:java.lang.Integer parseInt(java.lang.String) -> parseInt
    142:149:java.lang.Integer parseInt(java.lang.String,java.lang.Integer) -> parseInt
    153:153:boolean randBool() -> randBool
    158:158:java.lang.Object nullDefault(java.lang.Object,java.lang.Object) -> nullDefault
    162:162:java.lang.String join(java.util.Collection) -> join
    166:166:java.lang.String join(java.util.Collection,java.lang.String) -> join
    170:170:java.lang.String join(java.lang.String[]) -> join
    174:174:java.lang.String join(java.lang.String[],java.lang.String) -> join
    178:178:java.lang.String join(java.lang.String[],char) -> join
    182:182:java.lang.String join(java.lang.String[],int) -> join
    186:186:java.lang.String join(java.lang.String[],int,char) -> join
    190:193:java.lang.String simplifyString(java.lang.String) -> simplifyString
    198:206:double round(double,int) -> round
    212:220:int roundUp(int,int) -> roundUp
    225:225:java.lang.String limit(java.lang.String,int) -> limit
    237:237:java.lang.String replace(java.lang.String,java.util.regex.Pattern,java.lang.String) -> replace
    249:249:java.lang.String replacePattern(java.lang.String,java.util.regex.Pattern,java.lang.String) -> replacePattern
    261:261:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> replace
    273:273:java.lang.String replacePattern(java.lang.String,java.lang.String,java.lang.String) -> replacePattern
    285:285:java.lang.String replacePatternMatch(java.lang.String,java.util.regex.Pattern,java.lang.String) -> replacePatternMatch
    297:297:java.lang.String replacePatternMatch(java.lang.String,java.lang.String,java.lang.String) -> replacePatternMatch
    301:310:java.lang.String replaceStrings(java.lang.String,java.lang.String[]) -> replaceStrings
    314:323:java.lang.String replacePatterns(java.lang.String,java.lang.String[]) -> replacePatterns
    327:327:java.lang.String capitalize(java.lang.String,char[]) -> capitalize
    335:338:java.lang.Object random(java.util.List) -> random
    342:345:java.lang.Object random(java.lang.Object[]) -> random
    358:358:java.lang.Enum random(java.lang.Class) -> random
    362:365:java.lang.String normalize(java.lang.String) -> normalize
    369:378:int indexOf(java.lang.String,java.lang.String[]) -> indexOf
    382:382:java.lang.String capitalizeFirst(java.lang.String) -> capitalizeFirst
    386:393:java.lang.String capitalizeFirst(java.lang.String,char) -> capitalizeFirst
    397:401:java.lang.String ltrim(java.lang.String) -> ltrim
    405:409:java.lang.String rtrim(java.lang.String) -> rtrim
    413:413:java.util.List enumNames(java.lang.Enum[]) -> enumNames
    417:417:java.util.List enumNames(java.lang.Class) -> enumNames
    421:421:java.lang.String combine(java.lang.String[]) -> combine
    425:433:java.lang.String combine(java.lang.String[],int) -> combine
    439:451:java.lang.Enum simpleMatch(java.lang.Class,java.lang.String) -> simpleMatch
    455:464:boolean isTruthy(java.lang.String) -> isTruthy
    469:478:java.lang.Number parseNumber(java.lang.String,boolean) -> parseNumber
    1649:1649:java.lang.String co.aikar.commands.ACFUtil$ApplyModifierToNumber.getNum():649:649 -> parseNumber
    1649:1649:java.lang.Number parseNumber(java.lang.String,boolean):475 -> parseNumber
    1653:1653:double co.aikar.commands.ACFUtil$ApplyModifierToNumber.getMod():653:653 -> parseNumber
    1653:1653:java.lang.Number parseNumber(java.lang.String,boolean):476 -> parseNumber
    483:488:java.math.BigDecimal parseBigNumber(java.lang.String,boolean) -> parseBigNumber
    2649:2649:java.lang.String co.aikar.commands.ACFUtil$ApplyModifierToNumber.getNum():649:649 -> parseBigNumber
    2649:2649:java.math.BigDecimal parseBigNumber(java.lang.String,boolean):484 -> parseBigNumber
    2653:2653:double co.aikar.commands.ACFUtil$ApplyModifierToNumber.getMod():653:653 -> parseBigNumber
    2653:2653:java.math.BigDecimal parseBigNumber(java.lang.String,boolean):485 -> parseBigNumber
    492:498:boolean hasIntersection(java.util.Collection,java.util.Collection) -> hasIntersection
    502:510:java.util.Collection intersection(java.util.Collection,java.util.Collection) -> intersection
    514:514:int rand(int,int) -> rand
    528:528:int rand(int,int,int,int) -> rand
    532:532:double rand(double,double) -> rand
    536:536:boolean isNumber(java.lang.String) -> isNumber
    540:570:java.lang.String intToRoman(int) -> intToRoman
    574:574:boolean isInteger(java.lang.String) -> isInteger
    579:582:boolean isFloat(java.lang.String) -> isFloat
    588:591:boolean isDouble(java.lang.String) -> isDouble
    596:596:boolean isBetween(float,double,double) -> isBetween
    601:602:double precision(double,int) -> precision
    607:607:void sneaky(java.lang.Throwable) -> sneaky
    3612:3612:java.lang.Throwable superSneaky(java.lang.Throwable):612:612 -> sneaky
    3612:3612:void sneaky(java.lang.Throwable):607 -> sneaky
    617:623:java.util.List preformOnImmutable(java.util.List,java.util.function.Consumer) -> preformOnImmutable
    627:635:java.lang.Object getFirstElement(java.lang.Iterable) -> getFirstElement
    49:49:void <clinit>() -> <clinit>
co.aikar.commands.ACFUtil$ApplyModifierToNumber -> co.aikar.commands.ACFUtil$a:
    java.lang.String num -> a
    boolean suffixes -> c
    double mod -> b
    643:646:void <init>(java.lang.String,boolean) -> <init>
    657:671:co.aikar.commands.ACFUtil$ApplyModifierToNumber invoke() -> a
co.aikar.commands.AnnotationLookups -> co.aikar.commands.c:
    30:30:void <init>() -> <init>
    47:47:boolean hasAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class) -> a
    119:119:java.lang.String[] getAnnotationValues(java.lang.reflect.AnnotatedElement,java.lang.Class,int) -> a
    1138:1142:java.lang.String[] getAnnotationValues(java.lang.reflect.AnnotatedElement,java.lang.Class,java.util.regex.Pattern,int):138:142 -> a
    1138:1142:java.lang.String[] getAnnotationValues(java.lang.reflect.AnnotatedElement,java.lang.Class,int):119 -> a
    java.lang.String getAnnotationValue(java.lang.reflect.AnnotatedElement,java.lang.Class,int) -> b
    175:192:java.lang.annotation.Annotation getAnnotationFromClass(java.lang.Class,java.lang.Class) -> a
co.aikar.commands.AnnotationProcessor -> co.aikar.commands.AnnotationProcessor:
    37:37:java.util.Set getApplicableParameters() -> getApplicableParameters
    42:42:void onBaseCommandRegister(co.aikar.commands.BaseCommand,java.lang.annotation.Annotation) -> onBaseCommandRegister
    45:45:void onCommandRegistered(co.aikar.commands.RegisteredCommand,java.lang.annotation.Annotation) -> onCommandRegistered
    48:48:void onParameterRegistered(co.aikar.commands.RegisteredCommand,int,java.lang.reflect.Parameter,java.lang.annotation.Annotation) -> onParameterRegistered
    51:51:void onPreComand(co.aikar.commands.CommandOperationContext) -> onPreComand
    54:54:void onPostComand(co.aikar.commands.CommandOperationContext) -> onPostComand
    57:57:void onPreContextResolution(co.aikar.commands.CommandExecutionContext) -> onPreContextResolution
    60:60:void onPostContextResolution(co.aikar.commands.CommandExecutionContext,java.lang.Object) -> onPostContextResolution
co.aikar.commands.Annotations -> co.aikar.commands.d:
    co.aikar.commands.CommandManager manager -> a
    java.util.Map valueMethods -> b
    java.util.Map noValueAnnotations -> c
    46:51:void <init>(co.aikar.commands.CommandManager) -> <init>
    54:104:java.lang.String getAnnotationValue(java.lang.reflect.AnnotatedElement,java.lang.Class,int) -> b
    108:122:java.lang.annotation.Annotation getAnnotationRecursive(java.lang.reflect.AnnotatedElement,java.lang.Class,java.util.Collection) -> a
    126:126:boolean hasOption(int,int) -> a
co.aikar.commands.BaseCommand -> co.aikar.commands.BaseCommand:
    java.lang.String CATCHUNKNOWN -> CATCHUNKNOWN
    java.lang.String DEFAULT -> DEFAULT
    com.google.common.collect.SetMultimap subCommands -> subCommands
    java.util.Set subScopes -> subScopes
    java.util.Map contextFlags -> contextFlags
    java.lang.reflect.Method preCommandHandler -> preCommandHandler
    java.lang.String execLabel -> execLabel
    java.lang.String execSubcommand -> execSubcommand
    java.lang.String[] origArgs -> origArgs
    co.aikar.commands.CommandManager manager -> manager
    co.aikar.commands.BaseCommand parentCommand -> parentCommand
    java.util.Map registeredCommands -> registeredCommands
    java.lang.String description -> description
    java.lang.String commandName -> commandName
    java.lang.String permission -> permission
    java.lang.String conditions -> conditions
    boolean hasHelpCommand -> hasHelpCommand
    co.aikar.commands.ExceptionHandler exceptionHandler -> exceptionHandler
    java.lang.ThreadLocal lastCommandOperationContext -> lastCommandOperationContext
    java.lang.String parentSubcommand -> parentSubcommand
    java.util.Set permissions -> permissions
    89:171:void <init>() -> <init>
    89:182:void <init>(java.lang.String) -> <init>
    191:191:co.aikar.commands.CommandOperationContext getLastCommandOperationContext() -> getLastCommandOperationContext
    200:200:java.lang.String getExecCommandLabel() -> getExecCommandLabel
    209:209:java.lang.String getExecSubcommand() -> getExecSubcommand
    218:218:java.lang.String[] getOrigArgs() -> getOrigArgs
    228:229:void onRegister(co.aikar.commands.CommandManager) -> onRegister
    239:273:void onRegister(co.aikar.commands.CommandManager,java.lang.String) -> onRegister
    1617:1617:co.aikar.commands.Annotations co.aikar.commands.CommandManager.getAnnotations():617:617 -> onRegister
    1617:1617:void onRegister(co.aikar.commands.CommandManager,java.lang.String):242 -> onRegister
    281:310:void registerSubclasses(java.lang.String) -> registerSubclasses
    316:373:void registerSubcommands() -> registerSubcommands
    2617:2617:co.aikar.commands.Annotations co.aikar.commands.CommandManager.getAnnotations():617:617 -> registerSubcommands
    2617:2617:void registerSubcommands():316 -> registerSubcommands
    379:388:void computePermissions() -> computePermissions
    397:403:java.lang.String getSubcommandValue(java.lang.reflect.Method) -> getSubcommandValue
    3617:3617:co.aikar.commands.Annotations co.aikar.commands.CommandManager.getAnnotations():617:617 -> getSubcommandValue
    3617:3617:java.lang.String getSubcommandValue(java.lang.reflect.Method):397 -> getSubcommandValue
    407:416:java.lang.String getParentSubcommand(java.lang.Class) -> getParentSubcommand
    4617:4617:co.aikar.commands.Annotations co.aikar.commands.CommandManager.getAnnotations():617:617 -> getParentSubcommand
    4617:4617:java.lang.String getParentSubcommand(java.lang.Class):409 -> getParentSubcommand
    426:431:void register(java.lang.String,co.aikar.commands.BaseCommand) -> register
    440:469:void registerSubcommand(java.lang.reflect.Method,java.lang.String) -> registerSubcommand
    5617:5617:co.aikar.commands.Annotations co.aikar.commands.CommandManager.getAnnotations():617:617 -> registerSubcommand
    5617:5617:void registerSubcommand(java.lang.reflect.Method,java.lang.String):454 -> registerSubcommand
    484:505:java.util.Set getSubCommandPossibilityList(java.lang.String[]) -> getSubCommandPossibilityList
    511:517:void execute(co.aikar.commands.CommandIssuer,co.aikar.commands.CommandRouter$CommandRouteResult) -> execute
    523:528:void postCommandOperation() -> postCommandOperation
    542:549:co.aikar.commands.CommandOperationContext preCommandOperation(co.aikar.commands.CommandIssuer,java.lang.String,java.lang.String[],boolean) -> preCommandOperation
    6474:6474:co.aikar.commands.CommandOperationContext co.aikar.commands.CommandManager.createCommandOperationContext(co.aikar.commands.BaseCommand,co.aikar.commands.CommandIssuer,java.lang.String,java.lang.String[],boolean):474:474 -> preCommandOperation
    6474:6474:co.aikar.commands.CommandOperationContext preCommandOperation(co.aikar.commands.CommandIssuer,java.lang.String,java.lang.String[],boolean):543 -> preCommandOperation
    558:558:co.aikar.commands.CommandIssuer getCurrentCommandIssuer() -> getCurrentCommandIssuer
    567:567:co.aikar.commands.CommandManager getCurrentCommandManager() -> getCurrentCommandManager
    572:582:void executeCommand(co.aikar.commands.CommandOperationContext,co.aikar.commands.CommandIssuer,java.lang.String[],co.aikar.commands.RegisteredCommand) -> executeCommand
    595:595:boolean canExecute(co.aikar.commands.CommandIssuer,co.aikar.commands.RegisteredCommand) -> canExecute
    607:607:java.util.List tabComplete(co.aikar.commands.CommandIssuer,java.lang.String,java.lang.String[]) -> tabComplete
    623:623:java.util.List tabComplete(co.aikar.commands.CommandIssuer,java.lang.String,java.lang.String[],boolean) -> tabComplete
    628:649:java.util.List tabComplete(co.aikar.commands.CommandIssuer,co.aikar.commands.RootCommand,java.lang.String[],boolean) -> tabComplete
    7241:7241:co.aikar.commands.CommandRouter co.aikar.commands.CommandManager.getRouter():241:241 -> tabComplete
    7241:7241:java.util.List tabComplete(co.aikar.commands.CommandIssuer,co.aikar.commands.RootCommand,java.lang.String[],boolean):633 -> tabComplete
    660:675:java.util.List getCommandsForCompletion(co.aikar.commands.CommandIssuer,java.lang.String[]) -> getCommandsForCompletion
    679:679:boolean isSpecialSubcommand(java.lang.String) -> isSpecialSubcommand
    693:702:java.util.List completeCommand(co.aikar.commands.CommandIssuer,co.aikar.commands.RegisteredCommand,java.lang.String[],java.lang.String,boolean) -> completeCommand
    8196:8219:java.util.List co.aikar.commands.CommandCompletions.of(co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandIssuer,java.lang.String[],boolean):196:219 -> completeCommand
    8196:8219:java.util.List completeCommand(co.aikar.commands.CommandIssuer,co.aikar.commands.RegisteredCommand,java.lang.String[],java.lang.String,boolean):701 -> completeCommand
    714:717:java.util.List filterTabComplete(java.lang.String,java.util.List) -> filterTabComplete
    730:756:boolean checkPrecommand(co.aikar.commands.CommandOperationContext,co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandIssuer,java.lang.String[]) -> checkPrecommand
    765:765:co.aikar.commands.CommandHelp getCommandHelp() -> getCommandHelp
    774:775:void showCommandHelp() -> showCommandHelp
    778:779:void help(java.lang.Object,java.lang.String[]) -> help
    782:783:void help(co.aikar.commands.CommandIssuer,java.lang.String[]) -> help
    786:787:void doHelp(java.lang.Object,java.lang.String[]) -> doHelp
    790:791:void doHelp(co.aikar.commands.CommandIssuer,java.lang.String[]) -> doHelp
    794:798:void showSyntax(co.aikar.commands.CommandIssuer,co.aikar.commands.RegisteredCommand) -> showSyntax
    801:801:boolean hasPermission(java.lang.Object) -> hasPermission
    805:805:boolean hasPermission(co.aikar.commands.CommandIssuer) -> hasPermission
    809:809:java.util.Set getRequiredPermissions() -> getRequiredPermissions
    813:813:boolean requiresPermission(java.lang.String) -> requiresPermission
    817:817:java.lang.String getName() -> getName
    821:821:co.aikar.commands.ExceptionHandler getExceptionHandler() -> getExceptionHandler
    825:826:co.aikar.commands.BaseCommand setExceptionHandler(co.aikar.commands.ExceptionHandler) -> setExceptionHandler
    830:830:co.aikar.commands.RegisteredCommand getDefaultRegisteredCommand() -> getDefaultRegisteredCommand
    834:834:java.lang.String setContextFlags(java.lang.Class,java.lang.String) -> setContextFlags
    838:838:java.lang.String getContextFlags(java.lang.Class) -> getContextFlags
    842:844:java.util.List getRegisteredCommands() -> getRegisteredCommands
    848:848:com.google.common.collect.SetMultimap getSubCommands() -> getSubCommands
    716:716:boolean lambda$filterTabComplete$2(java.lang.String,java.lang.String) -> lambda$filterTabComplete$2
    492:492:java.lang.String lambda$getSubCommandPossibilityList$1(java.lang.String,java.lang.String) -> lambda$getSubCommandPossibilityList$1
    293:293:java.lang.String lambda$registerSubclasses$0(java.lang.reflect.Parameter) -> lambda$registerSubclasses$0
co.aikar.commands.BukkitCommandCompletionContext -> co.aikar.commands.BukkitCommandCompletionContext:
    31:32:void <init>(co.aikar.commands.RegisteredCommand,co.aikar.commands.BukkitCommandIssuer,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    35:35:org.bukkit.command.CommandSender getSender() -> getSender
    43:43:org.bukkit.entity.Player getPlayer() -> getPlayer
co.aikar.commands.BukkitCommandCompletions -> co.aikar.commands.BukkitCommandCompletions:
    46:93:void <init>(co.aikar.commands.BukkitCommandManager) -> <init>
    73:88:java.util.Collection lambda$new$8(co.aikar.commands.BukkitCommandCompletionContext) -> a
    68:69:java.util.Collection lambda$new$7(co.aikar.commands.BukkitCommandCompletionContext) -> b
    67:67:java.util.Collection lambda$new$6(co.aikar.commands.BukkitCommandCompletionContext) -> c
    53:65:java.util.Collection lambda$new$5(co.aikar.commands.BukkitCommandCompletionContext) -> d
    65:65:java.lang.String lambda$new$4(org.bukkit.ChatColor) -> a
    62:62:boolean lambda$new$3(java.util.Set,org.bukkit.ChatColor) -> a
    55:55:boolean lambda$new$2(org.bukkit.ChatColor) -> b
    48:50:java.util.Collection lambda$new$1(co.aikar.commands.BukkitCommandCompletionContext) -> e
    49:49:java.lang.String lambda$new$0(org.bukkit.entity.EntityType) -> a
co.aikar.commands.BukkitCommandContexts -> co.aikar.commands.BukkitCommandContexts:
    52:250:void <init>(co.aikar.commands.BukkitCommandManager) -> <init>
    254:262:co.aikar.commands.bukkit.contexts.OnlinePlayer getOnlinePlayer(co.aikar.commands.BukkitCommandIssuer,java.lang.String,boolean) -> a
    180:243:org.bukkit.Location lambda$new$10(co.aikar.commands.BukkitCommandExecutionContext) -> a
    157:177:org.bukkit.ChatColor lambda$new$9(co.aikar.commands.BukkitCommandExecutionContext) -> b
    172:172:java.lang.String lambda$new$8(org.bukkit.ChatColor) -> a
    166:166:boolean lambda$new$7(java.lang.String,org.bukkit.ChatColor) -> a
    160:160:boolean lambda$new$6(org.bukkit.ChatColor) -> b
    133:154:org.bukkit.OfflinePlayer lambda$new$5(co.aikar.commands.BukkitCommandManager,co.aikar.commands.BukkitCommandExecutionContext) -> a
    99:129:org.bukkit.entity.Player lambda$new$4(co.aikar.commands.BukkitCommandExecutionContext) -> c
    84:95:org.bukkit.World lambda$new$3(co.aikar.commands.BukkitCommandExecutionContext) -> d
    60:81:co.aikar.commands.bukkit.contexts.OnlinePlayer[] lambda$new$2(co.aikar.commands.BukkitCommandExecutionContext) -> e
    56:57:co.aikar.commands.contexts.OnlinePlayer lambda$new$1(co.aikar.commands.BukkitCommandExecutionContext) -> f
    54:54:co.aikar.commands.bukkit.contexts.OnlinePlayer lambda$new$0(co.aikar.commands.BukkitCommandExecutionContext) -> g
co.aikar.commands.BukkitCommandContexts_1_12 -> co.aikar.commands.e:
    30:46:void register(co.aikar.commands.BukkitCommandContexts) -> a
    31:43:org.bukkit.NamespacedKey lambda$register$0(co.aikar.commands.BukkitCommandExecutionContext) -> a
    1501:1501:java.lang.String com.mongodb.AutoEncryptionSettings.toString():501:501 -> toString
    2047:2050:java.lang.Object com.mongodb.assertions.Assertions.notNull(java.lang.String,java.lang.Object):47:50 -> a
    2080:2083:void com.mongodb.assertions.Assertions.isTrue(java.lang.String,boolean):80:83 -> a
    2109:2112:void com.mongodb.assertions.Assertions.isTrueArgument(java.lang.String,boolean):109:112 -> b
    2124:2129:void com.mongodb.assertions.Assertions.doesNotContainNull(java.lang.String,java.util.Collection):124:129 -> a
    2139:2142:java.lang.Object com.mongodb.assertions.Assertions.assertNull(java.lang.Object):139:142 -> a
    2152:2155:java.lang.Object com.mongodb.assertions.Assertions.assertNotNull(java.lang.Object):152:155 -> b
    2164:2167:boolean com.mongodb.assertions.Assertions.assertTrue(boolean):164:167 -> a
    2176:2179:boolean com.mongodb.assertions.Assertions.assertFalse(boolean):176:179 -> b
    2188:2188:java.lang.AssertionError com.mongodb.assertions.Assertions.fail():188:188 -> a
    2198:2198:java.lang.AssertionError com.mongodb.assertions.Assertions.fail(java.lang.String):198:198 -> a
    3068:3093:com.mongodb.client.model.geojson.Point com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodePoint(org.bson.BsonReader):68:93 -> a
    3097:3122:com.mongodb.client.model.geojson.MultiPoint com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeMultiPoint(org.bson.BsonReader):97:122 -> b
    3126:3152:com.mongodb.client.model.geojson.Polygon com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodePolygon(org.bson.BsonReader):126:152 -> c
    3156:3182:com.mongodb.client.model.geojson.MultiPolygon com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeMultiPolygon(org.bson.BsonReader):156:182 -> d
    3186:3212:com.mongodb.client.model.geojson.LineString com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeLineString(org.bson.BsonReader):186:212 -> e
    3216:3242:com.mongodb.client.model.geojson.MultiLineString com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeMultiLineString(org.bson.BsonReader):216:242 -> f
    3246:3272:com.mongodb.client.model.geojson.GeometryCollection com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeGeometryCollection(org.bson.BsonReader):246:272 -> g
    3276:3286:java.util.List com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeGeometries(org.bson.BsonReader):276:286 -> j
    3290:3326:com.mongodb.client.model.geojson.Geometry com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeGeometry(org.bson.BsonReader):290:326 -> h
    3331:3349:com.mongodb.client.model.geojson.PolygonCoordinates com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodePolygonCoordinates(org.bson.BsonReader):331:349 -> k
    3354:3365:java.util.List com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeMultiPolygonCoordinates(org.bson.BsonReader):354:365 -> l
    3369:3376:java.util.List com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeCoordinates(org.bson.BsonReader):369:376 -> m
    3380:3387:java.util.List com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeMultiCoordinates(org.bson.BsonReader):380:387 -> n
    3391:3402:com.mongodb.client.model.geojson.Position com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodePosition(org.bson.BsonReader):391:402 -> o
    3407:3416:double com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.readAsDouble(org.bson.BsonReader):407:416 -> o
    3407:3416:com.mongodb.client.model.geojson.Position com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodePosition(org.bson.BsonReader):395 -> o
    3421:3439:com.mongodb.client.model.geojson.CoordinateReferenceSystem com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeCoordinateReferenceSystem(org.bson.BsonReader):421:439 -> i
    3443:3459:java.lang.String com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeCoordinateReferenceSystemProperties(org.bson.BsonReader):443:459 -> p
    3463:3470:void com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.validateIsDocument(org.bson.BsonReader):463:470 -> q
    3473:3476:void com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.validateIsArray(org.bson.BsonReader):473:476 -> r
    4046:4073:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):46:73 -> a
    5066:5066:java.lang.String com.mongodb.client.model.geojson.GeoJsonObjectType.getTypeName():66:66 -> a
    5066:5066:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):47 -> a
    5121:5126:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometryCollection(org.bson.BsonWriter,com.mongodb.client.model.geojson.GeometryCollection,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):121:126 -> a
    5121:5126:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):51 -> a
    6069:6069:java.util.List com.mongodb.client.model.geojson.GeometryCollection.getGeometries():69:69 -> a
    6069:6069:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometryCollection(org.bson.BsonWriter,com.mongodb.client.model.geojson.GeometryCollection,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):122 -> a
    6069:6069:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):51 -> a
    6076:6077:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodePoint(org.bson.BsonWriter,com.mongodb.client.model.geojson.Point):76:77 -> a
    6076:6077:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):55 -> a
    7071:7071:com.mongodb.client.model.geojson.Position com.mongodb.client.model.geojson.Point.getPosition():71:71 -> a
    7071:7071:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodePoint(org.bson.BsonWriter,com.mongodb.client.model.geojson.Point):76 -> a
    7071:7071:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):55 -> a
    7080:7085:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeMultiPoint(org.bson.BsonWriter,com.mongodb.client.model.geojson.MultiPoint):80:85 -> a
    7080:7085:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):57 -> a
    8070:8070:java.util.List com.mongodb.client.model.geojson.MultiPoint.getCoordinates():70:70 -> a
    8070:8070:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeMultiPoint(org.bson.BsonWriter,com.mongodb.client.model.geojson.MultiPoint):81 -> a
    8070:8070:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):57 -> a
    8088:8089:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodePolygon(org.bson.BsonWriter,com.mongodb.client.model.geojson.Polygon):88:89 -> a
    8088:8089:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):59 -> a
    9087:9087:com.mongodb.client.model.geojson.PolygonCoordinates com.mongodb.client.model.geojson.Polygon.getCoordinates():87:87 -> a
    9087:9087:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodePolygon(org.bson.BsonWriter,com.mongodb.client.model.geojson.Polygon):88 -> a
    9087:9087:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):59 -> a
    9092:9097:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeMultiPolygon(org.bson.BsonWriter,com.mongodb.client.model.geojson.MultiPolygon):92:97 -> a
    9092:9097:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):61 -> a
    10069:10069:java.util.List com.mongodb.client.model.geojson.MultiPolygon.getCoordinates():69:69 -> a
    10069:10069:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeMultiPolygon(org.bson.BsonWriter,com.mongodb.client.model.geojson.MultiPolygon):93 -> a
    10069:10069:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):61 -> a
    10100:10105:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeLineString(org.bson.BsonWriter,com.mongodb.client.model.geojson.LineString):100:105 -> a
    10100:10105:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):63 -> a
    11073:11073:java.util.List com.mongodb.client.model.geojson.LineString.getCoordinates():73:73 -> a
    11073:11073:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeLineString(org.bson.BsonWriter,com.mongodb.client.model.geojson.LineString):101 -> a
    11073:11073:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):63 -> a
    11108:11117:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeMultiLineString(org.bson.BsonWriter,com.mongodb.client.model.geojson.MultiLineString):108:117 -> a
    11108:11117:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):65 -> a
    12075:12075:java.util.List com.mongodb.client.model.geojson.MultiLineString.getCoordinates():75:75 -> a
    12075:12075:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeMultiLineString(org.bson.BsonWriter,com.mongodb.client.model.geojson.MultiLineString):109 -> a
    12075:12075:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):65 -> a
    12131:12137:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeCoordinateReferenceSystem(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):131:137 -> a
    12131:12137:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):71 -> a
    13091:13091:com.mongodb.client.model.geojson.CoordinateReferenceSystem com.mongodb.client.model.geojson.Geometry.getCoordinateReferenceSystem():91:91 -> a
    13091:13091:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeCoordinateReferenceSystem(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):131 -> a
    13091:13091:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeGeometry(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext,org.bson.codecs.configuration.CodecRegistry):71 -> a
    13140:13146:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodePolygonCoordinates(org.bson.BsonWriter,com.mongodb.client.model.geojson.PolygonCoordinates):140:146 -> a
    14082:14082:java.util.List com.mongodb.client.model.geojson.PolygonCoordinates.getExterior():82:82 -> a
    14082:14082:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodePolygonCoordinates(org.bson.BsonWriter,com.mongodb.client.model.geojson.PolygonCoordinates):141 -> a
    14091:14091:java.util.List com.mongodb.client.model.geojson.PolygonCoordinates.getHoles():91:91 -> a
    14091:14091:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodePolygonCoordinates(org.bson.BsonWriter,com.mongodb.client.model.geojson.PolygonCoordinates):142 -> a
    14149:14154:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodeLinearRing(java.util.List,org.bson.BsonWriter):149:154 -> a
    14157:14164:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodePosition(org.bson.BsonWriter,com.mongodb.client.model.geojson.Position):157:164 -> a
    15072:15072:java.util.List com.mongodb.client.model.geojson.Position.getValues():72:72 -> a
    15072:15072:void com.mongodb.client.model.geojson.codecs.GeometryEncoderHelper.encodePosition(org.bson.BsonWriter,com.mongodb.client.model.geojson.Position):159 -> a
    16054:16062:java.lang.String com.mongodb.internal.HexUtils.hexMD5(byte[]):54:62 -> a
    17034:17043:java.lang.String com.mongodb.internal.HexUtils.toHex(byte[]):34:43 -> a
    17034:17043:java.lang.String com.mongodb.internal.HexUtils.hexMD5(byte[]):60 -> a
    17046:17054:java.lang.String com.mongodb.internal.authentication.NativeAuthenticationHelper.createAuthenticationHash(java.lang.String,char[]):46:54 -> a
    17060:17117:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):60:117 -> a
    17805:17805:com.mongodb.connection.ServerConnectionState com.mongodb.connection.ServerDescription.getState():805:805 -> a
    17805:17805:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):69 -> a
    18805:18805:com.mongodb.connection.ServerConnectionState com.mongodb.connection.ServerDescription.getState():805:805 -> a
    18805:18805:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):69 -> a
    18814:18814:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.getType():814:814 -> a
    18814:18814:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):72 -> a
    19814:19814:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.getType():814:814 -> a
    19814:19814:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):72 -> a
    20693:20693:int com.mongodb.connection.ServerDescription.getMinWireVersion():693:693 -> a
    20693:20693:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):75 -> a
    21693:21693:int com.mongodb.connection.ServerDescription.getMinWireVersion():693:693 -> a
    21693:21693:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):75 -> a
    21702:21702:int com.mongodb.connection.ServerDescription.getMaxWireVersion():702:702 -> a
    21702:21702:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):78 -> a
    22702:22702:int com.mongodb.connection.ServerDescription.getMaxWireVersion():702:702 -> a
    22702:22702:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):78 -> a
    23128:23128:java.lang.String com.mongodb.connection.ServerDescription.getCanonicalAddress():128:128 -> a
    23128:23128:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):81 -> a
    24128:24128:java.lang.String com.mongodb.connection.ServerDescription.getCanonicalAddress():128:128 -> a
    24128:24128:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):81 -> a
    24638:24638:java.util.Set com.mongodb.connection.ServerDescription.getHosts():638:638 -> a
    24638:24638:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):84 -> a
    25638:25638:java.util.Set com.mongodb.connection.ServerDescription.getHosts():638:638 -> a
    25638:25638:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):84 -> a
    25647:25647:java.util.Set com.mongodb.connection.ServerDescription.getPassives():647:647 -> a
    25647:25647:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):87 -> a
    26647:26647:java.util.Set com.mongodb.connection.ServerDescription.getPassives():647:647 -> a
    26647:26647:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):87 -> a
    26656:26656:java.util.Set com.mongodb.connection.ServerDescription.getArbiters():656:656 -> a
    26656:26656:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):90 -> a
    27656:27656:java.util.Set com.mongodb.connection.ServerDescription.getArbiters():656:656 -> a
    27656:27656:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):90 -> a
    27684:27684:com.mongodb.TagSet com.mongodb.connection.ServerDescription.getTagSet():684:684 -> a
    27684:27684:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):93 -> a
    28684:28684:com.mongodb.TagSet com.mongodb.connection.ServerDescription.getTagSet():684:684 -> a
    28684:28684:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):93 -> a
    28787:28787:java.lang.String com.mongodb.connection.ServerDescription.getSetName():787:787 -> a
    28787:28787:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):96 -> a
    29787:29787:java.lang.String com.mongodb.connection.ServerDescription.getSetName():787:787 -> a
    29787:29787:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):96 -> a
    30722:30722:java.lang.Integer com.mongodb.connection.ServerDescription.getSetVersion():722:722 -> a
    30722:30722:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):99 -> a
    31722:31722:java.lang.Integer com.mongodb.connection.ServerDescription.getSetVersion():722:722 -> a
    31722:31722:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):99 -> a
    32712:32712:org.bson.types.ObjectId com.mongodb.connection.ServerDescription.getElectionId():712:712 -> a
    32712:32712:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):102 -> a
    33712:33712:org.bson.types.ObjectId com.mongodb.connection.ServerDescription.getElectionId():712:712 -> a
    33712:33712:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):102 -> a
    34666:34666:java.lang.String com.mongodb.connection.ServerDescription.getPrimary():666:666 -> a
    34666:34666:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):105 -> a
    35666:35666:java.lang.String com.mongodb.connection.ServerDescription.getPrimary():666:666 -> a
    35666:35666:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):105 -> a
    36140:36140:java.lang.Integer com.mongodb.connection.ServerDescription.getLogicalSessionTimeoutMinutes():140:140 -> a
    36140:36140:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):108 -> a
    37140:37140:java.lang.Integer com.mongodb.connection.ServerDescription.getLogicalSessionTimeoutMinutes():140:140 -> a
    37140:37140:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):108 -> a
    37734:37734:com.mongodb.connection.TopologyVersion com.mongodb.connection.ServerDescription.getTopologyVersion():734:734 -> a
    37734:37734:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):111 -> a
    38734:38734:com.mongodb.connection.TopologyVersion com.mongodb.connection.ServerDescription.getTopologyVersion():734:734 -> a
    38734:38734:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):111 -> a
    38843:38843:java.lang.Throwable com.mongodb.connection.ServerDescription.getException():843:843 -> a
    38843:38843:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):114 -> a
    39843:39843:java.lang.Throwable com.mongodb.connection.ServerDescription.getException():843:843 -> a
    39843:39843:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):114 -> a
    40122:40133:boolean com.mongodb.internal.connection.EventHelper.exceptionsEquals(java.lang.Throwable,java.lang.Throwable):122:133 -> a
    41035:41053:org.bson.BsonDocument com.mongodb.internal.connection.ReadConcernHelper.getReadConcernDocument(com.mongodb.internal.session.SessionContext,int):35:53 -> a
    41095:41095:com.mongodb.ReadConcernLevel com.mongodb.ReadConcern.getLevel():95:95 -> a
    41095:41095:org.bson.BsonDocument com.mongodb.internal.connection.ReadConcernHelper.getReadConcernDocument(com.mongodb.internal.session.SessionContext,int):39 -> a
    42079:42079:java.lang.String com.mongodb.ReadConcernLevel.getValue():79:79 -> a
    42079:42079:org.bson.BsonDocument com.mongodb.internal.connection.ReadConcernHelper.getReadConcernDocument(com.mongodb.internal.session.SessionContext,int):41 -> a
    43061:43061:boolean com.mongodb.internal.connection.ReadConcernHelper.shouldAddAfterClusterTime(com.mongodb.internal.session.SessionContext):61:61 -> a
    43061:43061:org.bson.BsonDocument com.mongodb.internal.connection.ReadConcernHelper.getReadConcernDocument(com.mongodb.internal.session.SessionContext,int):48 -> a
    44057:44057:boolean com.mongodb.internal.connection.ReadConcernHelper.shouldAddAtClusterTime(com.mongodb.internal.session.SessionContext):57:57 -> a
    44057:44057:org.bson.BsonDocument com.mongodb.internal.connection.ReadConcernHelper.getReadConcernDocument(com.mongodb.internal.session.SessionContext,int):50 -> a
    45029:45029:com.mongodb.ServerAddress com.mongodb.internal.connection.ServerAddressHelper.createServerAddress(java.lang.String):29:29 -> b
    45033:45036:com.mongodb.ServerAddress com.mongodb.internal.connection.ServerAddressHelper.createServerAddress(java.lang.String,int):33:36 -> a
    45080:45088:java.util.Optional com.mongodb.internal.connection.TopologyVersionHelper.topologyVersion(java.lang.Throwable):80:88 -> a
    45092:45092:org.bson.BsonDocument com.mongodb.MongoCommandException.getResponse():92:92 -> a
    45092:45092:java.util.Optional com.mongodb.internal.connection.TopologyVersionHelper.topologyVersion(java.lang.Throwable):82 -> a
    46092:46098:int com.mongodb.internal.connection.TopologyVersionHelper.compare(com.mongodb.connection.TopologyVersion,com.mongodb.connection.TopologyVersion):92:98 -> a
    47063:47063:org.bson.types.ObjectId com.mongodb.connection.TopologyVersion.getProcessId():63:63 -> a
    47063:47063:int com.mongodb.internal.connection.TopologyVersionHelper.compare(com.mongodb.connection.TopologyVersion,com.mongodb.connection.TopologyVersion):95 -> a
    48063:48063:org.bson.types.ObjectId com.mongodb.connection.TopologyVersion.getProcessId():63:63 -> a
    48063:48063:int com.mongodb.internal.connection.TopologyVersionHelper.compare(com.mongodb.connection.TopologyVersion,com.mongodb.connection.TopologyVersion):95 -> a
    48072:48072:long com.mongodb.connection.TopologyVersion.getCounter():72:72 -> a
    48072:48072:int com.mongodb.internal.connection.TopologyVersionHelper.compare(com.mongodb.connection.TopologyVersion,com.mongodb.connection.TopologyVersion):96 -> a
    49072:49072:long com.mongodb.connection.TopologyVersion.getCounter():72:72 -> a
    49072:49072:int com.mongodb.internal.connection.TopologyVersionHelper.compare(com.mongodb.connection.TopologyVersion,com.mongodb.connection.TopologyVersion):96 -> a
    50028:50028:java.util.List com.mongodb.internal.operation.BsonDocumentWrapperHelper.toList(org.bson.BsonDocument,java.lang.String):28:28 -> a
    50029:50029:java.util.List com.mongodb.internal.operation.BsonArrayWrapper.getWrappedArray():39:39 -> a
    50029:50029:java.util.List com.mongodb.internal.operation.BsonDocumentWrapperHelper.toList(org.bson.BsonDocument,java.lang.String):28 -> a
    50030:50033:void com.mongodb.internal.operation.DocumentHelper.putIfNotNullOrEmpty(org.bson.BsonDocument,java.lang.String,org.bson.BsonDocument):45:48 -> a
    50034:50037:void com.mongodb.internal.operation.DocumentHelper.putIfNotNull(org.bson.BsonDocument,java.lang.String,org.bson.BsonValue):51:54 -> a
    50038:50041:void com.mongodb.internal.operation.DocumentHelper.putIfNotZero(org.bson.BsonDocument,java.lang.String,long):69:72 -> a
    50042:50042:boolean com.mongodb.internal.operation.ServerVersionHelper.serverIsLessThanVersionFourDotTwo(com.mongodb.connection.ConnectionDescription):56:56 -> a
    50043:50043:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> a
    50043:50043:boolean com.mongodb.internal.operation.ServerVersionHelper.serverIsLessThanVersionFourDotTwo(com.mongodb.connection.ConnectionDescription):1042 -> a
    50044:50044:java.lang.String net.kyori.adventure.internal.Internals.toString(net.kyori.examination.Examinable):47:47 -> a
    50045:50046:int net.kyori.adventure.nbt.ShadyPines.floor(double):31:32 -> a
    50047:50048:int net.kyori.adventure.nbt.ShadyPines.floor(float):36:37 -> a
    50049:50051:java.lang.reflect.Field net.kyori.adventure.text.serializer.bungeecord.GsonInjections.field(java.lang.Class,java.lang.String):50:52 -> a
    50052:50078:boolean net.kyori.adventure.text.serializer.bungeecord.GsonInjections.injectGson(com.google.gson.Gson,java.util.function.Consumer):60:86 -> a
    50079:50085:int net.kyori.adventure.text.serializer.bungeecord.GsonInjections.findExcluderIndex(java.util.List):91:97 -> b
    50086:50086:boolean net.kyori.adventure.util.ShadyPines.equals(double,double):66:66 -> a
    50087:50087:boolean net.kyori.adventure.util.ShadyPines.equals(float,float):78:78 -> a
    50088:50113:java.lang.Object org.bson.codecs.ContainerCodecHelper.readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext,org.bson.codecs.BsonTypeCodecMap,org.bson.UuidRepresentation,org.bson.codecs.configuration.CodecRegistry,org.bson.Transformer):40:65 -> a
    50114:50120:org.bson.codecs.Codec org.bson.codecs.ContainerCodecHelper.getCodec(org.bson.codecs.configuration.CodecRegistry,java.lang.reflect.Type):70:76 -> a
    50121:50121:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.withUuidRepresentation(org.bson.codecs.configuration.CodecRegistry,org.bson.UuidRepresentation):43:43 -> a
    50122:50122:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.fromProviders(org.bson.codecs.configuration.CodecProvider[]):85:85 -> a
    50122:50122:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.withUuidRepresentation(org.bson.codecs.configuration.CodecRegistry,org.bson.UuidRepresentation):121 -> a
    50123:50123:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.fromProviders(java.util.List):101:101 -> a
co.aikar.commands.BukkitCommandExecutionContext -> co.aikar.commands.BukkitCommandExecutionContext:
    35:36:void <init>(co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandParameter,co.aikar.commands.BukkitCommandIssuer,java.util.List,int,java.util.Map) -> <init>
    39:39:org.bukkit.command.CommandSender getSender() -> getSender
    47:47:org.bukkit.entity.Player getPlayer() -> getPlayer
co.aikar.commands.BukkitCommandIssuer -> co.aikar.commands.BukkitCommandIssuer:
    co.aikar.commands.BukkitCommandManager manager -> a
    org.bukkit.command.CommandSender sender -> b
    38:41:void <init>(co.aikar.commands.BukkitCommandManager,org.bukkit.command.CommandSender) -> <init>
    45:45:boolean isPlayer() -> isPlayer
    50:50:org.bukkit.command.CommandSender getIssuer() -> getIssuer
    54:54:org.bukkit.entity.Player getPlayer() -> getPlayer
    59:64:java.util.UUID getUniqueId() -> getUniqueId
    69:69:co.aikar.commands.CommandManager getManager() -> getManager
    74:75:void sendMessageInternal(java.lang.String) -> sendMessageInternal
    79:79:boolean hasPermission(java.lang.String) -> hasPermission
    84:87:boolean equals(java.lang.Object) -> equals
    92:92:int hashCode() -> hashCode
    34:34:java.lang.Object getIssuer() -> getIssuer
co.aikar.commands.BukkitCommandManager -> co.aikar.commands.BukkitCommandManager:
    org.bukkit.plugin.Plugin plugin -> a
    org.bukkit.command.CommandMap commandMap -> o
    co.aikar.commands.lib.timings.TimingManager timingManager -> p
    co.aikar.commands.ACFBukkitScheduler scheduler -> q
    java.util.logging.Logger logger -> r
    java.lang.Integer mcMinorVersion -> mcMinorVersion
    java.lang.Integer mcPatchVersion -> mcPatchVersion
    java.util.Map knownCommands -> s
    java.util.Map registeredCommands -> t
    co.aikar.commands.BukkitCommandContexts contexts -> u
    co.aikar.commands.BukkitCommandCompletions completions -> v
    co.aikar.commands.BukkitLocales locales -> w
    java.util.Map issuersLocaleString -> b
    boolean cantReadLocale -> x
    boolean autoDetectFromClient -> c
    84:153:void <init>(org.bukkit.plugin.Plugin) -> <init>
    157:180:org.bukkit.command.CommandMap hookCommandMap() -> a
    184:184:org.bukkit.plugin.Plugin getPlugin() -> getPlugin
    189:189:boolean isCommandIssuer(java.lang.Class) -> isCommandIssuer
    194:197:co.aikar.commands.CommandContexts getCommandContexts() -> getCommandContexts
    202:205:co.aikar.commands.CommandCompletions getCommandCompletions() -> getCommandCompletions
    211:215:co.aikar.commands.BukkitLocales getLocales() -> getLocales
    221:221:boolean hasRegisteredCommands() -> hasRegisteredCommands
    225:255:void registerCommand(co.aikar.commands.BaseCommand,boolean) -> registerCommand
    259:260:void registerCommand(co.aikar.commands.BaseCommand) -> registerCommand
    263:271:void unregisterCommand(co.aikar.commands.BaseCommand) -> unregisterCommand
    279:288:void unregisterCommand(co.aikar.commands.BukkitRootCommand) -> unregisterCommand
    291:294:void unregisterCommands() -> unregisterCommands
    311:311:java.util.Locale setPlayerLocale(org.bukkit.entity.Player,java.util.Locale) -> setPlayerLocale
    315:346:void readPlayerLocale(org.bukkit.entity.Player) -> a
    1298:1307:java.lang.reflect.Field getEntityField(org.bukkit.entity.Player):298:307 -> a
    1298:1307:void readPlayerLocale(org.bukkit.entity.Player):319 -> a
    350:350:co.aikar.commands.lib.timings.TimingManager getTimings() -> getTimings
    354:354:co.aikar.commands.ACFBukkitScheduler getScheduler() -> getScheduler
    359:359:co.aikar.commands.RootCommand createRootCommand(java.lang.String) -> createRootCommand
    364:364:java.util.Collection getRegisteredRootCommands() -> getRegisteredRootCommands
    369:372:co.aikar.commands.BukkitCommandIssuer getCommandIssuer(java.lang.Object) -> getCommandIssuer
    377:377:co.aikar.commands.BukkitCommandExecutionContext createCommandContext(co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandParameter,co.aikar.commands.CommandIssuer,java.util.List,int,java.util.Map) -> createCommandContext
    382:382:co.aikar.commands.BukkitCommandCompletionContext createCompletionContext(co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandIssuer,java.lang.String,java.lang.String,java.lang.String[]) -> createCompletionContext
    387:387:co.aikar.commands.RegisteredCommand createRegisteredCommand(co.aikar.commands.BaseCommand,java.lang.String,java.lang.reflect.Method,java.lang.String) -> createRegisteredCommand
    392:392:co.aikar.commands.BukkitConditionContext createConditionContext(co.aikar.commands.CommandIssuer,java.lang.String) -> createConditionContext
    398:405:void log(co.aikar.commands.LogLevel,java.lang.String,java.lang.Throwable) -> log
    408:411:boolean usePerIssuerLocale(boolean,boolean) -> usePerIssuerLocale
    416:416:java.lang.String getCommandPrefix(co.aikar.commands.CommandIssuer) -> getCommandPrefix
    421:424:boolean handleUncaughtException(co.aikar.commands.BaseCommand,co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandIssuer,java.util.List,java.lang.Throwable) -> a
    65:65:co.aikar.commands.CommandCompletionContext createCompletionContext(co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandIssuer,java.lang.String,java.lang.String,java.lang.String[]) -> createCompletionContext
    65:65:co.aikar.commands.CommandExecutionContext createCommandContext(co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandParameter,co.aikar.commands.CommandIssuer,java.util.List,int,java.util.Map) -> createCommandContext
    65:65:co.aikar.commands.ConditionContext createConditionContext(co.aikar.commands.CommandIssuer,java.lang.String) -> createConditionContext
    65:65:co.aikar.commands.Locales getLocales() -> getLocales
    65:65:co.aikar.commands.CommandIssuer getCommandIssuer(java.lang.Object) -> getCommandIssuer
    133:137:void lambda$new$1() -> b
    122:125:org.bukkit.help.HelpTopic lambda$new$0(org.bukkit.command.Command) -> a
co.aikar.commands.BukkitConditionContext -> co.aikar.commands.BukkitConditionContext:
    31:32:void <init>(co.aikar.commands.BukkitCommandIssuer,java.lang.String) -> <init>
    35:35:org.bukkit.command.CommandSender getSender() -> getSender
    39:39:org.bukkit.entity.Player getPlayer() -> getPlayer
co.aikar.commands.BukkitLocales -> co.aikar.commands.BukkitLocales:
    co.aikar.commands.BukkitCommandManager manager -> a
    39:42:void <init>(co.aikar.commands.BukkitCommandManager) -> <init>
    46:49:void loadLanguages() -> loadLanguages
    61:63:boolean loadYamlLanguageFile(java.io.File,java.util.Locale) -> loadYamlLanguageFile
    76:78:boolean loadYamlLanguageFile(java.lang.String,java.util.Locale) -> loadYamlLanguageFile
    90:102:boolean loadLanguage(org.bukkit.configuration.file.FileConfiguration,java.util.Locale) -> loadLanguage
co.aikar.commands.BukkitMessageFormatter -> co.aikar.commands.BukkitMessageFormatter:
    31:32:void <init>(org.bukkit.ChatColor[]) -> <init>
    28:28:java.lang.String format(java.lang.Object,java.lang.String) -> a
    1036:1036:java.lang.String format(org.bukkit.ChatColor,java.lang.String):36:36 -> a
    1036:1036:java.lang.String format(java.lang.Object,java.lang.String):28 -> a
co.aikar.commands.BukkitRegisteredCommand -> co.aikar.commands.BukkitRegisteredCommand:
    30:31:void <init>(co.aikar.commands.BaseCommand,java.lang.String,java.lang.reflect.Method,java.lang.String) -> <init>
co.aikar.commands.BukkitRootCommand -> co.aikar.commands.BukkitRootCommand:
    co.aikar.commands.BukkitCommandManager manager -> b
    java.lang.String name -> c
    co.aikar.commands.BaseCommand defCommand -> d
    com.google.common.collect.SetMultimap subCommands -> e
    java.util.List children -> f
    boolean isRegistered -> a
    41:49:void <init>(co.aikar.commands.BukkitCommandManager,java.lang.String) -> <init>
    53:67:java.lang.String getDescription() -> getDescription
    72:72:java.lang.String getCommandName() -> getCommandName
    77:78:java.util.List tabComplete(org.bukkit.command.CommandSender,java.lang.String,java.lang.String[]) -> tabComplete
    83:85:boolean execute(org.bukkit.command.CommandSender,java.lang.String,java.lang.String[]) -> execute
    90:90:boolean testPermissionSilent(org.bukkit.command.CommandSender) -> testPermissionSilent
    94:99:void addChild(co.aikar.commands.BaseCommand) -> addChild
    103:103:co.aikar.commands.CommandManager getManager() -> getManager
    108:108:com.google.common.collect.SetMultimap getSubCommands() -> getSubCommands
    113:113:java.util.List getChildren() -> getChildren
    118:118:co.aikar.commands.BaseCommand getDefCommand() -> getDefCommand
    123:123:org.bukkit.plugin.Plugin getPlugin() -> getPlugin
co.aikar.commands.CommandCompletionContext -> co.aikar.commands.CommandCompletionContext:
    co.aikar.commands.RegisteredCommand command -> b
    co.aikar.commands.CommandIssuer issuer -> a
    java.lang.String input -> c
    java.lang.String config -> d
    java.util.Map configs -> e
    java.util.List args -> f
    37:56:void <init>(co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandIssuer,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    59:59:java.util.Map getConfigs() -> getConfigs
    63:63:java.lang.String getConfig(java.lang.String) -> getConfig
    67:67:java.lang.String getConfig(java.lang.String,java.lang.String) -> getConfig
    71:71:boolean hasConfig(java.lang.String) -> hasConfig
    75:75:java.lang.Object getContextValue(java.lang.Class) -> getContextValue
    79:104:java.lang.Object getContextValue(java.lang.Class,java.lang.Integer) -> getContextValue
    109:115:java.lang.Object getContextValueByName(java.lang.Class,java.lang.String) -> getContextValueByName
    119:119:co.aikar.commands.CommandIssuer getIssuer() -> getIssuer
    123:123:java.lang.String getInput() -> getInput
    127:127:java.lang.String getConfig() -> getConfig
    131:131:boolean isAsync() -> isAsync
co.aikar.commands.CommandCompletionTextLookupException -> co.aikar.commands.f:
    26:26:void <init>() -> <init>
co.aikar.commands.CommandCompletions -> co.aikar.commands.CommandCompletions:
    co.aikar.commands.CommandManager manager -> a
    java.util.Map completionMap -> b
    java.util.Map defaultCompletions -> c
    47:72:void <init>(co.aikar.commands.CommandManager) -> <init>
    82:82:co.aikar.commands.CommandCompletions$CommandCompletionHandler registerCompletion(java.lang.String,co.aikar.commands.CommandCompletions$CommandCompletionHandler) -> registerCompletion
    92:96:co.aikar.commands.CommandCompletions$CommandCompletionHandler unregisterCompletion(java.lang.String) -> unregisterCompletion
    115:115:co.aikar.commands.CommandCompletions$CommandCompletionHandler registerAsyncCompletion(java.lang.String,co.aikar.commands.CommandCompletions$AsyncCommandCompletionHandler) -> registerAsyncCompletion
    129:129:co.aikar.commands.CommandCompletions$CommandCompletionHandler registerStaticCompletion(java.lang.String,java.lang.String) -> registerStaticCompletion
    140:140:co.aikar.commands.CommandCompletions$CommandCompletionHandler registerStaticCompletion(java.lang.String,java.lang.String[]) -> registerStaticCompletion
    152:152:co.aikar.commands.CommandCompletions$CommandCompletionHandler registerStaticCompletion(java.lang.String,java.util.function.Supplier) -> registerStaticCompletion
    163:163:co.aikar.commands.CommandCompletions$CommandCompletionHandler registerStaticCompletion(java.lang.String,java.util.Collection) -> registerStaticCompletion
    176:187:void setDefaultCompletion(java.lang.String,java.lang.Class[]) -> setDefaultCompletion
    191:191:java.lang.String prepareCompletionId(java.lang.String) -> a
    223:243:java.lang.String findDefaultCompletion(co.aikar.commands.RegisteredCommand,java.lang.String[]) -> a
    247:311:java.util.List getCompletionValues(co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandIssuer,java.lang.String,java.lang.String[],boolean) -> a
    282:286:java.lang.String lambda$getCompletionValues$2(java.lang.String[],java.lang.String,java.lang.String) -> a
    163:163:java.util.Collection lambda$registerStaticCompletion$1(java.util.Collection,co.aikar.commands.CommandCompletionContext) -> a
    56:70:java.util.Collection lambda$new$0(co.aikar.commands.CommandCompletionContext) -> a
co.aikar.commands.CommandCompletions$AsyncCommandCompletionHandler -> co.aikar.commands.CommandCompletions$AsyncCommandCompletionHandler:
co.aikar.commands.CommandCompletions$CommandCompletionHandler -> co.aikar.commands.CommandCompletions$CommandCompletionHandler:
    java.util.Collection getCompletions(co.aikar.commands.CommandCompletionContext) -> getCompletions
co.aikar.commands.CommandCompletions$SyncCompletionRequired -> co.aikar.commands.CommandCompletions$SyncCompletionRequired:
    321:321:void <init>() -> <init>
co.aikar.commands.CommandConditions -> co.aikar.commands.CommandConditions:
    co.aikar.commands.CommandManager manager -> a
    java.util.Map conditions -> b
    co.aikar.commands.lib.util.Table paramConditions -> c
    40:45:void <init>(co.aikar.commands.CommandManager) -> <init>
    48:48:co.aikar.commands.CommandConditions$Condition addCondition(java.lang.String,co.aikar.commands.CommandConditions$Condition) -> addCondition
    53:53:co.aikar.commands.CommandConditions$ParameterCondition addCondition(java.lang.Class,java.lang.String,co.aikar.commands.CommandConditions$ParameterCondition) -> addCondition
    64:69:void validateConditions(co.aikar.commands.BaseCommand,co.aikar.commands.CommandOperationContext) -> a
    72:93:void validateConditions(java.lang.String,co.aikar.commands.CommandOperationContext) -> a
    96:129:void validateConditions(co.aikar.commands.CommandExecutionContext,java.lang.Object) -> a
    1203:1203:co.aikar.commands.CommandParameter co.aikar.commands.CommandExecutionContext.getCommandParameter():203:203 -> a
    1203:1203:void validateConditions(co.aikar.commands.CommandExecutionContext,java.lang.Object):96 -> a
co.aikar.commands.CommandConditions$Condition -> co.aikar.commands.CommandConditions$Condition:
    void validateCondition(co.aikar.commands.ConditionContext) -> validateCondition
co.aikar.commands.CommandConditions$ParameterCondition -> co.aikar.commands.CommandConditions$ParameterCondition:
    void validateCondition(co.aikar.commands.ConditionContext,co.aikar.commands.CommandExecutionContext,java.lang.Object) -> validateCondition
co.aikar.commands.CommandContexts -> co.aikar.commands.CommandContexts:
    java.util.Map contextMap -> a
    co.aikar.commands.CommandManager manager -> b
    43:269:void <init>(co.aikar.commands.CommandManager) -> <init>
    273:275:java.lang.Number parseAndValidateNumber(java.lang.String,co.aikar.commands.CommandExecutionContext,java.lang.Number,java.lang.Number) -> a
    283:291:void validateMinMax(co.aikar.commands.CommandExecutionContext,java.lang.Number,java.lang.Number,java.lang.Number) -> a
    301:302:void registerSenderAwareContext(java.lang.Class,co.aikar.commands.contexts.IssuerAwareContextResolver) -> registerSenderAwareContext
    311:312:void registerIssuerAwareContext(java.lang.Class,co.aikar.commands.contexts.IssuerAwareContextResolver) -> registerIssuerAwareContext
    319:320:void registerIssuerOnlyContext(java.lang.Class,co.aikar.commands.contexts.IssuerOnlyContextResolver) -> registerIssuerOnlyContext
    327:328:void registerOptionalContext(java.lang.Class,co.aikar.commands.contexts.OptionalContextResolver) -> registerOptionalContext
    335:336:void registerContext(java.lang.Class,co.aikar.commands.contexts.ContextResolver) -> registerContext
    339:352:co.aikar.commands.contexts.ContextResolver getResolver(java.lang.Class) -> getResolver
    226:267:co.aikar.commands.CommandHelp lambda$new$20(co.aikar.commands.CommandManager,co.aikar.commands.CommandExecutionContext) -> a
    215:223:java.lang.Enum lambda$new$19(co.aikar.commands.CommandExecutionContext) -> a
    193:211:java.lang.String[] lambda$new$18(co.aikar.commands.CommandExecutionContext) -> b
    168:189:java.lang.String lambda$new$17(co.aikar.commands.CommandExecutionContext) -> c
    160:164:java.lang.Character lambda$new$16(co.aikar.commands.CommandExecutionContext) -> d
    158:158:java.lang.Boolean lambda$new$15(co.aikar.commands.CommandExecutionContext) -> e
    157:157:java.lang.Boolean lambda$new$14(co.aikar.commands.CommandExecutionContext) -> f
    148:154:java.math.BigInteger lambda$new$13(co.aikar.commands.CommandExecutionContext) -> g
    1279:1280:void validateMinMax(co.aikar.commands.CommandExecutionContext,java.lang.Number):279:280 -> g
    1279:1280:java.math.BigInteger lambda$new$13(co.aikar.commands.CommandExecutionContext):151 -> g
    138:144:java.math.BigDecimal lambda$new$12(co.aikar.commands.CommandExecutionContext) -> h
    2279:2280:void validateMinMax(co.aikar.commands.CommandExecutionContext,java.lang.Number):279:280 -> h
    2279:2280:java.math.BigDecimal lambda$new$12(co.aikar.commands.CommandExecutionContext):141 -> h
    130:134:java.lang.Number lambda$new$11(co.aikar.commands.CommandExecutionContext) -> i
    122:126:java.lang.Double lambda$new$10(co.aikar.commands.CommandExecutionContext) -> j
    114:118:java.lang.Double lambda$new$9(co.aikar.commands.CommandExecutionContext) -> k
    106:110:java.lang.Float lambda$new$8(co.aikar.commands.CommandExecutionContext) -> l
    98:102:java.lang.Float lambda$new$7(co.aikar.commands.CommandExecutionContext) -> m
    90:94:java.lang.Long lambda$new$6(co.aikar.commands.CommandExecutionContext) -> n
    82:86:java.lang.Long lambda$new$5(co.aikar.commands.CommandExecutionContext) -> o
    74:78:java.lang.Integer lambda$new$4(co.aikar.commands.CommandExecutionContext) -> p
    66:70:java.lang.Integer lambda$new$3(co.aikar.commands.CommandExecutionContext) -> q
    58:62:java.lang.Short lambda$new$2(co.aikar.commands.CommandExecutionContext) -> r
    50:54:java.lang.Short lambda$new$1(co.aikar.commands.CommandExecutionContext) -> s
    48:48:co.aikar.commands.CommandIssuer lambda$new$0(co.aikar.commands.CommandExecutionContext) -> t
co.aikar.commands.CommandExecutionContext -> co.aikar.commands.CommandExecutionContext:
    co.aikar.commands.RegisteredCommand cmd -> c
    co.aikar.commands.CommandParameter param -> a
    co.aikar.commands.CommandIssuer issuer -> b
    java.util.List args -> d
    int index -> e
    java.util.Map passedArgs -> f
    java.util.Map flags -> g
    co.aikar.commands.CommandManager manager -> h
    44:54:void <init>(co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandParameter,co.aikar.commands.CommandIssuer,java.util.List,int,java.util.Map) -> <init>
    57:57:java.lang.String popFirstArg() -> popFirstArg
    61:61:java.lang.String popLastArg() -> popLastArg
    65:65:java.lang.String getFirstArg() -> getFirstArg
    69:69:java.lang.String getLastArg() -> getLastArg
    73:73:boolean isLastArg() -> isLastArg
    77:77:int getNumParams() -> getNumParams
    81:81:boolean canOverridePlayerContext() -> canOverridePlayerContext
    85:85:java.lang.Object getResolvedArg(java.lang.String) -> getResolvedArg
    89:97:java.lang.Object getResolvedArg(java.lang.Class[]) -> getResolvedArg
    101:108:java.lang.Object getResolvedArg(java.lang.String,java.lang.Class[]) -> getResolvedArg
    112:112:java.util.Set getParameterPermissions() -> getParameterPermissions
    116:116:boolean isOptional() -> isOptional
    120:120:boolean hasFlag(java.lang.String) -> hasFlag
    124:124:java.lang.String getFlagValue(java.lang.String,java.lang.String) -> getFlagValue
    128:128:java.lang.Integer getFlagValue(java.lang.String,java.lang.Integer) -> getFlagValue
    132:132:java.lang.Long getFlagValue(java.lang.String,java.lang.Long) -> getFlagValue
    136:136:java.lang.Float getFlagValue(java.lang.String,java.lang.Float) -> getFlagValue
    140:140:java.lang.Double getFlagValue(java.lang.String,java.lang.Double) -> getFlagValue
    144:144:java.lang.Integer getIntFlagValue(java.lang.String,java.lang.Number) -> getIntFlagValue
    148:148:java.lang.Long getLongFlagValue(java.lang.String,java.lang.Number) -> getLongFlagValue
    152:152:java.lang.Float getFloatFlagValue(java.lang.String,java.lang.Number) -> getFloatFlagValue
    156:156:java.lang.Double getDoubleFlagValue(java.lang.String,java.lang.Number) -> getDoubleFlagValue
    160:160:java.lang.Boolean getBooleanFlagValue(java.lang.String) -> getBooleanFlagValue
    164:168:java.lang.Boolean getBooleanFlagValue(java.lang.String,java.lang.Boolean) -> getBooleanFlagValue
    172:172:java.lang.Double getFlagValue(java.lang.String,java.lang.Number) -> getFlagValue
    182:182:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    186:186:java.lang.String getAnnotationValue(java.lang.Class) -> getAnnotationValue
    1617:1617:co.aikar.commands.Annotations co.aikar.commands.CommandManager.getAnnotations():617:617 -> getAnnotationValue
    1617:1617:java.lang.String getAnnotationValue(java.lang.Class):186 -> getAnnotationValue
    2156:2156:java.lang.String co.aikar.commands.AnnotationLookups.getAnnotationValue(java.lang.reflect.AnnotatedElement,java.lang.Class):156:156 -> getAnnotationValue
    2156:2156:java.lang.String getAnnotationValue(java.lang.Class):186 -> getAnnotationValue
    190:190:java.lang.String getAnnotationValue(java.lang.Class,int) -> getAnnotationValue
    2617:2617:co.aikar.commands.Annotations co.aikar.commands.CommandManager.getAnnotations():617:617 -> getAnnotationValue
    2617:2617:java.lang.String getAnnotationValue(java.lang.Class,int):190 -> getAnnotationValue
    194:194:boolean hasAnnotation(java.lang.Class) -> hasAnnotation
    3617:3617:co.aikar.commands.Annotations co.aikar.commands.CommandManager.getAnnotations():617:617 -> hasAnnotation
    3617:3617:boolean hasAnnotation(java.lang.Class):194 -> hasAnnotation
    198:198:co.aikar.commands.RegisteredCommand getCmd() -> getCmd
    208:208:java.lang.reflect.Parameter getParam() -> getParam
    212:212:co.aikar.commands.CommandIssuer getIssuer() -> getIssuer
    216:216:java.util.List getArgs() -> getArgs
    220:220:int getIndex() -> getIndex
    224:224:java.util.Map getPassedArgs() -> getPassedArgs
    228:228:java.util.Map getFlags() -> getFlags
    232:232:java.lang.String joinArgs() -> joinArgs
    236:236:java.lang.String joinArgs(java.lang.String) -> joinArgs
co.aikar.commands.CommandHelp -> co.aikar.commands.CommandHelp:
    co.aikar.commands.CommandManager manager -> b
    co.aikar.commands.CommandIssuer issuer -> c
    java.util.List helpEntries -> d
    java.lang.String commandName -> e
    java.lang.String commandPrefix -> f
    int page -> g
    int perPage -> h
    java.util.List search -> a
    java.util.Set selectedEntry -> i
    int totalResults -> j
    int totalPages -> k
    boolean lastPage -> l
    41:84:void <init>(co.aikar.commands.CommandManager,co.aikar.commands.RootCommand,co.aikar.commands.CommandIssuer) -> <init>
    88:118:void updateSearchScore(co.aikar.commands.HelpEntry) -> a
    1038:1038:co.aikar.commands.RegisteredCommand co.aikar.commands.HelpEntry.getRegisteredCommand():38:38 -> a
    1038:1038:void updateSearchScore(co.aikar.commands.HelpEntry):92 -> a
    121:121:co.aikar.commands.CommandManager getManager() -> getManager
    125:131:boolean testExactMatch(java.lang.String) -> testExactMatch
    135:136:void showHelp() -> showHelp
    139:189:void showHelp(co.aikar.commands.CommandIssuer) -> showHelp
    192:192:java.util.List getHelpEntries() -> getHelpEntries
    196:197:void setPerPage(int) -> setPerPage
    200:201:void setPage(int) -> setPage
    204:206:void setPage(int,int) -> setPage
    209:211:void setSearch(java.util.List) -> setSearch
    214:214:co.aikar.commands.CommandIssuer getIssuer() -> getIssuer
    218:218:java.lang.String getCommandName() -> getCommandName
    222:222:java.lang.String getCommandPrefix() -> getCommandPrefix
    226:226:int getPage() -> getPage
    230:230:int getPerPage() -> getPerPage
    234:234:java.util.List getSearch() -> getSearch
    238:238:java.util.Set getSelectedEntry() -> getSelectedEntry
    242:242:int getTotalResults() -> getTotalResults
    246:246:int getTotalPages() -> getTotalPages
    250:250:boolean isOnlyPage() -> isOnlyPage
    254:254:boolean isLastPage() -> isLastPage
    154:154:int lambda$showHelp$1(co.aikar.commands.HelpEntry) -> b
    72:83:void lambda$new$0(co.aikar.commands.CommandIssuer,java.util.Set,java.util.Map$Entry) -> a
co.aikar.commands.CommandHelpFormatter -> co.aikar.commands.CommandHelpFormatter:
    co.aikar.commands.CommandManager manager -> a
    34:36:void <init>(co.aikar.commands.CommandManager) -> <init>
    40:46:void showAllResults(co.aikar.commands.CommandHelp,java.util.List) -> showAllResults
    49:55:void showSearchResults(co.aikar.commands.CommandHelp,java.util.List) -> showSearchResults
    58:70:void showDetailedHelp(co.aikar.commands.CommandHelp,co.aikar.commands.HelpEntry) -> showDetailedHelp
    77:78:void printHelpHeader(co.aikar.commands.CommandHelp,co.aikar.commands.CommandIssuer) -> printHelpHeader
    81:85:void printHelpCommand(co.aikar.commands.CommandHelp,co.aikar.commands.CommandIssuer,co.aikar.commands.HelpEntry) -> printHelpCommand
    88:92:void printHelpFooter(co.aikar.commands.CommandHelp,co.aikar.commands.CommandIssuer) -> printHelpFooter
    99:100:void printSearchHeader(co.aikar.commands.CommandHelp,co.aikar.commands.CommandIssuer) -> printSearchHeader
    103:107:void printSearchEntry(co.aikar.commands.CommandHelp,co.aikar.commands.CommandIssuer,co.aikar.commands.HelpEntry) -> printSearchEntry
    110:114:void printSearchFooter(co.aikar.commands.CommandHelp,co.aikar.commands.CommandIssuer) -> printSearchFooter
    122:126:void printDetailedHelpHeader(co.aikar.commands.CommandHelp,co.aikar.commands.CommandIssuer,co.aikar.commands.HelpEntry) -> printDetailedHelpHeader
    130:134:void printDetailedHelpCommand(co.aikar.commands.CommandHelp,co.aikar.commands.CommandIssuer,co.aikar.commands.HelpEntry) -> printDetailedHelpCommand
    137:141:void printDetailedParameter(co.aikar.commands.CommandHelp,co.aikar.commands.CommandIssuer,co.aikar.commands.HelpEntry,co.aikar.commands.CommandParameter) -> printDetailedParameter
    145:145:void printDetailedHelpFooter(co.aikar.commands.CommandHelp,co.aikar.commands.CommandIssuer,co.aikar.commands.HelpEntry) -> printDetailedHelpFooter
    154:161:java.lang.String[] getHeaderFooterFormatReplacements(co.aikar.commands.CommandHelp) -> getHeaderFooterFormatReplacements
    174:179:java.lang.String[] getEntryFormatReplacements(co.aikar.commands.CommandHelp,co.aikar.commands.HelpEntry) -> getEntryFormatReplacements
    194:201:java.lang.String[] getParameterFormatReplacements(co.aikar.commands.CommandHelp,co.aikar.commands.CommandParameter,co.aikar.commands.HelpEntry) -> getParameterFormatReplacements
co.aikar.commands.CommandIssuer -> co.aikar.commands.CommandIssuer:
    java.lang.Object getIssuer() -> getIssuer
    co.aikar.commands.CommandManager getManager() -> getManager
    boolean isPlayer() -> isPlayer
    53:54:void sendMessage(java.lang.String) -> sendMessage
    java.util.UUID getUniqueId() -> getUniqueId
    boolean hasPermission(java.lang.String) -> hasPermission
    69:70:void sendError(co.aikar.locales.MessageKeyProvider,java.lang.String[]) -> sendError
    72:73:void sendSyntax(co.aikar.locales.MessageKeyProvider,java.lang.String[]) -> sendSyntax
    75:76:void sendInfo(co.aikar.locales.MessageKeyProvider,java.lang.String[]) -> sendInfo
    78:79:void sendError(co.aikar.locales.MessageKey,java.lang.String[]) -> sendError
    81:82:void sendSyntax(co.aikar.locales.MessageKey,java.lang.String[]) -> sendSyntax
    84:85:void sendInfo(co.aikar.locales.MessageKey,java.lang.String[]) -> sendInfo
    87:88:void sendMessage(co.aikar.commands.MessageType,co.aikar.locales.MessageKeyProvider,java.lang.String[]) -> sendMessage
    90:91:void sendMessage(co.aikar.commands.MessageType,co.aikar.locales.MessageKey,java.lang.String[]) -> sendMessage
    void sendMessageInternal(java.lang.String) -> sendMessageInternal
co.aikar.commands.CommandManager -> co.aikar.commands.CommandManager:
    java.lang.ThreadLocal commandOperationContext -> d
    java.util.Map rootCommands -> a
    co.aikar.commands.CommandReplacements replacements -> b
    co.aikar.commands.CommandConditions conditions -> c
    co.aikar.commands.ExceptionHandler defaultExceptionHandler -> e
    boolean logUnhandledExceptions -> f
    co.aikar.commands.lib.util.Table dependencies -> o
    co.aikar.commands.CommandHelpFormatter helpFormatter -> p
    boolean usePerIssuerLocale -> g
    java.util.List localeChangedCallbacks -> q
    java.util.Set supportedLanguages -> r
    java.util.function.Predicate validNamePredicate -> h
    java.util.Map formatters -> i
    co.aikar.commands.MessageFormatter defaultFormatter -> j
    int defaultHelpPerPage -> k
    java.util.Map issuersLocale -> l
    java.util.Set unstableAPIs -> s
    co.aikar.commands.Annotations annotations -> m
    co.aikar.commands.CommandRouter router -> n
    52:91:void <init>() -> <init>
    94:94:co.aikar.commands.CommandOperationContext getCurrentCommandOperationContext() -> getCurrentCommandOperationContext
    98:99:co.aikar.commands.CommandIssuer getCurrentCommandIssuer() -> getCurrentCommandIssuer
    103:104:co.aikar.commands.CommandManager getCurrentCommandManager() -> getCurrentCommandManager
    108:108:co.aikar.commands.MessageFormatter setFormat(co.aikar.commands.MessageType,co.aikar.commands.MessageFormatter) -> setFormat
    112:112:co.aikar.commands.MessageFormatter getFormat(co.aikar.commands.MessageType) -> getFormat
    116:120:void setFormat(co.aikar.commands.MessageType,java.lang.Object[]) -> setFormat
    123:125:void setFormat(co.aikar.commands.MessageType,int,java.lang.Object) -> setFormat
    128:128:co.aikar.commands.MessageFormatter getDefaultFormatter() -> getDefaultFormatter
    132:133:void setDefaultFormatter(co.aikar.commands.MessageFormatter) -> setDefaultFormatter
    136:136:co.aikar.commands.CommandConditions getCommandConditions() -> getCommandConditions
    co.aikar.commands.CommandContexts getCommandContexts() -> getCommandContexts
    co.aikar.commands.CommandCompletions getCommandCompletions() -> getCommandCompletions
    159:164:co.aikar.commands.CommandHelp generateCommandHelp(java.lang.String) -> generateCommandHelp
    173:174:co.aikar.commands.CommandHelp generateCommandHelp(co.aikar.commands.CommandIssuer,java.lang.String) -> generateCommandHelp
    183:189:co.aikar.commands.CommandHelp generateCommandHelp() -> generateCommandHelp
    198:199:co.aikar.commands.CommandHelp generateCommandHelp(co.aikar.commands.CommandIssuer,co.aikar.commands.RootCommand) -> generateCommandHelp
    208:209:int getDefaultHelpPerPage() -> getDefaultHelpPerPage
    218:220:void setDefaultHelpPerPage(int) -> setDefaultHelpPerPage
    228:229:void setHelpFormatter(co.aikar.commands.CommandHelpFormatter) -> setHelpFormatter
    237:237:co.aikar.commands.CommandHelpFormatter getHelpFormatter() -> getHelpFormatter
    void registerCommand(co.aikar.commands.BaseCommand) -> registerCommand
    boolean hasRegisteredCommands() -> hasRegisteredCommands
    boolean isCommandIssuer(java.lang.Class) -> isCommandIssuer
    co.aikar.commands.CommandIssuer getCommandIssuer(java.lang.Object) -> getCommandIssuer
    co.aikar.commands.RootCommand createRootCommand(java.lang.String) -> createRootCommand
    co.aikar.commands.Locales getLocales() -> getLocales
    269:269:boolean usingPerIssuerLocale() -> usingPerIssuerLocale
    273:275:boolean usePerIssuerLocale(boolean) -> usePerIssuerLocale
    279:279:boolean isValidName(java.lang.String) -> isValidName
    283:283:java.util.function.Predicate getValidNamePredicate() -> getValidNamePredicate
    287:288:void setValidNamePredicate(java.util.function.Predicate) -> setValidNamePredicate
    292:292:co.aikar.commands.ConditionContext createConditionContext(co.aikar.commands.CommandIssuer,java.lang.String) -> createConditionContext
    co.aikar.commands.CommandExecutionContext createCommandContext(co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandParameter,co.aikar.commands.CommandIssuer,java.util.List,int,java.util.Map) -> createCommandContext
    co.aikar.commands.CommandCompletionContext createCompletionContext(co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandIssuer,java.lang.String,java.lang.String,java.lang.String[]) -> createCompletionContext
    void log(co.aikar.commands.LogLevel,java.lang.String,java.lang.Throwable) -> log
    302:303:void log(co.aikar.commands.LogLevel,java.lang.String) -> log
    316:316:co.aikar.commands.CommandReplacements getCommandReplacements() -> getCommandReplacements
    320:325:boolean hasPermission(co.aikar.commands.CommandIssuer,java.util.Set) -> hasPermission
    329:337:boolean hasPermission(co.aikar.commands.CommandIssuer,java.lang.String) -> hasPermission
    341:341:co.aikar.commands.RootCommand getRootCommand(java.lang.String) -> getRootCommand
    345:345:co.aikar.commands.RootCommand obtainRootCommand(java.lang.String) -> obtainRootCommand
    java.util.Collection getRegisteredRootCommands() -> getRegisteredRootCommands
    351:351:co.aikar.commands.RegisteredCommand createRegisteredCommand(co.aikar.commands.BaseCommand,java.lang.String,java.lang.reflect.Method,java.lang.String) -> createRegisteredCommand
    360:364:void setDefaultExceptionHandler(co.aikar.commands.ExceptionHandler) -> setDefaultExceptionHandler
    375:380:void setDefaultExceptionHandler(co.aikar.commands.ExceptionHandler,boolean) -> setDefaultExceptionHandler
    383:383:boolean isLoggingUnhandledExceptions() -> isLoggingUnhandledExceptions
    392:392:co.aikar.commands.ExceptionHandler getDefaultExceptionHandler() -> getDefaultExceptionHandler
    396:405:boolean handleUncaughtException(co.aikar.commands.BaseCommand,co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandIssuer,java.util.List,java.lang.Throwable) -> a
    409:410:void sendMessage(java.lang.Object,co.aikar.commands.MessageType,co.aikar.locales.MessageKeyProvider,java.lang.String[]) -> sendMessage
    413:418:void sendMessage(co.aikar.commands.CommandIssuer,co.aikar.commands.MessageType,co.aikar.locales.MessageKeyProvider,java.lang.String[]) -> sendMessage
    421:433:java.lang.String formatMessage(co.aikar.commands.CommandIssuer,co.aikar.commands.MessageType,co.aikar.locales.MessageKeyProvider,java.lang.String[]) -> formatMessage
    437:438:void onLocaleChange(co.aikar.commands.IssuerLocaleChangedCallback) -> onLocaleChange
    441:448:void notifyLocaleChange(co.aikar.commands.CommandIssuer,java.util.Locale,java.util.Locale) -> notifyLocaleChange
    451:458:java.util.Locale setIssuerLocale(java.lang.Object,java.util.Locale) -> setIssuerLocale
    462:469:java.util.Locale getIssuerLocale(co.aikar.commands.CommandIssuer) -> getIssuerLocale
    491:491:java.util.Set getSupportedLanguages() -> getSupportedLanguages
    501:503:void addSupportedLanguage(java.util.Locale) -> addSupportedLanguage
    515:516:void registerDependency(java.lang.Class,java.lang.Object) -> registerDependency
    529:534:void registerDependency(java.lang.Class,java.lang.String,java.lang.Object) -> registerDependency
    543:544:void unregisterDependency(java.lang.Class) -> unregisterDependency
    554:559:void unregisterDependency(java.lang.Class,java.lang.String) -> unregisterDependency
    568:595:void injectDependencies(co.aikar.commands.BaseCommand) -> a
    1156:1156:java.lang.String co.aikar.commands.AnnotationLookups.getAnnotationValue(java.lang.reflect.AnnotatedElement,java.lang.Class):156:156 -> a
    1156:1156:void injectDependencies(co.aikar.commands.BaseCommand):572 -> a
    603:604:void enableUnstableAPI(java.lang.String) -> enableUnstableAPI
    607:610:void verifyUnstableAPI(java.lang.String) -> b
    613:613:boolean hasUnstableAPI(java.lang.String) -> a
    621:621:java.lang.String getCommandPrefix(co.aikar.commands.CommandIssuer) -> getCommandPrefix
    443:447:void lambda$notifyLocaleChange$2(co.aikar.commands.CommandIssuer,java.util.Locale,java.util.Locale,co.aikar.commands.IssuerLocaleChangedCallback) -> a
    81:81:boolean lambda$new$1(java.lang.String) -> c
    64:64:java.util.Stack lambda$static$0() -> a
    64:64:void <clinit>() -> <clinit>
co.aikar.commands.CommandManager$1 -> co.aikar.commands.CommandManager$1:
    64:64:void <init>() -> <init>
    67:67:co.aikar.commands.CommandOperationContext peek() -> a
    64:64:java.lang.Object peek() -> peek
co.aikar.commands.CommandOperationContext -> co.aikar.commands.CommandOperationContext:
    co.aikar.commands.CommandManager manager -> b
    co.aikar.commands.CommandIssuer issuer -> c
    co.aikar.commands.BaseCommand command -> d
    java.lang.String commandLabel -> e
    java.lang.String[] args -> f
    boolean isAsync -> g
    co.aikar.commands.RegisteredCommand registeredCommand -> h
    java.util.List enumCompletionValues -> a
    43:50:void <init>(co.aikar.commands.CommandManager,co.aikar.commands.CommandIssuer,co.aikar.commands.BaseCommand,java.lang.String,java.lang.String[],boolean) -> <init>
    53:53:co.aikar.commands.CommandManager getCommandManager() -> getCommandManager
    57:57:co.aikar.commands.CommandIssuer getCommandIssuer() -> getCommandIssuer
    61:61:co.aikar.commands.BaseCommand getCommand() -> getCommand
    65:65:java.lang.String getCommandLabel() -> getCommandLabel
    69:69:java.lang.String[] getArgs() -> getArgs
    73:73:boolean isAsync() -> isAsync
    77:78:void setRegisteredCommand(co.aikar.commands.RegisteredCommand) -> setRegisteredCommand
    81:81:co.aikar.commands.RegisteredCommand getRegisteredCommand() -> getRegisteredCommand
    91:91:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    95:95:java.lang.String getAnnotationValue(java.lang.Class) -> getAnnotationValue
    1617:1617:co.aikar.commands.Annotations co.aikar.commands.CommandManager.getAnnotations():617:617 -> getAnnotationValue
    1617:1617:java.lang.String getAnnotationValue(java.lang.Class):95 -> getAnnotationValue
    2156:2156:java.lang.String co.aikar.commands.AnnotationLookups.getAnnotationValue(java.lang.reflect.AnnotatedElement,java.lang.Class):156:156 -> getAnnotationValue
    2156:2156:java.lang.String getAnnotationValue(java.lang.Class):95 -> getAnnotationValue
    99:99:java.lang.String getAnnotationValue(java.lang.Class,int) -> getAnnotationValue
    2617:2617:co.aikar.commands.Annotations co.aikar.commands.CommandManager.getAnnotations():617:617 -> getAnnotationValue
    2617:2617:java.lang.String getAnnotationValue(java.lang.Class,int):99 -> getAnnotationValue
    103:103:boolean hasAnnotation(java.lang.Class) -> hasAnnotation
co.aikar.commands.CommandParameter -> co.aikar.commands.CommandParameter:
    java.lang.reflect.Parameter parameter -> b
    java.lang.Class type -> c
    java.lang.String name -> d
    co.aikar.commands.CommandManager manager -> e
    int paramIndex -> f
    co.aikar.commands.contexts.ContextResolver resolver -> g
    boolean optional -> h
    java.util.Set permissions -> i
    java.lang.String permission -> j
    java.lang.String description -> k
    java.lang.String defaultValue -> l
    java.lang.String syntax -> m
    java.lang.String conditions -> n
    boolean requiresInput -> o
    boolean commandIssuer -> p
    java.lang.String[] values -> q
    java.util.Map flags -> r
    boolean canConsumeInput -> s
    boolean optionalResolver -> t
    boolean consumesRest -> a
    boolean isLast -> u
    boolean isOptionalInput -> v
    co.aikar.commands.CommandParameter nextParam -> w
    58:122:void <init>(co.aikar.commands.RegisteredCommand,java.lang.reflect.Parameter,int,boolean) -> <init>
    1617:1617:co.aikar.commands.Annotations co.aikar.commands.CommandManager.getAnnotations():617:617 -> <init>
    1617:1617:void <init>(co.aikar.commands.RegisteredCommand,java.lang.reflect.Parameter,int,boolean):81 -> <init>
    2155:2155:boolean isOptionalResolver(co.aikar.commands.contexts.ContextResolver):155:155 -> <init>
    2155:2155:void <init>(co.aikar.commands.RegisteredCommand,java.lang.reflect.Parameter,int,boolean):99 -> <init>
    2156:2156:java.lang.String co.aikar.commands.AnnotationLookups.getAnnotationValue(java.lang.reflect.AnnotatedElement,java.lang.Class):156:156 -> <init>
    2156:2156:void <init>(co.aikar.commands.RegisteredCommand,java.lang.reflect.Parameter,int,boolean):112 -> <init>
    3148:3152:void computePermissions():148:152 -> <init>
    3148:3152:void <init>(co.aikar.commands.RegisteredCommand,java.lang.reflect.Parameter,int,boolean):121 -> <init>
    125:134:void inheritContextFlags(co.aikar.commands.BaseCommand) -> a
    137:145:void parseFlags(java.lang.String) -> a
    162:162:java.lang.reflect.Parameter getParameter() -> getParameter
    166:166:java.lang.Class getType() -> getType
    170:170:java.lang.String getName() -> getName
    174:175:java.lang.String getDisplayName(co.aikar.commands.CommandIssuer) -> getDisplayName
    179:179:co.aikar.commands.CommandManager getManager() -> getManager
    183:183:int getParamIndex() -> getParamIndex
    187:187:co.aikar.commands.contexts.ContextResolver getResolver() -> getResolver
    191:192:void setResolver(co.aikar.commands.contexts.ContextResolver) -> setResolver
    195:195:boolean isOptionalInput() -> isOptionalInput
    199:199:boolean isOptional() -> isOptional
    203:204:void setOptional(boolean) -> setOptional
    207:207:java.lang.String getDescription() -> getDescription
    211:212:void setDescription(java.lang.String) -> setDescription
    215:215:java.lang.String getDefaultValue() -> getDefaultValue
    219:220:void setDefaultValue(java.lang.String) -> setDefaultValue
    223:223:boolean isCommandIssuer() -> isCommandIssuer
    227:228:void setCommandIssuer(boolean) -> setCommandIssuer
    231:231:java.lang.String[] getValues() -> getValues
    235:236:void setValues(java.lang.String[]) -> setValues
    239:239:java.util.Map getFlags() -> getFlags
    243:244:void setFlags(java.util.Map) -> setFlags
    247:247:boolean canConsumeInput() -> canConsumeInput
    251:252:void setCanConsumeInput(boolean) -> setCanConsumeInput
    255:256:void setOptionalResolver(boolean) -> setOptionalResolver
    259:259:boolean isOptionalResolver() -> isOptionalResolver
    263:263:boolean requiresInput() -> requiresInput
    267:268:void setRequiresInput(boolean) -> setRequiresInput
    271:271:java.lang.String getSyntax() -> getSyntax
    275:283:java.lang.String getSyntax(co.aikar.commands.CommandIssuer) -> getSyntax
    287:288:void setSyntax(java.lang.String) -> setSyntax
    291:291:java.lang.String getConditions() -> getConditions
    295:296:void setConditions(java.lang.String) -> setConditions
    299:299:java.util.Set getRequiredPermissions() -> getRequiredPermissions
    303:304:void setNextParam(co.aikar.commands.CommandParameter) -> setNextParam
    307:307:co.aikar.commands.CommandParameter getNextParam() -> getNextParam
    311:311:boolean canExecuteWithoutInput() -> canExecuteWithoutInput
    315:315:boolean isLast() -> isLast
co.aikar.commands.CommandReplacements -> co.aikar.commands.CommandReplacements:
    co.aikar.commands.CommandManager manager -> a
    java.util.Map replacements -> b
    41:46:void <init>(co.aikar.commands.CommandManager) -> <init>
    49:55:void addReplacements(java.lang.String[]) -> addReplacements
    58:58:java.lang.String addReplacement(java.lang.String,java.lang.String) -> addReplacement
    63:74:java.lang.String addReplacement0(java.lang.String,java.lang.String) -> a
    78:92:java.lang.String replace(java.lang.String) -> replace
co.aikar.commands.CommandRouter -> co.aikar.commands.g:
    42:44:void <init>(co.aikar.commands.CommandManager) -> <init>
    47:69:co.aikar.commands.CommandRouter$CommandRouteResult matchCommand(co.aikar.commands.CommandRouter$RouteSearch,boolean) -> a
    86:124:co.aikar.commands.CommandRouter$RouteSearch routeCommand(co.aikar.commands.RootCommand,java.lang.String,java.lang.String[],boolean) -> a
    56:62:int lambda$matchCommand$1(co.aikar.commands.RegisteredCommand,co.aikar.commands.RegisteredCommand) -> a
    54:54:boolean lambda$matchCommand$0(java.lang.String[],boolean,co.aikar.commands.RegisteredCommand) -> a
    1080:1082:boolean isProbableMatch(co.aikar.commands.RegisteredCommand,java.lang.String[],boolean):80:82 -> a
    1080:1082:boolean lambda$matchCommand$0(java.lang.String[],boolean,co.aikar.commands.RegisteredCommand):54 -> a
co.aikar.commands.CommandRouter$CommandRouteResult -> co.aikar.commands.g$a:
    co.aikar.commands.RegisteredCommand cmd -> a
    java.lang.String[] args -> b
    java.lang.String commandLabel -> c
    java.lang.String subcommand -> d
    134:135:void <init>(co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandRouter$RouteSearch) -> <init>
    137:142:void <init>(co.aikar.commands.RegisteredCommand,java.lang.String[],java.lang.String,java.lang.String) -> <init>
co.aikar.commands.CommandRouter$RouteSearch -> co.aikar.commands.g$b:
    java.lang.String[] args -> a
    java.util.Set commands -> b
    java.lang.String commandLabel -> c
    java.lang.String subcommand -> d
    152:157:void <init>(java.util.Set,java.lang.String[],java.lang.String,java.lang.String) -> <init>
co.aikar.commands.ConditionContext -> co.aikar.commands.ConditionContext:
    co.aikar.commands.CommandIssuer issuer -> a
    java.lang.String config -> b
    java.util.Map configs -> c
    35:45:void <init>(co.aikar.commands.CommandIssuer,java.lang.String) -> <init>
    49:49:co.aikar.commands.CommandIssuer getIssuer() -> getIssuer
    53:53:java.lang.String getConfig() -> getConfig
    56:56:boolean hasConfig(java.lang.String) -> hasConfig
    60:60:java.lang.String getConfigValue(java.lang.String,java.lang.String) -> getConfigValue
    64:64:java.lang.Integer getConfigValue(java.lang.String,java.lang.Integer) -> getConfigValue
co.aikar.commands.ConditionFailedException -> co.aikar.commands.ConditionFailedException:
    31:32:void <init>() -> <init>
    35:36:void <init>(co.aikar.locales.MessageKeyProvider,java.lang.String[]) -> <init>
    39:40:void <init>(co.aikar.locales.MessageKey,java.lang.String[]) -> <init>
    43:44:void <init>(java.lang.String) -> <init>
co.aikar.commands.ExceptionHandler -> co.aikar.commands.ExceptionHandler:
    boolean execute(co.aikar.commands.BaseCommand,co.aikar.commands.RegisteredCommand,co.aikar.commands.CommandIssuer,java.util.List,java.lang.Throwable) -> execute
co.aikar.commands.ForwardingCommand -> co.aikar.commands.ForwardingCommand:
    co.aikar.commands.BaseCommand command -> a
    java.lang.String[] baseArgs -> b
    co.aikar.commands.RegisteredCommand regCommand -> c
    35:42:void <init>(co.aikar.commands.BaseCommand,co.aikar.commands.RegisteredCommand,java.lang.String[]) -> <init>
    46:46:java.util.List getRegisteredCommands() -> getRegisteredCommands
    51:51:co.aikar.commands.CommandOperationContext getLastCommandOperationContext() -> getLastCommandOperationContext
    56:56:java.util.Set getRequiredPermissions() -> getRequiredPermissions
    61:61:boolean hasPermission(java.lang.Object) -> hasPermission
    66:66:boolean requiresPermission(java.lang.String) -> requiresPermission
    71:71:boolean hasPermission(co.aikar.commands.CommandIssuer) -> hasPermission
    76:76:java.util.List tabComplete(co.aikar.commands.CommandIssuer,co.aikar.commands.RootCommand,java.lang.String[],boolean) -> tabComplete
    81:83:void execute(co.aikar.commands.CommandIssuer,co.aikar.commands.CommandRouter$CommandRouteResult) -> execute
co.aikar.commands.HelpEntry -> co.aikar.commands.HelpEntry:
    co.aikar.commands.CommandHelp commandHelp -> b
    co.aikar.commands.RegisteredCommand command -> a
    int searchScore -> c
    30:35:void <init>(co.aikar.commands.CommandHelp,co.aikar.commands.RegisteredCommand) -> <init>
    42:42:java.lang.String getCommand() -> getCommand
    46:46:java.lang.String getCommandPrefix() -> getCommandPrefix
    50:50:java.lang.String getParameterSyntax() -> getParameterSyntax
    54:55:java.lang.String getParameterSyntax(co.aikar.commands.CommandIssuer) -> getParameterSyntax
    59:59:java.lang.String getDescription() -> getDescription
    63:64:void setSearchScore(int) -> setSearchScore
    67:67:boolean shouldShow() -> shouldShow
    71:71:int getSearchScore() -> getSearchScore
    75:75:java.lang.String getSearchTags() -> getSearchTags
    79:79:co.aikar.commands.CommandParameter[] getParameters() -> getParameters
co.aikar.commands.InvalidCommandArgument -> co.aikar.commands.InvalidCommandArgument:
    boolean showSyntax -> a
    co.aikar.locales.MessageKey key -> b
    java.lang.String[] replacements -> c
    35:36:void <init>() -> <init>
    39:40:void <init>(boolean) -> <init>
    43:44:void <init>(co.aikar.locales.MessageKeyProvider,java.lang.String[]) -> <init>
    47:48:void <init>(co.aikar.locales.MessageKey,java.lang.String[]) -> <init>
    51:52:void <init>(co.aikar.locales.MessageKeyProvider,boolean,java.lang.String[]) -> <init>
    55:59:void <init>(co.aikar.locales.MessageKey,boolean,java.lang.String[]) -> <init>
    1031:1031:java.lang.String co.aikar.locales.MessageKey.getKey():31:31 -> <init>
    1031:1031:void <init>(co.aikar.locales.MessageKey,boolean,java.lang.String[]):55 -> <init>
    62:63:void <init>(java.lang.String) -> <init>
    66:70:void <init>(java.lang.String,boolean) -> <init>
co.aikar.commands.InvalidCommandContextException -> co.aikar.commands.InvalidCommandContextException:
    28:29:void <init>(java.lang.String) -> <init>
co.aikar.commands.IssuerLocaleChangedCallback -> co.aikar.commands.IssuerLocaleChangedCallback:
    void onIssuerLocaleChange(co.aikar.commands.CommandIssuer,java.util.Locale,java.util.Locale) -> onIssuerLocaleChange
co.aikar.commands.Locales -> co.aikar.commands.Locales:
    java.util.Locale ENGLISH -> ENGLISH
    java.util.Locale GERMAN -> GERMAN
    java.util.Locale FRENCH -> FRENCH
    java.util.Locale JAPANESE -> JAPANESE
    java.util.Locale ITALIAN -> ITALIAN
    java.util.Locale KOREAN -> KOREAN
    java.util.Locale CHINESE -> CHINESE
    java.util.Locale SIMPLIFIED_CHINESE -> SIMPLIFIED_CHINESE
    java.util.Locale TRADITIONAL_CHINESE -> TRADITIONAL_CHINESE
    java.util.Locale SPANISH -> SPANISH
    java.util.Locale DUTCH -> DUTCH
    java.util.Locale DANISH -> DANISH
    java.util.Locale CZECH -> CZECH
    java.util.Locale GREEK -> GREEK
    java.util.Locale LATIN -> LATIN
    java.util.Locale BULGARIAN -> BULGARIAN
    java.util.Locale AFRIKAANS -> AFRIKAANS
    java.util.Locale HINDI -> HINDI
    java.util.Locale HEBREW -> HEBREW
    java.util.Locale POLISH -> POLISH
    java.util.Locale PORTUGUESE -> PORTUGUESE
    java.util.Locale FINNISH -> FINNISH
    java.util.Locale SWEDISH -> SWEDISH
    java.util.Locale RUSSIAN -> RUSSIAN
    java.util.Locale ROMANIAN -> ROMANIAN
    java.util.Locale VIETNAMESE -> VIETNAMESE
    java.util.Locale THAI -> THAI
    java.util.Locale TURKISH -> TURKISH
    java.util.Locale UKRANIAN -> UKRANIAN
    java.util.Locale ARABIC -> ARABIC
    java.util.Locale WELSH -> WELSH
    java.util.Locale NORWEGIAN_BOKMAAL -> NORWEGIAN_BOKMAAL
    java.util.Locale NORWEGIAN_NYNORSK -> NORWEGIAN_NYNORSK
    java.util.Locale HUNGARIAN -> HUNGARIAN
    co.aikar.commands.CommandManager manager -> a
    co.aikar.locales.LocaleManager localeManager -> b
    java.util.Map loadedBundles -> c
    java.util.List registeredClassLoaders -> d
    83:90:void <init>(co.aikar.commands.CommandManager) -> <init>
    1030:1030:co.aikar.locales.LocaleManager co.aikar.locales.LocaleManager.create(java.util.function.Function):30:30 -> <init>
    1030:1030:void <init>(co.aikar.commands.CommandManager):88 -> <init>
    93:94:void loadLanguages() -> loadLanguages
    97:97:java.util.Locale getDefaultLocale() -> getDefaultLocale
    1044:1044:java.util.Locale co.aikar.locales.LocaleManager.getDefaultLocale():44:44 -> getDefaultLocale
    1044:1044:java.util.Locale getDefaultLocale():97 -> getDefaultLocale
    101:101:java.util.Locale setDefaultLocale(java.util.Locale) -> setDefaultLocale
    1048:1050:java.util.Locale co.aikar.locales.LocaleManager.setDefaultLocale(java.util.Locale):48:50 -> setDefaultLocale
    1048:1050:java.util.Locale setDefaultLocale(java.util.Locale):101 -> setDefaultLocale
    109:118:void loadMissingBundles() -> loadMissingBundles
    121:128:void addMessageBundles(java.lang.String[]) -> addMessageBundles
    131:138:boolean addMessageBundle(java.lang.String,java.util.Locale) -> addMessageBundle
    142:151:boolean addMessageBundle(java.lang.ClassLoader,java.lang.String,java.util.Locale) -> addMessageBundle
    1062:1072:boolean co.aikar.locales.LocaleManager.addMessageBundle(java.lang.ClassLoader,java.lang.String,java.util.Locale[]):62:72 -> addMessageBundle
    1062:1072:boolean addMessageBundle(java.lang.ClassLoader,java.lang.String,java.util.Locale):144 -> addMessageBundle
    155:158:void addMessageStrings(java.util.Locale,java.util.Map) -> addMessageStrings
    161:167:void addMessages(java.util.Locale,java.util.Map) -> addMessages
    170:170:java.lang.String addMessage(java.util.Locale,co.aikar.locales.MessageKeyProvider,java.lang.String) -> addMessage
    1080:1080:java.lang.String co.aikar.locales.LocaleManager.addMessage(java.util.Locale,co.aikar.locales.MessageKey,java.lang.String):80:80 -> addMessage
    1080:1080:java.lang.String addMessage(java.util.Locale,co.aikar.locales.MessageKeyProvider,java.lang.String):170 -> addMessage
    174:180:java.lang.String getMessage(co.aikar.commands.CommandIssuer,co.aikar.locales.MessageKeyProvider) -> getMessage
    2031:2031:java.lang.String co.aikar.locales.MessageKey.getKey():31:31 -> getMessage
    2031:2031:java.lang.String getMessage(co.aikar.commands.CommandIssuer,co.aikar.locales.MessageKeyProvider):177 -> getMessage
    3031:3031:java.lang.String co.aikar.locales.MessageKey.getKey():31:31 -> getMessage
    3031:3031:java.lang.String getMessage(co.aikar.commands.CommandIssuer,co.aikar.locales.MessageKeyProvider):178 -> getMessage
    184:187:java.lang.String getOptionalMessage(co.aikar.commands.CommandIssuer,co.aikar.locales.MessageKey) -> getOptionalMessage
    191:208:java.lang.String replaceI18NStrings(java.lang.String) -> replaceI18NStrings
    212:212:boolean addBundleClassLoader(java.lang.ClassLoader) -> addBundleClassLoader
    156:156:void lambda$addMessageStrings$0(java.util.Map,java.lang.String,java.lang.String) -> a
    46:79:void <clinit>() -> <clinit>
co.aikar.commands.LogLevel -> co.aikar.commands.h:
    co.aikar.commands.LogLevel INFO -> a
    co.aikar.commands.LogLevel ERROR -> b
    co.aikar.commands.LogLevel[] $VALUES -> c
    26:26:co.aikar.commands.LogLevel[] values() -> values
    26:26:co.aikar.commands.LogLevel valueOf(java.lang.String) -> valueOf
    26:26:void <init>(java.lang.String,int) -> <init>
    26:28:void <clinit>() -> <clinit>
    1026:1026:co.aikar.commands.LogLevel[] $values():26:26 -> <clinit>
    1026:1026:void <clinit>():26 -> <clinit>
co.aikar.commands.MessageFormatter -> co.aikar.commands.MessageFormatter:
    java.util.List colors -> a
    38:44:void <init>(java.lang.Object[]) -> <init>
    46:59:java.lang.Object setColor(int,java.lang.Object) -> setColor
    64:73:java.lang.Object getColor(int) -> getColor
    77:77:java.lang.Object getDefaultColor() -> getDefaultColor
    java.lang.String format(java.lang.Object,java.lang.String) -> a
    83:83:java.lang.String format(int,java.lang.String) -> format
    87:96:java.lang.String format(java.lang.String) -> format
co.aikar.commands.MessageKeys -> co.aikar.commands.MessageKeys:
    co.aikar.commands.MessageKeys PERMISSION_DENIED -> PERMISSION_DENIED
    co.aikar.commands.MessageKeys PERMISSION_DENIED_PARAMETER -> PERMISSION_DENIED_PARAMETER
    co.aikar.commands.MessageKeys ERROR_GENERIC_LOGGED -> ERROR_GENERIC_LOGGED
    co.aikar.commands.MessageKeys UNKNOWN_COMMAND -> UNKNOWN_COMMAND
    co.aikar.commands.MessageKeys INVALID_SYNTAX -> INVALID_SYNTAX
    co.aikar.commands.MessageKeys ERROR_PREFIX -> ERROR_PREFIX
    co.aikar.commands.MessageKeys ERROR_PERFORMING_COMMAND -> ERROR_PERFORMING_COMMAND
    co.aikar.commands.MessageKeys INFO_MESSAGE -> INFO_MESSAGE
    co.aikar.commands.MessageKeys PLEASE_SPECIFY_ONE_OF -> PLEASE_SPECIFY_ONE_OF
    co.aikar.commands.MessageKeys MUST_BE_A_NUMBER -> MUST_BE_A_NUMBER
    co.aikar.commands.MessageKeys MUST_BE_MIN_LENGTH -> MUST_BE_MIN_LENGTH
    co.aikar.commands.MessageKeys MUST_BE_MAX_LENGTH -> MUST_BE_MAX_LENGTH
    co.aikar.commands.MessageKeys PLEASE_SPECIFY_AT_LEAST -> PLEASE_SPECIFY_AT_LEAST
    co.aikar.commands.MessageKeys PLEASE_SPECIFY_AT_MOST -> PLEASE_SPECIFY_AT_MOST
    co.aikar.commands.MessageKeys NOT_ALLOWED_ON_CONSOLE -> NOT_ALLOWED_ON_CONSOLE
    co.aikar.commands.MessageKeys COULD_NOT_FIND_PLAYER -> COULD_NOT_FIND_PLAYER
    co.aikar.commands.MessageKeys NO_COMMAND_MATCHED_SEARCH -> NO_COMMAND_MATCHED_SEARCH
    co.aikar.commands.MessageKeys HELP_PAGE_INFORMATION -> HELP_PAGE_INFORMATION
    co.aikar.commands.MessageKeys HELP_NO_RESULTS -> HELP_NO_RESULTS
    co.aikar.commands.MessageKeys HELP_HEADER -> HELP_HEADER
    co.aikar.commands.MessageKeys HELP_FORMAT -> HELP_FORMAT
    co.aikar.commands.MessageKeys HELP_DETAILED_HEADER -> HELP_DETAILED_HEADER
    co.aikar.commands.MessageKeys HELP_DETAILED_COMMAND_FORMAT -> HELP_DETAILED_COMMAND_FORMAT
    co.aikar.commands.MessageKeys HELP_DETAILED_PARAMETER_FORMAT -> HELP_DETAILED_PARAMETER_FORMAT
    co.aikar.commands.MessageKeys HELP_SEARCH_HEADER -> HELP_SEARCH_HEADER
    co.aikar.locales.MessageKey key -> a
    co.aikar.commands.MessageKeys[] $VALUES -> b
    34:34:co.aikar.commands.MessageKeys[] values() -> values
    34:34:co.aikar.commands.MessageKeys valueOf(java.lang.String) -> valueOf
    35:63:void <init>(java.lang.String,int) -> <init>
    66:66:co.aikar.locales.MessageKey getMessageKey() -> getMessageKey
    34:60:void <clinit>() -> <clinit>
    1034:1034:co.aikar.commands.MessageKeys[] $values():34:34 -> <clinit>
    1034:1034:void <clinit>():34 -> <clinit>
co.aikar.commands.MessageType -> co.aikar.commands.MessageType:
    java.util.concurrent.atomic.AtomicInteger counter -> a
    co.aikar.commands.MessageType INFO -> INFO
    co.aikar.commands.MessageType SYNTAX -> SYNTAX
    co.aikar.commands.MessageType ERROR -> ERROR
    co.aikar.commands.MessageType HELP -> HELP
    int id -> b
    29:37:void <init>() -> <init>
    40:40:int hashCode() -> hashCode
    45:45:boolean equals(java.lang.Object) -> equals
    30:35:void <clinit>() -> <clinit>
co.aikar.commands.MinecraftMessageKeys -> co.aikar.commands.MinecraftMessageKeys:
    co.aikar.commands.MinecraftMessageKeys INVALID_WORLD -> INVALID_WORLD
    co.aikar.commands.MinecraftMessageKeys YOU_MUST_BE_HOLDING_ITEM -> YOU_MUST_BE_HOLDING_ITEM
    co.aikar.commands.MinecraftMessageKeys PLAYER_IS_VANISHED_CONFIRM -> PLAYER_IS_VANISHED_CONFIRM
    co.aikar.commands.MinecraftMessageKeys USERNAME_TOO_SHORT -> USERNAME_TOO_SHORT
    co.aikar.commands.MinecraftMessageKeys IS_NOT_A_VALID_NAME -> IS_NOT_A_VALID_NAME
    co.aikar.commands.MinecraftMessageKeys MULTIPLE_PLAYERS_MATCH -> MULTIPLE_PLAYERS_MATCH
    co.aikar.commands.MinecraftMessageKeys NO_PLAYER_FOUND_SERVER -> NO_PLAYER_FOUND_SERVER
    co.aikar.commands.MinecraftMessageKeys NO_PLAYER_FOUND_OFFLINE -> NO_PLAYER_FOUND_OFFLINE
    co.aikar.commands.MinecraftMessageKeys NO_PLAYER_FOUND -> NO_PLAYER_FOUND
    co.aikar.commands.MinecraftMessageKeys LOCATION_PLEASE_SPECIFY_WORLD -> LOCATION_PLEASE_SPECIFY_WORLD
    co.aikar.commands.MinecraftMessageKeys LOCATION_PLEASE_SPECIFY_XYZ -> LOCATION_PLEASE_SPECIFY_XYZ
    co.aikar.commands.MinecraftMessageKeys LOCATION_CONSOLE_NOT_RELATIVE -> LOCATION_CONSOLE_NOT_RELATIVE
    co.aikar.locales.MessageKey key -> a
    co.aikar.commands.MinecraftMessageKeys[] $VALUES -> b
    31:31:co.aikar.commands.MinecraftMessageKeys[] values() -> values
    31:31:co.aikar.commands.MinecraftMessageKeys valueOf(java.lang.String) -> valueOf
    31:45:void <init>(java.lang.String,int) -> <init>
    47:47:co.aikar.locales.MessageKey getMessageKey() -> getMessageKey
    31:43:void <clinit>() -> <clinit>
    1031:1031:co.aikar.commands.MinecraftMessageKeys[] $values():31:31 -> <clinit>
    1031:1031:void <clinit>():31 -> <clinit>
co.aikar.commands.ProxyCommandMap -> co.aikar.commands.i:
    co.aikar.commands.BukkitCommandManager manager -> a
    org.bukkit.command.CommandMap proxied -> b
    42:45:void <init>(co.aikar.commands.BukkitCommandManager,org.bukkit.command.CommandMap) -> <init>
    49:50:void registerAll(java.lang.String,java.util.List) -> registerAll
    54:57:boolean register(java.lang.String,java.lang.String,org.bukkit.command.Command) -> register
    62:63:boolean isOurCommand(java.lang.String) -> a
    67:67:boolean isOurCommand(org.bukkit.command.Command) -> a
    72:75:boolean register(java.lang.String,org.bukkit.command.Command) -> register
    81:84:boolean dispatch(org.bukkit.command.CommandSender,java.lang.String) -> dispatch
    90:92:void clearCommands() -> clearCommands
    96:99:org.bukkit.command.Command getCommand(java.lang.String) -> getCommand
    105:108:java.util.List tabComplete(org.bukkit.command.CommandSender,java.lang.String) -> tabComplete
co.aikar.commands.RegisteredCommand -> co.aikar.commands.RegisteredCommand:
    co.aikar.commands.BaseCommand scope -> a
    java.lang.reflect.Method method -> b
    co.aikar.commands.CommandParameter[] parameters -> c
    co.aikar.commands.CommandManager manager -> d
    java.util.List registeredSubcommands -> e
    java.lang.String command -> f
    java.lang.String prefSubCommand -> g
    java.lang.String syntaxText -> h
    java.lang.String helpText -> o
    java.lang.String permission -> p
    java.lang.String complete -> i
    java.lang.String conditions -> j
    java.lang.String helpSearchTags -> helpSearchTags
    boolean isPrivate -> k
    int requiredResolvers -> l
    int consumeInputResolvers -> m
    int optionalResolvers -> n
    java.util.Set permissions -> q
    62:139:void <init>(co.aikar.commands.BaseCommand,java.lang.String,java.lang.reflect.Method,java.lang.String) -> <init>
    1617:1617:co.aikar.commands.Annotations co.aikar.commands.CommandManager.getAnnotations():617:617 -> <init>
    1617:1617:void <init>(co.aikar.commands.BaseCommand,java.lang.String,java.lang.reflect.Method,java.lang.String):85 -> <init>
    2064:2064:boolean co.aikar.commands.AnnotationLookups.hasAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class,boolean):64:64 -> <init>
    2064:2064:void <init>(co.aikar.commands.BaseCommand,java.lang.String,java.lang.reflect.Method,java.lang.String):91 -> <init>
    143:165:void invoke(co.aikar.commands.CommandIssuer,java.util.List,co.aikar.commands.CommandOperationContext) -> a
    3057:3061:void co.aikar.commands.CommandConditions.validateConditions(co.aikar.commands.CommandOperationContext):57:61 -> a
    3057:3061:void invoke(co.aikar.commands.CommandIssuer,java.util.List,co.aikar.commands.CommandOperationContext):148 -> a
    3212:3212:java.util.Map resolveContexts(co.aikar.commands.CommandIssuer,java.util.List):212:212 -> a
    3212:3212:void invoke(co.aikar.commands.CommandIssuer,java.util.List,co.aikar.commands.CommandOperationContext):149 -> a
    168:168:void preCommand() -> preCommand
    171:171:void postCommand() -> postCommand
    174:208:void handleException(co.aikar.commands.CommandIssuer,java.util.List,java.lang.Throwable) -> a
    217:296:java.util.Map resolveContexts(co.aikar.commands.CommandIssuer,java.util.List,java.lang.String) -> a
    300:300:boolean hasPermission(co.aikar.commands.CommandIssuer) -> a
    309:312:java.lang.String getPermission() -> getPermission
    316:321:void computePermissions() -> a
    324:324:java.util.Set getRequiredPermissions() -> getRequiredPermissions
    328:328:boolean requiresPermission(java.lang.String) -> requiresPermission
    332:332:java.lang.String getPrefSubCommand() -> getPrefSubCommand
    336:336:java.lang.String getSyntaxText() -> getSyntaxText
    340:351:java.lang.String getSyntaxText(co.aikar.commands.CommandIssuer) -> getSyntaxText
    355:355:java.lang.String getHelpText() -> getHelpText
    359:359:boolean isPrivate() -> isPrivate
    363:363:java.lang.String getCommand() -> getCommand
    367:368:void addSubcommand(java.lang.String) -> addSubcommand
    371:372:void addSubcommands(java.util.Collection) -> addSubcommands
    375:375:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    156:157:java.lang.Object lambda$invoke$0(co.aikar.commands.CommandIssuer,java.util.List,java.lang.Throwable) -> b
co.aikar.commands.RootCommand -> co.aikar.commands.RootCommand:
    void addChild(co.aikar.commands.BaseCommand) -> addChild
    co.aikar.commands.CommandManager getManager() -> getManager
    com.google.common.collect.SetMultimap getSubCommands() -> getSubCommands
    java.util.List getChildren() -> getChildren
    java.lang.String getCommandName() -> getCommandName
    47:52:void addChildShared(java.util.List,com.google.common.collect.SetMultimap,co.aikar.commands.BaseCommand) -> addChildShared
    58:69:java.lang.String getUniquePermission() -> getUniquePermission
    73:88:boolean hasAnyPermission(co.aikar.commands.CommandIssuer) -> hasAnyPermission
    92:110:co.aikar.commands.BaseCommand execute(co.aikar.commands.CommandIssuer,java.lang.String,java.lang.String[]) -> execute
    1241:1241:co.aikar.commands.CommandRouter co.aikar.commands.CommandManager.getRouter():241:241 -> execute
    1241:1241:co.aikar.commands.BaseCommand execute(co.aikar.commands.CommandIssuer,java.lang.String,java.lang.String[]):92 -> execute
    114:114:java.util.List getTabCompletions(co.aikar.commands.CommandIssuer,java.lang.String,java.lang.String[]) -> getTabCompletions
    118:118:java.util.List getTabCompletions(co.aikar.commands.CommandIssuer,java.lang.String,java.lang.String[],boolean) -> getTabCompletions
    122:129:java.util.List getTabCompletions(co.aikar.commands.CommandIssuer,java.lang.String,java.lang.String[],boolean,boolean) -> getTabCompletions
    134:138:co.aikar.commands.RegisteredCommand getDefaultRegisteredCommand() -> getDefaultRegisteredCommand
    142:142:co.aikar.commands.BaseCommand getDefCommand() -> getDefCommand
    147:155:java.lang.String getDescription() -> getDescription
    160:164:java.lang.String getUsage() -> getUsage
    124:128:void lambda$getTabCompletions$1(boolean,java.util.Set,co.aikar.commands.CommandIssuer,java.lang.String[],boolean,co.aikar.commands.BaseCommand) -> a
    48:49:void lambda$addChildShared$0(com.google.common.collect.SetMultimap,java.util.Map$Entry) -> a
co.aikar.commands.ShowCommandHelp -> co.aikar.commands.ShowCommandHelp:
    java.util.List searchArgs -> d
    boolean search -> e
    30:35:void <init>() -> <init>
    30:39:void <init>(boolean) -> <init>
    42:44:void <init>(java.util.List) -> <init>
co.aikar.commands.UnresolvedDependencyException -> co.aikar.commands.UnresolvedDependencyException:
    32:33:void <init>(java.lang.String) -> <init>
co.aikar.commands.UnstableAPI -> co.aikar.commands.UnstableAPI:
co.aikar.commands.annotation.CatchAll -> co.aikar.commands.annotation.CatchAll:
co.aikar.commands.annotation.CatchUnknown -> co.aikar.commands.annotation.CatchUnknown:
co.aikar.commands.annotation.CommandAlias -> co.aikar.commands.annotation.CommandAlias:
    java.lang.String value() -> value
co.aikar.commands.annotation.CommandCompletion -> co.aikar.commands.annotation.CommandCompletion:
    java.lang.String value() -> value
co.aikar.commands.annotation.CommandPermission -> co.aikar.commands.annotation.CommandPermission:
    java.lang.String value() -> value
co.aikar.commands.annotation.Conditions -> co.aikar.commands.annotation.Conditions:
    java.lang.String value() -> value
co.aikar.commands.annotation.Default -> co.aikar.commands.annotation.Default:
    java.lang.String value() -> value
co.aikar.commands.annotation.Dependency -> co.aikar.commands.annotation.Dependency:
    java.lang.String value() -> value
co.aikar.commands.annotation.Description -> co.aikar.commands.annotation.Description:
    java.lang.String value() -> value
co.aikar.commands.annotation.Flags -> co.aikar.commands.annotation.Flags:
    java.lang.String value() -> value
co.aikar.commands.annotation.HelpCommand -> co.aikar.commands.annotation.HelpCommand:
    java.lang.String value() -> value
co.aikar.commands.annotation.HelpSearchTags -> co.aikar.commands.annotation.HelpSearchTags:
    java.lang.String value() -> value
co.aikar.commands.annotation.Name -> co.aikar.commands.annotation.Name:
    java.lang.String value() -> value
co.aikar.commands.annotation.Optional -> co.aikar.commands.annotation.Optional:
co.aikar.commands.annotation.PreCommand -> co.aikar.commands.annotation.PreCommand:
co.aikar.commands.annotation.Private -> co.aikar.commands.annotation.Private:
co.aikar.commands.annotation.Single -> co.aikar.commands.annotation.Single:
co.aikar.commands.annotation.Split -> co.aikar.commands.annotation.Split:
    java.lang.String value() -> value
co.aikar.commands.annotation.Subcommand -> co.aikar.commands.annotation.Subcommand:
    java.lang.String value() -> value
co.aikar.commands.annotation.Syntax -> co.aikar.commands.annotation.Syntax:
    java.lang.String value() -> value
co.aikar.commands.annotation.UnknownHandler -> co.aikar.commands.annotation.UnknownHandler:
co.aikar.commands.annotation.Values -> co.aikar.commands.annotation.Values:
    java.lang.String value() -> value
co.aikar.commands.apachecommonslang.ApacheCommonsExceptionUtil -> co.aikar.commands.apachecommonslang.ApacheCommonsExceptionUtil:
    java.lang.String[] CAUSE_METHOD_NAMES -> a
    java.lang.reflect.Method THROWABLE_CAUSE_METHOD -> b
    java.lang.reflect.Method THROWABLE_INITCAUSE_METHOD -> c
    105:106:void <init>() -> <init>
    118:124:void addCauseMethodName(java.lang.String) -> addCauseMethodName
    135:141:void removeCauseMethodName(java.lang.String) -> removeCauseMethodName
    172:198:boolean setCause(java.lang.Throwable,java.lang.Throwable) -> setCause
    207:207:java.lang.String[] toArray(java.util.List) -> a
    216:216:java.util.ArrayList getCauseMethodNameList() -> a
    229:229:boolean isCauseMethodName(java.lang.String) -> isCauseMethodName
    264:264:java.lang.Throwable getCause(java.lang.Throwable) -> getCause
    286:308:java.lang.Throwable getCause(java.lang.Throwable,java.lang.String[]) -> getCause
    1344:1351:java.lang.Throwable getCauseUsingWellKnownTypes(java.lang.Throwable):344:351 -> getCause
    1344:1351:java.lang.Throwable getCause(java.lang.Throwable,java.lang.String[]):289 -> getCause
    329:330:java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    363:383:java.lang.Throwable getCauseUsingMethodName(java.lang.Throwable,java.lang.String) -> a
    394:412:java.lang.Throwable getCauseUsingFieldName(java.lang.Throwable,java.lang.String) -> b
    425:425:boolean isThrowableNested() -> isThrowableNested
    438:477:boolean isNestedThrowable(java.lang.Throwable) -> isNestedThrowable
    498:498:int getThrowableCount(java.lang.Throwable) -> getThrowableCount
    521:522:java.lang.Throwable[] getThrowables(java.lang.Throwable) -> getThrowables
    545:550:java.util.List getThrowableList(java.lang.Throwable) -> getThrowableList
    569:569:int indexOfThrowable(java.lang.Throwable,java.lang.Class) -> indexOfThrowable
    592:592:int indexOfThrowable(java.lang.Throwable,java.lang.Class,int) -> indexOfThrowable
    612:612:int indexOfType(java.lang.Throwable,java.lang.Class) -> indexOfType
    636:636:int indexOfType(java.lang.Throwable,java.lang.Class,int) -> indexOfType
    651:674:int indexOf(java.lang.Throwable,java.lang.Class,int,boolean) -> a
    686:702:void removeCommonFrames(java.util.List,java.util.List) -> removeCommonFrames
    716:725:java.lang.String getFullStackTrace(java.lang.Throwable) -> getFullStackTrace
    742:745:java.lang.String getStackTrace(java.lang.Throwable) -> getStackTrace
    44:96:void <clinit>() -> <clinit>
co.aikar.commands.apachecommonslang.ApacheCommonsExceptionUtil$Nestable -> co.aikar.commands.apachecommonslang.ApacheCommonsExceptionUtil$Nestable:
    java.lang.Throwable getCause() -> getCause
    java.lang.String getMessage() -> getMessage
    java.lang.String getMessage(int) -> getMessage
    java.lang.String[] getMessages() -> getMessages
    java.lang.Throwable getThrowable(int) -> getThrowable
    int getThrowableCount() -> getThrowableCount
    java.lang.Throwable[] getThrowables() -> getThrowables
    int indexOfThrowable(java.lang.Class) -> indexOfThrowable
    int indexOfThrowable(java.lang.Class,int) -> indexOfThrowable
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printPartialStackTrace(java.io.PrintWriter) -> printPartialStackTrace
co.aikar.commands.apachecommonslang.ApacheCommonsLangUtil -> co.aikar.commands.apachecommonslang.ApacheCommonsLangUtil:
    java.lang.String EMPTY -> EMPTY
    int INDEX_NOT_FOUND -> INDEX_NOT_FOUND
    28:28:void <init>() -> <init>
    49:52:java.lang.Object[] clone(java.lang.Object[]) -> clone
    80:105:java.lang.Object[] addAll(java.lang.Object[],java.lang.Object[]) -> addAll
    129:129:java.lang.String capitalizeFully(java.lang.String) -> capitalizeFully
    159:164:java.lang.String capitalizeFully(java.lang.String,char[]) -> capitalizeFully
    191:191:java.lang.String capitalize(java.lang.String) -> capitalize
    223:238:java.lang.String capitalize(java.lang.String,char[]) -> capitalize
    249:257:boolean isDelimiter(char,char[]) -> isDelimiter
    286:286:java.lang.String join(java.lang.Object[]) -> join
    312:315:java.lang.String join(java.lang.Object[],char) -> join
    344:347:java.lang.String join(long[],char) -> join
    376:379:java.lang.String join(int[],char) -> join
    408:411:java.lang.String join(short[],char) -> join
    440:443:java.lang.String join(byte[],char) -> join
    472:475:java.lang.String join(char[],char) -> join
    504:507:java.lang.String join(float[],char) -> join
    536:539:java.lang.String join(double[],char) -> join
    570:586:java.lang.String join(java.lang.Object[],char,int,int) -> join
    621:635:java.lang.String join(long[],char,int,int) -> join
    670:684:java.lang.String join(int[],char,int,int) -> join
    719:733:java.lang.String join(byte[],char,int,int) -> join
    768:782:java.lang.String join(short[],char,int,int) -> join
    817:831:java.lang.String join(char[],char,int,int) -> join
    866:880:java.lang.String join(double[],char,int,int) -> join
    915:929:java.lang.String join(float[],char,int,int) -> join
    957:960:java.lang.String join(java.lang.Object[],java.lang.String) -> join
    999:1023:java.lang.String join(java.lang.Object[],java.lang.String,int,int) -> join
    1043:1069:java.lang.String join(java.util.Iterator,char) -> join
    1088:1115:java.lang.String join(java.util.Iterator,java.lang.String) -> join
    1133:1136:java.lang.String join(java.lang.Iterable,char) -> join
    1154:1157:java.lang.String join(java.lang.Iterable,java.lang.String) -> join
    1193:1202:boolean isNumeric(java.lang.CharSequence) -> isNumeric
    1232:1232:boolean startsWith(java.lang.CharSequence,java.lang.CharSequence) -> startsWith
    1258:1258:boolean startsWithIgnoreCase(java.lang.CharSequence,java.lang.CharSequence) -> startsWithIgnoreCase
    1273:1279:boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> a
    1295:1335:boolean regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int) -> a
    1361:1361:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    1379:1398:int indexOf(java.lang.Object[],java.lang.Object,int) -> indexOf
co.aikar.commands.bukkit.contexts.OnlinePlayer -> co.aikar.commands.bukkit.contexts.OnlinePlayer:
    org.bukkit.entity.Player player -> player
    33:35:void <init>(org.bukkit.entity.Player) -> <init>
    38:38:org.bukkit.entity.Player getPlayer() -> getPlayer
    43:46:boolean equals(java.lang.Object) -> equals
    51:51:int hashCode() -> hashCode
    56:56:java.lang.String toString() -> toString
co.aikar.commands.contexts.ContextResolver -> co.aikar.commands.contexts.ContextResolver:
    java.lang.Object getContext(co.aikar.commands.CommandExecutionContext) -> getContext
co.aikar.commands.contexts.IssuerAwareContextResolver -> co.aikar.commands.contexts.IssuerAwareContextResolver:
co.aikar.commands.contexts.IssuerOnlyContextResolver -> co.aikar.commands.contexts.IssuerOnlyContextResolver:
co.aikar.commands.contexts.OnlinePlayer -> co.aikar.commands.contexts.OnlinePlayer:
    34:35:void <init>(org.bukkit.entity.Player) -> <init>
co.aikar.commands.contexts.OptionalContextResolver -> co.aikar.commands.contexts.OptionalContextResolver:
co.aikar.commands.contexts.SenderAwareContextResolver -> co.aikar.commands.contexts.SenderAwareContextResolver:
co.aikar.commands.lib.expiringmap.EntryLoader -> co.aikar.commands.lib.expiringmap.EntryLoader:
    java.lang.Object load(java.lang.Object) -> load
co.aikar.commands.lib.expiringmap.ExpirationListener -> co.aikar.commands.lib.expiringmap.ExpirationListener:
    void expired(java.lang.Object,java.lang.Object) -> expired
co.aikar.commands.lib.expiringmap.ExpirationPolicy -> co.aikar.commands.lib.expiringmap.ExpirationPolicy:
    co.aikar.commands.lib.expiringmap.ExpirationPolicy ACCESSED -> ACCESSED
    co.aikar.commands.lib.expiringmap.ExpirationPolicy CREATED -> CREATED
    co.aikar.commands.lib.expiringmap.ExpirationPolicy[] $VALUES -> a
    6:6:co.aikar.commands.lib.expiringmap.ExpirationPolicy[] values() -> values
    6:6:co.aikar.commands.lib.expiringmap.ExpirationPolicy valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:10:void <clinit>() -> <clinit>
co.aikar.commands.lib.expiringmap.ExpiringEntryLoader -> co.aikar.commands.lib.expiringmap.ExpiringEntryLoader:
    co.aikar.commands.lib.expiringmap.ExpiringValue load(java.lang.Object) -> load
co.aikar.commands.lib.expiringmap.ExpiringMap -> co.aikar.commands.lib.expiringmap.ExpiringMap:
    java.util.concurrent.ScheduledExecutorService EXPIRER -> a
    java.util.concurrent.ThreadPoolExecutor LISTENER_SERVICE -> b
    java.util.concurrent.ThreadFactory THREAD_FACTORY -> c
    java.util.List expirationListeners -> d
    java.util.List asyncExpirationListeners -> e
    java.util.concurrent.atomic.AtomicLong expirationNanos -> f
    int maxSize -> g
    java.util.concurrent.atomic.AtomicReference expirationPolicy -> h
    co.aikar.commands.lib.expiringmap.EntryLoader entryLoader -> i
    co.aikar.commands.lib.expiringmap.ExpiringEntryLoader expiringEntryLoader -> j
    java.util.concurrent.locks.ReadWriteLock readWriteLock -> k
    java.util.concurrent.locks.Lock readLock -> l
    java.util.concurrent.locks.Lock writeLock -> m
    co.aikar.commands.lib.expiringmap.ExpiringMap$EntryMap entries -> n
    boolean variableExpiration -> o
    103:104:void setThreadFactory(java.util.concurrent.ThreadFactory) -> setThreadFactory
    88:135:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap$Builder) -> <init>
    616:616:co.aikar.commands.lib.expiringmap.ExpiringMap$Builder builder() -> builder
    624:624:co.aikar.commands.lib.expiringmap.ExpiringMap create() -> create
    634:638:void addExpirationListener(co.aikar.commands.lib.expiringmap.ExpirationListener) -> addExpirationListener
    647:654:void addAsyncExpirationListener(co.aikar.commands.lib.expiringmap.ExpirationListener) -> addAsyncExpirationListener
    658:666:void clear() -> clear
    670:675:boolean containsKey(java.lang.Object) -> containsKey
    680:685:boolean containsValue(java.lang.Object) -> containsValue
    690:690:java.util.Set entrySet() -> entrySet
    728:733:boolean equals(java.lang.Object) -> equals
    739:746:java.lang.Object get(java.lang.Object) -> get
    750:779:java.lang.Object load(java.lang.Object) -> a
    788:788:long getExpiration() -> getExpiration
    800:803:long getExpiration(java.lang.Object) -> getExpiration
    815:818:co.aikar.commands.lib.expiringmap.ExpirationPolicy getExpirationPolicy(java.lang.Object) -> getExpirationPolicy
    831:834:long getExpectedExpiration(java.lang.Object) -> getExpectedExpiration
    844:844:int getMaxSize() -> getMaxSize
    849:854:int hashCode() -> hashCode
    859:864:boolean isEmpty() -> isEmpty
    869:869:java.util.Set keySet() -> keySet
    909:910:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    917:917:java.lang.Object put(java.lang.Object,java.lang.Object,co.aikar.commands.lib.expiringmap.ExpirationPolicy) -> put
    924:924:java.lang.Object put(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit) -> put
    940:944:java.lang.Object put(java.lang.Object,java.lang.Object,co.aikar.commands.lib.expiringmap.ExpirationPolicy,long,java.util.concurrent.TimeUnit) -> put
    949:959:void putAll(java.util.Map) -> putAll
    963:972:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    977:988:java.lang.Object remove(java.lang.Object) -> remove
    993:1006:boolean remove(java.lang.Object,java.lang.Object) -> remove
    1011:1020:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    1025:1036:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    1046:1053:void removeExpirationListener(co.aikar.commands.lib.expiringmap.ExpirationListener) -> removeExpirationListener
    1062:1069:void removeAsyncExpirationListener(co.aikar.commands.lib.expiringmap.ExpirationListener) -> removeAsyncExpirationListener
    1078:1082:void resetExpiration(java.lang.Object) -> resetExpiration
    1095:1108:void setExpiration(java.lang.Object,long,java.util.concurrent.TimeUnit) -> setExpiration
    1119:1122:void setExpiration(long,java.util.concurrent.TimeUnit) -> setExpiration
    1131:1133:void setExpirationPolicy(co.aikar.commands.lib.expiringmap.ExpirationPolicy) -> setExpirationPolicy
    1144:1150:void setExpirationPolicy(java.lang.Object,co.aikar.commands.lib.expiringmap.ExpirationPolicy) -> setExpirationPolicy
    1159:1161:void setMaxSize(int) -> setMaxSize
    1165:1170:int size() -> size
    1175:1180:java.lang.String toString() -> toString
    1185:1185:java.util.Collection values() -> values
    1215:1234:void notifyListeners(co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry) -> a
    1240:1245:co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry getEntry(java.lang.Object) -> b
    1253:1283:java.lang.Object putInternal(java.lang.Object,java.lang.Object,co.aikar.commands.lib.expiringmap.ExpirationPolicy,long) -> a
    1295:1305:void resetEntry(co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry,boolean) -> a
    1314:1362:void scheduleEntry(co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry) -> b
    1384:1390:void initListenerService() -> a
    76:76:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap$Builder,byte) -> <init>
    76:76:java.util.Map$Entry access$1200(co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry) -> c
    2365:2365:java.util.Map$Entry mapEntryFor(co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry):1365:1365 -> c
    2365:2365:java.util.Map$Entry access$1200(co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry):76 -> c
    76:76:co.aikar.commands.lib.expiringmap.ExpiringMap$EntryMap access$1500(co.aikar.commands.lib.expiringmap.ExpiringMap) -> a
    76:76:java.util.concurrent.locks.Lock access$1600(co.aikar.commands.lib.expiringmap.ExpiringMap) -> b
co.aikar.commands.lib.expiringmap.ExpiringMap$1 -> co.aikar.commands.lib.expiringmap.ExpiringMap$1:
    co.aikar.commands.lib.expiringmap.ExpiringMap this$0 -> a
    690:690:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap) -> <init>
    693:694:void clear() -> clear
    698:701:boolean contains(java.lang.Object) -> contains
    706:707:java.util.Iterator iterator() -> iterator
    712:716:boolean remove(java.lang.Object) -> remove
    721:721:int size() -> size
co.aikar.commands.lib.expiringmap.ExpiringMap$2 -> co.aikar.commands.lib.expiringmap.ExpiringMap$2:
    co.aikar.commands.lib.expiringmap.ExpiringMap this$0 -> a
    869:869:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap) -> <init>
    872:873:void clear() -> clear
    877:877:boolean contains(java.lang.Object) -> contains
    882:883:java.util.Iterator iterator() -> iterator
    888:888:boolean remove(java.lang.Object) -> remove
    893:893:int size() -> size
co.aikar.commands.lib.expiringmap.ExpiringMap$3 -> co.aikar.commands.lib.expiringmap.ExpiringMap$3:
    co.aikar.commands.lib.expiringmap.ExpiringMap this$0 -> a
    1185:1185:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap) -> <init>
    1188:1189:void clear() -> clear
    1193:1193:boolean contains(java.lang.Object) -> contains
    1198:1199:java.util.Iterator iterator() -> iterator
    1204:1204:int size() -> size
co.aikar.commands.lib.expiringmap.ExpiringMap$4 -> co.aikar.commands.lib.expiringmap.ExpiringMap$4:
    co.aikar.commands.lib.expiringmap.ExpirationListener val$listener -> a
    co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry val$entry -> b
    1217:1217:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap,co.aikar.commands.lib.expiringmap.ExpirationListener,co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry) -> <init>
    1220:1223:void run() -> run
co.aikar.commands.lib.expiringmap.ExpiringMap$5 -> co.aikar.commands.lib.expiringmap.ExpiringMap$5:
    java.lang.ref.WeakReference val$entryReference -> a
    co.aikar.commands.lib.expiringmap.ExpiringMap this$0 -> b
    1323:1323:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap,java.lang.ref.WeakReference) -> <init>
    1326:1355:void run() -> run
co.aikar.commands.lib.expiringmap.ExpiringMap$6 -> co.aikar.commands.lib.expiringmap.ExpiringMap$6:
    co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry val$entry -> a
    1365:1365:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry) -> <init>
    1368:1368:java.lang.Object getKey() -> getKey
    1373:1373:java.lang.Object getValue() -> getValue
    1378:1378:java.lang.Object setValue(java.lang.Object) -> setValue
co.aikar.commands.lib.expiringmap.ExpiringMap$Builder -> co.aikar.commands.lib.expiringmap.ExpiringMap$Builder:
    co.aikar.commands.lib.expiringmap.ExpirationPolicy expirationPolicy -> a
    java.util.List expirationListeners -> b
    java.util.List asyncExpirationListeners -> c
    java.util.concurrent.TimeUnit timeUnit -> d
    boolean variableExpiration -> e
    long duration -> f
    int maxSize -> g
    co.aikar.commands.lib.expiringmap.EntryLoader entryLoader -> h
    co.aikar.commands.lib.expiringmap.ExpiringEntryLoader expiringEntryLoader -> i
    142:156:void <init>() -> <init>
    166:166:co.aikar.commands.lib.expiringmap.ExpiringMap build() -> build
    177:179:co.aikar.commands.lib.expiringmap.ExpiringMap$Builder expiration(long,java.util.concurrent.TimeUnit) -> expiration
    189:191:co.aikar.commands.lib.expiringmap.ExpiringMap$Builder maxSize(int) -> maxSize
    204:206:co.aikar.commands.lib.expiringmap.ExpiringMap$Builder entryLoader(co.aikar.commands.lib.expiringmap.EntryLoader) -> entryLoader
    220:223:co.aikar.commands.lib.expiringmap.ExpiringMap$Builder expiringEntryLoader(co.aikar.commands.lib.expiringmap.ExpiringEntryLoader) -> expiringEntryLoader
    236:240:co.aikar.commands.lib.expiringmap.ExpiringMap$Builder expirationListener(co.aikar.commands.lib.expiringmap.ExpirationListener) -> expirationListener
    253:258:co.aikar.commands.lib.expiringmap.ExpiringMap$Builder expirationListeners(java.util.List) -> expirationListeners
    271:275:co.aikar.commands.lib.expiringmap.ExpiringMap$Builder asyncExpirationListener(co.aikar.commands.lib.expiringmap.ExpirationListener) -> asyncExpirationListener
    288:293:co.aikar.commands.lib.expiringmap.ExpiringMap$Builder asyncExpirationListeners(java.util.List) -> asyncExpirationListeners
    303:304:co.aikar.commands.lib.expiringmap.ExpiringMap$Builder expirationPolicy(co.aikar.commands.lib.expiringmap.ExpirationPolicy) -> expirationPolicy
    311:312:co.aikar.commands.lib.expiringmap.ExpiringMap$Builder variableExpiration() -> variableExpiration
    316:318:void assertNoLoaderSet() -> a
    141:141:java.util.List access$000(co.aikar.commands.lib.expiringmap.ExpiringMap$Builder) -> a
    141:141:boolean access$100(co.aikar.commands.lib.expiringmap.ExpiringMap$Builder) -> b
    141:141:java.util.List access$400(co.aikar.commands.lib.expiringmap.ExpiringMap$Builder) -> c
    141:141:co.aikar.commands.lib.expiringmap.ExpirationPolicy access$500(co.aikar.commands.lib.expiringmap.ExpiringMap$Builder) -> d
    141:141:long access$600(co.aikar.commands.lib.expiringmap.ExpiringMap$Builder) -> e
    141:141:java.util.concurrent.TimeUnit access$700(co.aikar.commands.lib.expiringmap.ExpiringMap$Builder) -> f
    141:141:int access$800(co.aikar.commands.lib.expiringmap.ExpiringMap$Builder) -> g
    141:141:co.aikar.commands.lib.expiringmap.EntryLoader access$900(co.aikar.commands.lib.expiringmap.ExpiringMap$Builder) -> h
    141:141:co.aikar.commands.lib.expiringmap.ExpiringEntryLoader access$1000(co.aikar.commands.lib.expiringmap.ExpiringMap$Builder) -> i
    141:141:void <init>(byte) -> <init>
co.aikar.commands.lib.expiringmap.ExpiringMap$EntryLinkedHashMap -> co.aikar.commands.lib.expiringmap.ExpiringMap$EntryLinkedHashMap:
    338:338:void <init>() -> <init>
    344:349:boolean containsValue(java.lang.Object) -> containsValue
    354:354:co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry first() -> a
    359:362:void reorder(co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry) -> a
    366:366:java.util.Iterator valuesIterator() -> b
    338:338:void <init>(byte) -> <init>
co.aikar.commands.lib.expiringmap.ExpiringMap$EntryLinkedHashMap$AbstractHashIterator -> co.aikar.commands.lib.expiringmap.ExpiringMap$EntryLinkedHashMap$a:
    java.util.Iterator iterator -> a
    co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry next -> b
    co.aikar.commands.lib.expiringmap.ExpiringMap$EntryLinkedHashMap this$0 -> c
    369:370:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap$EntryLinkedHashMap) -> <init>
    374:374:boolean hasNext() -> hasNext
    378:379:co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry getNext() -> getNext
    383:384:void remove() -> remove
co.aikar.commands.lib.expiringmap.ExpiringMap$EntryLinkedHashMap$EntryIterator -> co.aikar.commands.lib.expiringmap.ExpiringMap$EntryLinkedHashMap$EntryIterator:
    399:399:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap$EntryLinkedHashMap) -> <init>
    401:401:java.util.Map$Entry next() -> next
    399:399:void remove() -> remove
    399:399:co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry getNext() -> getNext
    399:399:boolean hasNext() -> hasNext
    399:399:java.lang.Object next() -> next
co.aikar.commands.lib.expiringmap.ExpiringMap$EntryLinkedHashMap$KeyIterator -> co.aikar.commands.lib.expiringmap.ExpiringMap$EntryLinkedHashMap$b:
    387:387:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap$EntryLinkedHashMap) -> <init>
    389:389:java.lang.Object next() -> next
co.aikar.commands.lib.expiringmap.ExpiringMap$EntryLinkedHashMap$ValueIterator -> co.aikar.commands.lib.expiringmap.ExpiringMap$EntryLinkedHashMap$c:
    393:393:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap$EntryLinkedHashMap) -> <init>
    395:395:java.lang.Object next() -> next
co.aikar.commands.lib.expiringmap.ExpiringMap$EntryMap -> co.aikar.commands.lib.expiringmap.ExpiringMap$a:
    co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry first() -> a
    void reorder(co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry) -> a
    java.util.Iterator valuesIterator() -> b
co.aikar.commands.lib.expiringmap.ExpiringMap$EntryTreeHashMap -> co.aikar.commands.lib.expiringmap.ExpiringMap$b:
    java.util.SortedSet sortedSet -> a
    407:409:void <init>() -> <init>
    413:415:void clear() -> clear
    419:424:boolean containsValue(java.lang.Object) -> containsValue
    429:429:co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry first() -> a
    448:451:void reorder(co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry) -> a
    455:455:java.util.Iterator valuesIterator() -> b
    407:407:java.lang.Object remove(java.lang.Object) -> remove
    1440:1443:co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry remove(java.lang.Object):440:443 -> remove
    1440:1443:java.lang.Object remove(java.lang.Object):407 -> remove
    407:407:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    2434:2435:co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry put(java.lang.Object,co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry):434:435 -> put
    2434:2435:java.lang.Object put(java.lang.Object,java.lang.Object):407 -> put
    407:407:void <init>(byte) -> <init>
    407:407:java.lang.Object access$1301(co.aikar.commands.lib.expiringmap.ExpiringMap$EntryTreeHashMap,java.lang.Object) -> a
co.aikar.commands.lib.expiringmap.ExpiringMap$EntryTreeHashMap$AbstractHashIterator -> co.aikar.commands.lib.expiringmap.ExpiringMap$b$a:
    java.util.Iterator iterator -> a
    co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry next -> b
    co.aikar.commands.lib.expiringmap.ExpiringMap$EntryTreeHashMap this$0 -> c
    458:459:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap$EntryTreeHashMap) -> <init>
    463:463:boolean hasNext() -> hasNext
    467:468:co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry getNext() -> a
    472:474:void remove() -> remove
co.aikar.commands.lib.expiringmap.ExpiringMap$EntryTreeHashMap$EntryIterator -> co.aikar.commands.lib.expiringmap.ExpiringMap$b$b:
    495:495:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap$EntryTreeHashMap) -> <init>
    495:495:java.lang.Object next() -> next
    1497:1497:java.util.Map$Entry next():497:497 -> next
    1497:1497:java.lang.Object next():495 -> next
co.aikar.commands.lib.expiringmap.ExpiringMap$EntryTreeHashMap$ExpiringEntryIterator -> co.aikar.commands.lib.expiringmap.ExpiringMap$b$c:
    477:477:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap$EntryTreeHashMap) -> <init>
    477:477:java.lang.Object next() -> next
    1479:1479:co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry next():479:479 -> next
    1479:1479:java.lang.Object next():477 -> next
co.aikar.commands.lib.expiringmap.ExpiringMap$EntryTreeHashMap$KeyIterator -> co.aikar.commands.lib.expiringmap.ExpiringMap$b$d:
    483:483:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap$EntryTreeHashMap) -> <init>
    485:485:java.lang.Object next() -> next
co.aikar.commands.lib.expiringmap.ExpiringMap$EntryTreeHashMap$ValueIterator -> co.aikar.commands.lib.expiringmap.ExpiringMap$b$e:
    489:489:void <init>(co.aikar.commands.lib.expiringmap.ExpiringMap$EntryTreeHashMap) -> <init>
    491:491:java.lang.Object next() -> next
co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry -> co.aikar.commands.lib.expiringmap.ExpiringMap$c:
    java.util.concurrent.atomic.AtomicLong expirationNanos -> a
    java.util.concurrent.atomic.AtomicLong expectedExpiration -> b
    java.util.concurrent.atomic.AtomicReference expirationPolicy -> c
    java.lang.Object key -> d
    java.util.concurrent.Future entryFuture -> g
    java.lang.Object value -> e
    boolean scheduled -> f
    524:531:void <init>(java.lang.Object,java.lang.Object,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.atomic.AtomicLong) -> <init>
    542:546:int hashCode() -> hashCode
    551:565:boolean equals(java.lang.Object) -> equals
    570:570:java.lang.String toString() -> toString
    579:585:boolean cancel() -> a
    590:590:java.lang.Object getValue() -> b
    595:596:void resetExpiration() -> c
    600:602:void schedule(java.util.concurrent.Future) -> a
    606:607:void setValue(java.lang.Object) -> a
    503:503:int compareTo(java.lang.Object) -> compareTo
    1535:1537:int compareTo(co.aikar.commands.lib.expiringmap.ExpiringMap$ExpiringEntry):535:537 -> compareTo
    1535:1537:int compareTo(java.lang.Object):503 -> compareTo
co.aikar.commands.lib.expiringmap.ExpiringValue -> co.aikar.commands.lib.expiringmap.ExpiringValue:
    java.lang.Object value -> a
    co.aikar.commands.lib.expiringmap.ExpirationPolicy expirationPolicy -> b
    long duration -> c
    java.util.concurrent.TimeUnit timeUnit -> d
    25:26:void <init>(java.lang.Object) -> <init>
    37:38:void <init>(java.lang.Object,co.aikar.commands.lib.expiringmap.ExpirationPolicy) -> <init>
    51:55:void <init>(java.lang.Object,long,java.util.concurrent.TimeUnit) -> <init>
    68:72:void <init>(java.lang.Object,co.aikar.commands.lib.expiringmap.ExpirationPolicy,long,java.util.concurrent.TimeUnit) -> <init>
    74:79:void <init>(java.lang.Object,long,java.util.concurrent.TimeUnit,co.aikar.commands.lib.expiringmap.ExpirationPolicy) -> <init>
    82:82:java.lang.Object getValue() -> getValue
    86:86:co.aikar.commands.lib.expiringmap.ExpirationPolicy getExpirationPolicy() -> getExpirationPolicy
    90:90:long getDuration() -> getDuration
    94:94:java.util.concurrent.TimeUnit getTimeUnit() -> getTimeUnit
    99:99:int hashCode() -> hashCode
    104:112:boolean equals(java.lang.Object) -> equals
    119:119:java.lang.String toString() -> toString
co.aikar.commands.lib.expiringmap.internal.Assert -> co.aikar.commands.lib.expiringmap.internal.Assert:
    9:10:void <init>() -> <init>
    13:15:java.lang.Object notNull(java.lang.Object,java.lang.String) -> notNull
    19:21:void operation(boolean,java.lang.String) -> operation
    24:26:void state(boolean,java.lang.String,java.lang.Object[]) -> state
    29:31:void element(java.lang.Object,java.lang.Object) -> element
co.aikar.commands.lib.expiringmap.internal.NamedThreadFactory -> co.aikar.commands.lib.expiringmap.internal.NamedThreadFactory:
    java.util.concurrent.atomic.AtomicInteger threadNumber -> a
    java.lang.String nameFormat -> b
    10:19:void <init>(java.lang.String) -> <init>
    23:25:java.lang.Thread newThread(java.lang.Runnable) -> newThread
co.aikar.commands.lib.timings.EmptyTiming -> co.aikar.commands.lib.timings.a:
    6:7:void <init>() -> <init>
    11:11:co.aikar.commands.lib.timings.MCTiming startTiming() -> startTiming
    17:17:void stopTiming() -> stopTiming
co.aikar.commands.lib.timings.MCTiming -> co.aikar.commands.lib.timings.MCTiming:
    3:3:void <init>() -> <init>
    co.aikar.commands.lib.timings.MCTiming startTiming() -> startTiming
    void stopTiming() -> stopTiming
    9:10:void close() -> close
co.aikar.commands.lib.timings.Minecraft18Timing -> co.aikar.commands.lib.timings.b:
    java.lang.Object timing -> a
    java.lang.reflect.Method startTiming -> b
    java.lang.reflect.Method stopTiming -> c
    java.lang.reflect.Method of -> d
    35:37:void <init>(org.bukkit.plugin.Plugin,java.lang.String,co.aikar.commands.lib.timings.MCTiming) -> <init>
    42:46:co.aikar.commands.lib.timings.MCTiming startTiming() -> startTiming
    52:56:void stopTiming() -> stopTiming
    23:32:void <clinit>() -> <clinit>
co.aikar.commands.lib.timings.MinecraftTiming -> co.aikar.commands.lib.timings.c:
    co.aikar.timings.Timing timing -> a
    10:12:void <init>(org.bukkit.plugin.Plugin,java.lang.String,co.aikar.commands.lib.timings.MCTiming) -> <init>
    16:17:co.aikar.commands.lib.timings.MCTiming startTiming() -> startTiming
    22:23:void stopTiming() -> stopTiming
co.aikar.commands.lib.timings.SpigotTiming -> co.aikar.commands.lib.timings.d:
    org.spigotmc.CustomTimingsHandler timing -> a
    10:12:void <init>(java.lang.String) -> <init>
    16:19:co.aikar.commands.lib.timings.MCTiming startTiming() -> startTiming
    24:27:void stopTiming() -> stopTiming
co.aikar.commands.lib.timings.TimingManager -> co.aikar.commands.lib.timings.TimingManager:
    co.aikar.commands.lib.timings.TimingType timingProvider -> a
    java.lang.Object LOCK -> b
    org.bukkit.plugin.Plugin plugin -> c
    java.util.Map timingCache -> d
    15:19:void <init>(org.bukkit.plugin.Plugin) -> <init>
    23:23:co.aikar.commands.lib.timings.TimingManager of(org.bukkit.plugin.Plugin) -> of
    28:28:co.aikar.commands.lib.timings.MCTiming ofStart(java.lang.String) -> ofStart
    33:33:co.aikar.commands.lib.timings.MCTiming ofStart(java.lang.String,co.aikar.commands.lib.timings.MCTiming) -> ofStart
    38:38:co.aikar.commands.lib.timings.MCTiming of(java.lang.String) -> of
    43:79:co.aikar.commands.lib.timings.MCTiming of(java.lang.String,co.aikar.commands.lib.timings.MCTiming) -> of
    1035:1035:boolean co.aikar.commands.lib.timings.TimingType.useCache():35:35 -> of
    1035:1035:co.aikar.commands.lib.timings.MCTiming of(java.lang.String,co.aikar.commands.lib.timings.MCTiming):67 -> of
    12:12:void <clinit>() -> <clinit>
co.aikar.commands.lib.timings.TimingType -> co.aikar.commands.lib.timings.e:
    co.aikar.commands.lib.timings.TimingType SPIGOT -> a
    co.aikar.commands.lib.timings.TimingType MINECRAFT -> b
    co.aikar.commands.lib.timings.TimingType MINECRAFT_18 -> c
    co.aikar.commands.lib.timings.TimingType EMPTY -> d
    boolean useCache -> e
    co.aikar.commands.lib.timings.TimingType[] $VALUES -> f
    7:7:co.aikar.commands.lib.timings.TimingType[] values() -> values
    7:7:co.aikar.commands.lib.timings.TimingType valueOf(java.lang.String) -> valueOf
    39:40:void <init>(java.lang.String,int) -> <init>
    41:43:void <init>(java.lang.String,int,boolean) -> <init>
    46:46:co.aikar.commands.lib.timings.MCTiming newTiming(org.bukkit.plugin.Plugin,java.lang.String,co.aikar.commands.lib.timings.MCTiming) -> a
    7:7:void <init>(java.lang.String,int,boolean,byte) -> <init>
    7:7:void <init>(java.lang.String,int,byte) -> <init>
    7:30:void <clinit>() -> <clinit>
co.aikar.commands.lib.timings.TimingType$1 -> co.aikar.commands.lib.timings.e$1:
    8:8:void <init>(java.lang.String,int,boolean) -> <init>
    11:11:co.aikar.commands.lib.timings.MCTiming newTiming(org.bukkit.plugin.Plugin,java.lang.String,co.aikar.commands.lib.timings.MCTiming) -> a
co.aikar.commands.lib.timings.TimingType$2 -> co.aikar.commands.lib.timings.e$2:
    14:14:void <init>(java.lang.String,int) -> <init>
    17:17:co.aikar.commands.lib.timings.MCTiming newTiming(org.bukkit.plugin.Plugin,java.lang.String,co.aikar.commands.lib.timings.MCTiming) -> a
co.aikar.commands.lib.timings.TimingType$3 -> co.aikar.commands.lib.timings.e$3:
    20:20:void <init>(java.lang.String,int) -> <init>
    24:26:co.aikar.commands.lib.timings.MCTiming newTiming(org.bukkit.plugin.Plugin,java.lang.String,co.aikar.commands.lib.timings.MCTiming) -> a
co.aikar.commands.lib.util.DelegatingMap -> co.aikar.commands.lib.util.DelegatingMap:
    java.util.Map delegate(boolean) -> delegate
    41:41:int size() -> size
    46:46:boolean isEmpty() -> isEmpty
    51:51:boolean containsKey(java.lang.Object) -> containsKey
    56:56:boolean containsValue(java.lang.Object) -> containsValue
    61:61:java.lang.Object get(java.lang.Object) -> get
    67:67:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    72:72:java.lang.Object remove(java.lang.Object) -> remove
    77:78:void putAll(java.util.Map) -> putAll
    82:83:void clear() -> clear
    88:88:java.util.Set keySet() -> keySet
    94:94:java.util.Collection values() -> values
    100:100:java.util.Set entrySet() -> entrySet
    105:105:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    110:111:void forEach(java.util.function.BiConsumer) -> forEach
    115:116:void replaceAll(java.util.function.BiFunction) -> replaceAll
    121:121:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    126:126:boolean remove(java.lang.Object,java.lang.Object) -> remove
    131:131:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    137:137:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    142:142:java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function) -> computeIfAbsent
    147:147:java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction) -> computeIfPresent
    152:152:java.lang.Object compute(java.lang.Object,java.util.function.BiFunction) -> compute
    157:157:java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction) -> merge
co.aikar.commands.lib.util.Table -> co.aikar.commands.lib.util.Table:
    java.util.Map rowMap -> a
    java.util.function.Function colMapSupplier -> b
    45:46:void <init>() -> <init>
    49:50:void <init>(java.util.function.Supplier) -> <init>
    53:54:void <init>(java.util.Map,java.util.function.Supplier) -> <init>
    56:59:void <init>(java.util.Map,java.util.function.Function) -> <init>
    63:63:java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    1272:1277:java.lang.Object getIfExists(java.lang.Object,java.lang.Object):272:277 -> get
    1272:1277:java.lang.Object get(java.lang.Object,java.lang.Object):63 -> get
    67:76:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object,java.lang.Object) -> getOrDefault
    80:84:boolean containsKey(java.lang.Object,java.lang.Object) -> containsKey
    89:89:java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    93:97:void forEach(co.aikar.commands.lib.util.Table$TableConsumer) -> forEach
    100:106:void forEach(co.aikar.commands.lib.util.Table$TablePredicate) -> forEach
    109:115:void removeIf(co.aikar.commands.lib.util.Table$TablePredicate) -> removeIf
    118:118:java.util.stream.Stream stream() -> stream
    122:122:java.util.stream.Stream stream(boolean) -> stream
    126:126:java.util.Iterator iterator() -> iterator
    173:177:void replaceAll(co.aikar.commands.lib.util.Table$TableFunction) -> replaceAll
    180:184:java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    189:196:java.lang.Object replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    202:210:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    214:214:java.lang.Object computeIfAbsent(java.lang.Object,java.lang.Object,java.util.function.BiFunction) -> computeIfAbsent
    218:221:java.lang.Object computeIfPresent(java.lang.Object,java.lang.Object,co.aikar.commands.lib.util.Table$TableFunction) -> computeIfPresent
    225:228:java.lang.Object compute(java.lang.Object,java.lang.Object,co.aikar.commands.lib.util.Table$TableFunction) -> compute
    232:235:java.lang.Object merge(java.lang.Object,java.lang.Object,java.lang.Object,co.aikar.commands.lib.util.Table$TableFunction) -> merge
    239:240:java.util.Map row(java.lang.Object) -> row
    281:286:java.util.Map getColMapIfExists(java.lang.Object) -> a
    290:290:java.util.Map getColMapForWrite(java.lang.Object) -> b
    294:297:void removeIfEmpty(java.lang.Object,java.util.Map) -> a
    233:233:java.lang.Object lambda$merge$4(co.aikar.commands.lib.util.Table$TableFunction,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    226:226:java.lang.Object lambda$compute$3(co.aikar.commands.lib.util.Table$TableFunction,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> b
    219:219:java.lang.Object lambda$computeIfPresent$2(co.aikar.commands.lib.util.Table$TableFunction,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> c
    214:214:java.lang.Object lambda$computeIfAbsent$1(java.util.function.BiFunction,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    53:53:java.util.Map lambda$new$0(java.util.function.Supplier,java.lang.Object) -> a
    39:39:java.util.Map access$000(co.aikar.commands.lib.util.Table) -> a
    39:39:java.util.Map access$100(co.aikar.commands.lib.util.Table,java.lang.Object) -> a
    39:39:void access$200(co.aikar.commands.lib.util.Table,java.lang.Object,java.util.Map) -> a
co.aikar.commands.lib.util.Table$1 -> co.aikar.commands.lib.util.Table$1:
    java.util.Iterator rowIter -> a
    java.util.Iterator colIter -> b
    java.util.Map$Entry rowEntry -> c
    java.util.Map$Entry colEntry -> d
    co.aikar.commands.lib.util.Table$Entry next -> e
    co.aikar.commands.lib.util.Table this$0 -> f
    126:133:void <init>(co.aikar.commands.lib.util.Table) -> <init>
    136:150:co.aikar.commands.lib.util.Table$Entry getNext() -> a
    155:155:boolean hasNext() -> hasNext
    167:168:void remove() -> remove
    126:126:java.lang.Object next() -> next
    1160:1162:co.aikar.commands.lib.util.Table$Entry next():160:162 -> next
    1160:1162:java.lang.Object next():126 -> next
co.aikar.commands.lib.util.Table$2 -> co.aikar.commands.lib.util.Table$2:
    java.lang.Object val$row -> a
    java.util.Map val$EMPTY -> b
    co.aikar.commands.lib.util.Table this$0 -> c
    240:240:void <init>(co.aikar.commands.lib.util.Table,java.lang.Object,java.util.Map) -> <init>
    243:246:java.util.Map delegate(boolean) -> delegate
    251:254:java.lang.Object remove(java.lang.Object) -> remove
co.aikar.commands.lib.util.Table$Entry -> co.aikar.commands.lib.util.Table$Entry:
    java.lang.Object getRow() -> getRow
    java.lang.Object getCol() -> getCol
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
co.aikar.commands.lib.util.Table$Node -> co.aikar.commands.lib.util.Table$a:
    java.util.Map$Entry rowEntry -> a
    java.util.Map$Entry colEntry -> b
    311:314:void <init>(co.aikar.commands.lib.util.Table,java.util.Map$Entry,java.util.Map$Entry) -> <init>
    318:318:java.lang.Object getRow() -> getRow
    323:323:java.lang.Object getCol() -> getCol
    328:328:java.lang.Object getValue() -> getValue
    333:333:java.lang.Object setValue(java.lang.Object) -> setValue
co.aikar.commands.lib.util.Table$TableConsumer -> co.aikar.commands.lib.util.Table$TableConsumer:
    void accept(java.lang.Object,java.lang.Object,java.lang.Object) -> accept
co.aikar.commands.lib.util.Table$TableFunction -> co.aikar.commands.lib.util.Table$TableFunction:
    java.lang.Object compose(java.lang.Object,java.lang.Object,java.lang.Object) -> compose
co.aikar.commands.lib.util.Table$TablePredicate -> co.aikar.commands.lib.util.Table$TablePredicate:
    boolean test(java.lang.Object,java.lang.Object,java.lang.Object) -> test
co.aikar.commands.processors.ConditionsProcessor -> co.aikar.commands.processors.ConditionsProcessor:
    32:32:void <init>() -> <init>
    37:37:void onPreComand(co.aikar.commands.CommandOperationContext) -> onPreComand
    42:42:void onPostContextResolution(co.aikar.commands.CommandExecutionContext,java.lang.Object) -> onPostContextResolution
co.aikar.locales.LanguageTable -> co.aikar.a.a:
    java.util.Locale locale -> a
    java.util.Map messages -> b
    org.bson.conversions.Bson key -> c
    boolean unique -> d
    java.lang.String name -> e
    11:15:void <init>(java.util.Locale) -> <init>
    18:18:java.lang.String addMessage(co.aikar.locales.MessageKey,java.lang.String) -> a
    22:22:java.lang.String getMessage(co.aikar.locales.MessageKey) -> a
    26:27:void addMessages(java.util.Map) -> a
    39:41:boolean addMessageBundle(java.lang.ClassLoader,java.lang.String) -> a
    1046:1050:boolean addResourceBundle(java.util.ResourceBundle):46:50 -> a
    1046:1050:boolean addMessageBundle(java.lang.ClassLoader,java.lang.String):39 -> a
    1053:1053:org.bson.conversions.Bson com.mongodb.client.model.ClusteredIndexOptions.getKey():53:53 -> a
    1061:1061:boolean com.mongodb.client.model.ClusteredIndexOptions.isUnique():61:61 -> b
    1071:1071:java.lang.String com.mongodb.client.model.ClusteredIndexOptions.getName():71:71 -> c
    1086:1086:java.lang.String com.mongodb.client.model.ClusteredIndexOptions.toString():86:86 -> toString
co.aikar.locales.LocaleManager -> co.aikar.a.b:
    java.util.function.Function localeMapper -> b
    java.util.Locale defaultLocale -> a
    java.util.Map tables -> c
    17:22:void <init>(java.util.function.Function,java.util.Locale) -> <init>
    76:77:void addMessages(java.util.Locale,java.util.Map) -> a
    84:95:java.lang.String getMessage(java.lang.Object,co.aikar.locales.MessageKey) -> a
    99:99:co.aikar.locales.LanguageTable getTable(java.util.Locale) -> a
co.aikar.locales.MessageKey -> co.aikar.a.c:
    java.util.concurrent.atomic.AtomicInteger counter -> b
    java.util.Map keyMap -> c
    int id -> d
    java.lang.String key -> a
    10:15:void <init>(java.lang.String) -> <init>
    18:18:co.aikar.locales.MessageKey of(java.lang.String) -> a
    22:22:int hashCode() -> hashCode
    27:27:boolean equals(java.lang.Object) -> equals
    36:36:co.aikar.locales.MessageKey getMessageKey() -> getMessageKey
    8:9:void <clinit>() -> <clinit>
co.aikar.locales.MessageKeyProvider -> co.aikar.a.d:
    co.aikar.locales.MessageKey getMessageKey() -> getMessageKey
co.aikar.locales.UTF8Control -> co.aikar.a.e:
    14:14:void <init>() -> <init>
    18:42:java.util.ResourceBundle newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean) -> newBundle
com.github.benmanes.caffeine.cache.Async -> com.github.benmanes.caffeine.cache.a:
    43:45:boolean isReady(java.util.concurrent.CompletableFuture) -> a
    51:51:java.lang.Object getIfReady(java.util.concurrent.CompletableFuture) -> b
    57:59:java.lang.Object getWhenSuccessful(java.util.concurrent.CompletableFuture) -> c
com.github.benmanes.caffeine.cache.Async$AsyncRemovalListener -> com.github.benmanes.caffeine.cache.a$a:
    com.github.benmanes.caffeine.cache.RemovalListener delegate -> a
    java.util.concurrent.Executor executor -> b
    74:77:void <init>(com.github.benmanes.caffeine.cache.RemovalListener,java.util.concurrent.Executor) -> <init>
    67:67:void onRemoval(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.RemovalCause) -> onRemoval
    1083:1090:void onRemoval(java.lang.Object,java.util.concurrent.CompletableFuture,com.github.benmanes.caffeine.cache.RemovalCause):83:90 -> onRemoval
    1083:1090:void onRemoval(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.RemovalCause):67 -> onRemoval
    85:88:void lambda$onRemoval$0(java.lang.Object,com.github.benmanes.caffeine.cache.RemovalCause,java.lang.Object) -> a
com.github.benmanes.caffeine.cache.AsyncCache -> com.github.benmanes.caffeine.cache.AsyncCache:
    java.util.concurrent.CompletableFuture getIfPresent(java.lang.Object) -> getIfPresent
    java.util.concurrent.CompletableFuture get(java.lang.Object,java.util.function.Function) -> get
    java.util.concurrent.CompletableFuture get(java.lang.Object,java.util.function.BiFunction) -> get
    java.util.concurrent.CompletableFuture getAll(java.lang.Iterable,java.util.function.Function) -> getAll
    java.util.concurrent.CompletableFuture getAll(java.lang.Iterable,java.util.function.BiFunction) -> getAll
    void put(java.lang.Object,java.util.concurrent.CompletableFuture) -> put
    java.util.concurrent.ConcurrentMap asMap() -> asMap
    com.github.benmanes.caffeine.cache.Cache synchronous() -> synchronous
com.github.benmanes.caffeine.cache.AsyncCacheLoader -> com.github.benmanes.caffeine.cache.AsyncCacheLoader:
    java.util.concurrent.CompletableFuture asyncLoad(java.lang.Object,java.util.concurrent.Executor) -> asyncLoad
    88:88:java.util.concurrent.CompletableFuture asyncLoadAll(java.util.Set,java.util.concurrent.Executor) -> asyncLoadAll
    114:114:java.util.concurrent.CompletableFuture asyncReload(java.lang.Object,java.lang.Object,java.util.concurrent.Executor) -> asyncReload
    137:137:com.github.benmanes.caffeine.cache.AsyncCacheLoader bulk(java.util.function.Function) -> bulk
    160:161:com.github.benmanes.caffeine.cache.AsyncCacheLoader bulk(java.util.function.BiFunction) -> bulk
com.github.benmanes.caffeine.cache.AsyncCacheLoader$1 -> com.github.benmanes.caffeine.cache.AsyncCacheLoader$1:
    java.util.function.BiFunction val$mappingFunction -> a
    161:161:void <init>(java.util.function.BiFunction) -> <init>
    163:164:java.util.concurrent.CompletableFuture asyncLoad(java.lang.Object,java.util.concurrent.Executor) -> asyncLoad
    168:172:java.util.concurrent.CompletableFuture asyncLoadAll(java.util.Set,java.util.concurrent.Executor) -> asyncLoadAll
    164:164:java.lang.Object lambda$asyncLoad$0(java.lang.Object,java.util.Map) -> a
com.github.benmanes.caffeine.cache.AsyncLoadingCache -> com.github.benmanes.caffeine.cache.AsyncLoadingCache:
    java.util.concurrent.CompletableFuture get(java.lang.Object) -> get
    java.util.concurrent.CompletableFuture getAll(java.lang.Iterable) -> getAll
    com.github.benmanes.caffeine.cache.LoadingCache synchronous() -> synchronous
    32:32:com.github.benmanes.caffeine.cache.Cache synchronous() -> synchronous
com.github.benmanes.caffeine.cache.BLCHeader -> com.github.benmanes.caffeine.cache.b:
com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef -> com.github.benmanes.caffeine.cache.b$a:
    java.lang.invoke.VarHandle DRAIN_STATUS -> a
    int drainStatus -> b
    4606:4619:void <init>() -> <init>
    4627:4636:boolean shouldDrainBuffers(boolean) -> a
    5641:5641:int drainStatusOpaque():4641:4641 -> a
    5641:5641:boolean shouldDrainBuffers(boolean):4627 -> a
    4649:4650:void setDrainStatusOpaque(int) -> a
    4653:4654:void setDrainStatusRelease(int) -> b
    4657:4657:boolean casDrainStatus(int,int) -> a
    4662:4667:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.BLCHeader$PadDrainStatus -> com.github.benmanes.caffeine.cache.b$b:
    4587:4587:void <init>() -> <init>
com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue -> com.github.benmanes.caffeine.cache.c:
    java.lang.invoke.VarHandle REF_ARRAY -> f
    java.lang.invoke.VarHandle P_INDEX -> g
    java.lang.invoke.VarHandle C_INDEX -> h
    java.lang.invoke.VarHandle P_LIMIT -> i
    java.lang.Object JUMP -> j
    232:232:java.util.Iterator iterator() -> iterator
    237:237:java.lang.String toString() -> toString
    243:288:boolean offer(java.lang.Object) -> offer
    1463:1463:long lvProducerLimit():463:463 -> offer
    1463:1463:boolean offer(java.lang.Object):252 -> offer
    1564:1564:long lvProducerIndex(com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue):564:564 -> offer
    1564:1564:boolean offer(java.lang.Object):253 -> offer
    2296:2314:int offerSlowPath(long,long,long):296:314 -> offer
    2296:2314:boolean offer(java.lang.Object):267 -> offer
    2567:2567:long lvConsumerIndex(com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue):567:567 -> offer
    2567:2567:int offerSlowPath(long,long,long):296 -> offer
    2567:2567:boolean offer(java.lang.Object):267 -> offer
    2579:2579:boolean casProducerLimit(com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue,long,long):579:579 -> offer
    2579:2579:int offerSlowPath(long,long,long):300 -> offer
    2579:2579:boolean offer(java.lang.Object):267 -> offer
    3515:3546:void resize(long,java.lang.Object[],long,java.lang.Object):515:546 -> offer
    3515:3546:boolean offer(java.lang.Object):276 -> offer
    3550:3550:java.lang.Object[] allocate(int):550:550 -> offer
    3550:3550:void resize(long,java.lang.Object[],long,java.lang.Object):516 -> offer
    3550:3550:boolean offer(java.lang.Object):276 -> offer
    3626:3626:long modifiedCalcElementOffset(long,long):626:626 -> offer
    3626:3626:void resize(long,java.lang.Object[],long,java.lang.Object):522 -> offer
    3626:3626:boolean offer(java.lang.Object):276 -> offer
    4626:4626:long modifiedCalcElementOffset(long,long):626:626 -> offer
    4626:4626:void resize(long,java.lang.Object[],long,java.lang.Object):523 -> offer
    4626:4626:boolean offer(java.lang.Object):276 -> offer
    5567:5567:long lvConsumerIndex(com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue):567:567 -> offer
    5567:5567:void resize(long,java.lang.Object[],long,java.lang.Object):529 -> offer
    5567:5567:boolean offer(java.lang.Object):276 -> offer
    5582:5583:void soProducerLimit(com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue,long):582:583 -> offer
    5582:5583:void resize(long,java.lang.Object[],long,java.lang.Object):537 -> offer
    5582:5583:boolean offer(java.lang.Object):276 -> offer
    6570:6571:void soProducerIndex(com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue,long):570:571 -> offer
    6570:6571:void resize(long,java.lang.Object[],long,java.lang.Object):540 -> offer
    6570:6571:boolean offer(java.lang.Object):276 -> offer
    6626:6626:long modifiedCalcElementOffset(long,long):626:626 -> offer
    6626:6626:boolean offer(java.lang.Object):286 -> offer
    330:354:java.lang.Object poll() -> poll
    7626:7626:long modifiedCalcElementOffset(long,long):626:626 -> poll
    7626:7626:java.lang.Object poll():334 -> poll
    8564:8564:long lvProducerIndex(com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue):564:564 -> poll
    8564:8564:java.lang.Object poll():337 -> poll
    9398:9405:java.lang.Object newBufferPoll(java.lang.Object[],long):398:405 -> poll
    9398:9405:java.lang.Object poll():350 -> poll
    365:382:java.lang.Object peek() -> peek
    9626:9626:long modifiedCalcElementOffset(long,long):626:626 -> peek
    9626:9626:java.lang.Object peek():369 -> peek
    10564:10564:long lvProducerIndex(com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue):564:564 -> peek
    10564:10564:java.lang.Object peek():371 -> peek
    11409:11414:java.lang.Object newBufferPeek(java.lang.Object[],long):409:414 -> peek
    11409:11414:java.lang.Object peek():380 -> peek
    433:449:int size() -> size
    11567:11567:long lvConsumerIndex(com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue):567:567 -> size
    11567:11567:int size():433 -> size
    12564:12564:long lvProducerIndex(com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue):564:564 -> size
    12564:12564:int size():437 -> size
    12567:12567:long lvConsumerIndex(com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue):567:567 -> size
    12567:12567:int size():438 -> size
    459:459:boolean isEmpty() -> isEmpty
    13567:13567:long lvConsumerIndex(com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue):567:567 -> isEmpty
    13567:13567:boolean isEmpty():459 -> isEmpty
    14564:14564:long lvProducerIndex(com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue):564:564 -> isEmpty
    14564:14564:boolean isEmpty():459 -> isEmpty
    573:573:boolean casProducerIndex(com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue,long,long) -> a
    576:577:void soConsumerIndex(com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueue,long) -> a
    606:607:void soElement(java.lang.Object[],long,java.lang.Object) -> a
    617:617:java.lang.Object lvElement(java.lang.Object[],long) -> a
    207:648:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields -> com.github.benmanes.caffeine.cache.d:
    long producerLimit -> a
    long producerMask -> b
    java.lang.Object[] producerBuffer -> c
    191:191:void <init>() -> <init>
com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields -> com.github.benmanes.caffeine.cache.e:
    long consumerMask -> d
    java.lang.Object[] consumerBuffer -> e
    165:165:void <init>() -> <init>
com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueuePad1 -> com.github.benmanes.caffeine.cache.f:
    123:123:void <init>() -> <init>
com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueuePad2 -> com.github.benmanes.caffeine.cache.g:
    146:146:void <init>() -> <init>
com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueuePad3 -> com.github.benmanes.caffeine.cache.h:
    172:172:void <init>() -> <init>
com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields -> com.github.benmanes.caffeine.cache.i:
    141:141:void <init>() -> <init>
com.github.benmanes.caffeine.cache.BoundedLocalCache -> com.github.benmanes.caffeine.cache.j:
    java.lang.System$Logger logger -> b
    int NCPU -> j
    int WRITE_BUFFER_MAX -> k
    long EXPIRE_WRITE_TOLERANCE -> l
    long WARN_AFTER_LOCK_WAIT_NANOS -> m
    java.lang.invoke.VarHandle REFRESHES -> n
    com.github.benmanes.caffeine.cache.RemovalListener evictionListener -> o
    com.github.benmanes.caffeine.cache.AsyncCacheLoader cacheLoader -> c
    com.github.benmanes.caffeine.cache.MpscGrowableArrayQueue writeBuffer -> p
    java.util.concurrent.ConcurrentHashMap data -> d
    com.github.benmanes.caffeine.cache.BoundedLocalCache$PerformCleanupTask drainBuffersTask -> q
    com.github.benmanes.caffeine.cache.Buffer readBuffer -> r
    com.github.benmanes.caffeine.cache.NodeFactory nodeFactory -> e
    java.util.concurrent.locks.ReentrantLock evictionLock -> f
    com.github.benmanes.caffeine.cache.Weigher weigher -> s
    java.util.concurrent.Executor executor -> t
    boolean isWeighted -> g
    boolean isAsync -> h
    java.util.concurrent.ConcurrentMap refreshes -> i
    293:296:void requireIsAlive(java.lang.Object,com.github.benmanes.caffeine.cache.Node) -> a
    308:312:java.lang.String brokenEqualityMessage(java.lang.Object,com.github.benmanes.caffeine.cache.Node) -> b
    324:324:boolean isComputingAsync(com.github.benmanes.caffeine.cache.Node) -> a
    367:371:void discardRefresh(java.lang.Object) -> e
    436:444:void notifyEviction(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.RemovalCause) -> b
    530:530:com.github.benmanes.caffeine.cache.Ticker expirationTicker() -> a
    900:914:void expireEntries() -> m
    5530:5530:com.github.benmanes.caffeine.cache.Ticker expirationTicker():530:530 -> m
    5530:5530:void expireEntries():900 -> m
    5919:5928:void expireAfterAccessEntries(long):919:928 -> m
    5919:5928:void expireEntries():901 -> m
    5946:5957:void expireAfterWriteEntries(long):946:957 -> m
    5946:5957:void expireEntries():902 -> m
    5962:5965:void expireVariableEntries(long):962:965 -> m
    5962:5965:void expireEntries():903 -> m
    6472:6472:com.github.benmanes.caffeine.cache.Pacer pacer():472:472 -> m
    6472:6472:void expireEntries():905 -> m
    6970:6996:long getExpirationDelay(long):970:996 -> m
    6970:6996:void expireEntries():907 -> m
    1002:1007:boolean hasExpired(com.github.benmanes.caffeine.cache.Node,long) -> a
    1280:1288:java.lang.Object afterRead(com.github.benmanes.caffeine.cache.Node,long,boolean) -> a
    7394:7394:com.github.benmanes.caffeine.cache.stats.StatsCounter statsCounter():394:394 -> a
    7394:7394:java.lang.Object afterRead(com.github.benmanes.caffeine.cache.Node,long,boolean):1281 -> a
    8293:8293:boolean skipReadBuffer():1293:1293 -> a
    8293:8293:java.lang.Object afterRead(com.github.benmanes.caffeine.cache.Node,long,boolean):1284 -> a
    8305:8413:java.lang.Object refreshIfNeeded(com.github.benmanes.caffeine.cache.Node,long):1305:1413 -> a
    8305:8413:java.lang.Object afterRead(com.github.benmanes.caffeine.cache.Node,long,boolean):1288 -> a
    1527:1554:void afterWrite(java.lang.Runnable) -> b
    8558:8582:void lock():1558:1582 -> b
    8558:8582:void afterWrite(java.lang.Runnable):1545 -> b
    1621:1639:void scheduleDrainBuffers() -> b
    8641:8641:int com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef.drainStatusOpaque():4641:4641 -> b
    8641:8641:void scheduleDrainBuffers():1621 -> b
    9641:9641:int com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef.drainStatusOpaque():4641:4641 -> b
    9641:9641:void scheduleDrainBuffers():1626 -> b
    1671:1695:void rescheduleCleanUpIfIncomplete() -> c
    10641:10641:int com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef.drainStatusOpaque():4641:4641 -> c
    10641:10641:void rescheduleCleanUpIfIncomplete():1671 -> c
    11472:11472:com.github.benmanes.caffeine.cache.Pacer pacer():472:472 -> c
    11472:11472:void rescheduleCleanUpIfIncomplete():1685 -> c
    11641:11641:int com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef.drainStatusOpaque():4641:4641 -> c
    11641:11641:void rescheduleCleanUpIfIncomplete():1688 -> c
    12530:12530:com.github.benmanes.caffeine.cache.Ticker expirationTicker():530:530 -> c
    12530:12530:void rescheduleCleanUpIfIncomplete():1689 -> c
    1706:1729:void maintenance(java.lang.Runnable) -> a
    12766:12769:void drainReadBuffer():1766:1769 -> a
    12766:12769:void maintenance(java.lang.Runnable):1709 -> a
    13293:13293:boolean skipReadBuffer():1293:1293 -> a
    13293:13293:void drainReadBuffer():1766 -> a
    13293:13293:void maintenance(java.lang.Runnable):1709 -> a
    13734:13744:void drainKeyReferences():1734:1744 -> a
    13734:13744:void maintenance(java.lang.Runnable):1716 -> a
    13749:13761:void drainValueReferences():1749:1761 -> a
    13749:13761:void maintenance(java.lang.Runnable):1717 -> a
    14704:14709:void evictEntries():704:709 -> a
    14704:14709:void maintenance(java.lang.Runnable):1720 -> a
    15117:15131:void climb():1117:1131 -> a
    15117:15131:void maintenance(java.lang.Runnable):1722 -> a
    15641:15641:int com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef.drainStatusOpaque():4641:4641 -> a
    15641:15641:void maintenance(java.lang.Runnable):1724 -> a
    16641:16641:int com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef.drainStatusOpaque():4641:4641 -> a
    16641:16641:void maintenance(java.lang.Runnable):1724 -> a
    1828:1836:void drainWriteBuffer() -> n
    2036:2036:int size() -> size
    2210:2215:java.lang.Object getIfPresentQuietly(java.lang.Object) -> a
    17530:17530:com.github.benmanes.caffeine.cache.Ticker expirationTicker():530:530 -> a
    17530:17530:java.lang.Object getIfPresentQuietly(java.lang.Object):2212 -> a
    2227:2235:java.lang.Object getKey(java.lang.Object) -> b
    17641:17641:int com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef.drainStatusOpaque():4641:4641 -> b
    17641:17641:java.lang.Object getKey(java.lang.Object):2229 -> b
    2280:2280:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    18525:18525:com.github.benmanes.caffeine.cache.Expiry expiry():525:525 -> putIfAbsent
    18525:18525:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):2280 -> putIfAbsent
    2294:2425:java.lang.Object put(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,boolean) -> a
    18530:18530:com.github.benmanes.caffeine.cache.Ticker expirationTicker():530:530 -> a
    18530:18530:java.lang.Object put(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,boolean):2298 -> a
    19427:19431:long expireAfterCreate(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,long):1427:1431 -> a
    19427:19431:java.lang.Object put(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,boolean):2307 -> a
    19525:19525:com.github.benmanes.caffeine.cache.Expiry expiry():525:525 -> a
    19525:19525:java.lang.Object put(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,boolean):2318 -> a
    20485:20501:void tryExpireAfterRead(com.github.benmanes.caffeine.cache.Node,java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,long):1485:1501 -> a
    20485:20501:java.lang.Object put(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,boolean):2318 -> a
    20525:20525:com.github.benmanes.caffeine.cache.Expiry expiry():525:525 -> a
    20525:20525:java.lang.Object put(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,boolean):2330 -> a
    21485:21501:void tryExpireAfterRead(com.github.benmanes.caffeine.cache.Node,java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,long):1485:1501 -> a
    21485:21501:java.lang.Object put(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,boolean):2330 -> a
    22427:22431:long expireAfterCreate(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,long):1427:1431 -> a
    22427:22431:java.lang.Object put(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,boolean):2375 -> a
    23427:23431:long expireAfterCreate(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,long):1427:1431 -> a
    23427:23431:java.lang.Object put(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,boolean):2379 -> a
    23466:23471:long expireAfterRead(com.github.benmanes.caffeine.cache.Node,java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,long):1466:1471 -> a
    23466:23471:java.lang.Object put(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,boolean):2383 -> a
    24446:24451:long expireAfterUpdate(com.github.benmanes.caffeine.cache.Node,java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,long):1446:1451 -> a
    24446:24451:java.lang.Object put(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,boolean):2385 -> a
    25415:25431:void notifyRemoval(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.RemovalCause):415:431 -> a
    25415:25431:java.lang.Object put(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,boolean):2406 -> a
    26415:26431:void notifyRemoval(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.RemovalCause):415:431 -> a
    26415:26431:java.lang.Object put(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Expiry,boolean):2408 -> a
    3008:3034:boolean equals(java.lang.Object) -> equals
    26530:26530:com.github.benmanes.caffeine.cache.Ticker expirationTicker():530:530 -> equals
    26530:26530:boolean equals(java.lang.Object):3019 -> equals
    3040:3052:int hashCode() -> hashCode
    27530:27530:com.github.benmanes.caffeine.cache.Ticker expirationTicker():530:530 -> hashCode
    27530:27530:int hashCode():3041 -> hashCode
    3057:3074:java.lang.String toString() -> toString
    28530:28530:com.github.benmanes.caffeine.cache.Ticker expirationTicker():530:530 -> toString
    28530:28530:java.lang.String toString():3058 -> toString
    3182:3206:com.github.benmanes.caffeine.cache.Policy$CacheEntry nodeToCacheEntry(com.github.benmanes.caffeine.cache.Node,java.util.function.Function) -> a
    29530:29530:com.github.benmanes.caffeine.cache.Ticker expirationTicker():530:530 -> a
    29530:29530:com.github.benmanes.caffeine.cache.Policy$CacheEntry nodeToCacheEntry(com.github.benmanes.caffeine.cache.Node,java.util.function.Function):3186 -> a
    2356:2357:com.github.benmanes.caffeine.cache.Node lambda$put$8(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.Node) -> a
    199:289:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.BoundedLocalCache$AddTask -> com.github.benmanes.caffeine.cache.j$a:
    com.github.benmanes.caffeine.cache.Node node -> a
    int weight -> b
    com.github.benmanes.caffeine.cache.BoundedLocalCache this$0 -> c
    1870:1873:void <init>(com.github.benmanes.caffeine.cache.BoundedLocalCache,com.github.benmanes.caffeine.cache.Node,int) -> <init>
    1879:1939:void run() -> run
com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalAsyncCache -> com.github.benmanes.caffeine.cache.j$b:
    com.github.benmanes.caffeine.cache.BoundedLocalCache cache -> b
    boolean isWeighted -> c
    java.util.concurrent.ConcurrentMap mapView -> d
    com.github.benmanes.caffeine.cache.LocalAsyncCache$CacheView cacheView -> e
    com.github.benmanes.caffeine.cache.Policy policy -> f
    4486:4490:void <init>(com.github.benmanes.caffeine.cache.Caffeine) -> <init>
    4499:4499:java.util.concurrent.ConcurrentMap asMap() -> asMap
    4504:4504:com.github.benmanes.caffeine.cache.Cache synchronous() -> synchronous
    4509:4517:com.github.benmanes.caffeine.cache.Policy policy() -> a
    4475:4475:com.github.benmanes.caffeine.cache.LocalCache cache() -> b
    5494:5494:com.github.benmanes.caffeine.cache.BoundedLocalCache cache():4494:4494 -> b
    5494:5494:com.github.benmanes.caffeine.cache.LocalCache cache():4475 -> b
com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalAsyncLoadingCache -> com.github.benmanes.caffeine.cache.j$c:
    com.github.benmanes.caffeine.cache.BoundedLocalCache cache -> e
    boolean isWeighted -> f
    java.util.concurrent.ConcurrentMap mapView -> g
    com.github.benmanes.caffeine.cache.Policy policy -> h
    4544:4548:void <init>(com.github.benmanes.caffeine.cache.Caffeine,com.github.benmanes.caffeine.cache.AsyncCacheLoader) -> <init>
    4557:4557:java.util.concurrent.ConcurrentMap asMap() -> asMap
    4562:4570:com.github.benmanes.caffeine.cache.Policy policy() -> a
    4532:4532:com.github.benmanes.caffeine.cache.LocalCache cache() -> b
    5552:5552:com.github.benmanes.caffeine.cache.BoundedLocalCache cache():4552:4552 -> b
    5552:5552:com.github.benmanes.caffeine.cache.LocalCache cache():4532 -> b
com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalLoadingCache -> com.github.benmanes.caffeine.cache.j$d:
    java.util.function.Function mappingFunction -> b
    java.util.function.Function bulkMappingFunction -> c
    4441:4445:void <init>(com.github.benmanes.caffeine.cache.Caffeine,com.github.benmanes.caffeine.cache.CacheLoader) -> <init>
    4450:4450:com.github.benmanes.caffeine.cache.AsyncCacheLoader cacheLoader() -> a
    4455:4455:java.util.function.Function mappingFunction() -> b
    4460:4460:java.util.function.Function bulkMappingFunction() -> c
com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedLocalManualCache -> com.github.benmanes.caffeine.cache.j$e:
    com.github.benmanes.caffeine.cache.BoundedLocalCache cache -> a
    com.github.benmanes.caffeine.cache.Policy policy -> b
    3943:3944:void <init>(com.github.benmanes.caffeine.cache.Caffeine) -> <init>
    3946:3948:void <init>(com.github.benmanes.caffeine.cache.Caffeine,com.github.benmanes.caffeine.cache.CacheLoader) -> <init>
    3957:3958:com.github.benmanes.caffeine.cache.Policy policy() -> policy
    3935:3935:com.github.benmanes.caffeine.cache.LocalCache cache() -> d
    4952:4952:com.github.benmanes.caffeine.cache.BoundedLocalCache cache():3952:3952 -> d
    4952:4952:com.github.benmanes.caffeine.cache.LocalCache cache():3935 -> d
com.github.benmanes.caffeine.cache.BoundedLocalCache$BoundedPolicy -> com.github.benmanes.caffeine.cache.j$f:
    com.github.benmanes.caffeine.cache.BoundedLocalCache cache -> a
    java.util.function.Function transformer -> b
    boolean isWeighted -> c
    3982:3986:void <init>(com.github.benmanes.caffeine.cache.BoundedLocalCache,java.util.function.Function,boolean) -> <init>
    3989:3989:boolean isRecordingStats() -> isRecordingStats
    4389:4389:boolean com.github.benmanes.caffeine.cache.BoundedLocalCache.isRecordingStats():389:389 -> isRecordingStats
    4389:4389:boolean isRecordingStats():3989 -> isRecordingStats
    3992:3992:java.lang.Object getIfPresentQuietly(java.lang.Object) -> getIfPresentQuietly
    3995:3996:com.github.benmanes.caffeine.cache.Policy$CacheEntry getEntryIfPresentQuietly(java.lang.Object) -> getEntryIfPresentQuietly
    3999:4017:java.util.Map refreshes() -> refreshes
    4020:4022:java.util.Optional eviction() -> eviction
    4025:4030:java.util.Optional expireAfterAccess() -> expireAfterAccess
    4033:4038:java.util.Optional expireAfterWrite() -> expireAfterWrite
    4041:4046:java.util.Optional expireVariably() -> expireVariably
    4049:4054:java.util.Optional refreshAfterWrite() -> refreshAfterWrite
com.github.benmanes.caffeine.cache.BoundedLocalCache$PerformCleanupTask -> com.github.benmanes.caffeine.cache.j$g:
    3867:3873:boolean exec() -> exec
    3878:3882:void run() -> run
    3894:3894:void completeExceptionally(java.lang.Throwable) -> completeExceptionally
    3895:3895:boolean cancel(boolean) -> cancel
    3855:3855:void setRawResult(java.lang.Object) -> setRawResult
    3855:3855:java.lang.Object getRawResult() -> getRawResult
    4891:4891:java.lang.Void getRawResult():3891:3891 -> getRawResult
    4891:4891:java.lang.Object getRawResult():3855 -> getRawResult
    3855:3855:void complete(java.lang.Object) -> complete
com.github.benmanes.caffeine.cache.BoundedLocalCache$UpdateTask -> com.github.benmanes.caffeine.cache.j$h:
    int weightDifference -> a
    com.github.benmanes.caffeine.cache.Node node -> b
    com.github.benmanes.caffeine.cache.BoundedLocalCache this$0 -> c
    1977:1980:void <init>(com.github.benmanes.caffeine.cache.BoundedLocalCache,com.github.benmanes.caffeine.cache.Node,int) -> <init>
    1985:2024:void run() -> run
com.github.benmanes.caffeine.cache.BoundedWeigher -> com.github.benmanes.caffeine.cache.k:
    com.github.benmanes.caffeine.cache.Weigher delegate -> a
    87:89:void <init>(com.github.benmanes.caffeine.cache.Weigher) -> <init>
    93:95:int weigh(java.lang.Object,java.lang.Object) -> weigh
com.github.benmanes.caffeine.cache.Buffer -> com.github.benmanes.caffeine.cache.l:
    int offer$5d527804() -> a
com.github.benmanes.caffeine.cache.Cache -> com.github.benmanes.caffeine.cache.Cache:
    java.lang.Object getIfPresent(java.lang.Object) -> getIfPresent
    java.lang.Object get(java.lang.Object,java.util.function.Function) -> get
    java.util.Map getAllPresent(java.lang.Iterable) -> getAllPresent
    java.util.Map getAll(java.lang.Iterable,java.util.function.Function) -> getAll
    void put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void invalidate(java.lang.Object) -> invalidate
    void invalidateAll(java.lang.Iterable) -> invalidateAll
    void invalidateAll() -> invalidateAll
    long estimatedSize() -> estimatedSize
    com.github.benmanes.caffeine.cache.stats.CacheStats stats() -> stats
    java.util.concurrent.ConcurrentMap asMap() -> asMap
    void cleanUp() -> cleanUp
    com.github.benmanes.caffeine.cache.Policy policy() -> policy
com.github.benmanes.caffeine.cache.CacheLoader -> com.github.benmanes.caffeine.cache.CacheLoader:
    java.lang.Object load(java.lang.Object) -> load
    87:87:java.util.Map loadAll(java.util.Set) -> loadAll
    99:101:java.util.concurrent.CompletableFuture asyncLoad(java.lang.Object,java.util.concurrent.Executor) -> asyncLoad
    135:137:java.util.concurrent.CompletableFuture asyncLoadAll(java.util.Set,java.util.concurrent.Executor) -> asyncLoadAll
    169:169:java.lang.Object reload(java.lang.Object,java.lang.Object) -> reload
    192:194:java.util.concurrent.CompletableFuture asyncReload(java.lang.Object,java.lang.Object,java.util.concurrent.Executor) -> asyncReload
    225:226:com.github.benmanes.caffeine.cache.CacheLoader bulk(java.util.function.Function) -> bulk
    196:200:java.lang.Object lambda$asyncReload$2(java.lang.Object,java.lang.Object) -> a
    139:143:java.util.Map lambda$asyncLoadAll$1(java.util.Set) -> a
    103:107:java.lang.Object lambda$asyncLoad$0(java.lang.Object) -> a
com.github.benmanes.caffeine.cache.CacheLoader$1 -> com.github.benmanes.caffeine.cache.CacheLoader$1:
    java.util.function.Function val$mappingFunction -> a
    226:226:void <init>(java.util.function.Function) -> <init>
    228:228:java.lang.Object load(java.lang.Object) -> load
    231:231:java.util.Map loadAll(java.util.Set) -> loadAll
com.github.benmanes.caffeine.cache.Caffeine -> com.github.benmanes.caffeine.cache.Caffeine:
    java.util.function.Supplier ENABLED_STATS_COUNTER_SUPPLIER -> g
    java.lang.System$Logger logger -> h
    boolean strictParsing -> i
    long maximumSize -> a
    long maximumWeight -> b
    int initialCapacity -> c
    long expireAfterWriteNanos -> j
    long expireAfterAccessNanos -> k
    long refreshAfterWriteNanos -> l
    com.github.benmanes.caffeine.cache.RemovalListener evictionListener -> m
    com.github.benmanes.caffeine.cache.RemovalListener removalListener -> d
    java.util.function.Supplier statsCounterSupplier -> n
    com.github.benmanes.caffeine.cache.Weigher weigher -> o
    com.github.benmanes.caffeine.cache.Expiry expiry -> p
    com.github.benmanes.caffeine.cache.Scheduler scheduler -> q
    java.util.concurrent.Executor executor -> r
    com.github.benmanes.caffeine.cache.Ticker ticker -> e
    com.github.benmanes.caffeine.cache.Caffeine$Strength keyStrength -> s
    com.github.benmanes.caffeine.cache.Caffeine$Strength valueStrength -> f
    152:175:void <init>() -> <init>
    180:183:void requireArgument(boolean,java.lang.String,java.lang.Object[]) -> a
    187:190:void requireArgument(boolean) -> a
    194:197:void requireState(boolean) -> b
    202:205:void requireState(boolean,java.lang.String,java.lang.Object[]) -> b
    210:210:int ceilingPowerOfTwo(int) -> a
    227:227:int calculateHashMapCapacity(int) -> b
    238:240:int calculateHashMapCapacity(java.lang.Iterable) -> a
    253:253:com.github.benmanes.caffeine.cache.Caffeine newBuilder() -> newBuilder
    258:260:com.github.benmanes.caffeine.cache.BoundedLocalCache newWeakInterner() -> a
    270:272:com.github.benmanes.caffeine.cache.Caffeine from(com.github.benmanes.caffeine.cache.CaffeineSpec) -> from
    2100:2133:com.github.benmanes.caffeine.cache.Caffeine com.github.benmanes.caffeine.cache.CaffeineSpec.toBuilder():100:133 -> from
    2100:2133:com.github.benmanes.caffeine.cache.Caffeine from(com.github.benmanes.caffeine.cache.CaffeineSpec):270 -> from
    282:282:com.github.benmanes.caffeine.cache.Caffeine from(java.lang.String) -> from
    297:301:com.github.benmanes.caffeine.cache.Caffeine initialCapacity(int) -> initialCapacity
    331:333:com.github.benmanes.caffeine.cache.Caffeine executor(java.util.concurrent.Executor) -> executor
    337:337:java.util.concurrent.Executor getExecutor() -> b
    363:365:com.github.benmanes.caffeine.cache.Caffeine scheduler(com.github.benmanes.caffeine.cache.Scheduler) -> scheduler
    398:405:com.github.benmanes.caffeine.cache.Caffeine maximumSize(long) -> maximumSize
    435:441:com.github.benmanes.caffeine.cache.Caffeine maximumWeight(long) -> maximumWeight
    477:485:com.github.benmanes.caffeine.cache.Caffeine weigher(com.github.benmanes.caffeine.cache.Weigher) -> weigher
    493:493:boolean isWeighted() -> c
    529:531:com.github.benmanes.caffeine.cache.Caffeine weakKeys() -> weakKeys
    535:535:boolean isStrongKeys() -> d
    559:561:com.github.benmanes.caffeine.cache.Caffeine weakValues() -> weakValues
    596:598:com.github.benmanes.caffeine.cache.Caffeine softValues() -> softValues
    619:619:com.github.benmanes.caffeine.cache.Caffeine expireAfterWrite(java.time.Duration) -> expireAfterWrite
    643:648:com.github.benmanes.caffeine.cache.Caffeine expireAfterWrite(long,java.util.concurrent.TimeUnit) -> expireAfterWrite
    656:656:boolean expiresAfterWrite() -> e
    680:680:com.github.benmanes.caffeine.cache.Caffeine expireAfterAccess(java.time.Duration) -> expireAfterAccess
    707:712:com.github.benmanes.caffeine.cache.Caffeine expireAfterAccess(long,java.util.concurrent.TimeUnit) -> expireAfterAccess
    720:720:boolean expiresAfterAccess() -> f
    753:763:com.github.benmanes.caffeine.cache.Caffeine expireAfter(com.github.benmanes.caffeine.cache.Expiry) -> expireAfter
    767:767:boolean expiresVariable() -> g
    799:799:com.github.benmanes.caffeine.cache.Caffeine refreshAfterWrite(java.time.Duration) -> refreshAfterWrite
    827:832:com.github.benmanes.caffeine.cache.Caffeine refreshAfterWrite(long,java.util.concurrent.TimeUnit) -> refreshAfterWrite
    840:840:boolean refreshAfterWrite() -> h
    857:859:com.github.benmanes.caffeine.cache.Caffeine ticker(com.github.benmanes.caffeine.cache.Ticker) -> ticker
    907:913:com.github.benmanes.caffeine.cache.Caffeine evictionListener(com.github.benmanes.caffeine.cache.RemovalListener) -> evictionListener
    959:965:com.github.benmanes.caffeine.cache.Caffeine removalListener(com.github.benmanes.caffeine.cache.RemovalListener) -> removalListener
    986:988:com.github.benmanes.caffeine.cache.Caffeine recordStats() -> recordStats
    1003:1006:com.github.benmanes.caffeine.cache.Caffeine recordStats(java.util.function.Supplier) -> recordStats
    1010:1010:boolean isRecordingStats() -> i
    1014:1016:java.util.function.Supplier getStatsCounterSupplier() -> j
    1020:1020:boolean isBounded() -> k
    1045:1052:com.github.benmanes.caffeine.cache.Cache build() -> build
    1071:1077:com.github.benmanes.caffeine.cache.LoadingCache build(com.github.benmanes.caffeine.cache.CacheLoader) -> build
    1101:1111:com.github.benmanes.caffeine.cache.AsyncCache buildAsync() -> buildAsync
    1134:1134:com.github.benmanes.caffeine.cache.AsyncLoadingCache buildAsync(com.github.benmanes.caffeine.cache.CacheLoader) -> buildAsync
    1157:1168:com.github.benmanes.caffeine.cache.AsyncLoadingCache buildAsync(com.github.benmanes.caffeine.cache.AsyncCacheLoader) -> buildAsync
    1172:1173:void requireNonLoadingCache() -> l
    1176:1183:void requireWeightWithWeigher() -> m
    1196:1198:long saturatedToNanos(java.time.Duration) -> a
    1208:1247:java.lang.String toString() -> toString
    1005:1005:com.github.benmanes.caffeine.cache.stats.StatsCounter lambda$recordStats$0(java.util.function.Supplier) -> a
    141:142:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.Caffeine$Strength -> com.github.benmanes.caffeine.cache.Caffeine$a:
    com.github.benmanes.caffeine.cache.Caffeine$Strength WEAK -> a
    com.github.benmanes.caffeine.cache.Caffeine$Strength SOFT -> b
    com.github.benmanes.caffeine.cache.Caffeine$Strength[] $VALUES -> c
    145:145:com.github.benmanes.caffeine.cache.Caffeine$Strength[] values() -> values
    145:145:com.github.benmanes.caffeine.cache.Caffeine$Strength valueOf(java.lang.String) -> valueOf
    145:145:void <init>(java.lang.String,int) -> <init>
    145:145:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.CaffeineSpec -> com.github.benmanes.caffeine.cache.CaffeineSpec:
    java.lang.String specification -> j
    int initialCapacity -> a
    long maximumWeight -> b
    long maximumSize -> c
    boolean recordStats -> d
    com.github.benmanes.caffeine.cache.Caffeine$Strength keyStrength -> e
    com.github.benmanes.caffeine.cache.Caffeine$Strength valueStrength -> f
    java.time.Duration expireAfterWrite -> g
    java.time.Duration expireAfterAccess -> h
    java.time.Duration refreshAfterWrite -> i
    79:92:void <init>(java.lang.String) -> <init>
    144:148:com.github.benmanes.caffeine.cache.CaffeineSpec parse(java.lang.String) -> parse
    1153:1166:void parseOption(java.lang.String):153:166 -> parse
    1153:1166:com.github.benmanes.caffeine.cache.CaffeineSpec parse(java.lang.String):146 -> parse
    1170:1202:void configure(java.lang.String,java.lang.String):170:202 -> parse
    1170:1202:void parseOption(java.lang.String):165 -> parse
    1170:1202:com.github.benmanes.caffeine.cache.CaffeineSpec parse(java.lang.String):146 -> parse
    1208:1211:void initialCapacity(java.lang.String,java.lang.String):208:211 -> parse
    1208:1211:void configure(java.lang.String,java.lang.String):172 -> parse
    1208:1211:void parseOption(java.lang.String):165 -> parse
    1208:1211:com.github.benmanes.caffeine.cache.CaffeineSpec parse(java.lang.String):146 -> parse
    1215:1220:void maximumSize(java.lang.String,java.lang.String):215:220 -> parse
    1215:1220:void configure(java.lang.String,java.lang.String):175 -> parse
    1215:1220:void parseOption(java.lang.String):165 -> parse
    1215:1220:com.github.benmanes.caffeine.cache.CaffeineSpec parse(java.lang.String):146 -> parse
    1224:1229:void maximumWeight(java.lang.String,java.lang.String):224:229 -> parse
    1224:1229:void configure(java.lang.String,java.lang.String):178 -> parse
    1224:1229:void parseOption(java.lang.String):165 -> parse
    1224:1229:com.github.benmanes.caffeine.cache.CaffeineSpec parse(java.lang.String):146 -> parse
    1233:1236:void weakKeys(java.lang.String):233:236 -> parse
    1233:1236:void configure(java.lang.String,java.lang.String):181 -> parse
    1233:1236:void parseOption(java.lang.String):165 -> parse
    1233:1236:com.github.benmanes.caffeine.cache.CaffeineSpec parse(java.lang.String):146 -> parse
    1247:1249:void expireAfterAccess(java.lang.String,java.lang.String):247:249 -> parse
    1247:1249:void configure(java.lang.String,java.lang.String):190 -> parse
    1247:1249:void parseOption(java.lang.String):165 -> parse
    1247:1249:com.github.benmanes.caffeine.cache.CaffeineSpec parse(java.lang.String):146 -> parse
    1253:1255:void expireAfterWrite(java.lang.String,java.lang.String):253:255 -> parse
    1253:1255:void configure(java.lang.String,java.lang.String):193 -> parse
    1253:1255:void parseOption(java.lang.String):165 -> parse
    1253:1255:com.github.benmanes.caffeine.cache.CaffeineSpec parse(java.lang.String):146 -> parse
    1259:1261:void refreshAfterWrite(java.lang.String,java.lang.String):259:261 -> parse
    1259:1261:void configure(java.lang.String,java.lang.String):196 -> parse
    1259:1261:void parseOption(java.lang.String):165 -> parse
    1259:1261:com.github.benmanes.caffeine.cache.CaffeineSpec parse(java.lang.String):146 -> parse
    1265:1268:void recordStats(java.lang.String):265:268 -> parse
    1265:1268:void configure(java.lang.String,java.lang.String):199 -> parse
    1265:1268:void parseOption(java.lang.String):165 -> parse
    1265:1268:com.github.benmanes.caffeine.cache.CaffeineSpec parse(java.lang.String):146 -> parse
    240:243:void valueStrength(java.lang.String,java.lang.String,com.github.benmanes.caffeine.cache.Caffeine$Strength) -> a
    272:276:int parseInt(java.lang.String,java.lang.String) -> a
    283:287:long parseLong(java.lang.String,java.lang.String) -> b
    294:308:java.time.Duration parseDuration(java.lang.String,java.lang.String) -> c
    313:326:java.util.concurrent.TimeUnit parseTimeUnit(java.lang.String,java.lang.String) -> d
    333:341:boolean equals(java.lang.Object) -> equals
    352:354:int hashCode() -> hashCode
    365:365:java.lang.String toParsableString() -> toParsableString
    374:374:java.lang.String toString() -> toString
com.github.benmanes.caffeine.cache.DisabledFuture -> com.github.benmanes.caffeine.cache.m:
    com.github.benmanes.caffeine.cache.DisabledFuture INSTANCE -> a
    com.github.benmanes.caffeine.cache.DisabledFuture[] $VALUES -> b
    165:165:com.github.benmanes.caffeine.cache.DisabledFuture[] values() -> values
    165:165:com.github.benmanes.caffeine.cache.DisabledFuture valueOf(java.lang.String) -> valueOf
    166:166:void <init>(java.lang.String,int) -> <init>
    170:170:boolean isDone() -> isDone
    173:173:boolean isCancelled() -> isCancelled
    176:176:boolean cancel(boolean) -> cancel
    165:165:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    1179:1180:java.lang.Void get$4890428c(java.util.concurrent.TimeUnit):179:180 -> get
    1179:1180:java.lang.Object get(long,java.util.concurrent.TimeUnit):165 -> get
    165:165:java.lang.Object get() -> get
    1183:1183:java.lang.Void get():183:183 -> get
    1183:1183:java.lang.Object get():165 -> get
    165:167:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.DisabledScheduler -> com.github.benmanes.caffeine.cache.n:
    com.github.benmanes.caffeine.cache.DisabledScheduler INSTANCE -> a
    com.github.benmanes.caffeine.cache.DisabledScheduler[] $VALUES -> b
    153:153:com.github.benmanes.caffeine.cache.DisabledScheduler[] values() -> values
    153:153:com.github.benmanes.caffeine.cache.DisabledScheduler valueOf(java.lang.String) -> valueOf
    153:153:void <init>(java.lang.String,int) -> <init>
    158:161:java.util.concurrent.Future schedule(java.util.concurrent.Executor,java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    153:154:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.DisabledTicker -> com.github.benmanes.caffeine.cache.o:
    com.github.benmanes.caffeine.cache.DisabledTicker INSTANCE -> a
    com.github.benmanes.caffeine.cache.DisabledTicker[] $VALUES -> b
    61:61:com.github.benmanes.caffeine.cache.DisabledTicker[] values() -> values
    61:61:com.github.benmanes.caffeine.cache.DisabledTicker valueOf(java.lang.String) -> valueOf
    61:61:void <init>(java.lang.String,int) -> <init>
    65:65:long read() -> read
    61:62:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.ExecutorServiceScheduler -> com.github.benmanes.caffeine.cache.p:
    java.lang.System$Logger logger -> a
    java.util.concurrent.ScheduledExecutorService scheduledExecutorService -> b
    106:108:void <init>(java.util.concurrent.ScheduledExecutorService) -> <init>
    112:119:java.util.concurrent.Future schedule(java.util.concurrent.Executor,java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    121:126:void lambda$schedule$0(java.util.concurrent.Executor,java.lang.Runnable) -> a
    100:100:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.Expiry -> com.github.benmanes.caffeine.cache.Expiry:
    long expireAfterCreate(java.lang.Object,java.lang.Object,long) -> expireAfterCreate
    long expireAfterUpdate(java.lang.Object,java.lang.Object,long,long) -> expireAfterUpdate
    long expireAfterRead(java.lang.Object,java.lang.Object,long,long) -> expireAfterRead
com.github.benmanes.caffeine.cache.GuardedScheduler -> com.github.benmanes.caffeine.cache.q:
    java.lang.System$Logger logger -> a
    com.github.benmanes.caffeine.cache.Scheduler delegate -> b
    137:139:void <init>(com.github.benmanes.caffeine.cache.Scheduler) -> <init>
    144:148:java.util.concurrent.Future schedule(java.util.concurrent.Executor,java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    131:131:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.Interner -> com.github.benmanes.caffeine.cache.Interner:
    java.lang.Object intern(java.lang.Object) -> intern
    64:64:com.github.benmanes.caffeine.cache.Interner newStrongInterner() -> newStrongInterner
    75:75:com.github.benmanes.caffeine.cache.Interner newWeakInterner() -> newWeakInterner
com.github.benmanes.caffeine.cache.LinkedDeque -> com.github.benmanes.caffeine.cache.LinkedDeque:
    com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator iterator() -> a
    com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator descendingIterator() -> b
    51:51:java.util.Iterator descendingIterator() -> descendingIterator
    51:51:java.util.Iterator iterator() -> iterator
com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator -> com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator:
    java.lang.Object peek() -> peek
    112:112:com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator concat(com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator,com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator) -> concat
    133:133:com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator comparing(com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator,com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator,java.util.Comparator) -> comparing
com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator$1 -> com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator$1:
    com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator val$first -> a
    com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator val$second -> b
    112:112:void <init>(com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator,com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator) -> <init>
    114:114:boolean hasNext() -> hasNext
    117:122:java.lang.Object next() -> next
    125:125:java.lang.Object peek() -> peek
com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator$2 -> com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator$2:
    com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator val$first -> a
    com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator val$second -> b
    java.util.Comparator val$comparator -> c
    133:133:void <init>(com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator,com.github.benmanes.caffeine.cache.LinkedDeque$PeekingIterator,java.util.Comparator) -> <init>
    135:135:boolean hasNext() -> hasNext
    138:146:java.lang.Object next() -> next
    149:157:java.lang.Object peek() -> peek
com.github.benmanes.caffeine.cache.LoadingCache -> com.github.benmanes.caffeine.cache.LoadingCache:
    java.lang.Object get(java.lang.Object) -> get
    java.util.Map getAll(java.lang.Iterable) -> getAll
    java.util.concurrent.CompletableFuture refresh(java.lang.Object) -> refresh
    java.util.concurrent.CompletableFuture refreshAll(java.lang.Iterable) -> refreshAll
com.github.benmanes.caffeine.cache.LocalAsyncCache -> com.github.benmanes.caffeine.cache.LocalAsyncCache:
    java.lang.System$Logger logger -> a
    com.github.benmanes.caffeine.cache.LocalCache cache() -> b
    com.github.benmanes.caffeine.cache.Policy policy() -> a
    70:70:java.util.concurrent.CompletableFuture getIfPresent(java.lang.Object) -> getIfPresent
    75:76:java.util.concurrent.CompletableFuture get(java.lang.Object,java.util.function.Function) -> get
    83:83:java.util.concurrent.CompletableFuture get(java.lang.Object,java.util.function.BiFunction) -> get
    89:101:java.util.concurrent.CompletableFuture get(java.lang.Object,java.util.function.BiFunction,boolean) -> a
    107:108:java.util.concurrent.CompletableFuture getAll(java.lang.Iterable,java.util.function.Function) -> getAll
    117:152:java.util.concurrent.CompletableFuture getAll(java.lang.Iterable,java.util.function.BiFunction) -> getAll
    162:167:java.util.concurrent.CompletableFuture composeResult(java.util.Map) -> a
    182:194:void put(java.lang.Object,java.util.concurrent.CompletableFuture) -> put
    199:225:void handleCompletion(java.lang.Object,java.util.concurrent.CompletableFuture,long,boolean) -> a
    201:224:void lambda$handleCompletion$7(java.util.concurrent.atomic.AtomicBoolean,long,java.lang.Object,java.util.concurrent.CompletableFuture,boolean,java.lang.Object,java.lang.Throwable) -> a
    168:175:java.util.Map lambda$composeResult$6(java.util.Map,java.lang.Void) -> a
    170:174:void lambda$composeResult$5(java.util.LinkedHashMap,java.lang.Object,java.util.concurrent.CompletableFuture) -> a
    109:109:java.util.concurrent.CompletableFuture lambda$getAll$4(java.util.function.Function,java.util.Set,java.util.concurrent.Executor) -> a
    109:109:java.util.Map lambda$getAll$3(java.util.function.Function,java.util.Set) -> a
    94:96:java.util.concurrent.CompletableFuture lambda$get$2(java.util.function.BiFunction,java.lang.Object,java.util.concurrent.CompletableFuture[],java.lang.Object) -> a
    76:76:java.util.concurrent.CompletableFuture lambda$get$1(java.util.function.Function,java.lang.Object,java.lang.Object,java.util.concurrent.Executor) -> a
    77:77:java.lang.Object lambda$get$0(java.util.function.Function,java.lang.Object) -> a
    60:60:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.LocalAsyncCache$AbstractCacheView -> com.github.benmanes.caffeine.cache.LocalAsyncCache$AbstractCacheView:
    java.util.concurrent.ConcurrentMap asMapView -> a
    474:474:void <init>() -> <init>
    com.github.benmanes.caffeine.cache.LocalAsyncCache asyncCache() -> a
    483:484:java.lang.Object getIfPresent(java.lang.Object) -> getIfPresent
    489:509:java.util.Map getAllPresent(java.lang.Iterable) -> getAllPresent
    514:514:java.lang.Object get(java.lang.Object,java.util.function.Function) -> get
    520:520:java.util.Map getAll(java.lang.Iterable,java.util.function.Function) -> getAll
    526:535:java.lang.Object resolve(java.util.concurrent.CompletableFuture) -> a
    541:543:void put(java.lang.Object,java.lang.Object) -> put
    547:548:void putAll(java.util.Map) -> putAll
    552:553:void invalidate(java.lang.Object) -> invalidate
    557:558:void invalidateAll(java.lang.Iterable) -> invalidateAll
    562:563:void invalidateAll() -> invalidateAll
    567:567:long estimatedSize() -> estimatedSize
    572:572:com.github.benmanes.caffeine.cache.stats.CacheStats stats() -> stats
    577:578:void cleanUp() -> cleanUp
    582:582:com.github.benmanes.caffeine.cache.Policy policy() -> policy
    587:587:java.util.concurrent.ConcurrentMap asMap() -> asMap
com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView -> com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView:
    com.github.benmanes.caffeine.cache.LocalCache delegate -> a
    java.util.Collection values -> b
    java.util.Set entries -> c
    597:599:void <init>(com.github.benmanes.caffeine.cache.LocalCache) -> <init>
    603:603:boolean isEmpty() -> isEmpty
    608:608:int size() -> size
    613:614:void clear() -> clear
    618:618:boolean containsKey(java.lang.Object) -> containsKey
    623:630:boolean containsValue(java.lang.Object) -> containsValue
    635:635:java.lang.Object get(java.lang.Object) -> get
    640:675:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    680:681:void putAll(java.util.Map) -> putAll
    685:688:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    693:694:java.lang.Object remove(java.lang.Object) -> remove
    699:733:boolean remove(java.lang.Object,java.lang.Object) -> remove
    740:768:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    773:801:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    806:846:java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function) -> computeIfAbsent
    852:878:java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction) -> computeIfPresent
    885:909:java.lang.Object compute(java.lang.Object,java.util.function.BiFunction) -> compute
    915:948:java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction) -> merge
    953:953:java.util.Set keySet() -> keySet
    958:958:java.util.Collection values() -> values
    963:963:java.util.Set entrySet() -> entrySet
    969:990:boolean equals(java.lang.Object) -> equals
    995:1000:int hashCode() -> hashCode
    1005:1016:java.lang.String toString() -> toString
    925:942:java.util.concurrent.CompletableFuture lambda$merge$7(boolean[],java.util.function.BiFunction,java.lang.Object,java.util.concurrent.CompletableFuture,java.util.concurrent.CompletableFuture) -> a
    893:901:java.util.concurrent.CompletableFuture lambda$compute$6(java.util.function.BiFunction,java.lang.Object[],java.lang.Object,java.lang.Object,java.util.concurrent.CompletableFuture) -> a
    860:870:java.util.concurrent.CompletableFuture lambda$computeIfPresent$5(java.lang.Object[],java.util.function.BiFunction,java.lang.Object,java.lang.Object,java.util.concurrent.CompletableFuture) -> a
    829:839:java.util.concurrent.CompletableFuture lambda$computeIfAbsent$4(java.util.function.Function,java.lang.Object,java.util.concurrent.CompletableFuture[],java.lang.Object,java.util.concurrent.CompletableFuture) -> a
    786:795:java.util.concurrent.CompletableFuture lambda$replace$3(boolean[],boolean[],java.lang.Object,java.lang.Object,java.lang.Object,java.util.concurrent.CompletableFuture) -> a
    753:762:java.util.concurrent.CompletableFuture lambda$replace$2(boolean[],java.lang.Object[],java.lang.Object,java.lang.Object,java.util.concurrent.CompletableFuture) -> a
    719:729:java.util.concurrent.CompletableFuture lambda$remove$1(boolean[],boolean[],java.lang.Object,java.lang.Object,java.util.concurrent.CompletableFuture) -> a
    662:664:java.util.concurrent.CompletableFuture lambda$putIfAbsent$0(boolean[],java.lang.Object,java.lang.Object,java.util.concurrent.CompletableFuture) -> a
com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView$EntryIterator -> com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView$a:
    java.util.Iterator iterator -> a
    java.util.Map$Entry cursor -> b
    java.lang.Object removalKey -> c
    com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView this$0 -> d
    1221:1223:void <init>(com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView) -> <init>
    1227:1234:boolean hasNext() -> hasNext
    1239:1247:java.util.Map$Entry next() -> a
    1252:1255:void remove() -> remove
    1216:1216:java.lang.Object next() -> next
com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView$EntrySet -> com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView$b:
    com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView this$0 -> a
    1126:1126:void <init>(com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView) -> <init>
    1130:1130:boolean isEmpty() -> isEmpty
    1135:1135:int size() -> size
    1140:1141:void clear() -> clear
    1145:1155:boolean contains(java.lang.Object) -> contains
    1160:1173:boolean removeAll(java.util.Collection) -> removeAll
    1178:1183:boolean remove(java.lang.Object) -> remove
    1188:1195:boolean removeIf(java.util.function.Predicate) -> removeIf
    1200:1207:boolean retainAll(java.util.Collection) -> retainAll
    1212:1212:java.util.Iterator iterator() -> iterator
com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView$Values -> com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView$c:
    com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView this$0 -> a
    1019:1019:void <init>(com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView) -> <init>
    1023:1023:boolean isEmpty() -> isEmpty
    1028:1028:int size() -> size
    1033:1034:void clear() -> clear
    1038:1038:boolean contains(java.lang.Object) -> contains
    1043:1052:boolean removeAll(java.util.Collection) -> removeAll
    1057:1066:boolean remove(java.lang.Object) -> remove
    1071:1072:boolean removeIf(java.util.function.Predicate) -> removeIf
    1080:1089:boolean retainAll(java.util.Collection) -> retainAll
    1094:1101:void forEach(java.util.function.Consumer) -> forEach
    1105:1105:java.util.Iterator iterator() -> iterator
    1096:1100:void lambda$forEach$1(java.util.function.Consumer,java.util.concurrent.CompletableFuture) -> a
    1073:1074:boolean lambda$removeIf$0(java.util.function.Predicate,java.util.concurrent.CompletableFuture) -> a
com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView$Values$1 -> com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView$c$1:
    java.util.Iterator iterator -> a
    com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView$Values this$1 -> b
    1105:1106:void <init>(com.github.benmanes.caffeine.cache.LocalAsyncCache$AsMapView$Values) -> <init>
    1110:1110:boolean hasNext() -> hasNext
    1115:1115:java.lang.Object next() -> next
    1120:1121:void remove() -> remove
com.github.benmanes.caffeine.cache.LocalAsyncCache$AsyncAsMapView -> com.github.benmanes.caffeine.cache.LocalAsyncCache$AsyncAsMapView:
    com.github.benmanes.caffeine.cache.LocalAsyncCache asyncCache -> a
    296:298:void <init>(com.github.benmanes.caffeine.cache.LocalAsyncCache) -> <init>
    300:300:boolean isEmpty() -> isEmpty
    303:303:int size() -> size
    306:307:void clear() -> clear
    309:309:boolean containsKey(java.lang.Object) -> containsKey
    312:312:boolean containsValue(java.lang.Object) -> containsValue
    315:315:java.util.concurrent.CompletableFuture get(java.lang.Object) -> get
    318:323:java.util.concurrent.CompletableFuture putIfAbsent(java.lang.Object,java.util.concurrent.CompletableFuture) -> putIfAbsent
    326:329:java.util.concurrent.CompletableFuture put(java.lang.Object,java.util.concurrent.CompletableFuture) -> put
    333:334:void putAll(java.util.Map) -> putAll
    336:341:java.util.concurrent.CompletableFuture replace(java.lang.Object,java.util.concurrent.CompletableFuture) -> replace
    345:350:boolean replace(java.lang.Object,java.util.concurrent.CompletableFuture,java.util.concurrent.CompletableFuture) -> replace
    353:353:java.util.concurrent.CompletableFuture remove(java.lang.Object) -> remove
    356:356:boolean remove(java.lang.Object,java.lang.Object) -> remove
    361:381:java.util.concurrent.CompletableFuture computeIfAbsent(java.lang.Object,java.util.function.Function) -> computeIfAbsent
    385:398:java.util.concurrent.CompletableFuture computeIfPresent(java.lang.Object,java.util.function.BiFunction) -> computeIfPresent
    402:415:java.util.concurrent.CompletableFuture compute(java.lang.Object,java.util.function.BiFunction) -> compute
    420:434:java.util.concurrent.CompletableFuture merge(java.lang.Object,java.util.concurrent.CompletableFuture,java.util.function.BiFunction) -> merge
    437:438:void forEach(java.util.function.BiConsumer) -> forEach
    440:440:java.util.Set keySet() -> keySet
    443:443:java.util.Collection values() -> values
    446:446:java.util.Set entrySet() -> entrySet
    449:449:boolean equals(java.lang.Object) -> equals
    452:452:int hashCode() -> hashCode
    455:455:java.lang.String toString() -> toString
    293:293:java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction) -> merge
    293:293:java.lang.Object compute(java.lang.Object,java.util.function.BiFunction) -> compute
    293:293:java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction) -> computeIfPresent
    293:293:java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function) -> computeIfAbsent
    293:293:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    293:293:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    293:293:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    293:293:java.lang.Object remove(java.lang.Object) -> remove
    293:293:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    293:293:java.lang.Object get(java.lang.Object) -> get
    427:428:java.util.concurrent.CompletableFuture lambda$merge$4(java.util.concurrent.CompletableFuture[],java.util.concurrent.CompletableFuture,java.util.function.BiFunction,java.lang.Object,java.util.concurrent.CompletableFuture) -> a
    408:409:java.util.concurrent.CompletableFuture lambda$compute$3(java.util.concurrent.CompletableFuture[],java.util.function.BiFunction,java.lang.Object,java.util.concurrent.CompletableFuture) -> a
    391:392:java.util.concurrent.CompletableFuture lambda$computeIfPresent$2(java.util.concurrent.CompletableFuture[],java.util.function.BiFunction,java.lang.Object,java.util.concurrent.CompletableFuture) -> b
    373:376:void lambda$computeIfAbsent$1(java.lang.Object,java.lang.Throwable) -> a
    366:367:java.util.concurrent.CompletableFuture lambda$computeIfAbsent$0(java.util.concurrent.CompletableFuture[],java.util.function.Function,java.lang.Object) -> a
com.github.benmanes.caffeine.cache.LocalAsyncCache$AsyncBulkCompleter -> com.github.benmanes.caffeine.cache.LocalAsyncCache$AsyncBulkCompleter:
    com.github.benmanes.caffeine.cache.LocalCache cache -> a
    java.util.Map proxies -> b
    long startTime -> c
    235:239:void <init>(com.github.benmanes.caffeine.cache.LocalCache,java.util.Map) -> <init>
    243:262:void accept(java.util.Map,java.lang.Throwable) -> accept
    1266:1276:void fillProxies(java.util.Map):266:276 -> accept
    1266:1276:void accept(java.util.Map,java.lang.Throwable):258 -> accept
    1280:1285:void addNewEntries(java.util.Map):280:285 -> accept
    1280:1285:void accept(java.util.Map,java.lang.Throwable):259 -> accept
    228:228:void accept(java.lang.Object,java.lang.Object) -> accept
    281:284:void lambda$addNewEntries$1(java.lang.Object,java.lang.Object) -> a
    267:275:void lambda$fillProxies$0(java.util.Map,java.lang.Object,java.util.concurrent.CompletableFuture) -> a
com.github.benmanes.caffeine.cache.LocalAsyncCache$AsyncBulkCompleter$NullMapCompletionException -> com.github.benmanes.caffeine.cache.LocalAsyncCache$AsyncBulkCompleter$a:
    287:287:void <init>() -> <init>
com.github.benmanes.caffeine.cache.LocalAsyncCache$CacheView -> com.github.benmanes.caffeine.cache.LocalAsyncCache$CacheView:
    com.github.benmanes.caffeine.cache.LocalAsyncCache asyncCache -> a
    466:468:void <init>(com.github.benmanes.caffeine.cache.LocalAsyncCache) -> <init>
    470:470:com.github.benmanes.caffeine.cache.LocalAsyncCache asyncCache() -> a
com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache -> com.github.benmanes.caffeine.cache.r:
    java.lang.System$Logger logger -> b
    java.util.function.BiFunction bulkMappingFunction -> e
    java.util.function.BiFunction mappingFunction -> c
    com.github.benmanes.caffeine.cache.AsyncCacheLoader cacheLoader -> d
    com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache$LoadingCacheView cacheView -> f
    57:61:void <init>(com.github.benmanes.caffeine.cache.AsyncCacheLoader) -> <init>
    1087:1090:java.util.function.BiFunction newBulkMappingFunction(com.github.benmanes.caffeine.cache.AsyncCacheLoader):87:90 -> <init>
    1087:1090:void <init>(com.github.benmanes.caffeine.cache.AsyncCacheLoader):58 -> <init>
    2066:2066:java.util.function.BiFunction newMappingFunction(com.github.benmanes.caffeine.cache.AsyncCacheLoader):66:66 -> <init>
    2066:2066:void <init>(com.github.benmanes.caffeine.cache.AsyncCacheLoader):60 -> <init>
    110:128:boolean canBulkLoad(com.github.benmanes.caffeine.cache.AsyncCacheLoader) -> a
    134:134:java.util.concurrent.CompletableFuture get(java.lang.Object) -> get
    139:149:java.util.concurrent.CompletableFuture getAll(java.lang.Iterable) -> getAll
    154:154:com.github.benmanes.caffeine.cache.LoadingCache synchronous() -> synchronous
    44:44:com.github.benmanes.caffeine.cache.Cache synchronous() -> synchronous
    93:102:java.util.concurrent.CompletableFuture lambda$newBulkMappingFunction$1(com.github.benmanes.caffeine.cache.AsyncCacheLoader,java.util.Set,java.util.concurrent.Executor) -> a
    68:75:java.util.concurrent.CompletableFuture lambda$newMappingFunction$0(com.github.benmanes.caffeine.cache.AsyncCacheLoader,java.lang.Object,java.util.concurrent.Executor) -> a
    46:46:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache$LoadingCacheView -> com.github.benmanes.caffeine.cache.r$a:
    com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache asyncCache -> a
    166:168:void <init>(com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache) -> <init>
    178:178:java.lang.Object get(java.lang.Object) -> get
    184:184:java.util.Map getAll(java.lang.Iterable) -> getAll
    189:200:java.util.concurrent.CompletableFuture refresh(java.lang.Object) -> refresh
    1218:1247:java.util.concurrent.CompletableFuture tryOptimisticRefresh(java.lang.Object,java.lang.Object):218:247 -> refresh
    1218:1247:java.util.concurrent.CompletableFuture refresh(java.lang.Object):193 -> refresh
    1253:1332:java.util.concurrent.CompletableFuture tryComputeRefresh(java.lang.Object,java.lang.Object):253:332 -> refresh
    1253:1332:java.util.concurrent.CompletableFuture refresh(java.lang.Object):195 -> refresh
    205:209:java.util.concurrent.CompletableFuture refreshAll(java.lang.Iterable) -> refreshAll
    159:159:com.github.benmanes.caffeine.cache.LocalAsyncCache asyncCache() -> a
    2172:2172:com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache asyncCache():172:172 -> a
    2172:2172:com.github.benmanes.caffeine.cache.LocalAsyncCache asyncCache():159 -> a
    289:330:void lambda$tryComputeRefresh$3(long[],java.lang.Object,java.util.concurrent.CompletableFuture,java.lang.Object,java.util.concurrent.CompletableFuture[],java.lang.Object,java.lang.Throwable) -> a
    301:318:java.util.concurrent.CompletableFuture lambda$tryComputeRefresh$2(java.lang.Object,java.util.concurrent.CompletableFuture,java.util.concurrent.CompletableFuture[],boolean[],java.lang.Object,java.lang.Object,java.util.concurrent.CompletableFuture) -> a
    258:276:java.util.concurrent.CompletableFuture lambda$tryComputeRefresh$1(java.util.concurrent.CompletableFuture[],java.lang.Object,boolean[],long[],java.lang.Object) -> a
    239:239:void lambda$tryOptimisticRefresh$0(java.lang.Object,java.util.concurrent.CompletableFuture,java.lang.Object,java.lang.Throwable) -> a
com.github.benmanes.caffeine.cache.LocalCache -> com.github.benmanes.caffeine.cache.s:
    boolean isAsync() -> d
    boolean isRecordingStats() -> e
    com.github.benmanes.caffeine.cache.stats.StatsCounter statsCounter() -> f
    void notifyRemoval(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.RemovalCause) -> a
    java.util.concurrent.Executor executor() -> g
    java.util.concurrent.ConcurrentMap refreshes() -> h
    com.github.benmanes.caffeine.cache.Expiry expiry() -> i
    com.github.benmanes.caffeine.cache.Ticker statsTicker() -> j
    long estimatedSize() -> k
    java.lang.Object referenceKey(java.lang.Object) -> c
    boolean isPendingEviction(java.lang.Object) -> d
    java.lang.Object getIfPresent(java.lang.Object,boolean) -> a
    java.lang.Object getIfPresentQuietly(java.lang.Object) -> a
    java.util.Map getAllPresent(java.lang.Iterable) -> a
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> a
    99:99:java.lang.Object compute(java.lang.Object,java.util.function.BiFunction) -> compute
    java.lang.Object compute(java.lang.Object,java.util.function.BiFunction,com.github.benmanes.caffeine.cache.Expiry,boolean,boolean) -> a
    112:112:java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function) -> computeIfAbsent
    java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function,boolean,boolean) -> a
    124:127:void invalidateAll(java.lang.Iterable) -> b
    void cleanUp() -> l
    135:154:void notifyOnReplace(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    159:162:java.util.function.Function statsAware(java.util.function.Function,boolean) -> a
    187:187:java.util.function.BiFunction statsAware(java.util.function.BiFunction) -> a
    194:197:java.util.function.BiFunction statsAware(java.util.function.BiFunction,boolean,boolean) -> a
    199:216:java.lang.Object lambda$statsAware$3(java.util.function.BiFunction,boolean,boolean,java.lang.Object,java.lang.Object) -> a
    164:180:java.lang.Object lambda$statsAware$2(java.util.function.Function,boolean,java.lang.Object) -> a
    141:150:void lambda$notifyOnReplace$1(java.util.concurrent.CompletableFuture,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Throwable) -> a
    143:146:void lambda$notifyOnReplace$0(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> a
com.github.benmanes.caffeine.cache.LocalCacheFactory -> com.github.benmanes.caffeine.cache.t:
    java.lang.invoke.MethodHandles$Lookup LOOKUP -> a
    java.lang.invoke.MethodType FACTORY -> b
    34:34:void <init>() -> <init>
    39:40:com.github.benmanes.caffeine.cache.BoundedLocalCache newBoundedLocalCache(com.github.benmanes.caffeine.cache.Caffeine,com.github.benmanes.caffeine.cache.AsyncCacheLoader,boolean) -> a
    1044:1078:java.lang.String getClassName(com.github.benmanes.caffeine.cache.Caffeine):44:78 -> a
    1044:1078:com.github.benmanes.caffeine.cache.BoundedLocalCache newBoundedLocalCache(com.github.benmanes.caffeine.cache.Caffeine,com.github.benmanes.caffeine.cache.AsyncCacheLoader,boolean):39 -> a
    1565:1565:boolean com.github.benmanes.caffeine.cache.Caffeine.isStrongValues():565:565 -> a
    1565:1565:java.lang.String getClassName(com.github.benmanes.caffeine.cache.Caffeine):50 -> a
    1565:1565:com.github.benmanes.caffeine.cache.BoundedLocalCache newBoundedLocalCache(com.github.benmanes.caffeine.cache.Caffeine,com.github.benmanes.caffeine.cache.AsyncCacheLoader,boolean):39 -> a
    2489:2489:boolean com.github.benmanes.caffeine.cache.Caffeine.evicts():489:489 -> a
    2489:2489:java.lang.String getClassName(com.github.benmanes.caffeine.cache.Caffeine):61 -> a
    2489:2489:com.github.benmanes.caffeine.cache.BoundedLocalCache newBoundedLocalCache(com.github.benmanes.caffeine.cache.Caffeine,com.github.benmanes.caffeine.cache.AsyncCacheLoader,boolean):39 -> a
    2497:2497:long com.github.benmanes.caffeine.cache.Caffeine.getMaximum():497:497 -> a
    2497:2497:boolean com.github.benmanes.caffeine.cache.Caffeine.evicts():489 -> a
    2497:2497:java.lang.String getClassName(com.github.benmanes.caffeine.cache.Caffeine):61 -> a
    2497:2497:com.github.benmanes.caffeine.cache.BoundedLocalCache newBoundedLocalCache(com.github.benmanes.caffeine.cache.Caffeine,com.github.benmanes.caffeine.cache.AsyncCacheLoader,boolean):39 -> a
    84:90:com.github.benmanes.caffeine.cache.BoundedLocalCache loadFactory(com.github.benmanes.caffeine.cache.Caffeine,com.github.benmanes.caffeine.cache.AsyncCacheLoader,boolean,java.lang.String) -> a
    30:31:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.LocalLoadingCache -> com.github.benmanes.caffeine.cache.u:
    java.lang.System$Logger logger -> a_
    com.github.benmanes.caffeine.cache.AsyncCacheLoader cacheLoader() -> a
    java.util.function.Function mappingFunction() -> b
    java.util.function.Function bulkMappingFunction() -> c
    58:58:java.lang.Object get(java.lang.Object) -> get
    63:66:java.util.Map getAll(java.lang.Iterable) -> getAll
    71:93:java.util.Map loadSequentially(java.lang.Iterable) -> a
    99:167:java.util.concurrent.CompletableFuture refresh(java.lang.Object) -> refresh
    172:176:java.util.concurrent.CompletableFuture refreshAll(java.lang.Iterable) -> refreshAll
    181:181:java.util.function.Function newMappingFunction(com.github.benmanes.caffeine.cache.CacheLoader) -> a
    198:201:java.util.function.Function newBulkMappingFunction(com.github.benmanes.caffeine.cache.CacheLoader) -> b
    220:225:boolean hasLoadAll(com.github.benmanes.caffeine.cache.CacheLoader) -> c
    204:212:java.util.Map lambda$newBulkMappingFunction$4(com.github.benmanes.caffeine.cache.CacheLoader,java.util.Set) -> a
    183:190:java.lang.Object lambda$newMappingFunction$3(com.github.benmanes.caffeine.cache.CacheLoader,java.lang.Object) -> a
    133:162:void lambda$refresh$2(long[],java.lang.Object,java.util.concurrent.CompletableFuture[],java.lang.Object,java.lang.Object[],java.lang.Object,java.lang.Throwable) -> a
    145:150:java.lang.Object lambda$refresh$1(java.lang.Object,java.util.concurrent.CompletableFuture[],java.lang.Object[],java.lang.Object,boolean[],java.lang.Object,java.lang.Object) -> a
    109:127:java.util.concurrent.CompletableFuture lambda$refresh$0(java.lang.Object,long[],java.lang.Object[],java.util.concurrent.CompletableFuture[],java.lang.Object,java.util.concurrent.CompletableFuture) -> a
    44:44:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.LocalManualCache -> com.github.benmanes.caffeine.cache.v:
    com.github.benmanes.caffeine.cache.LocalCache cache() -> d
    46:46:long estimatedSize() -> estimatedSize
    51:52:void cleanUp() -> cleanUp
    56:56:java.lang.Object getIfPresent(java.lang.Object) -> getIfPresent
    62:62:java.lang.Object get(java.lang.Object,java.util.function.Function) -> get
    67:67:java.util.Map getAllPresent(java.lang.Iterable) -> getAllPresent
    73:91:java.util.Map getAll(java.lang.Iterable,java.util.function.Function) -> getAll
    100:122:void bulkLoad(java.util.Set,java.util.Map,java.util.function.Function) -> a
    126:127:void put(java.lang.Object,java.lang.Object) -> put
    131:132:void putAll(java.util.Map) -> putAll
    136:137:void invalidate(java.lang.Object) -> invalidate
    141:142:void invalidateAll(java.lang.Iterable) -> invalidateAll
    146:147:void invalidateAll() -> invalidateAll
    151:151:com.github.benmanes.caffeine.cache.stats.CacheStats stats() -> stats
    156:156:java.util.concurrent.ConcurrentMap asMap() -> asMap
com.github.benmanes.caffeine.cache.MpscChunkedArrayQueue -> com.github.benmanes.caffeine.cache.w:
com.github.benmanes.caffeine.cache.MpscChunkedArrayQueueColdProducerFields -> com.github.benmanes.caffeine.cache.x:
com.github.benmanes.caffeine.cache.MpscGrowableArrayQueue -> com.github.benmanes.caffeine.cache.y:
com.github.benmanes.caffeine.cache.Node -> com.github.benmanes.caffeine.cache.z:
    35:35:void <init>() -> <init>
    java.lang.Object getKey() -> a
    java.lang.Object getKeyReference() -> b
    java.lang.Object getValue() -> c
    boolean isAlive() -> d
    202:202:long getAccessTime() -> e
    283:288:java.lang.String toString() -> toString
    1214:1214:com.github.benmanes.caffeine.cache.Node getPreviousInAccessOrder():214:214 -> toString
    1214:1214:java.lang.String toString():287 -> toString
    1226:1226:com.github.benmanes.caffeine.cache.Node getNextInAccessOrder():226:226 -> toString
    1226:1226:java.lang.String toString():287 -> toString
    1259:1259:com.github.benmanes.caffeine.cache.Node getPreviousInWriteOrder():259:259 -> toString
    1259:1259:java.lang.String toString():288 -> toString
    1271:1271:com.github.benmanes.caffeine.cache.Node getNextInWriteOrder():271:271 -> toString
    1271:1271:java.lang.String toString():288 -> toString
com.github.benmanes.caffeine.cache.NodeFactory -> com.github.benmanes.caffeine.cache.NodeFactory:
    com.github.benmanes.caffeine.cache.Node newNode$5f9b3200() -> a
    77:77:java.lang.Object newLookupKey(java.lang.Object) -> a
    32:38:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.NodeFactory$DeadStrongKey -> com.github.benmanes.caffeine.cache.NodeFactory$DeadStrongKey:
    153:153:void <init>() -> <init>
com.github.benmanes.caffeine.cache.NodeFactory$DeadWeakKey -> com.github.benmanes.caffeine.cache.NodeFactory$DeadWeakKey:
    150:150:void <init>() -> <init>
    149:149:java.lang.String toString() -> toString
    149:149:int hashCode() -> hashCode
    149:149:boolean equals(java.lang.Object) -> equals
    149:149:java.lang.Object getKeyReference() -> getKeyReference
com.github.benmanes.caffeine.cache.NodeFactory$RetiredStrongKey -> com.github.benmanes.caffeine.cache.NodeFactory$RetiredStrongKey:
    152:152:void <init>() -> <init>
com.github.benmanes.caffeine.cache.NodeFactory$RetiredWeakKey -> com.github.benmanes.caffeine.cache.NodeFactory$RetiredWeakKey:
    147:147:void <init>() -> <init>
    146:146:java.lang.String toString() -> toString
    146:146:int hashCode() -> hashCode
    146:146:boolean equals(java.lang.Object) -> equals
    146:146:java.lang.Object getKeyReference() -> getKeyReference
com.github.benmanes.caffeine.cache.Policy -> com.github.benmanes.caffeine.cache.Policy:
    boolean isRecordingStats() -> isRecordingStats
    java.lang.Object getIfPresentQuietly(java.lang.Object) -> getIfPresentQuietly
    80:80:com.github.benmanes.caffeine.cache.Policy$CacheEntry getEntryIfPresentQuietly(java.lang.Object) -> getEntryIfPresentQuietly
    java.util.Map refreshes() -> refreshes
    java.util.Optional eviction() -> eviction
    java.util.Optional expireAfterAccess() -> expireAfterAccess
    java.util.Optional expireAfterWrite() -> expireAfterWrite
    java.util.Optional expireVariably() -> expireVariably
    java.util.Optional refreshAfterWrite() -> refreshAfterWrite
com.github.benmanes.caffeine.cache.Policy$CacheEntry -> com.github.benmanes.caffeine.cache.Policy$CacheEntry:
    int weight() -> weight
    long expiresAt() -> expiresAt
    865:865:java.time.Duration expiresAfter() -> expiresAfter
    long refreshableAt() -> refreshableAt
    883:883:java.time.Duration refreshableAfter() -> refreshableAfter
    long snapshotAt() -> snapshotAt
com.github.benmanes.caffeine.cache.Policy$Eviction -> com.github.benmanes.caffeine.cache.Policy$Eviction:
    boolean isWeighted() -> isWeighted
    java.util.OptionalInt weightOf(java.lang.Object) -> weightOf
    java.util.OptionalLong weightedSize() -> weightedSize
    long getMaximum() -> getMaximum
    void setMaximum(long) -> setMaximum
    java.util.Map coldest(int) -> coldest
    237:237:java.util.Map coldestWeighted(long) -> coldestWeighted
    266:266:java.lang.Object coldest(java.util.function.Function) -> coldest
    java.util.Map hottest(int) -> hottest
    302:302:java.util.Map hottestWeighted(long) -> hottestWeighted
    331:331:java.lang.Object hottest(java.util.function.Function) -> hottest
com.github.benmanes.caffeine.cache.Policy$FixedExpiration -> com.github.benmanes.caffeine.cache.Policy$FixedExpiration:
    java.util.OptionalLong ageOf(java.lang.Object,java.util.concurrent.TimeUnit) -> ageOf
    366:369:java.util.Optional ageOf(java.lang.Object) -> ageOf
    long getExpiresAfter(java.util.concurrent.TimeUnit) -> getExpiresAfter
    394:394:java.time.Duration getExpiresAfter() -> getExpiresAfter
    void setExpiresAfter(long,java.util.concurrent.TimeUnit) -> setExpiresAfter
    417:418:void setExpiresAfter(java.time.Duration) -> setExpiresAfter
    java.util.Map oldest(int) -> oldest
    460:460:java.lang.Object oldest(java.util.function.Function) -> oldest
    java.util.Map youngest(int) -> youngest
    503:503:java.lang.Object youngest(java.util.function.Function) -> youngest
com.github.benmanes.caffeine.cache.Policy$FixedRefresh -> com.github.benmanes.caffeine.cache.Policy$FixedRefresh:
    java.util.OptionalLong ageOf(java.lang.Object,java.util.concurrent.TimeUnit) -> ageOf
    779:782:java.util.Optional ageOf(java.lang.Object) -> ageOf
    long getRefreshesAfter(java.util.concurrent.TimeUnit) -> getRefreshesAfter
    807:807:java.time.Duration getRefreshesAfter() -> getRefreshesAfter
    void setRefreshesAfter(long,java.util.concurrent.TimeUnit) -> setRefreshesAfter
    830:831:void setRefreshesAfter(java.time.Duration) -> setRefreshesAfter
com.github.benmanes.caffeine.cache.Policy$VarExpiration -> com.github.benmanes.caffeine.cache.Policy$VarExpiration:
    java.util.OptionalLong getExpiresAfter(java.lang.Object,java.util.concurrent.TimeUnit) -> getExpiresAfter
    530:533:java.util.Optional getExpiresAfter(java.lang.Object) -> getExpiresAfter
    void setExpiresAfter(java.lang.Object,long,java.util.concurrent.TimeUnit) -> setExpiresAfter
    558:559:void setExpiresAfter(java.lang.Object,java.time.Duration) -> setExpiresAfter
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit) -> putIfAbsent
    593:593:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object,java.time.Duration) -> putIfAbsent
    java.lang.Object put(java.lang.Object,java.lang.Object,long,java.util.concurrent.TimeUnit) -> put
    628:628:java.lang.Object put(java.lang.Object,java.lang.Object,java.time.Duration) -> put
    658:658:java.lang.Object compute(java.lang.Object,java.util.function.BiFunction,java.time.Duration) -> compute
    java.util.Map oldest(int) -> oldest
    701:701:java.lang.Object oldest(java.util.function.Function) -> oldest
    java.util.Map youngest(int) -> youngest
    744:744:java.lang.Object youngest(java.util.function.Function) -> youngest
com.github.benmanes.caffeine.cache.References -> com.github.benmanes.caffeine.cache.A:
com.github.benmanes.caffeine.cache.References$InternalReference -> com.github.benmanes.caffeine.cache.A$a:
    java.lang.Object get() -> get
    68:74:boolean referenceEquals(java.lang.Object) -> a
com.github.benmanes.caffeine.cache.References$WeakKeyReference -> com.github.benmanes.caffeine.cache.A$b:
    int hashCode -> a
    187:189:void <init>(java.lang.Object,java.lang.ref.ReferenceQueue) -> <init>
    193:193:java.lang.Object getKeyReference() -> getKeyReference
    198:198:boolean equals(java.lang.Object) -> equals
    203:203:int hashCode() -> hashCode
    208:209:java.lang.String toString() -> toString
com.github.benmanes.caffeine.cache.RemovalCause -> com.github.benmanes.caffeine.cache.RemovalCause:
    com.github.benmanes.caffeine.cache.RemovalCause EXPLICIT -> EXPLICIT
    com.github.benmanes.caffeine.cache.RemovalCause REPLACED -> REPLACED
    com.github.benmanes.caffeine.cache.RemovalCause COLLECTED -> COLLECTED
    com.github.benmanes.caffeine.cache.RemovalCause EXPIRED -> EXPIRED
    com.github.benmanes.caffeine.cache.RemovalCause SIZE -> SIZE
    com.github.benmanes.caffeine.cache.RemovalCause[] $VALUES -> a
    23:23:com.github.benmanes.caffeine.cache.RemovalCause[] values() -> values
    23:23:com.github.benmanes.caffeine.cache.RemovalCause valueOf(java.lang.String) -> valueOf
    23:23:void <init>(java.lang.String,int) -> <init>
    boolean wasEvicted() -> wasEvicted
    23:103:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.RemovalCause$1 -> com.github.benmanes.caffeine.cache.RemovalCause$1:
    49:49:void <init>(java.lang.String,int) -> <init>
    51:51:boolean wasEvicted() -> wasEvicted
com.github.benmanes.caffeine.cache.RemovalCause$2 -> com.github.benmanes.caffeine.cache.RemovalCause$2:
    71:71:void <init>(java.lang.String,int) -> <init>
    73:73:boolean wasEvicted() -> wasEvicted
com.github.benmanes.caffeine.cache.RemovalCause$3 -> com.github.benmanes.caffeine.cache.RemovalCause$3:
    82:82:void <init>(java.lang.String,int) -> <init>
    84:84:boolean wasEvicted() -> wasEvicted
com.github.benmanes.caffeine.cache.RemovalCause$4 -> com.github.benmanes.caffeine.cache.RemovalCause$4:
    93:93:void <init>(java.lang.String,int) -> <init>
    95:95:boolean wasEvicted() -> wasEvicted
com.github.benmanes.caffeine.cache.RemovalCause$5 -> com.github.benmanes.caffeine.cache.RemovalCause$5:
    103:103:void <init>(java.lang.String,int) -> <init>
    105:105:boolean wasEvicted() -> wasEvicted
com.github.benmanes.caffeine.cache.RemovalListener -> com.github.benmanes.caffeine.cache.RemovalListener:
    void onRemoval(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.RemovalCause) -> onRemoval
com.github.benmanes.caffeine.cache.Scheduler -> com.github.benmanes.caffeine.cache.Scheduler:
    java.util.concurrent.Future schedule(java.util.concurrent.Executor,java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    54:54:com.github.benmanes.caffeine.cache.Scheduler disabledScheduler() -> disabledScheduler
    64:64:com.github.benmanes.caffeine.cache.Scheduler systemScheduler() -> systemScheduler
    74:74:com.github.benmanes.caffeine.cache.Scheduler forScheduledExecutorService(java.util.concurrent.ScheduledExecutorService) -> forScheduledExecutorService
    85:85:com.github.benmanes.caffeine.cache.Scheduler guardedScheduler(com.github.benmanes.caffeine.cache.Scheduler) -> guardedScheduler
com.github.benmanes.caffeine.cache.SingletonWeigher -> com.github.benmanes.caffeine.cache.B:
    com.github.benmanes.caffeine.cache.SingletonWeigher INSTANCE -> a
    com.github.benmanes.caffeine.cache.SingletonWeigher[] $VALUES -> b
    73:73:com.github.benmanes.caffeine.cache.SingletonWeigher[] values() -> values
    73:73:com.github.benmanes.caffeine.cache.SingletonWeigher valueOf(java.lang.String) -> valueOf
    73:73:void <init>(java.lang.String,int) -> <init>
    77:77:int weigh(java.lang.Object,java.lang.Object) -> weigh
    73:74:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.SnapshotEntry -> com.github.benmanes.caffeine.cache.C:
    long snapshot -> a
    java.lang.Object value -> b
    java.lang.Object key -> c
    34:38:void <init>(java.lang.Object,java.lang.Object,long) -> <init>
    40:40:java.lang.Object getKey() -> getKey
    43:43:java.lang.Object getValue() -> getValue
    46:46:java.lang.Object setValue(java.lang.Object) -> setValue
    49:49:int weight() -> weight
    52:52:long expiresAt() -> expiresAt
    55:55:long refreshableAt() -> refreshableAt
    58:58:long snapshotAt() -> snapshotAt
    61:67:boolean equals(java.lang.Object) -> equals
    70:70:int hashCode() -> hashCode
    73:73:java.lang.String toString() -> toString
    78:78:com.github.benmanes.caffeine.cache.SnapshotEntry forEntry(java.lang.Object,java.lang.Object) -> a
    84:99:com.github.benmanes.caffeine.cache.SnapshotEntry forEntry(java.lang.Object,java.lang.Object,long,int,long,long) -> a
com.github.benmanes.caffeine.cache.SnapshotEntry$CompleteEntry -> com.github.benmanes.caffeine.cache.C$a:
    long refreshableAt -> a
    155:157:void <init>(java.lang.Object,java.lang.Object,long,int,long,long) -> <init>
    159:159:long refreshableAt() -> refreshableAt
com.github.benmanes.caffeine.cache.SnapshotEntry$ExpirableEntry -> com.github.benmanes.caffeine.cache.C$b:
    long expiresAt -> a
    119:121:void <init>(java.lang.Object,java.lang.Object,long,long) -> <init>
    123:123:long expiresAt() -> expiresAt
com.github.benmanes.caffeine.cache.SnapshotEntry$ExpirableWeightedEntry -> com.github.benmanes.caffeine.cache.C$c:
    long expiresAt -> a
    131:133:void <init>(java.lang.Object,java.lang.Object,long,int,long) -> <init>
    135:135:long expiresAt() -> expiresAt
com.github.benmanes.caffeine.cache.SnapshotEntry$RefreshableExpirableEntry -> com.github.benmanes.caffeine.cache.C$d:
    long refreshableAt -> a
    143:145:void <init>(java.lang.Object,java.lang.Object,long,long,long) -> <init>
    147:147:long refreshableAt() -> refreshableAt
com.github.benmanes.caffeine.cache.SnapshotEntry$WeightedEntry -> com.github.benmanes.caffeine.cache.C$e:
    int weight -> a
    107:109:void <init>(java.lang.Object,java.lang.Object,long,int) -> <init>
    111:111:int weight() -> weight
com.github.benmanes.caffeine.cache.StrongInterner -> com.github.benmanes.caffeine.cache.D:
    java.util.concurrent.ConcurrentMap map -> a
    82:84:void <init>() -> <init>
    86:92:java.lang.Object intern(java.lang.Object) -> intern
com.github.benmanes.caffeine.cache.SystemScheduler -> com.github.benmanes.caffeine.cache.E:
    com.github.benmanes.caffeine.cache.SystemScheduler INSTANCE -> a
    com.github.benmanes.caffeine.cache.SystemScheduler[] $VALUES -> b
    89:89:com.github.benmanes.caffeine.cache.SystemScheduler[] values() -> values
    89:89:com.github.benmanes.caffeine.cache.SystemScheduler valueOf(java.lang.String) -> valueOf
    89:89:void <init>(java.lang.String,int) -> <init>
    94:95:java.util.concurrent.Future schedule(java.util.concurrent.Executor,java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    89:90:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.SystemTicker -> com.github.benmanes.caffeine.cache.F:
    com.github.benmanes.caffeine.cache.SystemTicker INSTANCE -> a
    com.github.benmanes.caffeine.cache.SystemTicker[] $VALUES -> b
    53:53:com.github.benmanes.caffeine.cache.SystemTicker[] values() -> values
    53:53:com.github.benmanes.caffeine.cache.SystemTicker valueOf(java.lang.String) -> valueOf
    53:53:void <init>(java.lang.String,int) -> <init>
    57:57:long read() -> read
    53:54:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.Ticker -> com.github.benmanes.caffeine.cache.Ticker:
    long read() -> read
    40:40:com.github.benmanes.caffeine.cache.Ticker systemTicker() -> systemTicker
    49:49:com.github.benmanes.caffeine.cache.Ticker disabledTicker() -> disabledTicker
com.github.benmanes.caffeine.cache.UnboundedLocalCache -> com.github.benmanes.caffeine.cache.G:
    java.lang.System$Logger logger -> d
    java.lang.invoke.VarHandle REFRESHES -> e
    com.github.benmanes.caffeine.cache.RemovalListener removalListener -> f
    java.util.concurrent.ConcurrentHashMap data -> a
    com.github.benmanes.caffeine.cache.stats.StatsCounter statsCounter -> g
    boolean isRecordingStats -> b
    java.util.concurrent.Executor executor -> h
    boolean isAsync -> i
    com.github.benmanes.caffeine.cache.Ticker ticker -> j
    java.util.Set keySet -> k
    java.util.Collection values -> l
    java.util.Set entrySet -> m
    java.util.concurrent.ConcurrentMap refreshes -> c
    81:89:void <init>(com.github.benmanes.caffeine.cache.Caffeine,boolean) -> <init>
    1309:1309:int com.github.benmanes.caffeine.cache.Caffeine.getInitialCapacity():309:309 -> <init>
    1309:1309:void <init>(com.github.benmanes.caffeine.cache.Caffeine,boolean):82 -> <init>
    2305:2305:boolean com.github.benmanes.caffeine.cache.Caffeine.hasInitialCapacity():305:305 -> <init>
    2305:2305:int com.github.benmanes.caffeine.cache.Caffeine.getInitialCapacity():309 -> <init>
    2305:2305:void <init>(com.github.benmanes.caffeine.cache.Caffeine,boolean):82 -> <init>
    2970:2973:com.github.benmanes.caffeine.cache.RemovalListener com.github.benmanes.caffeine.cache.Caffeine.getRemovalListener(boolean):970:973 -> <init>
    2970:2973:void <init>(com.github.benmanes.caffeine.cache.Caffeine,boolean):84 -> <init>
    3863:3867:com.github.benmanes.caffeine.cache.Ticker com.github.benmanes.caffeine.cache.Caffeine.getTicker():863:867 -> <init>
    3863:3867:void <init>(com.github.benmanes.caffeine.cache.Caffeine,boolean):87 -> <init>
    102:102:boolean isAsync() -> d
    108:108:com.github.benmanes.caffeine.cache.Expiry expiry() -> i
    113:113:java.lang.Object referenceKey(java.lang.Object) -> c
    118:118:boolean isPendingEviction(java.lang.Object) -> d
    125:134:java.lang.Object getIfPresent(java.lang.Object,boolean) -> a
    139:139:java.lang.Object getIfPresentQuietly(java.lang.Object) -> a
    144:144:long estimatedSize() -> k
    149:167:java.util.Map getAllPresent(java.lang.Iterable) -> a
    171:171:void cleanUp() -> l
    175:175:com.github.benmanes.caffeine.cache.stats.StatsCounter statsCounter() -> f
    179:179:boolean hasRemovalListener() -> a
    185:201:void notifyRemoval(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.RemovalCause) -> a
    205:205:boolean isRecordingStats() -> e
    210:210:java.util.concurrent.Executor executor() -> g
    216:223:java.util.concurrent.ConcurrentMap refreshes() -> h
    228:232:void discardRefresh(java.lang.Object) -> b
    236:236:com.github.benmanes.caffeine.cache.Ticker statsTicker() -> j
    243:244:void forEach(java.util.function.BiConsumer) -> forEach
    248:273:void replaceAll(java.util.function.BiFunction) -> replaceAll
    278:300:java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function,boolean,boolean) -> a
    306:335:java.lang.Object computeIfPresent(java.lang.Object,java.util.function.BiFunction) -> computeIfPresent
    342:343:java.lang.Object compute(java.lang.Object,java.util.function.BiFunction,com.github.benmanes.caffeine.cache.Expiry,boolean,boolean) -> a
    348:351:java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction) -> merge
    365:386:java.lang.Object remap(java.lang.Object,java.util.function.BiFunction) -> a
    393:393:boolean isEmpty() -> isEmpty
    398:398:int size() -> size
    403:410:void clear() -> clear
    414:414:boolean containsKey(java.lang.Object) -> containsKey
    419:419:boolean containsValue(java.lang.Object) -> containsValue
    424:424:java.lang.Object get(java.lang.Object) -> get
    429:431:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    436:436:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    441:446:void putAll(java.util.Map) -> putAll
    451:464:java.lang.Object remove(java.lang.Object) -> remove
    469:492:boolean remove(java.lang.Object,java.lang.Object) -> remove
    497:510:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    515:515:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    520:540:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object,boolean) -> a
    545:545:boolean equals(java.lang.Object) -> equals
    550:550:int hashCode() -> hashCode
    555:564:java.lang.String toString() -> toString
    569:570:java.util.Set keySet() -> keySet
    575:576:java.util.Collection values() -> values
    581:582:java.util.Set entrySet() -> entrySet
    557:563:void lambda$toString$10(java.lang.StringBuilder,java.lang.Object,java.lang.Object) -> a
    526:533:java.lang.Object lambda$replace$9(java.lang.Object,boolean,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object) -> a
    502:504:java.lang.Object lambda$replace$8(java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object) -> a
    480:485:java.lang.Object lambda$remove$7(java.lang.Object,java.lang.Object[],java.lang.Object,java.lang.Object) -> a
    455:457:java.lang.Object lambda$remove$6(java.lang.Object[],java.lang.Object,java.lang.Object) -> a
    368:379:java.lang.Object lambda$remap$5(java.util.function.BiFunction,boolean[],java.lang.Object[],java.lang.Object,java.lang.Object) -> a
    352:352:java.lang.Object lambda$merge$4(java.lang.Object,java.util.function.BiFunction,java.lang.Object,java.lang.Object) -> a
    318:328:java.lang.Object lambda$computeIfPresent$3(java.util.function.BiFunction,boolean[],java.lang.Object[],java.lang.Object,java.lang.Object) -> b
    292:295:java.lang.Object lambda$computeIfAbsent$2(boolean[],boolean,java.util.function.Function,boolean,java.lang.Object,java.lang.Object) -> a
    256:268:java.lang.Object lambda$replaceAll$1(java.lang.Object[],java.lang.Object[],java.util.function.BiFunction,java.lang.Object,java.lang.Object) -> a
    190:194:void lambda$notifyRemoval$0(java.lang.Object,java.lang.Object,com.github.benmanes.caffeine.cache.RemovalCause) -> b
    65:98:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntryIterator -> com.github.benmanes.caffeine.cache.G$a:
    com.github.benmanes.caffeine.cache.UnboundedLocalCache cache -> a
    java.util.Iterator iterator -> b
    java.util.Map$Entry entry -> c
    942:945:void <init>(com.github.benmanes.caffeine.cache.UnboundedLocalCache) -> <init>
    949:949:boolean hasNext() -> hasNext
    960:965:void remove() -> remove
    937:937:java.lang.Object next() -> next
    1954:1955:java.util.Map$Entry next():954:955 -> next
    1954:1955:java.lang.Object next():937 -> next
com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntrySetView -> com.github.benmanes.caffeine.cache.G$b:
    com.github.benmanes.caffeine.cache.UnboundedLocalCache cache -> a
    839:841:void <init>(com.github.benmanes.caffeine.cache.UnboundedLocalCache) -> <init>
    845:845:boolean isEmpty() -> isEmpty
    850:850:int size() -> size
    855:856:void clear() -> clear
    860:870:boolean contains(java.lang.Object) -> contains
    875:888:boolean removeAll(java.util.Collection) -> removeAll
    893:898:boolean remove(java.lang.Object) -> remove
    903:910:boolean removeIf(java.util.function.Predicate) -> removeIf
    915:922:boolean retainAll(java.util.Collection) -> retainAll
    927:927:java.util.Iterator iterator() -> iterator
    932:932:java.util.Spliterator spliterator() -> spliterator
com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntrySpliterator -> com.github.benmanes.caffeine.cache.G$c:
    java.util.Spliterator spliterator -> a
    com.github.benmanes.caffeine.cache.UnboundedLocalCache cache -> b
    974:975:void <init>(com.github.benmanes.caffeine.cache.UnboundedLocalCache) -> <init>
    977:980:void <init>(com.github.benmanes.caffeine.cache.UnboundedLocalCache,java.util.Spliterator) -> <init>
    984:989:void forEachRemaining(java.util.function.Consumer) -> forEachRemaining
    993:994:boolean tryAdvance(java.util.function.Consumer) -> tryAdvance
    1008:1008:long estimateSize() -> estimateSize
    1013:1013:int characteristics() -> characteristics
    969:969:java.util.Spliterator trySplit() -> trySplit
    2002:2003:com.github.benmanes.caffeine.cache.UnboundedLocalCache$EntrySpliterator trySplit():1002:1003 -> trySplit
    2002:2003:java.util.Spliterator trySplit():969 -> trySplit
    995:997:void lambda$tryAdvance$1(java.util.function.Consumer,java.util.Map$Entry) -> a
    986:988:void lambda$forEachRemaining$0(java.util.function.Consumer,java.util.Map$Entry) -> b
com.github.benmanes.caffeine.cache.UnboundedLocalCache$KeyIterator -> com.github.benmanes.caffeine.cache.G$d:
    com.github.benmanes.caffeine.cache.UnboundedLocalCache cache -> a
    java.util.Iterator iterator -> b
    java.lang.Object current -> c
    682:685:void <init>(com.github.benmanes.caffeine.cache.UnboundedLocalCache) -> <init>
    689:689:boolean hasNext() -> hasNext
    694:695:java.lang.Object next() -> next
    700:705:void remove() -> remove
com.github.benmanes.caffeine.cache.UnboundedLocalCache$KeySetView -> com.github.benmanes.caffeine.cache.G$e:
    com.github.benmanes.caffeine.cache.UnboundedLocalCache cache -> a
    589:591:void <init>(com.github.benmanes.caffeine.cache.UnboundedLocalCache) -> <init>
    595:595:boolean isEmpty() -> isEmpty
    600:600:int size() -> size
    605:606:void clear() -> clear
    610:610:boolean contains(java.lang.Object) -> contains
    615:628:boolean removeAll(java.util.Collection) -> removeAll
    633:633:boolean remove(java.lang.Object) -> remove
    638:645:boolean removeIf(java.util.function.Predicate) -> removeIf
    650:657:boolean retainAll(java.util.Collection) -> retainAll
    662:663:void forEach(java.util.function.Consumer) -> forEach
    667:667:java.util.Iterator iterator() -> iterator
    672:672:java.util.Spliterator spliterator() -> spliterator
com.github.benmanes.caffeine.cache.UnboundedLocalCache$UnboundedLocalAsyncCache -> com.github.benmanes.caffeine.cache.G$f:
    com.github.benmanes.caffeine.cache.UnboundedLocalCache cache -> b
    java.util.concurrent.ConcurrentMap mapView -> c
    com.github.benmanes.caffeine.cache.LocalAsyncCache$CacheView cacheView -> d
    com.github.benmanes.caffeine.cache.Policy policy -> e
    1158:1161:void <init>(com.github.benmanes.caffeine.cache.Caffeine) -> <init>
    1170:1170:java.util.concurrent.ConcurrentMap asMap() -> asMap
    1175:1175:com.github.benmanes.caffeine.cache.Cache synchronous() -> synchronous
    1181:1187:com.github.benmanes.caffeine.cache.Policy policy() -> a
    1148:1148:com.github.benmanes.caffeine.cache.LocalCache cache() -> b
    2165:2165:com.github.benmanes.caffeine.cache.UnboundedLocalCache cache():1165:1165 -> b
    2165:2165:com.github.benmanes.caffeine.cache.LocalCache cache():1148 -> b
com.github.benmanes.caffeine.cache.UnboundedLocalCache$UnboundedLocalAsyncLoadingCache -> com.github.benmanes.caffeine.cache.G$g:
    com.github.benmanes.caffeine.cache.UnboundedLocalCache cache -> e
    java.util.concurrent.ConcurrentMap mapView -> f
    com.github.benmanes.caffeine.cache.Policy policy -> g
    1218:1221:void <init>(com.github.benmanes.caffeine.cache.Caffeine,com.github.benmanes.caffeine.cache.AsyncCacheLoader) -> <init>
    1225:1225:com.github.benmanes.caffeine.cache.LocalCache cache() -> b
    1230:1230:java.util.concurrent.ConcurrentMap asMap() -> asMap
    1236:1242:com.github.benmanes.caffeine.cache.Policy policy() -> a
com.github.benmanes.caffeine.cache.UnboundedLocalCache$UnboundedLocalLoadingCache -> com.github.benmanes.caffeine.cache.G$h:
    java.util.function.Function mappingFunction -> b
    com.github.benmanes.caffeine.cache.CacheLoader cacheLoader -> c
    java.util.function.Function bulkMappingFunction -> d
    1111:1115:void <init>(com.github.benmanes.caffeine.cache.Caffeine,com.github.benmanes.caffeine.cache.CacheLoader) -> <init>
    1119:1119:com.github.benmanes.caffeine.cache.AsyncCacheLoader cacheLoader() -> a
    1124:1124:java.util.function.Function mappingFunction() -> b
    1129:1129:java.util.function.Function bulkMappingFunction() -> c
com.github.benmanes.caffeine.cache.UnboundedLocalCache$UnboundedLocalManualCache -> com.github.benmanes.caffeine.cache.G$i:
    com.github.benmanes.caffeine.cache.UnboundedLocalCache cache -> a
    com.github.benmanes.caffeine.cache.Policy policy -> b
    1025:1027:void <init>(com.github.benmanes.caffeine.cache.Caffeine) -> <init>
    1036:1038:com.github.benmanes.caffeine.cache.Policy policy() -> policy
    1019:1019:com.github.benmanes.caffeine.cache.LocalCache cache() -> d
    2031:2031:com.github.benmanes.caffeine.cache.UnboundedLocalCache cache():1031:1031 -> d
    2031:2031:com.github.benmanes.caffeine.cache.LocalCache cache():1019 -> d
com.github.benmanes.caffeine.cache.UnboundedLocalCache$UnboundedPolicy -> com.github.benmanes.caffeine.cache.G$j:
    com.github.benmanes.caffeine.cache.UnboundedLocalCache cache -> a
    java.util.function.Function transformer -> b
    1060:1063:void <init>(com.github.benmanes.caffeine.cache.UnboundedLocalCache,java.util.function.Function) -> <init>
    1065:1065:boolean isRecordingStats() -> isRecordingStats
    1068:1068:java.lang.Object getIfPresentQuietly(java.lang.Object) -> getIfPresentQuietly
    1071:1072:com.github.benmanes.caffeine.cache.Policy$CacheEntry getEntryIfPresentQuietly(java.lang.Object) -> getEntryIfPresentQuietly
    1075:1081:java.util.Map refreshes() -> refreshes
    1084:1084:java.util.Optional eviction() -> eviction
    1087:1087:java.util.Optional expireAfterAccess() -> expireAfterAccess
    1090:1090:java.util.Optional expireAfterWrite() -> expireAfterWrite
    1093:1093:java.util.Optional expireVariably() -> expireVariably
    1096:1096:java.util.Optional refreshAfterWrite() -> refreshAfterWrite
com.github.benmanes.caffeine.cache.UnboundedLocalCache$ValuesIterator -> com.github.benmanes.caffeine.cache.G$k:
    com.github.benmanes.caffeine.cache.UnboundedLocalCache cache -> a
    java.util.Iterator iterator -> b
    java.util.Map$Entry entry -> c
    809:812:void <init>(com.github.benmanes.caffeine.cache.UnboundedLocalCache) -> <init>
    816:816:boolean hasNext() -> hasNext
    821:822:java.lang.Object next() -> next
    827:832:void remove() -> remove
com.github.benmanes.caffeine.cache.UnboundedLocalCache$ValuesView -> com.github.benmanes.caffeine.cache.G$l:
    com.github.benmanes.caffeine.cache.UnboundedLocalCache cache -> a
    712:714:void <init>(com.github.benmanes.caffeine.cache.UnboundedLocalCache) -> <init>
    718:718:boolean isEmpty() -> isEmpty
    723:723:int size() -> size
    728:729:void clear() -> clear
    733:733:boolean contains(java.lang.Object) -> contains
    738:746:boolean removeAll(java.util.Collection) -> removeAll
    751:759:boolean remove(java.lang.Object) -> remove
    764:771:boolean removeIf(java.util.function.Predicate) -> removeIf
    776:784:boolean retainAll(java.util.Collection) -> retainAll
    789:790:void forEach(java.util.function.Consumer) -> forEach
    794:794:java.util.Iterator iterator() -> iterator
    799:799:java.util.Spliterator spliterator() -> spliterator
com.github.benmanes.caffeine.cache.WeakInterner -> com.github.benmanes.caffeine.cache.H:
    com.github.benmanes.caffeine.cache.BoundedLocalCache cache -> a
    99:101:void <init>() -> <init>
    104:113:java.lang.Object intern(java.lang.Object) -> intern
com.github.benmanes.caffeine.cache.Weigher -> com.github.benmanes.caffeine.cache.Weigher:
    int weigh(java.lang.Object,java.lang.Object) -> weigh
    56:57:com.github.benmanes.caffeine.cache.Weigher singletonWeigher() -> singletonWeigher
    69:69:com.github.benmanes.caffeine.cache.Weigher boundedWeigher(com.github.benmanes.caffeine.cache.Weigher) -> boundedWeigher
com.github.benmanes.caffeine.cache.WriteThroughEntry -> com.github.benmanes.caffeine.cache.I:
    java.util.concurrent.ConcurrentMap map -> a
    35:37:void <init>(java.util.concurrent.ConcurrentMap,java.lang.Object,java.lang.Object) -> <init>
    46:47:java.lang.Object setValue(java.lang.Object) -> setValue
com.github.benmanes.caffeine.cache.stats.CacheStats -> com.github.benmanes.caffeine.cache.stats.CacheStats:
    com.github.benmanes.caffeine.cache.stats.CacheStats EMPTY_STATS -> a
    long hitCount -> b
    long missCount -> c
    long loadSuccessCount -> d
    long loadFailureCount -> e
    long totalLoadTime -> f
    long evictionCount -> g
    long evictionWeight -> h
    78:90:void <init>(long,long,long,long,long,long,long) -> <init>
    110:110:com.github.benmanes.caffeine.cache.stats.CacheStats of(long,long,long,long,long,long,long) -> of
    120:120:com.github.benmanes.caffeine.cache.stats.CacheStats empty() -> empty
    134:134:long requestCount() -> requestCount
    143:143:long hitCount() -> hitCount
    154:155:double hitRate() -> hitRate
    168:168:long missCount() -> missCount
    183:184:double missRate() -> missRate
    199:199:long loadCount() -> loadCount
    212:212:long loadSuccessCount() -> loadSuccessCount
    225:225:long loadFailureCount() -> loadFailureCount
    240:241:double loadFailureRate() -> loadFailureRate
    252:252:long totalLoadTime() -> totalLoadTime
    266:267:double averageLoadPenalty() -> averageLoadPenalty
    277:277:long evictionCount() -> evictionCount
    287:287:long evictionWeight() -> evictionWeight
    299:306:com.github.benmanes.caffeine.cache.stats.CacheStats minus(com.github.benmanes.caffeine.cache.stats.CacheStats) -> minus
    321:328:com.github.benmanes.caffeine.cache.stats.CacheStats plus(com.github.benmanes.caffeine.cache.stats.CacheStats) -> plus
    337:344:long saturatedAdd(long,long) -> a
    349:350:int hashCode() -> hashCode
    355:361:boolean equals(java.lang.Object) -> equals
    372:372:java.lang.String toString() -> toString
    65:65:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.stats.ConcurrentStatsCounter -> com.github.benmanes.caffeine.cache.stats.ConcurrentStatsCounter:
    java.util.concurrent.atomic.LongAdder hitCount -> a
    java.util.concurrent.atomic.LongAdder missCount -> b
    java.util.concurrent.atomic.LongAdder loadSuccessCount -> c
    java.util.concurrent.atomic.LongAdder loadFailureCount -> d
    java.util.concurrent.atomic.LongAdder totalLoadTime -> e
    java.util.concurrent.atomic.LongAdder evictionCount -> f
    java.util.concurrent.atomic.LongAdder evictionWeight -> g
    42:50:void <init>() -> <init>
    54:55:void recordHits(int) -> recordHits
    59:60:void recordMisses(int) -> recordMisses
    64:66:void recordLoadSuccess(long) -> recordLoadSuccess
    70:72:void recordLoadFailure(long) -> recordLoadFailure
    76:79:void recordEviction(int,com.github.benmanes.caffeine.cache.RemovalCause) -> recordEviction
    83:90:com.github.benmanes.caffeine.cache.stats.CacheStats snapshot() -> snapshot
    95:95:long negativeToMaxValue(long) -> a
    104:112:void incrementBy(com.github.benmanes.caffeine.cache.stats.StatsCounter) -> incrementBy
    116:116:java.lang.String toString() -> toString
com.github.benmanes.caffeine.cache.stats.DisabledStatsCounter -> com.github.benmanes.caffeine.cache.stats.a:
    com.github.benmanes.caffeine.cache.stats.DisabledStatsCounter INSTANCE -> a
    com.github.benmanes.caffeine.cache.stats.DisabledStatsCounter[] $VALUES -> b
    29:29:com.github.benmanes.caffeine.cache.stats.DisabledStatsCounter[] values() -> values
    29:29:com.github.benmanes.caffeine.cache.stats.DisabledStatsCounter valueOf(java.lang.String) -> valueOf
    29:29:void <init>(java.lang.String,int) -> <init>
    33:33:void recordHits(int) -> recordHits
    36:36:void recordMisses(int) -> recordMisses
    39:39:void recordLoadSuccess(long) -> recordLoadSuccess
    42:42:void recordLoadFailure(long) -> recordLoadFailure
    46:47:void recordEviction(int,com.github.benmanes.caffeine.cache.RemovalCause) -> recordEviction
    51:51:com.github.benmanes.caffeine.cache.stats.CacheStats snapshot() -> snapshot
    56:56:java.lang.String toString() -> toString
    29:30:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.stats.GuardedStatsCounter -> com.github.benmanes.caffeine.cache.stats.b:
    java.lang.System$Logger logger -> a
    com.github.benmanes.caffeine.cache.stats.StatsCounter delegate -> b
    37:39:void <init>(com.github.benmanes.caffeine.cache.stats.StatsCounter) -> <init>
    44:48:void recordHits(int) -> recordHits
    53:57:void recordMisses(int) -> recordMisses
    62:66:void recordLoadSuccess(long) -> recordLoadSuccess
    71:75:void recordLoadFailure(long) -> recordLoadFailure
    79:85:void recordEviction(int,com.github.benmanes.caffeine.cache.RemovalCause) -> recordEviction
    90:93:com.github.benmanes.caffeine.cache.stats.CacheStats snapshot() -> snapshot
    99:99:java.lang.String toString() -> toString
    33:33:void <clinit>() -> <clinit>
com.github.benmanes.caffeine.cache.stats.StatsCounter -> com.github.benmanes.caffeine.cache.stats.StatsCounter:
    void recordHits(int) -> recordHits
    void recordMisses(int) -> recordMisses
    void recordLoadSuccess(long) -> recordLoadSuccess
    void recordLoadFailure(long) -> recordLoadFailure
    void recordEviction(int,com.github.benmanes.caffeine.cache.RemovalCause) -> recordEviction
    com.github.benmanes.caffeine.cache.stats.CacheStats snapshot() -> snapshot
    101:101:com.github.benmanes.caffeine.cache.stats.StatsCounter disabledStatsCounter() -> disabledStatsCounter
    112:114:com.github.benmanes.caffeine.cache.stats.StatsCounter guardedStatsCounter(com.github.benmanes.caffeine.cache.stats.StatsCounter) -> guardedStatsCounter
com.google.gson.ExclusionStrategy -> com.google.gson.ExclusionStrategy:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> shouldSkipField
    boolean shouldSkipClass(java.lang.Class) -> shouldSkipClass
com.google.gson.FieldAttributes -> com.google.gson.FieldAttributes:
    java.lang.reflect.Field field -> a
    44:46:void <init>(java.lang.reflect.Field) -> <init>
    52:52:java.lang.Class getDeclaringClass() -> getDeclaringClass
    59:59:java.lang.String getName() -> getName
    79:79:java.lang.reflect.Type getDeclaredType() -> getDeclaredType
    99:99:java.lang.Class getDeclaredClass() -> getDeclaredClass
    110:110:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    120:120:java.util.Collection getAnnotations() -> getAnnotations
    134:134:boolean hasModifier(int) -> hasModifier
    139:139:java.lang.String toString() -> toString
com.google.gson.FieldNamingPolicy -> com.google.gson.FieldNamingPolicy:
    com.google.gson.FieldNamingPolicy IDENTITY -> IDENTITY
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE -> UPPER_CAMEL_CASE
    com.google.gson.FieldNamingPolicy UPPER_CAMEL_CASE_WITH_SPACES -> UPPER_CAMEL_CASE_WITH_SPACES
    com.google.gson.FieldNamingPolicy UPPER_CASE_WITH_UNDERSCORES -> UPPER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_UNDERSCORES -> LOWER_CASE_WITH_UNDERSCORES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DASHES -> LOWER_CASE_WITH_DASHES
    com.google.gson.FieldNamingPolicy LOWER_CASE_WITH_DOTS -> LOWER_CASE_WITH_DOTS
    com.google.gson.FieldNamingPolicy[] $VALUES -> a
    31:31:com.google.gson.FieldNamingPolicy[] values() -> values
    31:31:com.google.gson.FieldNamingPolicy valueOf(java.lang.String) -> valueOf
    31:31:void <init>(java.lang.String,int) -> <init>
    169:177:java.lang.String separateCamelCase(java.lang.String,char) -> a
    184:202:java.lang.String upperCaseFirstLetter(java.lang.String) -> a
    31:31:void <init>(java.lang.String,int,byte) -> <init>
    31:158:void <clinit>() -> <clinit>
com.google.gson.FieldNamingPolicy$1 -> com.google.gson.FieldNamingPolicy$1:
    37:37:void <init>(java.lang.String,int) -> <init>
    39:39:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$2 -> com.google.gson.FieldNamingPolicy$2:
    53:53:void <init>(java.lang.String,int) -> <init>
    55:55:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$3 -> com.google.gson.FieldNamingPolicy$3:
    72:72:void <init>(java.lang.String,int) -> <init>
    74:74:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$4 -> com.google.gson.FieldNamingPolicy$4:
    92:92:void <init>(java.lang.String,int) -> <init>
    94:94:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$5 -> com.google.gson.FieldNamingPolicy$5:
    110:110:void <init>(java.lang.String,int) -> <init>
    112:112:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$6 -> com.google.gson.FieldNamingPolicy$6:
    134:134:void <init>(java.lang.String,int) -> <init>
    136:136:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingPolicy$7 -> com.google.gson.FieldNamingPolicy$7:
    158:158:void <init>(java.lang.String,int) -> <init>
    160:160:java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.FieldNamingStrategy -> com.google.gson.FieldNamingStrategy:
    java.lang.String translateName(java.lang.reflect.Field) -> translateName
com.google.gson.Gson -> com.google.gson.Gson:
    java.lang.String DEFAULT_DATE_PATTERN -> a
    com.google.gson.FieldNamingStrategy DEFAULT_FIELD_NAMING_STRATEGY -> x
    com.google.gson.ToNumberStrategy DEFAULT_OBJECT_TO_NUMBER_STRATEGY -> b
    com.google.gson.ToNumberStrategy DEFAULT_NUMBER_TO_NUMBER_STRATEGY -> c
    java.lang.ThreadLocal threadLocalAdapterResults -> y
    java.util.concurrent.ConcurrentMap typeTokenCache -> z
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> A
    com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory -> B
    java.util.List factories -> C
    com.google.gson.internal.Excluder excluder -> d
    com.google.gson.FieldNamingStrategy fieldNamingStrategy -> e
    java.util.Map instanceCreators -> f
    boolean serializeNulls -> g
    boolean complexMapKeySerialization -> h
    boolean generateNonExecutableJson -> i
    boolean htmlSafe -> j
    boolean prettyPrinting -> k
    boolean lenient -> l
    boolean serializeSpecialFloatingPointValues -> m
    boolean useJdkUnsafe -> n
    java.lang.String datePattern -> o
    int dateStyle -> p
    int timeStyle -> q
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> r
    java.util.List builderFactories -> s
    java.util.List builderHierarchyFactories -> t
    com.google.gson.ToNumberStrategy objectToNumberStrategy -> u
    com.google.gson.ToNumberStrategy numberToNumberStrategy -> v
    java.util.List reflectionFilters -> w
    234:243:void <init>() -> <init>
    169:344:void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.lang.String,int,int,java.util.List,java.util.List,java.util.List,com.google.gson.ToNumberStrategy,com.google.gson.ToNumberStrategy,java.util.List) -> <init>
    1455:1458:com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy):455:458 -> <init>
    1455:1458:void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.lang.String,int,int,java.util.List,java.util.List,java.util.List,com.google.gson.ToNumberStrategy,com.google.gson.ToNumberStrategy,java.util.List):296 -> <init>
    2396:2399:com.google.gson.TypeAdapter doubleAdapter(boolean):396:399 -> <init>
    2396:2399:void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.lang.String,int,int,java.util.List,java.util.List,java.util.List,com.google.gson.ToNumberStrategy,com.google.gson.ToNumberStrategy,java.util.List):299 -> <init>
    2420:2423:com.google.gson.TypeAdapter floatAdapter(boolean):420:423 -> <init>
    2420:2423:void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.lang.String,int,int,java.util.List,java.util.List,java.util.List,com.google.gson.ToNumberStrategy,com.google.gson.ToNumberStrategy,java.util.List):301 -> <init>
    2477:2485:com.google.gson.TypeAdapter atomicLongAdapter(com.google.gson.TypeAdapter):477:485 -> <init>
    2477:2485:void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.lang.String,int,int,java.util.List,java.util.List,java.util.List,com.google.gson.ToNumberStrategy,com.google.gson.ToNumberStrategy,java.util.List):305 -> <init>
    2489:2512:com.google.gson.TypeAdapter atomicLongArrayAdapter(com.google.gson.TypeAdapter):489:512 -> <init>
    2489:2512:void <init>(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.lang.String,int,int,java.util.List,java.util.List,java.util.List,com.google.gson.ToNumberStrategy,com.google.gson.ToNumberStrategy,java.util.List):306 -> <init>
    354:354:com.google.gson.GsonBuilder newBuilder() -> newBuilder
    363:363:com.google.gson.internal.Excluder excluder() -> excluder
    372:372:com.google.gson.FieldNamingStrategy fieldNamingStrategy() -> fieldNamingStrategy
    382:382:boolean serializeNulls() -> serializeNulls
    392:392:boolean htmlSafe() -> htmlSafe
    447:452:void checkValidFloatingPoint(double) -> a
    527:583:com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> getAdapter
    3345:3349:void com.google.gson.Gson$FutureTypeAdapter.setDelegate(com.google.gson.TypeAdapter):1345:1349 -> getAdapter
    3345:3349:com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken):558 -> getAdapter
    639:657:com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken) -> getDelegateAdapter
    667:667:com.google.gson.TypeAdapter getAdapter(java.lang.Class) -> getAdapter
    686:689:com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    711:713:com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type) -> toJsonTree
    733:736:java.lang.String toJson(java.lang.Object) -> toJson
    758:760:java.lang.String toJson(java.lang.Object,java.lang.reflect.Type) -> toJson
    782:787:void toJson(java.lang.Object,java.lang.Appendable) -> toJson
    811:816:void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) -> toJson
    834:852:void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) -> toJson
    862:864:java.lang.String toJson(com.google.gson.JsonElement) -> toJson
    877:882:void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> toJson
    897:907:com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer) -> newJsonWriter
    919:921:com.google.gson.stream.JsonReader newJsonReader(java.io.Reader) -> newJsonReader
    938:955:void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> toJson
    982:983:java.lang.Object fromJson(java.lang.String,java.lang.Class) -> fromJson
    1014:1014:java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type) -> fromJson
    1043:1047:java.lang.Object fromJson(java.lang.String,com.google.gson.reflect.TypeToken) -> fromJson
    1075:1076:java.lang.Object fromJson(java.io.Reader,java.lang.Class) -> fromJson
    1107:1107:java.lang.Object fromJson(java.io.Reader,java.lang.reflect.Type) -> fromJson
    1136:1139:java.lang.Object fromJson(java.io.Reader,com.google.gson.reflect.TypeToken) -> fromJson
    4144:4152:void assertFullConsumption(java.lang.Object,com.google.gson.stream.JsonReader):1144:1152 -> fromJson
    4144:4152:java.lang.Object fromJson(java.io.Reader,com.google.gson.reflect.TypeToken):1138 -> fromJson
    1186:1186:java.lang.Object fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) -> fromJson
    1220:1246:java.lang.Object fromJson(com.google.gson.stream.JsonReader,com.google.gson.reflect.TypeToken) -> fromJson
    1271:1272:java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class) -> fromJson
    1300:1300:java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) -> fromJson
    1326:1329:java.lang.Object fromJson(com.google.gson.JsonElement,com.google.gson.reflect.TypeToken) -> fromJson
    1377:1377:java.lang.String toString() -> toString
    150:153:void <clinit>() -> <clinit>
com.google.gson.Gson$1 -> com.google.gson.Gson$1:
    399:399:void <init>(com.google.gson.Gson) -> <init>
    399:399:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1401:1405:java.lang.Double read(com.google.gson.stream.JsonReader):401:405 -> read
    1401:1405:java.lang.Object read(com.google.gson.stream.JsonReader):399 -> read
    399:399:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1408:1415:void write(com.google.gson.stream.JsonWriter,java.lang.Number):408:415 -> write
    1408:1415:void write(com.google.gson.stream.JsonWriter,java.lang.Object):399 -> write
com.google.gson.Gson$2 -> com.google.gson.Gson$2:
    423:423:void <init>(com.google.gson.Gson) -> <init>
    423:423:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1425:1429:java.lang.Float read(com.google.gson.stream.JsonReader):425:429 -> read
    1425:1429:java.lang.Object read(com.google.gson.stream.JsonReader):423 -> read
    423:423:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1432:1442:void write(com.google.gson.stream.JsonWriter,java.lang.Number):432:442 -> write
    1432:1442:void write(com.google.gson.stream.JsonWriter,java.lang.Object):423 -> write
com.google.gson.Gson$3 -> com.google.gson.Gson$3:
    458:458:void <init>() -> <init>
    458:458:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1460:1464:java.lang.Number read(com.google.gson.stream.JsonReader):460:464 -> read
    1460:1464:java.lang.Object read(com.google.gson.stream.JsonReader):458 -> read
    458:458:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1467:1472:void write(com.google.gson.stream.JsonWriter,java.lang.Number):467:472 -> write
    1467:1472:void write(com.google.gson.stream.JsonWriter,java.lang.Object):458 -> write
com.google.gson.Gson$4 -> com.google.gson.Gson$4:
    com.google.gson.TypeAdapter val$longAdapter -> a
    477:477:void <init>(com.google.gson.TypeAdapter) -> <init>
    477:477:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1482:1483:java.util.concurrent.atomic.AtomicLong read(com.google.gson.stream.JsonReader):482:483 -> read
    1482:1483:java.lang.Object read(com.google.gson.stream.JsonReader):477 -> read
    477:477:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    2479:2480:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLong):479:480 -> write
    2479:2480:void write(com.google.gson.stream.JsonWriter,java.lang.Object):477 -> write
com.google.gson.Gson$5 -> com.google.gson.Gson$5:
    com.google.gson.TypeAdapter val$longAdapter -> a
    489:489:void <init>(com.google.gson.TypeAdapter) -> <init>
    489:489:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1498:1510:java.util.concurrent.atomic.AtomicLongArray read(com.google.gson.stream.JsonReader):498:510 -> read
    1498:1510:java.lang.Object read(com.google.gson.stream.JsonReader):489 -> read
    489:489:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    2491:2496:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicLongArray):491:496 -> write
    2491:2496:void write(com.google.gson.stream.JsonWriter,java.lang.Object):489 -> write
com.google.gson.Gson$FutureTypeAdapter -> com.google.gson.Gson$a:
    com.google.gson.TypeAdapter delegate -> a
    1341:1342:void <init>() -> <init>
    1352:1359:com.google.gson.TypeAdapter delegate() -> a
    1363:1363:com.google.gson.TypeAdapter getSerializationDelegate() -> getSerializationDelegate
    1367:1367:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1371:1372:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.GsonBuilder -> com.google.gson.GsonBuilder:
    com.google.gson.internal.Excluder excluder -> a
    com.google.gson.LongSerializationPolicy longSerializationPolicy -> b
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> c
    java.util.Map instanceCreators -> d
    java.util.List factories -> e
    java.util.List hierarchyFactories -> f
    boolean serializeNulls -> g
    java.lang.String datePattern -> h
    int dateStyle -> i
    int timeStyle -> j
    boolean complexMapKeySerialization -> k
    boolean serializeSpecialFloatingPointValues -> l
    boolean escapeHtmlChars -> m
    boolean prettyPrinting -> n
    boolean generateNonExecutableJson -> o
    boolean lenient -> p
    boolean useJdkUnsafe -> q
    com.google.gson.ToNumberStrategy objectToNumberStrategy -> r
    com.google.gson.ToNumberStrategy numberToNumberStrategy -> s
    java.util.LinkedList reflectionFilters -> t
    87:116:void <init>() -> <init>
    87:145:void <init>(com.google.gson.Gson) -> <init>
    163:167:com.google.gson.GsonBuilder setVersion(double) -> setVersion
    185:187:com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[]) -> excludeFieldsWithModifiers
    200:201:com.google.gson.GsonBuilder generateNonExecutableJson() -> generateNonExecutableJson
    214:215:com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    226:227:com.google.gson.GsonBuilder serializeNulls() -> serializeNulls
    310:311:com.google.gson.GsonBuilder enableComplexMapKeySerialization() -> enableComplexMapKeySerialization
    334:335:com.google.gson.GsonBuilder disableInnerClassSerialization() -> disableInnerClassSerialization
    347:348:com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy) -> setLongSerializationPolicy
    358:358:com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy) -> setFieldNamingPolicy
    374:375:com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy) -> setFieldNamingStrategy
    387:388:com.google.gson.GsonBuilder setObjectToNumberStrategy(com.google.gson.ToNumberStrategy) -> setObjectToNumberStrategy
    400:401:com.google.gson.GsonBuilder setNumberToNumberStrategy(com.google.gson.ToNumberStrategy) -> setNumberToNumberStrategy
    431:435:com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[]) -> setExclusionStrategies
    454:456:com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addSerializationExclusionStrategy
    475:477:com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy) -> addDeserializationExclusionStrategy
    487:488:com.google.gson.GsonBuilder setPrettyPrinting() -> setPrettyPrinting
    502:503:com.google.gson.GsonBuilder setLenient() -> setLenient
    514:515:com.google.gson.GsonBuilder disableHtmlEscaping() -> disableHtmlEscaping
    536:537:com.google.gson.GsonBuilder setDateFormat(java.lang.String) -> setDateFormat
    555:557:com.google.gson.GsonBuilder setDateFormat(int) -> setDateFormat
    576:579:com.google.gson.GsonBuilder setDateFormat(int,int) -> setDateFormat
    605:622:com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object) -> registerTypeAdapter
    638:640:com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory) -> registerTypeAdapterFactory
    658:670:com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object) -> registerTypeHierarchyAdapter
    694:695:com.google.gson.GsonBuilder serializeSpecialFloatingPointValues() -> serializeSpecialFloatingPointValues
    715:716:com.google.gson.GsonBuilder disableJdkUnsafe() -> disableJdkUnsafe
    740:742:com.google.gson.GsonBuilder addReflectionAccessFilter(com.google.gson.ReflectionAccessFilter) -> addReflectionAccessFilter
    752:762:com.google.gson.Gson create() -> create
    1774:1801:void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List):774:801 -> create
    1774:1801:com.google.gson.Gson create():760 -> create
com.google.gson.InstanceCreator -> com.google.gson.InstanceCreator:
    java.lang.Object createInstance(java.lang.reflect.Type) -> createInstance
com.google.gson.JsonArray -> com.google.gson.JsonArray:
    java.util.ArrayList elements -> a
    45:47:void <init>() -> <init>
    58:60:void <init>(int) -> <init>
    69:76:com.google.gson.JsonArray deepCopy() -> deepCopy
    86:87:void add(java.lang.Boolean) -> add
    96:97:void add(java.lang.Character) -> add
    106:107:void add(java.lang.Number) -> add
    116:117:void add(java.lang.String) -> add
    125:129:void add(com.google.gson.JsonElement) -> add
    137:138:void addAll(com.google.gson.JsonArray) -> addAll
    149:149:com.google.gson.JsonElement set(int,com.google.gson.JsonElement) -> set
    161:161:boolean remove(com.google.gson.JsonElement) -> remove
    175:175:com.google.gson.JsonElement remove(int) -> remove
    186:186:boolean contains(com.google.gson.JsonElement) -> contains
    195:195:int size() -> size
    205:205:boolean isEmpty() -> isEmpty
    216:216:java.util.Iterator iterator() -> iterator
    228:228:com.google.gson.JsonElement get(int) -> get
    232:236:com.google.gson.JsonElement getAsSingleElement() -> a
    249:249:java.lang.Number getAsNumber() -> getAsNumber
    262:262:java.lang.String getAsString() -> getAsString
    275:275:double getAsDouble() -> getAsDouble
    289:289:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    303:303:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    316:316:float getAsFloat() -> getAsFloat
    329:329:long getAsLong() -> getAsLong
    342:342:int getAsInt() -> getAsInt
    355:355:byte getAsByte() -> getAsByte
    371:371:char getAsCharacter() -> getAsCharacter
    384:384:short getAsShort() -> getAsShort
    397:397:boolean getAsBoolean() -> getAsBoolean
    412:412:java.util.List asList() -> asList
    422:422:boolean equals(java.lang.Object) -> equals
    431:431:int hashCode() -> hashCode
    38:38:com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonDeserializationContext -> com.google.gson.JsonDeserializationContext:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
com.google.gson.JsonDeserializer -> com.google.gson.JsonDeserializer:
    java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type,com.google.gson.JsonDeserializationContext) -> deserialize
com.google.gson.JsonElement -> com.google.gson.JsonElement:
    40:41:void <init>() -> <init>
    com.google.gson.JsonElement deepCopy() -> deepCopy
    57:57:boolean isJsonArray() -> isJsonArray
    66:66:boolean isJsonObject() -> isJsonObject
    75:75:boolean isJsonPrimitive() -> isJsonPrimitive
    85:85:boolean isJsonNull() -> isJsonNull
    98:101:com.google.gson.JsonObject getAsJsonObject() -> getAsJsonObject
    114:117:com.google.gson.JsonArray getAsJsonArray() -> getAsJsonArray
    130:133:com.google.gson.JsonPrimitive getAsJsonPrimitive() -> getAsJsonPrimitive
    147:150:com.google.gson.JsonNull getAsJsonNull() -> getAsJsonNull
    162:162:boolean getAsBoolean() -> getAsBoolean
    175:175:java.lang.Number getAsNumber() -> getAsNumber
    187:187:java.lang.String getAsString() -> getAsString
    200:200:double getAsDouble() -> getAsDouble
    213:213:float getAsFloat() -> getAsFloat
    226:226:long getAsLong() -> getAsLong
    239:239:int getAsInt() -> getAsInt
    253:253:byte getAsByte() -> getAsByte
    270:270:char getAsCharacter() -> getAsCharacter
    284:284:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    298:298:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    311:311:short getAsShort() -> getAsShort
    320:326:java.lang.String toString() -> toString
com.google.gson.JsonIOException -> com.google.gson.JsonIOException:
    29:30:void <init>(java.lang.String) -> <init>
    33:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.Throwable) -> <init>
com.google.gson.JsonNull -> com.google.gson.JsonNull:
    com.google.gson.JsonNull INSTANCE -> INSTANCE
    40:42:void <init>() -> <init>
    51:51:com.google.gson.JsonNull deepCopy() -> deepCopy
    59:59:int hashCode() -> hashCode
    67:67:boolean equals(java.lang.Object) -> equals
    26:26:com.google.gson.JsonElement deepCopy() -> deepCopy
    32:32:void <clinit>() -> <clinit>
com.google.gson.JsonObject -> com.google.gson.JsonObject:
    com.google.gson.internal.LinkedTreeMap members -> a
    37:44:void <init>() -> <init>
    53:57:com.google.gson.JsonObject deepCopy() -> deepCopy
    69:70:void add(java.lang.String,com.google.gson.JsonElement) -> add
    81:81:com.google.gson.JsonElement remove(java.lang.String) -> remove
    92:93:void addProperty(java.lang.String,java.lang.String) -> addProperty
    103:104:void addProperty(java.lang.String,java.lang.Number) -> addProperty
    114:115:void addProperty(java.lang.String,java.lang.Boolean) -> addProperty
    125:126:void addProperty(java.lang.String,java.lang.Character) -> addProperty
    135:135:java.util.Set entrySet() -> entrySet
    145:145:java.util.Set keySet() -> keySet
    155:155:int size() -> size
    165:165:boolean isEmpty() -> isEmpty
    175:175:boolean has(java.lang.String) -> has
    185:185:com.google.gson.JsonElement get(java.lang.String) -> get
    197:197:com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String) -> getAsJsonPrimitive
    209:209:com.google.gson.JsonArray getAsJsonArray(java.lang.String) -> getAsJsonArray
    221:221:com.google.gson.JsonObject getAsJsonObject(java.lang.String) -> getAsJsonObject
    237:237:java.util.Map asMap() -> asMap
    247:248:boolean equals(java.lang.Object) -> equals
    257:257:int hashCode() -> hashCode
    36:36:com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonParseException -> com.google.gson.JsonParseException:
    42:43:void <init>(java.lang.String) -> <init>
    52:53:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    62:63:void <init>(java.lang.Throwable) -> <init>
com.google.gson.JsonParser -> com.google.gson.JsonParser:
    36:36:void <init>() -> <init>
    51:51:com.google.gson.JsonElement parseString(java.lang.String) -> parseString
    69:80:com.google.gson.JsonElement parseReader(java.io.Reader) -> parseReader
    99:109:com.google.gson.JsonElement parseReader(com.google.gson.stream.JsonReader) -> parseReader
    115:115:com.google.gson.JsonElement parse(java.lang.String) -> parse
    121:121:com.google.gson.JsonElement parse(java.io.Reader) -> parse
    127:127:com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
com.google.gson.JsonPrimitive -> com.google.gson.JsonPrimitive:
    java.lang.Object value -> a
    42:44:void <init>(java.lang.Boolean) -> <init>
    52:54:void <init>(java.lang.Number) -> <init>
    62:64:void <init>(java.lang.String) -> <init>
    73:77:void <init>(java.lang.Character) -> <init>
    86:86:com.google.gson.JsonPrimitive deepCopy() -> deepCopy
    95:95:boolean isBoolean() -> isBoolean
    106:110:boolean getAsBoolean() -> getAsBoolean
    119:119:boolean isNumber() -> isNumber
    132:137:java.lang.Number getAsNumber() -> getAsNumber
    146:146:boolean isString() -> isString
    152:159:java.lang.String getAsString() -> getAsString
    167:167:double getAsDouble() -> getAsDouble
    175:175:java.math.BigDecimal getAsBigDecimal() -> getAsBigDecimal
    183:184:java.math.BigInteger getAsBigInteger() -> getAsBigInteger
    192:192:float getAsFloat() -> getAsFloat
    203:203:long getAsLong() -> getAsLong
    211:211:short getAsShort() -> getAsShort
    219:219:int getAsInt() -> getAsInt
    227:227:byte getAsByte() -> getAsByte
    239:243:char getAsCharacter() -> getAsCharacter
    252:264:int hashCode() -> hashCode
    274:294:boolean equals(java.lang.Object) -> equals
    302:307:boolean isIntegral(com.google.gson.JsonPrimitive) -> a
    32:32:com.google.gson.JsonElement deepCopy() -> deepCopy
com.google.gson.JsonSerializationContext -> com.google.gson.JsonSerializationContext:
    com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
com.google.gson.JsonSerializer -> com.google.gson.JsonSerializer:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> serialize
com.google.gson.JsonStreamParser -> com.google.gson.JsonStreamParser:
    com.google.gson.stream.JsonReader parser -> a
    java.lang.Object lock -> b
    60:61:void <init>(java.lang.String) -> <init>
    67:71:void <init>(java.io.Reader) -> <init>
    84:93:com.google.gson.JsonElement next() -> next
    105:113:boolean hasNext() -> hasNext
    123:123:void remove() -> remove
    51:51:java.lang.Object next() -> next
com.google.gson.JsonSyntaxException -> com.google.gson.JsonSyntaxException:
    30:31:void <init>(java.lang.String) -> <init>
    34:35:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    45:46:void <init>(java.lang.Throwable) -> <init>
com.google.gson.LongSerializationPolicy -> com.google.gson.LongSerializationPolicy:
    com.google.gson.LongSerializationPolicy DEFAULT -> DEFAULT
    com.google.gson.LongSerializationPolicy STRING -> STRING
    com.google.gson.LongSerializationPolicy[] $VALUES -> a
    27:27:com.google.gson.LongSerializationPolicy[] values() -> values
    27:27:com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
    27:27:void <init>(java.lang.String,int,byte) -> <init>
    27:52:void <clinit>() -> <clinit>
com.google.gson.LongSerializationPolicy$1 -> com.google.gson.LongSerializationPolicy$1:
    36:36:void <init>(java.lang.String,int) -> <init>
    38:41:com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.LongSerializationPolicy$2 -> com.google.gson.LongSerializationPolicy$2:
    52:52:void <init>(java.lang.String,int) -> <init>
    54:57:com.google.gson.JsonElement serialize(java.lang.Long) -> serialize
com.google.gson.ReflectionAccessFilter -> com.google.gson.ReflectionAccessFilter:
    com.google.gson.ReflectionAccessFilter BLOCK_INACCESSIBLE_JAVA -> BLOCK_INACCESSIBLE_JAVA
    com.google.gson.ReflectionAccessFilter BLOCK_ALL_JAVA -> BLOCK_ALL_JAVA
    com.google.gson.ReflectionAccessFilter BLOCK_ALL_ANDROID -> BLOCK_ALL_ANDROID
    com.google.gson.ReflectionAccessFilter BLOCK_ALL_PLATFORM -> BLOCK_ALL_PLATFORM
    com.google.gson.ReflectionAccessFilter$FilterResult check(java.lang.Class) -> check
    105:179:void <clinit>() -> <clinit>
com.google.gson.ReflectionAccessFilter$1 -> com.google.gson.ReflectionAccessFilter$1:
    105:105:void <init>() -> <init>
    107:109:com.google.gson.ReflectionAccessFilter$FilterResult check(java.lang.Class) -> check
com.google.gson.ReflectionAccessFilter$2 -> com.google.gson.ReflectionAccessFilter$2:
    130:130:void <init>() -> <init>
    132:134:com.google.gson.ReflectionAccessFilter$FilterResult check(java.lang.Class) -> check
com.google.gson.ReflectionAccessFilter$3 -> com.google.gson.ReflectionAccessFilter$3:
    154:154:void <init>() -> <init>
    156:158:com.google.gson.ReflectionAccessFilter$FilterResult check(java.lang.Class) -> check
com.google.gson.ReflectionAccessFilter$4 -> com.google.gson.ReflectionAccessFilter$4:
    179:179:void <init>() -> <init>
    181:183:com.google.gson.ReflectionAccessFilter$FilterResult check(java.lang.Class) -> check
com.google.gson.ReflectionAccessFilter$FilterResult -> com.google.gson.ReflectionAccessFilter$FilterResult:
    com.google.gson.ReflectionAccessFilter$FilterResult ALLOW -> ALLOW
    com.google.gson.ReflectionAccessFilter$FilterResult INDECISIVE -> INDECISIVE
    com.google.gson.ReflectionAccessFilter$FilterResult BLOCK_INACCESSIBLE -> BLOCK_INACCESSIBLE
    com.google.gson.ReflectionAccessFilter$FilterResult BLOCK_ALL -> BLOCK_ALL
    com.google.gson.ReflectionAccessFilter$FilterResult[] $VALUES -> a
    38:38:com.google.gson.ReflectionAccessFilter$FilterResult[] values() -> values
    38:38:com.google.gson.ReflectionAccessFilter$FilterResult valueOf(java.lang.String) -> valueOf
    38:38:void <init>(java.lang.String,int) -> <init>
    38:80:void <clinit>() -> <clinit>
com.google.gson.ToNumberPolicy -> com.google.gson.ToNumberPolicy:
    com.google.gson.ToNumberPolicy DOUBLE -> DOUBLE
    com.google.gson.ToNumberPolicy LAZILY_PARSED_NUMBER -> LAZILY_PARSED_NUMBER
    com.google.gson.ToNumberPolicy LONG_OR_DOUBLE -> LONG_OR_DOUBLE
    com.google.gson.ToNumberPolicy BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.ToNumberPolicy[] $VALUES -> a
    33:33:com.google.gson.ToNumberPolicy[] values() -> values
    33:33:com.google.gson.ToNumberPolicy valueOf(java.lang.String) -> valueOf
    33:33:void <init>(java.lang.String,int) -> <init>
    33:33:void <init>(java.lang.String,int,byte) -> <init>
    33:88:void <clinit>() -> <clinit>
com.google.gson.ToNumberPolicy$1 -> com.google.gson.ToNumberPolicy$1:
    39:39:void <init>(java.lang.String,int) -> <init>
    39:39:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
    1041:1041:java.lang.Double readNumber(com.google.gson.stream.JsonReader):41:41 -> readNumber
    1041:1041:java.lang.Number readNumber(com.google.gson.stream.JsonReader):39 -> readNumber
com.google.gson.ToNumberPolicy$2 -> com.google.gson.ToNumberPolicy$2:
    50:50:void <init>(java.lang.String,int) -> <init>
    52:52:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.ToNumberPolicy$3 -> com.google.gson.ToNumberPolicy$3:
    65:65:void <init>(java.lang.String,int) -> <init>
    67:78:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.ToNumberPolicy$4 -> com.google.gson.ToNumberPolicy$4:
    88:88:void <init>(java.lang.String,int) -> <init>
    90:94:java.math.BigDecimal readNumber(com.google.gson.stream.JsonReader) -> a
    88:88:java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.ToNumberStrategy -> com.google.gson.ToNumberStrategy:
    java.lang.Number readNumber(com.google.gson.stream.JsonReader) -> readNumber
com.google.gson.TypeAdapter -> com.google.gson.TypeAdapter:
    124:125:void <init>() -> <init>
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    146:148:void toJson(java.io.Writer,java.lang.Object) -> toJson
    191:191:com.google.gson.TypeAdapter nullSafe() -> nullSafe
    220:226:java.lang.String toJson(java.lang.Object) -> toJson
    239:243:com.google.gson.JsonElement toJsonTree(java.lang.Object) -> toJsonTree
    java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    268:269:java.lang.Object fromJson(java.io.Reader) -> fromJson
    285:285:java.lang.Object fromJson(java.lang.String) -> fromJson
    298:301:java.lang.Object fromJsonTree(com.google.gson.JsonElement) -> fromJsonTree
com.google.gson.TypeAdapter$1 -> com.google.gson.TypeAdapter$1:
    com.google.gson.TypeAdapter this$0 -> a
    191:191:void <init>(com.google.gson.TypeAdapter) -> <init>
    193:198:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    200:204:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.TypeAdapterFactory -> com.google.gson.TypeAdapterFactory:
    com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.annotations.Expose -> com.google.gson.annotations.Expose:
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
com.google.gson.annotations.JsonAdapter -> com.google.gson.annotations.JsonAdapter:
    java.lang.Class value() -> value
    boolean nullSafe() -> nullSafe
com.google.gson.annotations.SerializedName -> com.google.gson.annotations.SerializedName:
    java.lang.String value() -> value
    java.lang.String[] alternate() -> alternate
com.google.gson.annotations.Since -> com.google.gson.annotations.Since:
    double value() -> value
com.google.gson.annotations.Until -> com.google.gson.annotations.Until:
    double value() -> value
com.google.gson.internal.$Gson$Preconditions -> com.google.gson.internal.$Gson$Preconditions:
    35:36:void <init>() -> <init>
    46:49:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    53:56:void checkArgument(boolean) -> checkArgument
com.google.gson.internal.$Gson$Types -> com.google.gson.internal.$Gson$Types:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> a
    boolean $assertionsDisabled -> b
    48:49:void <init>() -> <init>
    60:60:java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    70:70:java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    81:86:java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    96:101:java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    110:129:java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    134:165:java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    178:228:boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    1171:1171:boolean equal(java.lang.Object,java.lang.Object):171:171 -> equals
    1171:1171:boolean equals(java.lang.reflect.Type,java.lang.reflect.Type):194 -> equals
    233:233:java.lang.String typeToString(java.lang.reflect.Type) -> typeToString
    242:272:java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> a
    283:292:java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> b
    300:302:java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    310:315:java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> getCollectionElementType
    328:338:java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> getMapKeyAndValueTypes
    343:343:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> resolve
    349:440:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Map) -> a
    1444:1457:java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable):444:457 -> a
    1444:1457:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Map):365 -> a
    1474:1477:java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable):474:477 -> a
    1474:1477:java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable):444 -> a
    1474:1477:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Map):365 -> a
    2461:2466:int indexOf(java.lang.Object[],java.lang.Object):461:466 -> a
    2461:2466:java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable):453 -> a
    2461:2466:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Map):365 -> a
    3171:3171:boolean equal(java.lang.Object,java.lang.Object):171:171 -> a
    3171:3171:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Map):374 -> a
    4171:4171:boolean equal(java.lang.Object,java.lang.Object):171:171 -> a
    4171:4171:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Map):383 -> a
    5171:5171:boolean equal(java.lang.Object,java.lang.Object):171:171 -> a
    5171:5171:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Map):392 -> a
    6171:6171:boolean equal(java.lang.Object,java.lang.Object):171:171 -> a
    6171:6171:java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type,java.util.Map):397 -> a
    481:482:void checkNotPrimitive(java.lang.reflect.Type) -> a
    45:46:void <clinit>() -> <clinit>
com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl -> com.google.gson.internal.$Gson$Types$a:
    java.lang.reflect.Type componentType -> a
    556:559:void <init>(java.lang.reflect.Type) -> <init>
    562:562:java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    566:567:boolean equals(java.lang.Object) -> equals
    571:571:int hashCode() -> hashCode
    575:575:java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl -> com.google.gson.internal.$Gson$Types$b:
    java.lang.reflect.Type ownerType -> a
    java.lang.reflect.Type rawType -> b
    java.lang.reflect.Type[] typeArguments -> c
    489:507:void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> <init>
    510:510:java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    514:514:java.lang.reflect.Type getRawType() -> getRawType
    518:518:java.lang.reflect.Type getOwnerType() -> getOwnerType
    522:523:boolean equals(java.lang.Object) -> equals
    531:533:int hashCode() -> hashCode
    1527:1527:int hashCodeOrZero(java.lang.Object):527:527 -> hashCode
    1527:1527:int hashCode():533 -> hashCode
    537:547:java.lang.String toString() -> toString
com.google.gson.internal.$Gson$Types$WildcardTypeImpl -> com.google.gson.internal.$Gson$Types$c:
    java.lang.reflect.Type upperBound -> a
    java.lang.reflect.Type lowerBound -> b
    591:608:void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> <init>
    611:611:java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    615:615:java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    619:620:boolean equals(java.lang.Object) -> equals
    625:626:int hashCode() -> hashCode
    630:635:java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor -> com.google.gson.internal.ConstructorConstructor:
    java.util.Map instanceCreators -> a
    boolean useJdkUnsafe -> b
    java.util.List reflectionFilters -> c
    58:62:void <init>(java.util.Map,boolean,java.util.List) -> <init>
    71:80:java.lang.String checkInstantiable(java.lang.Class) -> a
    84:150:com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> get
    1162:1201:com.google.gson.internal.ObjectConstructor newSpecialCollectionConstructor(java.lang.reflect.Type,java.lang.Class):162:201 -> get
    1162:1201:com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken):114 -> get
    1298:1361:com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class):298:361 -> get
    1298:1361:com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken):125 -> get
    1365:1383:com.google.gson.internal.ObjectConstructor newUnsafeAllocator(java.lang.Class):365:383 -> get
    1365:1383:com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken):145 -> get
    206:258:com.google.gson.internal.ObjectConstructor newDefaultConstructor(java.lang.Class,com.google.gson.ReflectionAccessFilter$FilterResult) -> a
    392:392:java.lang.String toString() -> toString
com.google.gson.internal.ConstructorConstructor$1 -> com.google.gson.internal.ConstructorConstructor$1:
    com.google.gson.InstanceCreator val$typeCreator -> a
    java.lang.reflect.Type val$type -> b
    92:92:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    94:94:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$10 -> com.google.gson.internal.ConstructorConstructor$2:
    300:300:void <init>() -> <init>
    302:302:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$11 -> com.google.gson.internal.ConstructorConstructor$3:
    306:306:void <init>() -> <init>
    308:308:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$12 -> com.google.gson.internal.ConstructorConstructor$4:
    312:312:void <init>() -> <init>
    314:314:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$13 -> com.google.gson.internal.ConstructorConstructor$5:
    318:318:void <init>() -> <init>
    320:320:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$14 -> com.google.gson.internal.ConstructorConstructor$6:
    328:328:void <init>() -> <init>
    330:330:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$15 -> com.google.gson.internal.ConstructorConstructor$7:
    334:334:void <init>() -> <init>
    336:336:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$16 -> com.google.gson.internal.ConstructorConstructor$8:
    340:340:void <init>() -> <init>
    342:342:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$17 -> com.google.gson.internal.ConstructorConstructor$9:
    347:347:void <init>() -> <init>
    349:349:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$18 -> com.google.gson.internal.ConstructorConstructor$10:
    353:353:void <init>() -> <init>
    355:355:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$19 -> com.google.gson.internal.ConstructorConstructor$11:
    java.lang.Class val$rawType -> a
    366:366:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.Class) -> <init>
    370:373:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$2 -> com.google.gson.internal.ConstructorConstructor$12:
    com.google.gson.InstanceCreator val$rawTypeCreator -> a
    java.lang.reflect.Type val$type -> b
    104:104:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.InstanceCreator,java.lang.reflect.Type) -> <init>
    106:106:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$20 -> com.google.gson.internal.ConstructorConstructor$13:
    java.lang.String val$exceptionMessage -> a
    383:383:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.String) -> <init>
    385:385:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$3 -> com.google.gson.internal.ConstructorConstructor$14:
    java.lang.String val$exceptionMessage -> a
    134:134:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.String) -> <init>
    136:136:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$4 -> com.google.gson.internal.ConstructorConstructor$15:
    java.lang.String val$message -> a
    150:150:void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.String) -> <init>
    152:152:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$5 -> com.google.gson.internal.ConstructorConstructor$16:
    java.lang.reflect.Type val$type -> a
    163:163:void <init>(java.lang.reflect.Type) -> <init>
    165:175:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$6 -> com.google.gson.internal.ConstructorConstructor$17:
    java.lang.reflect.Type val$type -> a
    183:183:void <init>(java.lang.reflect.Type) -> <init>
    185:195:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$7 -> com.google.gson.internal.ConstructorConstructor$18:
    java.lang.String val$message -> a
    226:226:void <init>(java.lang.String) -> <init>
    228:228:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$8 -> com.google.gson.internal.ConstructorConstructor$19:
    java.lang.String val$exceptionMessage -> a
    246:246:void <init>(java.lang.String) -> <init>
    252:252:java.lang.Object construct() -> construct
com.google.gson.internal.ConstructorConstructor$9 -> com.google.gson.internal.ConstructorConstructor$20:
    java.lang.reflect.Constructor val$constructor -> a
    258:258:void <init>(java.lang.reflect.Constructor) -> <init>
    262:276:java.lang.Object construct() -> construct
com.google.gson.internal.Excluder -> com.google.gson.internal.Excluder:
    com.google.gson.internal.Excluder DEFAULT -> DEFAULT
    double version -> a
    int modifiers -> b
    boolean serializeInnerClasses -> c
    boolean requireExpose -> d
    java.util.List serializationStrategies -> e
    java.util.List deserializationStrategies -> f
    50:59:void <init>() -> <init>
    63:65:com.google.gson.internal.Excluder clone() -> a
    70:72:com.google.gson.internal.Excluder withVersion(double) -> withVersion
    76:81:com.google.gson.internal.Excluder withModifiers(int[]) -> withModifiers
    85:87:com.google.gson.internal.Excluder disableInnerClassSerialization() -> disableInnerClassSerialization
    91:93:com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> excludeFieldsWithoutExposeAnnotation
    98:107:com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean) -> withExclusionStrategy
    111:121:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    151:189:boolean excludeField(java.lang.reflect.Field,boolean) -> excludeField
    193:201:boolean excludeClassChecks(java.lang.Class) -> a
    205:206:boolean excludeClass(java.lang.Class,boolean) -> excludeClass
    210:216:boolean excludeClassInStrategy(java.lang.Class,boolean) -> a
    220:221:boolean isAnonymousOrNonStaticLocal(java.lang.Class) -> b
    225:225:boolean isInnerClass(java.lang.Class) -> c
    229:229:boolean isStatic(java.lang.Class) -> d
    233:233:boolean isValidVersion(com.google.gson.annotations.Since,com.google.gson.annotations.Until) -> a
    237:241:boolean isValidSince(com.google.gson.annotations.Since) -> a
    245:249:boolean isValidUntil(com.google.gson.annotations.Until) -> a
    50:50:java.lang.Object clone() -> clone
    52:52:void <clinit>() -> <clinit>
com.google.gson.internal.Excluder$1 -> com.google.gson.internal.Excluder$1:
    com.google.gson.TypeAdapter delegate -> a
    boolean val$skipDeserialize -> b
    boolean val$skipSerialize -> c
    com.google.gson.Gson val$gson -> d
    com.google.gson.reflect.TypeToken val$type -> e
    com.google.gson.internal.Excluder this$0 -> f
    121:121:void <init>(com.google.gson.internal.Excluder,boolean,boolean,com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> <init>
    126:130:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    134:139:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    142:145:com.google.gson.TypeAdapter delegate() -> a
com.google.gson.internal.GsonBuildConfig -> com.google.gson.internal.GsonBuildConfig:
    java.lang.String VERSION -> VERSION
    31:31:void <init>() -> <init>
com.google.gson.internal.JavaVersion -> com.google.gson.internal.JavaVersion:
    int majorJavaVersion -> a
    48:56:int parseDotted(java.lang.String) -> a
    62:73:int extractBeginningInt(java.lang.String) -> b
    81:81:int getMajorJavaVersion() -> getMajorJavaVersion
    88:88:boolean isJava9OrLater() -> isJava9OrLater
    91:91:void <init>() -> <init>
    26:26:void <clinit>() -> <clinit>
    1029:1030:int determineMajorJavaVersion():29:30 -> <clinit>
    1029:1030:void <clinit>():26 -> <clinit>
    1035:1042:int getMajorJavaVersion(java.lang.String):35:42 -> <clinit>
    1035:1042:int determineMajorJavaVersion():30 -> <clinit>
    1035:1042:void <clinit>():26 -> <clinit>
com.google.gson.internal.JsonReaderInternalAccess -> com.google.gson.internal.JsonReaderInternalAccess:
    com.google.gson.internal.JsonReaderInternalAccess INSTANCE -> INSTANCE
    25:25:void <init>() -> <init>
    void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.internal.LazilyParsedNumber -> com.google.gson.internal.LazilyParsedNumber:
    java.lang.String value -> a
    34:36:void <init>(java.lang.String) -> <init>
    41:46:int intValue() -> intValue
    54:56:long longValue() -> longValue
    62:62:float floatValue() -> floatValue
    67:67:double doubleValue() -> doubleValue
    72:72:java.lang.String toString() -> toString
    91:91:int hashCode() -> hashCode
    96:103:boolean equals(java.lang.Object) -> equals
com.google.gson.internal.LinkedTreeMap -> com.google.gson.internal.LinkedTreeMap:
    java.util.Comparator NATURAL_ORDER -> d
    java.util.Comparator comparator -> e
    boolean allowNullValues -> f
    com.google.gson.internal.LinkedTreeMap$Node root -> g
    int size -> a
    int modCount -> b
    com.google.gson.internal.LinkedTreeMap$Node header -> c
    com.google.gson.internal.LinkedTreeMap$EntrySet entrySet -> h
    com.google.gson.internal.LinkedTreeMap$KeySet keySet -> i
    boolean $assertionsDisabled -> j
    66:67:void <init>() -> <init>
    77:78:void <init>(boolean) -> <init>
    54:95:void <init>(java.util.Comparator,boolean) -> <init>
    98:98:int size() -> size
    102:103:java.lang.Object get(java.lang.Object) -> get
    107:107:boolean containsKey(java.lang.Object) -> containsKey
    111:120:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    124:131:void clear() -> clear
    134:135:java.lang.Object remove(java.lang.Object) -> remove
    145:203:com.google.gson.internal.LinkedTreeMap$Node find(java.lang.Object,boolean) -> a
    209:211:com.google.gson.internal.LinkedTreeMap$Node findByObject(java.lang.Object) -> b
    225:227:com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry) -> a
    1231:1231:boolean equal(java.lang.Object,java.lang.Object):231:231 -> a
    1231:1231:com.google.gson.internal.LinkedTreeMap$Node findByEntry(java.util.Map$Entry):226 -> a
    241:297:void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> a
    1544:1550:com.google.gson.internal.LinkedTreeMap$Node com.google.gson.internal.LinkedTreeMap$Node.last():544:550 -> a
    1544:1550:void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean):260 -> a
    2531:2537:com.google.gson.internal.LinkedTreeMap$Node com.google.gson.internal.LinkedTreeMap$Node.first():531:537 -> a
    2531:2537:void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean):260 -> a
    300:304:com.google.gson.internal.LinkedTreeMap$Node removeInternalByKey(java.lang.Object) -> a
    308:324:void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> a
    334:391:void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> b
    397:419:void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> a
    425:447:void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> b
    453:454:java.util.Set entrySet() -> entrySet
    458:459:java.util.Set keySet() -> keySet
    42:45:void <clinit>() -> <clinit>
com.google.gson.internal.LinkedTreeMap$1 -> com.google.gson.internal.LinkedTreeMap$1:
    45:45:void <init>() -> <init>
    45:45:int compare(java.lang.Object,java.lang.Object) -> compare
    1047:1047:int compare(java.lang.Comparable,java.lang.Comparable):47:47 -> compare
    1047:1047:int compare(java.lang.Object,java.lang.Object):45 -> compare
com.google.gson.internal.LinkedTreeMap$EntrySet -> com.google.gson.internal.LinkedTreeMap$a:
    com.google.gson.internal.LinkedTreeMap this$0 -> a
    588:588:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    590:590:int size() -> size
    594:594:java.util.Iterator iterator() -> iterator
    602:602:boolean contains(java.lang.Object) -> contains
    606:615:boolean remove(java.lang.Object) -> remove
    619:620:void clear() -> clear
com.google.gson.internal.LinkedTreeMap$EntrySet$1 -> com.google.gson.internal.LinkedTreeMap$a$1:
    594:594:void <init>(com.google.gson.internal.LinkedTreeMap$EntrySet) -> <init>
    594:594:java.lang.Object next() -> next
    1596:1596:java.util.Map$Entry next():596:596 -> next
    1596:1596:java.lang.Object next():594 -> next
com.google.gson.internal.LinkedTreeMap$KeySet -> com.google.gson.internal.LinkedTreeMap$b:
    com.google.gson.internal.LinkedTreeMap this$0 -> a
    623:623:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    625:625:int size() -> size
    629:629:java.util.Iterator iterator() -> iterator
    637:637:boolean contains(java.lang.Object) -> contains
    641:641:boolean remove(java.lang.Object) -> remove
    645:646:void clear() -> clear
com.google.gson.internal.LinkedTreeMap$KeySet$1 -> com.google.gson.internal.LinkedTreeMap$b$1:
    629:629:void <init>(com.google.gson.internal.LinkedTreeMap$KeySet) -> <init>
    631:631:java.lang.Object next() -> next
com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator -> com.google.gson.internal.LinkedTreeMap$c:
    com.google.gson.internal.LinkedTreeMap$Node next -> a
    com.google.gson.internal.LinkedTreeMap$Node lastReturned -> b
    int expectedModCount -> c
    com.google.gson.internal.LinkedTreeMap this$0 -> d
    555:560:void <init>(com.google.gson.internal.LinkedTreeMap) -> <init>
    563:563:boolean hasNext() -> hasNext
    567:575:com.google.gson.internal.LinkedTreeMap$Node nextNode() -> a
    579:585:void remove() -> remove
com.google.gson.internal.LinkedTreeMap$Node -> com.google.gson.internal.LinkedTreeMap$d:
    com.google.gson.internal.LinkedTreeMap$Node parent -> a
    com.google.gson.internal.LinkedTreeMap$Node left -> b
    com.google.gson.internal.LinkedTreeMap$Node right -> c
    com.google.gson.internal.LinkedTreeMap$Node next -> d
    com.google.gson.internal.LinkedTreeMap$Node prev -> e
    java.lang.Object key -> f
    boolean allowNullValue -> i
    java.lang.Object value -> g
    int height -> h
    474:478:void <init>(boolean) -> <init>
    481:490:void <init>(boolean,com.google.gson.internal.LinkedTreeMap$Node,java.lang.Object,com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node) -> <init>
    493:493:java.lang.Object getKey() -> getKey
    497:497:java.lang.Object getValue() -> getValue
    501:506:java.lang.Object setValue(java.lang.Object) -> setValue
    510:515:boolean equals(java.lang.Object) -> equals
    519:520:int hashCode() -> hashCode
    524:524:java.lang.String toString() -> toString
com.google.gson.internal.NonNullElementWrapperList -> com.google.gson.internal.NonNullElementWrapperList:
    java.util.ArrayList delegate -> a
    20:22:void <init>(java.util.ArrayList) -> <init>
    25:25:java.lang.Object get(int) -> get
    29:29:int size() -> size
    33:36:java.lang.Object nonNull(java.lang.Object) -> a
    40:40:java.lang.Object set(int,java.lang.Object) -> set
    44:45:void add(int,java.lang.Object) -> add
    48:48:java.lang.Object remove(int) -> remove
    54:55:void clear() -> clear
    58:58:boolean remove(java.lang.Object) -> remove
    62:62:boolean removeAll(java.util.Collection) -> removeAll
    66:66:boolean retainAll(java.util.Collection) -> retainAll
    70:70:boolean contains(java.lang.Object) -> contains
    74:74:int indexOf(java.lang.Object) -> indexOf
    78:78:int lastIndexOf(java.lang.Object) -> lastIndexOf
    82:82:java.lang.Object[] toArray() -> toArray
    86:86:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    90:90:boolean equals(java.lang.Object) -> equals
    94:94:int hashCode() -> hashCode
com.google.gson.internal.ObjectConstructor -> com.google.gson.internal.ObjectConstructor:
    java.lang.Object construct() -> construct
com.google.gson.internal.PreJava9DateFormatProvider -> com.google.gson.internal.PreJava9DateFormatProvider:
    25:25:void <init>() -> <init>
    31:31:java.text.DateFormat getUSDateFormat(int) -> getUSDateFormat
    1044:1054:java.lang.String getDateFormatPattern(int):44:54 -> getUSDateFormat
    1044:1054:java.text.DateFormat getUSDateFormat(int):31 -> getUSDateFormat
    39:40:java.text.DateFormat getUSDateTimeFormat(int,int) -> getUSDateTimeFormat
    1059:1069:java.lang.String getDatePartOfDateTimePattern(int):59:69 -> getUSDateTimeFormat
    1059:1069:java.text.DateFormat getUSDateTimeFormat(int,int):39 -> getUSDateTimeFormat
    1074:1083:java.lang.String getTimePartOfDateTimePattern(int):74:83 -> getUSDateTimeFormat
    1074:1083:java.text.DateFormat getUSDateTimeFormat(int,int):39 -> getUSDateTimeFormat
com.google.gson.internal.Primitives -> com.google.gson.internal.Primitives:
    28:28:void <init>() -> <init>
    34:34:boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    44:44:boolean isWrapperType(java.lang.reflect.Type) -> isWrapperType
    66:75:java.lang.Class wrap(java.lang.Class) -> wrap
    89:98:java.lang.Class unwrap(java.lang.Class) -> unwrap
com.google.gson.internal.ReflectionAccessFilterHelper -> com.google.gson.internal.ReflectionAccessFilterHelper:
    14:14:void <init>() -> <init>
    20:20:boolean isJavaType(java.lang.Class) -> isJavaType
    24:24:boolean isJavaType(java.lang.String) -> a
    28:28:boolean isAndroidType(java.lang.Class) -> isAndroidType
    32:34:boolean isAndroidType(java.lang.String) -> b
    38:42:boolean isAnyPlatformType(java.lang.Class) -> isAnyPlatformType
    51:57:com.google.gson.ReflectionAccessFilter$FilterResult getFilterResult(java.util.List,java.lang.Class) -> getFilterResult
    64:64:boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object) -> canAccess
com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker -> com.google.gson.internal.ReflectionAccessFilterHelper$a:
    com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker INSTANCE -> a
    67:67:void <init>() -> <init>
    boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object) -> a
    67:67:void <init>(byte) -> <init>
    70:97:void <clinit>() -> <clinit>
com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker$1 -> com.google.gson.internal.ReflectionAccessFilterHelper$a$1:
    java.lang.reflect.Method val$canAccessMethod -> b
    75:75:void <init>(java.lang.reflect.Method) -> <init>
    78:80:boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object) -> a
com.google.gson.internal.ReflectionAccessFilterHelper$AccessChecker$2 -> com.google.gson.internal.ReflectionAccessFilterHelper$a$2:
    89:89:void <init>() -> <init>
    92:92:boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object) -> a
com.google.gson.internal.Streams -> com.google.gson.internal.Streams:
    37:38:void <init>() -> <init>
    45:65:com.google.gson.JsonElement parse(com.google.gson.stream.JsonReader) -> parse
    73:74:void write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) -> write
    77:77:java.io.Writer writerForAppendable(java.lang.Appendable) -> writerForAppendable
com.google.gson.internal.Streams$AppendableWriter -> com.google.gson.internal.Streams$a:
    java.lang.Appendable appendable -> a
    com.google.gson.internal.Streams$AppendableWriter$CurrentWrite currentWrite -> b
    86:90:void <init>(java.lang.Appendable) -> <init>
    93:95:void write(char[],int,int) -> write
    1131:1133:void com.google.gson.internal.Streams$AppendableWriter$CurrentWrite.setChars(char[]):131:133 -> write
    1131:1133:void write(char[],int,int):93 -> write
    97:97:void flush() -> flush
    98:98:void close() -> close
    104:105:void write(int) -> write
    109:111:void write(java.lang.String,int,int) -> write
    114:115:java.io.Writer append(java.lang.CharSequence) -> append
    119:120:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    84:84:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    84:84:java.lang.Appendable append(java.lang.CharSequence) -> append
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite -> com.google.gson.internal.Streams$a$a:
    char[] chars -> a
    java.lang.String cachedString -> b
    126:126:void <init>() -> <init>
    136:136:int length() -> length
    139:139:char charAt(int) -> charAt
    142:142:java.lang.CharSequence subSequence(int,int) -> subSequence
    147:150:java.lang.String toString() -> toString
    126:126:void <init>(byte) -> <init>
com.google.gson.internal.UnsafeAllocator -> com.google.gson.internal.UnsafeAllocator:
    com.google.gson.internal.UnsafeAllocator INSTANCE -> INSTANCE
    30:30:void <init>() -> <init>
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    53:114:com.google.gson.internal.UnsafeAllocator create() -> a
    30:30:void access$000(java.lang.Class) -> a
    1039:1043:void assertInstantiable(java.lang.Class):39:43 -> a
    1039:1043:void access$000(java.lang.Class):30 -> a
    45:45:void <clinit>() -> <clinit>
com.google.gson.internal.UnsafeAllocator$1 -> com.google.gson.internal.UnsafeAllocator$1:
    java.lang.reflect.Method val$allocateInstance -> a
    java.lang.Object val$unsafe -> b
    58:58:void <init>(java.lang.reflect.Method,java.lang.Object) -> <init>
    62:63:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$2 -> com.google.gson.internal.UnsafeAllocator$2:
    java.lang.reflect.Method val$newInstance -> a
    int val$constructorId -> b
    82:82:void <init>(java.lang.reflect.Method,int) -> <init>
    86:87:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$3 -> com.google.gson.internal.UnsafeAllocator$3:
    java.lang.reflect.Method val$newInstance -> a
    102:102:void <init>(java.lang.reflect.Method) -> <init>
    106:107:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.UnsafeAllocator$4 -> com.google.gson.internal.UnsafeAllocator$4:
    114:114:void <init>() -> <init>
    117:117:java.lang.Object newInstance(java.lang.Class) -> newInstance
com.google.gson.internal.bind.ArrayTypeAdapter -> com.google.gson.internal.bind.ArrayTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.lang.Class componentType -> a
    com.google.gson.TypeAdapter componentTypeAdapter -> b
    57:61:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.Class) -> <init>
    64:90:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    95:107:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    37:37:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ArrayTypeAdapter$1 -> com.google.gson.internal.bind.ArrayTypeAdapter$1:
    37:37:void <init>() -> <init>
    39:50:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory -> com.google.gson.internal.bind.CollectionTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    39:41:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    45:58:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.CollectionTypeAdapterFactory$a:
    com.google.gson.TypeAdapter elementTypeAdapter -> a
    com.google.gson.internal.ObjectConstructor constructor -> b
    67:71:void <init>(com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    61:61:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1074:1086:java.util.Collection read(com.google.gson.stream.JsonReader):74:86 -> read
    1074:1086:java.lang.Object read(com.google.gson.stream.JsonReader):61 -> read
    61:61:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1090:1100:void write(com.google.gson.stream.JsonWriter,java.util.Collection):90:100 -> write
    1090:1100:void write(com.google.gson.stream.JsonWriter,java.lang.Object):61 -> write
com.google.gson.internal.bind.DateTypeAdapter -> com.google.gson.internal.bind.DateTypeAdapter:
    com.google.gson.TypeAdapterFactory FACTORY -> FACTORY
    java.util.List dateFormats -> a
    58:68:void <init>() -> <init>
    71:75:java.util.Date read(com.google.gson.stream.JsonReader) -> read
    79:90:java.util.Date deserializeToDate(com.google.gson.stream.JsonReader) -> a
    95:106:void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    46:46:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    46:46:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    47:47:void <clinit>() -> <clinit>
com.google.gson.internal.bind.DateTypeAdapter$1 -> com.google.gson.internal.bind.DateTypeAdapter$1:
    47:47:void <init>() -> <init>
    50:50:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.DefaultDateTypeAdapter -> com.google.gson.internal.bind.DefaultDateTypeAdapter:
    com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType dateType -> a
    java.util.List dateFormats -> b
    92:100:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,java.lang.String) -> <init>
    92:111:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,int) -> <init>
    92:122:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,int,int) -> <init>
    128:139:void write(com.google.gson.stream.JsonWriter,java.util.Date) -> write
    143:148:java.util.Date read(com.google.gson.stream.JsonReader) -> read
    152:164:java.util.Date deserializeToDate(com.google.gson.stream.JsonReader) -> a
    170:174:java.lang.String toString() -> toString
    47:47:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    47:47:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    47:47:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,java.lang.String,byte) -> <init>
    47:47:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,int,byte) -> <init>
    47:47:void <init>(com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType,int,int,byte) -> <init>
com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType -> com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType:
    com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE -> DATE
    java.lang.Class dateClass -> a
    59:61:void <init>(java.lang.Class) -> <init>
    java.util.Date deserialize(java.util.Date) -> a
    66:66:com.google.gson.TypeAdapterFactory createFactory(com.google.gson.internal.bind.DefaultDateTypeAdapter) -> a
    70:70:com.google.gson.TypeAdapterFactory createAdapterFactory(java.lang.String) -> createAdapterFactory
    74:74:com.google.gson.TypeAdapterFactory createAdapterFactory(int) -> createAdapterFactory
    78:78:com.google.gson.TypeAdapterFactory createAdapterFactory(int,int) -> createAdapterFactory
    82:82:com.google.gson.TypeAdapterFactory createDefaultsAdapterFactory() -> createDefaultsAdapterFactory
    51:51:void <clinit>() -> <clinit>
com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType$1 -> com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType$1:
    51:51:void <init>(java.lang.Class) -> <init>
    53:53:java.util.Date deserialize(java.util.Date) -> a
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory -> com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    37:39:void <init>(com.google.gson.internal.ConstructorConstructor) -> <init>
    44:49:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    54:86:com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.internal.ConstructorConstructor,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.annotations.JsonAdapter) -> a
com.google.gson.internal.bind.JsonTreeReader -> com.google.gson.internal.bind.JsonTreeReader:
    java.io.Reader UNREADABLE_READER -> b
    java.lang.Object SENTINEL_CLOSED -> c
    java.lang.Object[] stack -> d
    int stackSize -> e
    java.lang.String[] pathNames -> f
    int[] pathIndices -> g
    53:70:void <init>(com.google.gson.JsonElement) -> <init>
    73:77:void beginArray() -> beginArray
    80:86:void endArray() -> endArray
    89:92:void beginObject() -> beginObject
    95:102:void endObject() -> endObject
    105:106:boolean hasNext() -> hasNext
    110:148:com.google.gson.stream.JsonToken peek() -> peek
    153:153:java.lang.Object peekStack() -> a
    157:159:java.lang.Object popStack() -> d
    163:167:void expect(com.google.gson.stream.JsonToken) -> a
    170:176:java.lang.String nextName(boolean) -> a
    180:180:java.lang.String nextName() -> nextName
    184:193:java.lang.String nextString() -> nextString
    197:202:boolean nextBoolean() -> nextBoolean
    206:211:void nextNull() -> nextNull
    214:227:double nextDouble() -> nextDouble
    231:241:long nextLong() -> nextLong
    245:255:int nextInt() -> nextInt
    272:274:void close() -> close
    277:299:void skipValue() -> skipValue
    302:302:java.lang.String toString() -> toString
    306:311:void promoteNameToValue() -> promoteNameToValue
    314:321:void push(java.lang.Object) -> a
    324:346:java.lang.String getPath(boolean) -> b
    350:350:java.lang.String getPreviousPath() -> getPreviousPath
    354:354:java.lang.String getPath() -> getPath
    358:358:java.lang.String locationString() -> e
    40:48:void <clinit>() -> <clinit>
com.google.gson.internal.bind.JsonTreeReader$1 -> com.google.gson.internal.bind.JsonTreeReader$1:
    40:40:void <init>() -> <init>
    42:42:int read(char[],int,int) -> read
    45:45:void close() -> close
com.google.gson.internal.bind.JsonTreeReader$2 -> com.google.gson.internal.bind.JsonTreeReader$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
    278:278:void <clinit>() -> <clinit>
com.google.gson.internal.bind.JsonTreeWriter -> com.google.gson.internal.bind.JsonTreeWriter:
    java.io.Writer UNWRITABLE_WRITER -> a
    com.google.gson.JsonPrimitive SENTINEL_CLOSED -> b
    java.util.List stack -> c
    java.lang.String pendingName -> d
    com.google.gson.JsonElement product -> e
    50:60:void <init>() -> <init>
    66:69:com.google.gson.JsonElement get() -> get
    73:73:com.google.gson.JsonElement peek() -> a
    77:93:void put(com.google.gson.JsonElement) -> a
    96:99:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    103:111:com.google.gson.stream.JsonWriter endArray() -> endArray
    115:118:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    122:130:com.google.gson.stream.JsonWriter endObject() -> endObject
    134:143:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    147:151:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    155:155:com.google.gson.stream.JsonWriter jsonValue(java.lang.String) -> jsonValue
    159:160:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    164:165:com.google.gson.stream.JsonWriter value(boolean) -> value
    169:173:com.google.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    177:181:com.google.gson.stream.JsonWriter value(float) -> value
    185:189:com.google.gson.stream.JsonWriter value(double) -> value
    193:194:com.google.gson.stream.JsonWriter value(long) -> value
    198:210:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    214:214:void flush() -> flush
    217:221:void close() -> close
    35:47:void <clinit>() -> <clinit>
com.google.gson.internal.bind.JsonTreeWriter$1 -> com.google.gson.internal.bind.JsonTreeWriter$1:
    35:35:void <init>() -> <init>
    37:37:void write(char[],int,int) -> write
    40:40:void flush() -> flush
    43:43:void close() -> close
com.google.gson.internal.bind.MapTypeAdapterFactory -> com.google.gson.internal.bind.MapTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> b
    boolean complexMapKeySerialization -> a
    110:113:void <init>(com.google.gson.internal.ConstructorConstructor,boolean) -> <init>
    116:132:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    1139:1141:com.google.gson.TypeAdapter getKeyAdapter(com.google.gson.Gson,java.lang.reflect.Type):139:141 -> create
    1139:1141:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken):124 -> create
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.MapTypeAdapterFactory$a:
    com.google.gson.TypeAdapter keyTypeAdapter -> a
    com.google.gson.TypeAdapter valueTypeAdapter -> b
    com.google.gson.internal.ObjectConstructor constructor -> c
    com.google.gson.internal.bind.MapTypeAdapterFactory this$0 -> d
    151:157:void <init>(com.google.gson.internal.bind.MapTypeAdapterFactory,com.google.gson.Gson,java.lang.reflect.Type,com.google.gson.TypeAdapter,java.lang.reflect.Type,com.google.gson.TypeAdapter,com.google.gson.internal.ObjectConstructor) -> <init>
    144:144:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1160:1194:java.util.Map read(com.google.gson.stream.JsonReader):160:194 -> read
    1160:1194:java.lang.Object read(com.google.gson.stream.JsonReader):144 -> read
    144:144:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1198:1242:void write(com.google.gson.stream.JsonWriter,java.util.Map):198:242 -> write
    1198:1242:void write(com.google.gson.stream.JsonWriter,java.lang.Object):144 -> write
    1245:1259:java.lang.String keyToString(com.google.gson.JsonElement):245:259 -> write
    1245:1259:void write(com.google.gson.stream.JsonWriter,java.util.Map):237 -> write
    1245:1259:void write(com.google.gson.stream.JsonWriter,java.lang.Object):144 -> write
com.google.gson.internal.bind.NumberTypeAdapter -> com.google.gson.internal.bind.NumberTypeAdapter:
    com.google.gson.TypeAdapterFactory LAZILY_PARSED_NUMBER_FACTORY -> a
    com.google.gson.ToNumberStrategy toNumberStrategy -> b
    43:45:void <init>(com.google.gson.ToNumberStrategy) -> <init>
    48:49:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.ToNumberStrategy) -> a
    58:61:com.google.gson.TypeAdapterFactory getFactory(com.google.gson.ToNumberStrategy) -> getFactory
    66:75:java.lang.Number read(com.google.gson.stream.JsonReader) -> read
    80:81:void write(com.google.gson.stream.JsonWriter,java.lang.Number) -> write
    35:35:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    35:35:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    39:39:void <clinit>() -> <clinit>
com.google.gson.internal.bind.NumberTypeAdapter$1 -> com.google.gson.internal.bind.NumberTypeAdapter$1:
    com.google.gson.internal.bind.NumberTypeAdapter val$adapter -> a
    49:49:void <init>(com.google.gson.internal.bind.NumberTypeAdapter) -> <init>
    52:52:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.NumberTypeAdapter$2 -> com.google.gson.internal.bind.NumberTypeAdapter$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
    67:67:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ObjectTypeAdapter -> com.google.gson.internal.bind.ObjectTypeAdapter:
    com.google.gson.TypeAdapterFactory DOUBLE_FACTORY -> a
    com.google.gson.Gson gson -> b
    com.google.gson.ToNumberStrategy toNumberStrategy -> c
    49:52:void <init>(com.google.gson.Gson,com.google.gson.ToNumberStrategy) -> <init>
    55:55:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.ToNumberStrategy) -> a
    67:70:com.google.gson.TypeAdapterFactory getFactory(com.google.gson.ToNumberStrategy) -> getFactory
    79:87:java.lang.Object tryBeginNesting(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> a
    93:105:java.lang.Object readTerminal(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> b
    112:164:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    170:184:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    40:40:void <init>(com.google.gson.Gson,com.google.gson.ToNumberStrategy,byte) -> <init>
    44:44:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ObjectTypeAdapter$1 -> com.google.gson.internal.bind.ObjectTypeAdapter$1:
    com.google.gson.ToNumberStrategy val$toNumberStrategy -> a
    55:55:void <init>(com.google.gson.ToNumberStrategy) -> <init>
    58:61:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.ObjectTypeAdapter$2 -> com.google.gson.internal.bind.ObjectTypeAdapter$2:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
    79:79:void <clinit>() -> <clinit>
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:
    com.google.gson.internal.ConstructorConstructor constructorConstructor -> a
    com.google.gson.FieldNamingStrategy fieldNamingPolicy -> b
    com.google.gson.internal.Excluder excluder -> c
    com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory jsonAdapterFactory -> d
    java.util.List reflectionFilters -> e
    71:77:void <init>(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder,com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory,java.util.List) -> <init>
    80:80:boolean includeField(java.lang.reflect.Field,boolean) -> a
    105:130:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    230:308:java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class,boolean,boolean) -> a
    1085:1100:java.util.List getFieldNames(java.lang.reflect.Field):85:100 -> a
    1085:1100:java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class,boolean,boolean):289 -> a
    1147:1164:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField createBoundField(com.google.gson.Gson,java.lang.reflect.Field,java.lang.reflect.Method,java.lang.String,com.google.gson.reflect.TypeToken,boolean,boolean,boolean):147:164 -> a
    1147:1164:java.util.Map getBoundFields(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Class,boolean,boolean):294 -> a
    61:61:void access$000(java.lang.Object,java.lang.reflect.AccessibleObject) -> a
    2134:2140:void checkAccessible(java.lang.Object,java.lang.reflect.AccessibleObject):134:140 -> a
    2134:2140:void access$000(java.lang.Object,java.lang.reflect.AccessibleObject):61 -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:
    boolean val$blockInaccessible -> f
    java.lang.reflect.Method val$accessor -> g
    boolean val$jsonAdapterPresent -> h
    com.google.gson.TypeAdapter val$typeAdapter -> i
    com.google.gson.Gson val$context -> j
    com.google.gson.reflect.TypeToken val$fieldType -> k
    boolean val$isPrimitive -> l
    boolean val$isStaticFinalField -> m
    164:164:void <init>(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory,java.lang.String,java.lang.reflect.Field,boolean,boolean,boolean,java.lang.reflect.Method,boolean,com.google.gson.TypeAdapter,com.google.gson.Gson,com.google.gson.reflect.TypeToken,boolean,boolean) -> <init>
    167:197:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    201:207:void readIntoArray(com.google.gson.stream.JsonReader,int,java.lang.Object[]) -> a
    212:224:void readIntoField(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:
    java.util.Map boundFields -> a
    354:356:void <init>(java.util.Map) -> <init>
    360:374:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    378:402:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    java.lang.Object createAccumulator() -> a
    void readField(java.lang.Object,com.google.gson.stream.JsonReader,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) -> a
    java.lang.Object finalize(java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$a:
    java.lang.String name -> a
    java.lang.reflect.Field field -> b
    java.lang.String fieldName -> c
    boolean serialized -> d
    boolean deserialized -> e
    319:325:void <init>(java.lang.String,java.lang.reflect.Field,boolean,boolean) -> <init>
    void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> a
    void readIntoArray(com.google.gson.stream.JsonReader,int,java.lang.Object[]) -> a
    void readIntoField(com.google.gson.stream.JsonReader,java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$FieldReflectionAdapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$b:
    com.google.gson.internal.ObjectConstructor constructor -> a
    421:423:void <init>(com.google.gson.internal.ObjectConstructor,java.util.Map) -> <init>
    427:427:java.lang.Object createAccumulator() -> a
    433:434:void readField(java.lang.Object,com.google.gson.stream.JsonReader,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) -> a
    438:438:java.lang.Object finalize(java.lang.Object) -> a
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$c:
    java.util.Map PRIMITIVE_DEFAULTS -> a
    java.lang.reflect.Constructor constructor -> b
    java.lang.Object[] constructorArgsDefaults -> c
    java.util.Map componentIndices -> d
    450:476:void <init>(java.lang.Class,java.util.Map,boolean) -> <init>
    515:530:java.lang.Object finalize(java.lang.Object[]) -> a
    442:442:java.lang.Object finalize(java.lang.Object) -> a
    442:442:void readField(java.lang.Object,com.google.gson.stream.JsonReader,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) -> a
    1499:1510:void readField(java.lang.Object[],com.google.gson.stream.JsonReader,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField):499:510 -> a
    1499:1510:void readField(java.lang.Object,com.google.gson.stream.JsonReader,com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField):442 -> a
    442:442:java.lang.Object createAccumulator() -> a
    2493:2493:java.lang.Object[] createAccumulator():493:493 -> a
    2493:2493:java.lang.Object createAccumulator():442 -> a
    443:443:void <clinit>() -> <clinit>
    3479:3488:java.util.Map primitiveDefaults():479:488 -> <clinit>
    3479:3488:void <clinit>():443 -> <clinit>
com.google.gson.internal.bind.SerializationDelegatingTypeAdapter -> com.google.gson.internal.bind.SerializationDelegatingTypeAdapter:
    8:8:void <init>() -> <init>
    com.google.gson.TypeAdapter getSerializationDelegate() -> getSerializationDelegate
com.google.gson.internal.bind.TreeTypeAdapter -> com.google.gson.internal.bind.TreeTypeAdapter:
    com.google.gson.JsonSerializer serializer -> b
    com.google.gson.JsonDeserializer deserializer -> c
    com.google.gson.Gson gson -> a
    com.google.gson.reflect.TypeToken typeToken -> d
    com.google.gson.TypeAdapterFactory skipPast -> e
    com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl context -> f
    boolean nullSafe -> g
    com.google.gson.TypeAdapter delegate -> h
    47:61:void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory,boolean) -> <init>
    65:66:void <init>(com.google.gson.JsonSerializer,com.google.gson.JsonDeserializer,com.google.gson.Gson,com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapterFactory) -> <init>
    69:76:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    80:90:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    94:97:com.google.gson.TypeAdapter delegate() -> a
    106:106:com.google.gson.TypeAdapter getSerializationDelegate() -> getSerializationDelegate
    113:113:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactory
    123:124:com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object) -> newFactoryWithMatchRawType
    133:133:com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object) -> newTypeHierarchyFactory
com.google.gson.internal.bind.TreeTypeAdapter$GsonContextImpl -> com.google.gson.internal.bind.TreeTypeAdapter$a:
    com.google.gson.internal.bind.TreeTypeAdapter this$0 -> a
    170:170:void <init>(com.google.gson.internal.bind.TreeTypeAdapter) -> <init>
    172:172:com.google.gson.JsonElement serialize(java.lang.Object) -> serialize
    175:175:com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> serialize
    179:179:java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type) -> deserialize
    170:170:void <init>(com.google.gson.internal.bind.TreeTypeAdapter,byte) -> <init>
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory -> com.google.gson.internal.bind.TreeTypeAdapter$b:
    com.google.gson.reflect.TypeToken exactType -> a
    boolean matchRawType -> b
    java.lang.Class hierarchyType -> c
    com.google.gson.JsonSerializer serializer -> d
    com.google.gson.JsonDeserializer deserializer -> e
    144:155:void <init>(java.lang.Object,com.google.gson.reflect.TypeToken,boolean,java.lang.Class) -> <init>
    160:166:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper -> com.google.gson.internal.bind.a:
    com.google.gson.Gson context -> a
    com.google.gson.TypeAdapter delegate -> b
    java.lang.reflect.Type type -> c
    32:36:void <init>(com.google.gson.Gson,com.google.gson.TypeAdapter,java.lang.reflect.Type) -> <init>
    40:40:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    51:71:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1096:1099:java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object):96:99 -> write
    1096:1099:void write(com.google.gson.stream.JsonWriter,java.lang.Object):52 -> write
    2080:2089:boolean isReflective(com.google.gson.TypeAdapter):80:89 -> write
    2080:2089:void write(com.google.gson.stream.JsonWriter,java.lang.Object):61 -> write
com.google.gson.internal.bind.TypeAdapters -> com.google.gson.internal.bind.TypeAdapters:
    com.google.gson.TypeAdapter CLASS -> CLASS
    com.google.gson.TypeAdapterFactory CLASS_FACTORY -> CLASS_FACTORY
    com.google.gson.TypeAdapter BIT_SET -> BIT_SET
    com.google.gson.TypeAdapterFactory BIT_SET_FACTORY -> BIT_SET_FACTORY
    com.google.gson.TypeAdapter BOOLEAN -> BOOLEAN
    com.google.gson.TypeAdapter BOOLEAN_AS_STRING -> BOOLEAN_AS_STRING
    com.google.gson.TypeAdapterFactory BOOLEAN_FACTORY -> BOOLEAN_FACTORY
    com.google.gson.TypeAdapter BYTE -> BYTE
    com.google.gson.TypeAdapterFactory BYTE_FACTORY -> BYTE_FACTORY
    com.google.gson.TypeAdapter SHORT -> SHORT
    com.google.gson.TypeAdapterFactory SHORT_FACTORY -> SHORT_FACTORY
    com.google.gson.TypeAdapter INTEGER -> INTEGER
    com.google.gson.TypeAdapterFactory INTEGER_FACTORY -> INTEGER_FACTORY
    com.google.gson.TypeAdapter ATOMIC_INTEGER -> ATOMIC_INTEGER
    com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_FACTORY -> ATOMIC_INTEGER_FACTORY
    com.google.gson.TypeAdapter ATOMIC_BOOLEAN -> ATOMIC_BOOLEAN
    com.google.gson.TypeAdapterFactory ATOMIC_BOOLEAN_FACTORY -> ATOMIC_BOOLEAN_FACTORY
    com.google.gson.TypeAdapter ATOMIC_INTEGER_ARRAY -> ATOMIC_INTEGER_ARRAY
    com.google.gson.TypeAdapterFactory ATOMIC_INTEGER_ARRAY_FACTORY -> ATOMIC_INTEGER_ARRAY_FACTORY
    com.google.gson.TypeAdapter LONG -> LONG
    com.google.gson.TypeAdapter FLOAT -> FLOAT
    com.google.gson.TypeAdapter DOUBLE -> DOUBLE
    com.google.gson.TypeAdapter CHARACTER -> CHARACTER
    com.google.gson.TypeAdapterFactory CHARACTER_FACTORY -> CHARACTER_FACTORY
    com.google.gson.TypeAdapter STRING -> STRING
    com.google.gson.TypeAdapter BIG_DECIMAL -> BIG_DECIMAL
    com.google.gson.TypeAdapter BIG_INTEGER -> BIG_INTEGER
    com.google.gson.TypeAdapter LAZILY_PARSED_NUMBER -> LAZILY_PARSED_NUMBER
    com.google.gson.TypeAdapterFactory STRING_FACTORY -> STRING_FACTORY
    com.google.gson.TypeAdapter STRING_BUILDER -> STRING_BUILDER
    com.google.gson.TypeAdapterFactory STRING_BUILDER_FACTORY -> STRING_BUILDER_FACTORY
    com.google.gson.TypeAdapter STRING_BUFFER -> STRING_BUFFER
    com.google.gson.TypeAdapterFactory STRING_BUFFER_FACTORY -> STRING_BUFFER_FACTORY
    com.google.gson.TypeAdapter URL -> URL
    com.google.gson.TypeAdapterFactory URL_FACTORY -> URL_FACTORY
    com.google.gson.TypeAdapter URI -> URI
    com.google.gson.TypeAdapterFactory URI_FACTORY -> URI_FACTORY
    com.google.gson.TypeAdapter INET_ADDRESS -> INET_ADDRESS
    com.google.gson.TypeAdapterFactory INET_ADDRESS_FACTORY -> INET_ADDRESS_FACTORY
    com.google.gson.TypeAdapter UUID -> UUID
    com.google.gson.TypeAdapterFactory UUID_FACTORY -> UUID_FACTORY
    com.google.gson.TypeAdapter CURRENCY -> CURRENCY
    com.google.gson.TypeAdapterFactory CURRENCY_FACTORY -> CURRENCY_FACTORY
    com.google.gson.TypeAdapter CALENDAR -> CALENDAR
    com.google.gson.TypeAdapterFactory CALENDAR_FACTORY -> CALENDAR_FACTORY
    com.google.gson.TypeAdapter LOCALE -> LOCALE
    com.google.gson.TypeAdapterFactory LOCALE_FACTORY -> LOCALE_FACTORY
    com.google.gson.TypeAdapter JSON_ELEMENT -> JSON_ELEMENT
    com.google.gson.TypeAdapterFactory JSON_ELEMENT_FACTORY -> JSON_ELEMENT_FACTORY
    com.google.gson.TypeAdapterFactory ENUM_FACTORY -> ENUM_FACTORY
    67:68:void <init>() -> <init>
    937:937:com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> newFactory
    947:947:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    960:960:com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactory
    975:975:com.google.gson.TypeAdapterFactory newFactoryForMultipleTypes(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> newFactoryForMultipleTypes
    994:994:com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,com.google.gson.TypeAdapter) -> newTypeHierarchyFactory
    72:920:void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$1 -> com.google.gson.internal.bind.TypeAdapters$1:
    72:72:void <init>() -> <init>
    72:72:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1080:1080:java.lang.Class read$24c88b45():80:80 -> read
    1080:1080:java.lang.Object read(com.google.gson.stream.JsonReader):72 -> read
    72:72:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    2075:2076:void write$63777761(java.lang.Class):75:76 -> write
    2075:2076:void write(com.google.gson.stream.JsonWriter,java.lang.Object):72 -> write
com.google.gson.internal.bind.TypeAdapters$10 -> com.google.gson.internal.bind.TypeAdapters$2:
    292:292:void <init>() -> <init>
    294:310:java.util.concurrent.atomic.AtomicIntegerArray read(com.google.gson.stream.JsonReader) -> a
    292:292:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    292:292:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1313:1318:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicIntegerArray):313:318 -> write
    1313:1318:void write(com.google.gson.stream.JsonWriter,java.lang.Object):292 -> write
com.google.gson.internal.bind.TypeAdapters$11 -> com.google.gson.internal.bind.TypeAdapters$3:
    323:323:void <init>() -> <init>
    326:333:java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    323:323:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    323:323:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1338:1343:void write(com.google.gson.stream.JsonWriter,java.lang.Number):338:343 -> write
    1338:1343:void write(com.google.gson.stream.JsonWriter,java.lang.Object):323 -> write
com.google.gson.internal.bind.TypeAdapters$12 -> com.google.gson.internal.bind.TypeAdapters$4:
    346:346:void <init>() -> <init>
    346:346:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1349:1353:java.lang.Number read(com.google.gson.stream.JsonReader):349:353 -> read
    1349:1353:java.lang.Object read(com.google.gson.stream.JsonReader):346 -> read
    346:346:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1357:1365:void write(com.google.gson.stream.JsonWriter,java.lang.Number):357:365 -> write
    1357:1365:void write(com.google.gson.stream.JsonWriter,java.lang.Object):346 -> write
com.google.gson.internal.bind.TypeAdapters$13 -> com.google.gson.internal.bind.TypeAdapters$5:
    368:368:void <init>() -> <init>
    368:368:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1371:1375:java.lang.Number read(com.google.gson.stream.JsonReader):371:375 -> read
    1371:1375:java.lang.Object read(com.google.gson.stream.JsonReader):368 -> read
    368:368:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1379:1384:void write(com.google.gson.stream.JsonWriter,java.lang.Number):379:384 -> write
    1379:1384:void write(com.google.gson.stream.JsonWriter,java.lang.Object):368 -> write
com.google.gson.internal.bind.TypeAdapters$14 -> com.google.gson.internal.bind.TypeAdapters$6:
    387:387:void <init>() -> <init>
    387:387:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1390:1398:java.lang.Character read(com.google.gson.stream.JsonReader):390:398 -> read
    1390:1398:java.lang.Object read(com.google.gson.stream.JsonReader):387 -> read
    387:387:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1402:1403:void write(com.google.gson.stream.JsonWriter,java.lang.Character):402:403 -> write
    1402:1403:void write(com.google.gson.stream.JsonWriter,java.lang.Object):387 -> write
com.google.gson.internal.bind.TypeAdapters$15 -> com.google.gson.internal.bind.TypeAdapters$7:
    409:409:void <init>() -> <init>
    409:409:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1412:1421:java.lang.String read(com.google.gson.stream.JsonReader):412:421 -> read
    1412:1421:java.lang.Object read(com.google.gson.stream.JsonReader):409 -> read
    409:409:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1425:1426:void write(com.google.gson.stream.JsonWriter,java.lang.String):425:426 -> write
    1425:1426:void write(com.google.gson.stream.JsonWriter,java.lang.Object):409 -> write
com.google.gson.internal.bind.TypeAdapters$16 -> com.google.gson.internal.bind.TypeAdapters$8:
    429:429:void <init>() -> <init>
    431:439:java.math.BigDecimal read(com.google.gson.stream.JsonReader) -> a
    429:429:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    429:429:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1444:1445:void write(com.google.gson.stream.JsonWriter,java.math.BigDecimal):444:445 -> write
    1444:1445:void write(com.google.gson.stream.JsonWriter,java.lang.Object):429 -> write
com.google.gson.internal.bind.TypeAdapters$17 -> com.google.gson.internal.bind.TypeAdapters$9:
    448:448:void <init>() -> <init>
    450:458:java.math.BigInteger read(com.google.gson.stream.JsonReader) -> a
    448:448:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    448:448:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1463:1464:void write(com.google.gson.stream.JsonWriter,java.math.BigInteger):463:464 -> write
    1463:1464:void write(com.google.gson.stream.JsonWriter,java.lang.Object):448 -> write
com.google.gson.internal.bind.TypeAdapters$18 -> com.google.gson.internal.bind.TypeAdapters$10:
    467:467:void <init>() -> <init>
    467:467:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1472:1476:com.google.gson.internal.LazilyParsedNumber read(com.google.gson.stream.JsonReader):472:476 -> read
    1472:1476:java.lang.Object read(com.google.gson.stream.JsonReader):467 -> read
    467:467:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1480:1481:void write(com.google.gson.stream.JsonWriter,com.google.gson.internal.LazilyParsedNumber):480:481 -> write
    1480:1481:void write(com.google.gson.stream.JsonWriter,java.lang.Object):467 -> write
com.google.gson.internal.bind.TypeAdapters$19 -> com.google.gson.internal.bind.TypeAdapters$11:
    486:486:void <init>() -> <init>
    486:486:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1489:1493:java.lang.StringBuilder read(com.google.gson.stream.JsonReader):489:493 -> read
    1489:1493:java.lang.Object read(com.google.gson.stream.JsonReader):486 -> read
    486:486:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1497:1498:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuilder):497:498 -> write
    1497:1498:void write(com.google.gson.stream.JsonWriter,java.lang.Object):486 -> write
com.google.gson.internal.bind.TypeAdapters$2 -> com.google.gson.internal.bind.TypeAdapters$12:
    87:87:void <init>() -> <init>
    87:87:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1089:1120:java.util.BitSet read(com.google.gson.stream.JsonReader):89:120 -> read
    1089:1120:java.lang.Object read(com.google.gson.stream.JsonReader):87 -> read
    87:87:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1124:1130:void write(com.google.gson.stream.JsonWriter,java.util.BitSet):124:130 -> write
    1124:1130:void write(com.google.gson.stream.JsonWriter,java.lang.Object):87 -> write
com.google.gson.internal.bind.TypeAdapters$20 -> com.google.gson.internal.bind.TypeAdapters$13:
    504:504:void <init>() -> <init>
    504:504:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1507:1511:java.lang.StringBuffer read(com.google.gson.stream.JsonReader):507:511 -> read
    1507:1511:java.lang.Object read(com.google.gson.stream.JsonReader):504 -> read
    504:504:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1515:1516:void write(com.google.gson.stream.JsonWriter,java.lang.StringBuffer):515:516 -> write
    1515:1516:void write(com.google.gson.stream.JsonWriter,java.lang.Object):504 -> write
com.google.gson.internal.bind.TypeAdapters$21 -> com.google.gson.internal.bind.TypeAdapters$14:
    522:522:void <init>() -> <init>
    522:522:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1525:1530:java.net.URL read(com.google.gson.stream.JsonReader):525:530 -> read
    1525:1530:java.lang.Object read(com.google.gson.stream.JsonReader):522 -> read
    522:522:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1534:1535:void write(com.google.gson.stream.JsonWriter,java.net.URL):534:535 -> write
    1534:1535:void write(com.google.gson.stream.JsonWriter,java.lang.Object):522 -> write
com.google.gson.internal.bind.TypeAdapters$22 -> com.google.gson.internal.bind.TypeAdapters$15:
    540:540:void <init>() -> <init>
    543:551:java.net.URI read(com.google.gson.stream.JsonReader) -> a
    540:540:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    540:540:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1556:1557:void write(com.google.gson.stream.JsonWriter,java.net.URI):556:557 -> write
    1556:1557:void write(com.google.gson.stream.JsonWriter,java.lang.Object):540 -> write
com.google.gson.internal.bind.TypeAdapters$23 -> com.google.gson.internal.bind.TypeAdapters$16:
    562:562:void <init>() -> <init>
    562:562:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1565:1570:java.net.InetAddress read(com.google.gson.stream.JsonReader):565:570 -> read
    1565:1570:java.lang.Object read(com.google.gson.stream.JsonReader):562 -> read
    562:562:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1574:1575:void write(com.google.gson.stream.JsonWriter,java.net.InetAddress):574:575 -> write
    1574:1575:void write(com.google.gson.stream.JsonWriter,java.lang.Object):562 -> write
com.google.gson.internal.bind.TypeAdapters$24 -> com.google.gson.internal.bind.TypeAdapters$17:
    581:581:void <init>() -> <init>
    584:592:java.util.UUID read(com.google.gson.stream.JsonReader) -> a
    581:581:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    581:581:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1597:1598:void write(com.google.gson.stream.JsonWriter,java.util.UUID):597:598 -> write
    1597:1598:void write(com.google.gson.stream.JsonWriter,java.lang.Object):581 -> write
com.google.gson.internal.bind.TypeAdapters$25 -> com.google.gson.internal.bind.TypeAdapters$18:
    603:603:void <init>() -> <init>
    606:610:java.util.Currency read(com.google.gson.stream.JsonReader) -> a
    603:603:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    603:603:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1615:1616:void write(com.google.gson.stream.JsonWriter,java.util.Currency):615:616 -> write
    1615:1616:void write(com.google.gson.stream.JsonWriter,java.lang.Object):603 -> write
com.google.gson.internal.bind.TypeAdapters$26 -> com.google.gson.internal.bind.TypeAdapters$19:
    620:620:void <init>() -> <init>
    620:620:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1630:1659:java.util.Calendar read(com.google.gson.stream.JsonReader):630:659 -> read
    1630:1659:java.lang.Object read(com.google.gson.stream.JsonReader):620 -> read
    620:620:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1664:1682:void write(com.google.gson.stream.JsonWriter,java.util.Calendar):664:682 -> write
    1664:1682:void write(com.google.gson.stream.JsonWriter,java.lang.Object):620 -> write
com.google.gson.internal.bind.TypeAdapters$27 -> com.google.gson.internal.bind.TypeAdapters$20:
    688:688:void <init>() -> <init>
    688:688:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1691:1714:java.util.Locale read(com.google.gson.stream.JsonReader):691:714 -> read
    1691:1714:java.lang.Object read(com.google.gson.stream.JsonReader):688 -> read
    688:688:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1719:1720:void write(com.google.gson.stream.JsonWriter,java.util.Locale):719:720 -> write
    1719:1720:void write(com.google.gson.stream.JsonWriter,java.lang.Object):688 -> write
com.google.gson.internal.bind.TypeAdapters$28 -> com.google.gson.internal.bind.TypeAdapters$21:
    725:725:void <init>() -> <init>
    731:739:com.google.gson.JsonElement tryBeginNesting(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> a
    745:758:com.google.gson.JsonElement readTerminal(com.google.gson.stream.JsonReader,com.google.gson.stream.JsonToken) -> b
    823:853:void write(com.google.gson.stream.JsonWriter,com.google.gson.JsonElement) -> a
    725:725:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1763:1817:com.google.gson.JsonElement read(com.google.gson.stream.JsonReader):763:817 -> read
    1763:1817:java.lang.Object read(com.google.gson.stream.JsonReader):725 -> read
    2259:2268:com.google.gson.JsonElement com.google.gson.internal.bind.JsonTreeReader.nextJsonElement():259:268 -> read
    2259:2268:com.google.gson.JsonElement read(com.google.gson.stream.JsonReader):764 -> read
    2259:2268:java.lang.Object read(com.google.gson.stream.JsonReader):725 -> read
    725:725:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
com.google.gson.internal.bind.TypeAdapters$29 -> com.google.gson.internal.bind.TypeAdapters$22:
    920:920:void <init>() -> <init>
    922:931:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$3 -> com.google.gson.internal.bind.TypeAdapters$23:
    135:135:void <init>() -> <init>
    135:135:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1138:1146:java.lang.Boolean read(com.google.gson.stream.JsonReader):138:146 -> read
    1138:1146:java.lang.Object read(com.google.gson.stream.JsonReader):135 -> read
    135:135:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1150:1151:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean):150:151 -> write
    1150:1151:void write(com.google.gson.stream.JsonWriter,java.lang.Object):135 -> write
com.google.gson.internal.bind.TypeAdapters$30 -> com.google.gson.internal.bind.TypeAdapters$24:
    com.google.gson.reflect.TypeToken val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    937:937:void <init>(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter) -> <init>
    940:940:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.bind.TypeAdapters$31 -> com.google.gson.internal.bind.TypeAdapters$25:
    java.lang.Class val$type -> a
    com.google.gson.TypeAdapter val$typeAdapter -> b
    947:947:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    950:950:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    953:953:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$32 -> com.google.gson.internal.bind.TypeAdapters$26:
    java.lang.Class val$unboxed -> a
    java.lang.Class val$boxed -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    960:960:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    963:964:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    967:968:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$33 -> com.google.gson.internal.bind.TypeAdapters$27:
    java.lang.Class val$base -> a
    java.lang.Class val$sub -> b
    com.google.gson.TypeAdapter val$typeAdapter -> c
    975:975:void <init>(java.lang.Class,java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    978:979:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    982:983:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$34 -> com.google.gson.internal.bind.TypeAdapters$28:
    java.lang.Class val$clazz -> b
    com.google.gson.TypeAdapter val$typeAdapter -> a
    994:994:void <init>(java.lang.Class,com.google.gson.TypeAdapter) -> <init>
    997:1001:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    1017:1017:java.lang.String toString() -> toString
com.google.gson.internal.bind.TypeAdapters$34$1 -> com.google.gson.internal.bind.TypeAdapters$28$1:
    java.lang.Class val$requestedType -> a
    com.google.gson.internal.bind.TypeAdapters$34 this$0 -> b
    1001:1001:void <init>(com.google.gson.internal.bind.TypeAdapters$34,java.lang.Class) -> <init>
    1003:1004:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1007:1012:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
com.google.gson.internal.bind.TypeAdapters$35 -> com.google.gson.internal.bind.TypeAdapters$29:
    int[] $SwitchMap$com$google$gson$stream$JsonToken -> a
    95:95:void <clinit>() -> <clinit>
com.google.gson.internal.bind.TypeAdapters$4 -> com.google.gson.internal.bind.TypeAdapters$30:
    158:158:void <init>() -> <init>
    158:158:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1160:1164:java.lang.Boolean read(com.google.gson.stream.JsonReader):160:164 -> read
    1160:1164:java.lang.Object read(com.google.gson.stream.JsonReader):158 -> read
    158:158:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1168:1169:void write(com.google.gson.stream.JsonWriter,java.lang.Boolean):168:169 -> write
    1168:1169:void write(com.google.gson.stream.JsonWriter,java.lang.Object):158 -> write
com.google.gson.internal.bind.TypeAdapters$5 -> com.google.gson.internal.bind.TypeAdapters$31:
    175:175:void <init>() -> <init>
    178:193:java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    175:175:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    175:175:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1197:1202:void write(com.google.gson.stream.JsonWriter,java.lang.Number):197:202 -> write
    1197:1202:void write(com.google.gson.stream.JsonWriter,java.lang.Object):175 -> write
com.google.gson.internal.bind.TypeAdapters$6 -> com.google.gson.internal.bind.TypeAdapters$32:
    208:208:void <init>() -> <init>
    211:226:java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    208:208:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    208:208:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1230:1235:void write(com.google.gson.stream.JsonWriter,java.lang.Number):230:235 -> write
    1230:1235:void write(com.google.gson.stream.JsonWriter,java.lang.Object):208 -> write
com.google.gson.internal.bind.TypeAdapters$7 -> com.google.gson.internal.bind.TypeAdapters$33:
    241:241:void <init>() -> <init>
    244:251:java.lang.Number read(com.google.gson.stream.JsonReader) -> a
    241:241:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    241:241:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1256:1261:void write(com.google.gson.stream.JsonWriter,java.lang.Number):256:261 -> write
    1256:1261:void write(com.google.gson.stream.JsonWriter,java.lang.Object):241 -> write
com.google.gson.internal.bind.TypeAdapters$8 -> com.google.gson.internal.bind.TypeAdapters$34:
    266:266:void <init>() -> <init>
    269:271:java.util.concurrent.atomic.AtomicInteger read(com.google.gson.stream.JsonReader) -> a
    266:266:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    266:266:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1275:1276:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicInteger):275:276 -> write
    1275:1276:void write(com.google.gson.stream.JsonWriter,java.lang.Object):266 -> write
com.google.gson.internal.bind.TypeAdapters$9 -> com.google.gson.internal.bind.TypeAdapters$35:
    281:281:void <init>() -> <init>
    281:281:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1283:1283:java.util.concurrent.atomic.AtomicBoolean read(com.google.gson.stream.JsonReader):283:283 -> read
    1283:1283:java.lang.Object read(com.google.gson.stream.JsonReader):281 -> read
    281:281:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1286:1287:void write(com.google.gson.stream.JsonWriter,java.util.concurrent.atomic.AtomicBoolean):286:287 -> write
    1286:1287:void write(com.google.gson.stream.JsonWriter,java.lang.Object):281 -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter -> com.google.gson.internal.bind.TypeAdapters$a:
    java.util.Map nameToConstant -> a
    java.util.Map stringToConstant -> b
    java.util.Map constantToName -> c
    860:904:void <init>(java.lang.Class) -> <init>
    859:859:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1906:1912:java.lang.Enum read(com.google.gson.stream.JsonReader):906:912 -> read
    1906:1912:java.lang.Object read(com.google.gson.stream.JsonReader):859 -> read
    859:859:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1916:1917:void write(com.google.gson.stream.JsonWriter,java.lang.Enum):916:917 -> write
    1916:1917:void write(com.google.gson.stream.JsonWriter,java.lang.Object):859 -> write
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter$1 -> com.google.gson.internal.bind.TypeAdapters$a$1:
    java.lang.Class val$classOfT -> a
    869:869:void <init>(com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter,java.lang.Class) -> <init>
    869:869:java.lang.Object run() -> run
    1871:1881:java.lang.reflect.Field[] run():871:881 -> run
    1871:1881:java.lang.Object run():869 -> run
com.google.gson.internal.bind.util.ISO8601Utils -> com.google.gson.internal.bind.util.ISO8601Utils:
    java.util.TimeZone TIMEZONE_UTC -> a
    21:21:void <init>() -> <init>
    49:49:java.lang.String format(java.util.Date) -> format
    60:60:java.lang.String format(java.util.Date,boolean) -> format
    72:109:java.lang.String format(java.util.Date,boolean,java.util.TimeZone) -> format
    128:281:java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    293:293:boolean checkOffset(java.lang.String,int,char) -> a
    306:328:int parseInt(java.lang.String,int,int) -> a
    339:344:void padInt(java.lang.StringBuilder,int,int) -> a
    350:354:int indexOfNonDigit(java.lang.String,int) -> a
    34:34:void <clinit>() -> <clinit>
com.google.gson.internal.reflect.ReflectionHelper -> com.google.gson.internal.reflect.ReflectionHelper:
    com.google.gson.internal.reflect.ReflectionHelper$RecordHelper RECORD_HELPER -> a
    25:25:void <init>() -> <init>
    35:41:void makeAccessible(java.lang.reflect.AccessibleObject) -> makeAccessible
    55:74:java.lang.String getAccessibleObjectDescription(java.lang.reflect.AccessibleObject,boolean) -> getAccessibleObjectDescription
    82:82:java.lang.String fieldToString(java.lang.reflect.Field) -> fieldToString
    90:93:java.lang.String constructorToString(java.lang.reflect.Constructor) -> constructorToString
    98:111:void appendExecutableParameters(java.lang.reflect.AccessibleObject,java.lang.StringBuilder) -> a
    123:129:java.lang.String tryMakeAccessible(java.lang.reflect.Constructor) -> tryMakeAccessible
    135:135:boolean isRecord(java.lang.Class) -> isRecord
    139:139:java.lang.String[] getRecordComponentNames(java.lang.Class) -> getRecordComponentNames
    144:144:java.lang.reflect.Method getAccessor(java.lang.Class,java.lang.reflect.Field) -> getAccessor
    148:148:java.lang.reflect.Constructor getCanonicalRecordConstructor(java.lang.Class) -> getCanonicalRecordConstructor
    153:153:java.lang.RuntimeException createExceptionForUnexpectedIllegalAccess(java.lang.IllegalAccessException) -> createExceptionForUnexpectedIllegalAccess
    10:10:java.lang.RuntimeException access$300(java.lang.ReflectiveOperationException) -> a
    1162:1162:java.lang.RuntimeException createExceptionForRecordReflectionException(java.lang.ReflectiveOperationException):162:162 -> a
    1162:1162:java.lang.RuntimeException access$300(java.lang.ReflectiveOperationException):10 -> a
    18:23:void <clinit>() -> <clinit>
com.google.gson.internal.reflect.ReflectionHelper$RecordHelper -> com.google.gson.internal.reflect.ReflectionHelper$a:
    173:173:void <init>() -> <init>
    boolean isRecord(java.lang.Class) -> a
    java.lang.String[] getRecordComponentNames(java.lang.Class) -> b
    java.lang.reflect.Constructor getCanonicalRecordConstructor(java.lang.Class) -> c
    java.lang.reflect.Method getAccessor(java.lang.Class,java.lang.reflect.Field) -> a
    173:173:void <init>(byte) -> <init>
com.google.gson.internal.reflect.ReflectionHelper$RecordNotSupportedHelper -> com.google.gson.internal.reflect.ReflectionHelper$b:
    252:252:void <init>() -> <init>
    256:256:boolean isRecord(java.lang.Class) -> a
    261:261:java.lang.String[] getRecordComponentNames(java.lang.Class) -> b
    267:267:java.lang.reflect.Constructor getCanonicalRecordConstructor(java.lang.Class) -> c
    273:273:java.lang.reflect.Method getAccessor(java.lang.Class,java.lang.reflect.Field) -> a
    252:252:void <init>(byte) -> <init>
com.google.gson.internal.reflect.ReflectionHelper$RecordSupportedHelper -> com.google.gson.internal.reflect.ReflectionHelper$c:
    java.lang.reflect.Method isRecord -> a
    java.lang.reflect.Method getRecordComponents -> b
    java.lang.reflect.Method getName -> c
    java.lang.reflect.Method getType -> d
    189:196:void <init>() -> <init>
    201:203:boolean isRecord(java.lang.Class) -> a
    210:217:java.lang.String[] getRecordComponentNames(java.lang.Class) -> b
    224:233:java.lang.reflect.Constructor getCanonicalRecordConstructor(java.lang.Class) -> c
    242:244:java.lang.reflect.Method getAccessor(java.lang.Class,java.lang.reflect.Field) -> a
    183:183:void <init>(byte) -> <init>
com.google.gson.internal.sql.SqlDateTypeAdapter -> com.google.gson.internal.sql.a:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    48:51:void <init>() -> <init>
    55:67:java.sql.Date read(com.google.gson.stream.JsonReader) -> a
    39:39:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    39:39:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1073:1082:void write(com.google.gson.stream.JsonWriter,java.sql.Date):73:82 -> write
    1073:1082:void write(com.google.gson.stream.JsonWriter,java.lang.Object):39 -> write
    39:39:void <init>(byte) -> <init>
    40:40:void <clinit>() -> <clinit>
com.google.gson.internal.sql.SqlDateTypeAdapter$1 -> com.google.gson.internal.sql.a$1:
    40:40:void <init>() -> <init>
    43:44:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.sql.SqlTimeTypeAdapter -> com.google.gson.internal.sql.b:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    java.text.DateFormat format -> b
    48:51:void <init>() -> <init>
    54:65:java.sql.Time read(com.google.gson.stream.JsonReader) -> a
    40:40:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    40:40:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1070:1079:void write(com.google.gson.stream.JsonWriter,java.sql.Time):70:79 -> write
    1070:1079:void write(com.google.gson.stream.JsonWriter,java.lang.Object):40 -> write
    40:40:void <init>(byte) -> <init>
    41:41:void <clinit>() -> <clinit>
com.google.gson.internal.sql.SqlTimeTypeAdapter$1 -> com.google.gson.internal.sql.b$1:
    41:41:void <init>() -> <init>
    44:44:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.sql.SqlTimestampTypeAdapter -> com.google.gson.internal.sql.c:
    com.google.gson.TypeAdapterFactory FACTORY -> a
    com.google.gson.TypeAdapter dateTypeAdapter -> b
    29:31:void <init>(com.google.gson.TypeAdapter) -> <init>
    14:14:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1035:1036:java.sql.Timestamp read(com.google.gson.stream.JsonReader):35:36 -> read
    1035:1036:java.lang.Object read(com.google.gson.stream.JsonReader):14 -> read
    14:14:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1041:1042:void write(com.google.gson.stream.JsonWriter,java.sql.Timestamp):41:42 -> write
    1041:1042:void write(com.google.gson.stream.JsonWriter,java.lang.Object):14 -> write
    14:14:void <init>(com.google.gson.TypeAdapter,byte) -> <init>
    15:15:void <clinit>() -> <clinit>
com.google.gson.internal.sql.SqlTimestampTypeAdapter$1 -> com.google.gson.internal.sql.c$1:
    15:15:void <init>() -> <init>
    18:22:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
com.google.gson.internal.sql.SqlTypesSupport -> com.google.gson.internal.sql.SqlTypesSupport:
    boolean SUPPORTS_SQL_TYPES -> SUPPORTS_SQL_TYPES
    com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE_DATE_TYPE -> DATE_DATE_TYPE
    com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType TIMESTAMP_DATE_TYPE -> TIMESTAMP_DATE_TYPE
    com.google.gson.TypeAdapterFactory DATE_FACTORY -> DATE_FACTORY
    com.google.gson.TypeAdapterFactory TIME_FACTORY -> TIME_FACTORY
    com.google.gson.TypeAdapterFactory TIMESTAMP_FACTORY -> TIMESTAMP_FACTORY
    69:70:void <init>() -> <init>
    37:67:void <clinit>() -> <clinit>
com.google.gson.internal.sql.SqlTypesSupport$1 -> com.google.gson.internal.sql.SqlTypesSupport$1:
    45:45:void <init>(java.lang.Class) -> <init>
    45:45:java.util.Date deserialize(java.util.Date) -> a
    1047:1047:java.sql.Date deserialize(java.util.Date):47:47 -> a
    1047:1047:java.util.Date deserialize(java.util.Date):45 -> a
com.google.gson.internal.sql.SqlTypesSupport$2 -> com.google.gson.internal.sql.SqlTypesSupport$2:
    50:50:void <init>(java.lang.Class) -> <init>
    50:50:java.util.Date deserialize(java.util.Date) -> a
    1052:1052:java.sql.Timestamp deserialize(java.util.Date):52:52 -> a
    1052:1052:java.util.Date deserialize(java.util.Date):50 -> a
com.google.gson.reflect.TypeToken -> com.google.gson.reflect.TypeToken:
    java.lang.Class rawType -> a
    java.lang.reflect.Type type -> b
    int hashCode -> c
    69:73:void <init>() -> <init>
    1091:1105:java.lang.reflect.Type getTypeTokenTypeArgument():91:105 -> <init>
    1091:1105:void <init>():70 -> <init>
    79:83:void <init>(java.lang.reflect.Type) -> <init>
    112:112:java.lang.Class getRawType() -> getRawType
    119:119:java.lang.reflect.Type getType() -> getType
    130:130:boolean isAssignableFrom(java.lang.Class) -> isAssignableFrom
    141:158:boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    171:171:boolean isAssignableFrom(com.google.gson.reflect.TypeToken) -> isAssignableFrom
    179:196:boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType) -> a
    206:249:boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> a
    1258:1268:boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map):258:268 -> a
    1258:1268:boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map):236 -> a
    1291:1293:boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map):291:293 -> a
    1291:1293:boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map):262 -> a
    1291:1293:boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map):236 -> a
    275:283:java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[]) -> a
    298:298:int hashCode() -> hashCode
    302:303:boolean equals(java.lang.Object) -> equals
    307:307:java.lang.String toString() -> toString
    314:314:com.google.gson.reflect.TypeToken get(java.lang.reflect.Type) -> get
    321:321:com.google.gson.reflect.TypeToken get(java.lang.Class) -> get
    342:376:com.google.gson.reflect.TypeToken getParameterized(java.lang.reflect.Type,java.lang.reflect.Type[]) -> getParameterized
    383:383:com.google.gson.reflect.TypeToken getArray(java.lang.reflect.Type) -> getArray
com.google.gson.stream.JsonReader -> com.google.gson.stream.JsonReader:
    java.io.Reader in -> b
    boolean lenient -> c
    char[] buffer -> d
    int pos -> e
    int limit -> f
    int lineNumber -> g
    int lineStart -> h
    int peeked -> a
    long peekedLong -> i
    int peekedNumberLength -> j
    java.lang.String peekedString -> k
    int[] stack -> l
    int stackSize -> m
    java.lang.String[] pathNames -> n
    int[] pathIndices -> o
    230:292:void <init>(java.io.Reader) -> <init>
    334:335:void setLenient(boolean) -> setLenient
    341:341:boolean isLenient() -> isLenient
    349:360:void beginArray() -> beginArray
    367:378:void endArray() -> endArray
    385:395:void beginObject() -> beginObject
    402:414:void endObject() -> endObject
    420:424:boolean hasNext() -> hasNext
    431:465:com.google.gson.stream.JsonToken peek() -> peek
    471:603:int doPeek() -> b
    608:647:int peekKeyword() -> a
    652:751:int peekNumber() -> d
    757:777:boolean isLiteral(char) -> a
    788:804:java.lang.String nextName() -> nextName
    816:840:java.lang.String nextString() -> nextString
    851:864:boolean nextBoolean() -> nextBoolean
    875:885:void nextNull() -> nextNull
    899:930:double nextDouble() -> nextDouble
    944:985:long nextLong() -> nextLong
    1000:1046:java.lang.String nextQuotedValue(char) -> b
    1054:1105:java.lang.String nextUnquotedValue() -> e
    1110:1132:void skipQuotedValue(char) -> c
    1138:1164:void skipUnquotedValue() -> f
    1177:1223:int nextInt() -> nextInt
    1230:1234:void close() -> close
    1252:1322:void skipValue() -> skipValue
    1325:1332:void push(int) -> a
    1340:1365:boolean fillBuffer(int) -> b
    1383:1459:int nextNonWhitespace(boolean) -> a
    1464:1467:void checkLenient() -> g
    1475:1485:void skipToEndOfLine() -> h
    1491:1506:boolean skipTo(java.lang.String) -> a
    1510:1510:java.lang.String toString() -> toString
    1514:1516:java.lang.String locationString() -> c
    1520:1546:java.lang.String getPath(boolean) -> b
    1563:1563:java.lang.String getPreviousPath() -> getPreviousPath
    1581:1581:java.lang.String getPath() -> getPath
    1595:1650:char readEscapeCharacter() -> i
    1659:1659:java.io.IOException syntaxError(java.lang.String) -> b
    1667:1682:void consumeNonExecutePrefix() -> j
    1685:1707:void <clinit>() -> <clinit>
com.google.gson.stream.JsonReader$1 -> com.google.gson.stream.JsonReader$1:
    1685:1685:void <init>() -> <init>
    1687:1705:void promoteNameToValue(com.google.gson.stream.JsonReader) -> promoteNameToValue
com.google.gson.stream.JsonToken -> com.google.gson.stream.JsonToken:
    com.google.gson.stream.JsonToken BEGIN_ARRAY -> BEGIN_ARRAY
    com.google.gson.stream.JsonToken END_ARRAY -> END_ARRAY
    com.google.gson.stream.JsonToken BEGIN_OBJECT -> BEGIN_OBJECT
    com.google.gson.stream.JsonToken END_OBJECT -> END_OBJECT
    com.google.gson.stream.JsonToken NAME -> NAME
    com.google.gson.stream.JsonToken STRING -> STRING
    com.google.gson.stream.JsonToken NUMBER -> NUMBER
    com.google.gson.stream.JsonToken BOOLEAN -> BOOLEAN
    com.google.gson.stream.JsonToken NULL -> NULL
    com.google.gson.stream.JsonToken END_DOCUMENT -> END_DOCUMENT
    com.google.gson.stream.JsonToken[] $VALUES -> a
    25:25:com.google.gson.stream.JsonToken[] values() -> values
    25:25:com.google.gson.stream.JsonToken valueOf(java.lang.String) -> valueOf
    25:25:void <init>(java.lang.String,int) -> <init>
    25:84:void <clinit>() -> <clinit>
com.google.gson.stream.JsonWriter -> com.google.gson.stream.JsonWriter:
    java.util.regex.Pattern VALID_JSON_NUMBER_PATTERN -> a
    java.lang.String[] REPLACEMENT_CHARS -> b
    java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS -> c
    java.io.Writer out -> d
    int[] stack -> e
    int stackSize -> f
    java.lang.String indent -> g
    java.lang.String separator -> h
    boolean lenient -> i
    boolean htmlSafe -> j
    java.lang.String deferredName -> k
    boolean serializeNulls -> l
    176:208:void <init>(java.io.Writer) -> <init>
    219:226:void setIndent(java.lang.String) -> setIndent
    239:240:void setLenient(boolean) -> setLenient
    246:246:boolean isLenient() -> isLenient
    257:258:void setHtmlSafe(boolean) -> setHtmlSafe
    265:265:boolean isHtmlSafe() -> isHtmlSafe
    273:274:void setSerializeNulls(boolean) -> setSerializeNulls
    281:281:boolean getSerializeNulls() -> getSerializeNulls
    291:292:com.google.gson.stream.JsonWriter beginArray() -> beginArray
    301:301:com.google.gson.stream.JsonWriter endArray() -> endArray
    311:312:com.google.gson.stream.JsonWriter beginObject() -> beginObject
    321:321:com.google.gson.stream.JsonWriter endObject() -> endObject
    329:332:com.google.gson.stream.JsonWriter open(int,char) -> a
    341:354:com.google.gson.stream.JsonWriter close(int,int,char) -> a
    358:362:void push(int) -> a
    368:371:int peek() -> a
    378:379:void replaceTop(int) -> b
    388:396:com.google.gson.stream.JsonWriter name(java.lang.String) -> name
    400:405:void writeDeferredName() -> b
    414:420:com.google.gson.stream.JsonWriter value(java.lang.String) -> value
    435:441:com.google.gson.stream.JsonWriter jsonValue(java.lang.String) -> jsonValue
    450:460:com.google.gson.stream.JsonWriter nullValue() -> nullValue
    469:472:com.google.gson.stream.JsonWriter value(boolean) -> value
    482:488:com.google.gson.stream.JsonWriter value(java.lang.Boolean) -> value
    503:509:com.google.gson.stream.JsonWriter value(float) -> value
    522:528:com.google.gson.stream.JsonWriter value(double) -> value
    537:540:com.google.gson.stream.JsonWriter value(long) -> value
    566:586:com.google.gson.stream.JsonWriter value(java.lang.Number) -> value
    1550:1550:boolean isTrustedNumberType(java.lang.Class):550:550 -> value
    1550:1550:com.google.gson.stream.JsonWriter value(java.lang.Number):579 -> value
    594:598:void flush() -> flush
    606:613:void close() -> close
    616:645:void string(java.lang.String) -> a
    648:656:void newline() -> c
    663:671:void beforeName() -> d
    680:709:void beforeValue() -> e
    139:171:void <clinit>() -> <clinit>
com.google.gson.stream.MalformedJsonException -> com.google.gson.stream.MalformedJsonException:
    29:30:void <init>(java.lang.String) -> <init>
    33:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    37:38:void <init>(java.lang.Throwable) -> <init>
com.mongodb.AuthenticationMechanism -> com.a.a:
    com.mongodb.AuthenticationMechanism GSSAPI -> a
    com.mongodb.AuthenticationMechanism MONGODB_AWS -> b
    com.mongodb.AuthenticationMechanism MONGODB_X509 -> c
    com.mongodb.AuthenticationMechanism PLAIN -> d
    com.mongodb.AuthenticationMechanism SCRAM_SHA_1 -> e
    com.mongodb.AuthenticationMechanism SCRAM_SHA_256 -> f
    java.util.Map AUTH_MAP -> h
    java.lang.String mechanismName -> g
    com.mongodb.AuthenticationMechanism[] $VALUES -> i
    27:27:com.mongodb.AuthenticationMechanism[] values() -> values
    27:27:com.mongodb.AuthenticationMechanism valueOf(java.lang.String) -> valueOf
    64:66:void <init>(java.lang.String,int,java.lang.String) -> <init>
    79:79:java.lang.String toString() -> toString
    96:100:com.mongodb.AuthenticationMechanism fromMechanismName(java.lang.String) -> a
    27:86:void <clinit>() -> <clinit>
    1027:1027:com.mongodb.AuthenticationMechanism[] $values():27:27 -> <clinit>
    1027:1027:void <clinit>():27 -> <clinit>
    1074:1074:java.lang.String getMechanismName():74:74 -> <clinit>
    1074:1074:void <clinit>():84 -> <clinit>
com.mongodb.BSONTimestampCodec -> com.a.b:
    33:33:void <init>() -> <init>
    47:47:java.lang.Class getEncoderClass() -> a
    33:33:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1036:1037:void encode$119cbe46(org.bson.BsonWriter,org.bson.types.BSONTimestamp):36:37 -> a
    1036:1037:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):33 -> a
    1079:1079:int org.bson.types.BSONTimestamp.getInc():79:79 -> a
    1079:1079:void encode$119cbe46(org.bson.BsonWriter,org.bson.types.BSONTimestamp):36 -> a
    1079:1079:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):33 -> a
    33:33:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2041:2042:org.bson.types.BSONTimestamp decode$22db41c2(org.bson.BsonReader):41:42 -> a
    2041:2042:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):33 -> a
    2088:2088:int org.bson.BsonTimestamp.getInc():88:88 -> a
    2088:2088:org.bson.types.BSONTimestamp decode$22db41c2(org.bson.BsonReader):42 -> a
    2088:2088:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):33 -> a
com.mongodb.BasicDBList -> com.a.c:
    26:26:void <init>() -> <init>
com.mongodb.BasicDBObject -> com.a.d:
    org.bson.codecs.Codec DEFAULT_CODEC -> a
    100:101:void <init>() -> <init>
    209:223:boolean equals(java.lang.Object) -> equals
    228:228:int hashCode() -> hashCode
    237:239:byte[] toBson(com.mongodb.BasicDBObject) -> a
    250:250:java.lang.String toString() -> toString
    1164:1164:java.lang.String toJson():164:164 -> toString
    1164:1164:java.lang.String toString():250 -> toString
    1177:1177:java.lang.String toJson(org.bson.json.JsonWriterSettings):177:177 -> toString
    1177:1177:java.lang.String toJson():164 -> toString
    1177:1177:java.lang.String toString():250 -> toString
    1202:1204:java.lang.String toJson(org.bson.json.JsonWriterSettings,org.bson.codecs.Encoder):202:204 -> toString
    1202:1204:java.lang.String toJson(org.bson.json.JsonWriterSettings):177 -> toString
    1202:1204:java.lang.String toJson():164 -> toString
    1202:1204:java.lang.String toString():250 -> toString
    2072:2072:java.io.Writer org.bson.json.JsonWriter.getWriter():72:72 -> toString
    2072:2072:java.lang.String toJson(org.bson.json.JsonWriterSettings,org.bson.codecs.Encoder):204 -> toString
    2072:2072:java.lang.String toJson(org.bson.json.JsonWriterSettings):177 -> toString
    2072:2072:java.lang.String toJson():164 -> toString
    2072:2072:java.lang.String toString():250 -> toString
    2276:2276:java.io.Writer org.bson.json.StrictCharacterStreamJsonWriter.getWriter():276:276 -> toString
    2276:2276:java.io.Writer org.bson.json.JsonWriter.getWriter():72 -> toString
    2276:2276:java.lang.String toJson(org.bson.json.JsonWriterSettings,org.bson.codecs.Encoder):204 -> toString
    2276:2276:java.lang.String toJson(org.bson.json.JsonWriterSettings):177 -> toString
    2276:2276:java.lang.String toJson():164 -> toString
    2276:2276:java.lang.String toString():250 -> toString
    283:283:org.bson.BsonDocument toBsonDocument$283f4ed1(org.bson.codecs.configuration.CodecRegistry) -> a
    289:296:java.lang.Object canonicalize(java.lang.Object) -> a
    2321:2325:java.util.List canonicalizeList(java.util.List):321:325 -> a
    2321:2325:java.lang.Object canonicalize(java.lang.Object):292 -> a
    301:307:java.util.Map canonicalizeMap(java.util.Map) -> a
    311:317:com.mongodb.BasicDBObject canonicalizeBSONObject(org.bson.BSONObject) -> a
    63:65:void <clinit>() -> <clinit>
com.mongodb.ClientSessionOptions -> com.a.e:
    java.lang.Boolean causallyConsistent -> a
    java.lang.Boolean snapshot -> b
    com.mongodb.TransactionOptions defaultTransactionOptions -> c
    82:102:boolean equals(java.lang.Object) -> equals
    107:110:int hashCode() -> hashCode
    115:115:java.lang.String toString() -> toString
    128:128:com.mongodb.ClientSessionOptions$Builder builder() -> a
    212:221:void <init>(com.mongodb.ClientSessionOptions$Builder) -> <init>
    1151:1151:java.lang.Boolean com.mongodb.ClientSessionOptions$Builder.access$100(com.mongodb.ClientSessionOptions$Builder):151:151 -> <init>
    1151:1151:void <init>(com.mongodb.ClientSessionOptions$Builder):213 -> <init>
    2151:2151:java.lang.Boolean com.mongodb.ClientSessionOptions$Builder.access$100(com.mongodb.ClientSessionOptions$Builder):151:151 -> <init>
    2151:2151:void <init>(com.mongodb.ClientSessionOptions$Builder):213 -> <init>
    3151:3151:java.lang.Boolean com.mongodb.ClientSessionOptions$Builder.access$200(com.mongodb.ClientSessionOptions$Builder):151:151 -> <init>
    3151:3151:void <init>(com.mongodb.ClientSessionOptions$Builder):213 -> <init>
    4151:4151:java.lang.Boolean com.mongodb.ClientSessionOptions$Builder.access$200(com.mongodb.ClientSessionOptions$Builder):151:151 -> <init>
    4151:4151:void <init>(com.mongodb.ClientSessionOptions$Builder):213 -> <init>
    5151:5151:java.lang.Boolean com.mongodb.ClientSessionOptions$Builder.access$100(com.mongodb.ClientSessionOptions$Builder):151:151 -> <init>
    5151:5151:void <init>(com.mongodb.ClientSessionOptions$Builder):216 -> <init>
    6151:6151:java.lang.Boolean com.mongodb.ClientSessionOptions$Builder.access$200(com.mongodb.ClientSessionOptions$Builder):151:151 -> <init>
    6151:6151:void <init>(com.mongodb.ClientSessionOptions$Builder):216 -> <init>
    7151:7151:java.lang.Boolean com.mongodb.ClientSessionOptions$Builder.access$100(com.mongodb.ClientSessionOptions$Builder):151:151 -> <init>
    7151:7151:void <init>(com.mongodb.ClientSessionOptions$Builder):217 -> <init>
    8151:8151:java.lang.Boolean com.mongodb.ClientSessionOptions$Builder.access$200(com.mongodb.ClientSessionOptions$Builder):151:151 -> <init>
    8151:8151:void <init>(com.mongodb.ClientSessionOptions$Builder):218 -> <init>
    9151:9151:java.lang.Boolean com.mongodb.ClientSessionOptions$Builder.access$200(com.mongodb.ClientSessionOptions$Builder):151:151 -> <init>
    9151:9151:void <init>(com.mongodb.ClientSessionOptions$Builder):219 -> <init>
    10151:10151:com.mongodb.TransactionOptions com.mongodb.ClientSessionOptions$Builder.access$300(com.mongodb.ClientSessionOptions$Builder):151:151 -> <init>
    10151:10151:void <init>(com.mongodb.ClientSessionOptions$Builder):220 -> <init>
    37:37:void <init>(com.mongodb.ClientSessionOptions$Builder,byte) -> <init>
com.mongodb.ClientSessionOptions$Builder -> com.a.e$a:
    java.lang.Boolean causallyConsistent -> a
    java.lang.Boolean snapshot -> b
    com.mongodb.TransactionOptions defaultTransactionOptions -> c
    164:165:com.mongodb.ClientSessionOptions$Builder causallyConsistent(boolean) -> a
    205:205:com.mongodb.ClientSessionOptions build() -> a
    154:209:void <init>() -> <init>
    151:151:void <init>(byte) -> <init>
com.mongodb.ConnectionString -> com.a.f:
    java.util.Set ALLOWED_OPTIONS_IN_TXT_RECORD -> C
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> D
    com.mongodb.MongoCredential credential -> a
    boolean isSrvProtocol -> b
    java.util.List hosts -> c
    java.lang.String database -> E
    java.lang.String collection -> F
    java.lang.String connectionString -> G
    java.lang.Integer srvMaxHosts -> d
    java.lang.String srvServiceName -> e
    java.lang.Boolean directConnection -> f
    java.lang.Boolean loadBalanced -> g
    com.mongodb.ReadPreference readPreference -> h
    com.mongodb.WriteConcern writeConcern -> i
    java.lang.Boolean retryWrites -> j
    java.lang.Boolean retryReads -> H
    com.mongodb.ReadConcern readConcern -> k
    java.lang.Integer minConnectionPoolSize -> l
    java.lang.Integer maxConnectionPoolSize -> m
    java.lang.Integer maxWaitTime -> n
    java.lang.Integer maxConnectionIdleTime -> o
    java.lang.Integer maxConnectionLifeTime -> p
    java.lang.Integer maxConnecting -> q
    java.lang.Integer connectTimeout -> r
    java.lang.Integer socketTimeout -> s
    java.lang.Boolean sslEnabled -> t
    java.lang.Boolean sslInvalidHostnameAllowed -> u
    java.lang.String requiredReplicaSetName -> v
    java.lang.Integer serverSelectionTimeout -> w
    java.lang.Integer localThreshold -> x
    java.lang.Integer heartbeatFrequency -> y
    java.lang.String applicationName -> z
    java.util.List compressorList -> A
    org.bson.UuidRepresentation uuidRepresentation -> B
    java.util.Set GENERAL_OPTIONS_KEYS -> I
    java.util.Set AUTH_KEYS -> J
    java.util.Set READ_PREFERENCE_KEYS -> K
    java.util.Set WRITE_CONCERN_KEYS -> L
    java.util.Set COMPRESSOR_KEYS -> M
    java.util.Set ALL_KEYS -> N
    java.util.Set TRUE_VALUES -> O
    java.util.Set FALSE_VALUES -> P
    298:449:void <init>(java.lang.String) -> <init>
    2142:2142:java.lang.String urldecode(java.lang.String):1142:1142 -> <init>
    2142:2142:void <init>(java.lang.String):343 -> <init>
    3142:3142:java.lang.String urldecode(java.lang.String):1142:1142 -> <init>
    3142:3142:void <init>(java.lang.String):349 -> <init>
    4142:4142:java.lang.String urldecode(java.lang.String):1142:1142 -> <init>
    4142:4142:void <init>(java.lang.String):381 -> <init>
    4528:4530:java.util.Map combineOptionsMaps(java.util.Map,java.util.Map):528:530 -> <init>
    4528:4530:void <init>(java.lang.String):406 -> <init>
    535:542:void warnOnUnsupportedOptions(java.util.Map) -> a
    545:651:void translateOptions(java.util.Map) -> b
    4768:4783:org.bson.UuidRepresentation createUuidRepresentation(java.lang.String):768:783 -> b
    4768:4783:void translateOptions(java.util.Map):621 -> b
    654:659:void initializeSslEnabled(java.lang.String,java.lang.String) -> a
    662:677:java.util.List createCompressors(java.util.Map) -> c
    5681:5699:java.util.List buildCompressors(java.lang.String,java.lang.Integer):681:699 -> c
    5681:5699:java.util.List createCompressors(java.util.Map):677 -> c
    6061:6061:com.mongodb.MongoCompressor com.mongodb.MongoCompressor.createZlibCompressor():61:61 -> c
    6061:6061:java.util.List buildCompressors(java.lang.String,java.lang.Integer):685 -> c
    6061:6061:java.util.List createCompressors(java.util.Map):677 -> c
    7051:7051:com.mongodb.MongoCompressor com.mongodb.MongoCompressor.createSnappyCompressor():51:51 -> c
    7051:7051:java.util.List buildCompressors(java.lang.String,java.lang.Integer):691 -> c
    7051:7051:java.util.List createCompressors(java.util.Map):677 -> c
    7071:7071:com.mongodb.MongoCompressor com.mongodb.MongoCompressor.createZstdCompressor():71:71 -> c
    7071:7071:java.util.List buildCompressors(java.lang.String,java.lang.Integer):693 -> c
    7071:7071:java.util.List createCompressors(java.util.Map):677 -> c
    704:732:com.mongodb.WriteConcern createWriteConcern(java.util.Map) -> d
    737:764:com.mongodb.ReadPreference createReadPreference(java.util.Map) -> e
    7989:8001:com.mongodb.ReadPreference buildReadPreference(java.lang.String,java.util.List,long):989:1001 -> e
    7989:8001:com.mongodb.ReadPreference createReadPreference(java.util.Map):764 -> e
    789:854:com.mongodb.MongoCredential createCredentials(java.util.Map,java.lang.String,char[]) -> a
    8863:8911:com.mongodb.MongoCredential createMongoCredentialWithMechanism(com.mongodb.AuthenticationMechanism,java.lang.String,char[],java.lang.String,java.lang.String):863:911 -> a
    8863:8911:com.mongodb.MongoCredential createCredentials(java.util.Map,java.lang.String,char[]):832 -> a
    8915:8918:java.lang.String getAuthSourceOrDefault(java.lang.String,java.lang.String):915:918 -> a
    8915:8918:com.mongodb.MongoCredential createMongoCredentialWithMechanism(com.mongodb.AuthenticationMechanism,java.lang.String,char[],java.lang.String,java.lang.String):865 -> a
    8915:8918:com.mongodb.MongoCredential createCredentials(java.util.Map,java.lang.String,char[]):832 -> a
    9915:9918:java.lang.String getAuthSourceOrDefault(java.lang.String,java.lang.String):915:918 -> a
    9915:9918:com.mongodb.MongoCredential createMongoCredentialWithMechanism(com.mongodb.AuthenticationMechanism,java.lang.String,char[],java.lang.String,java.lang.String):869 -> a
    9915:9918:com.mongodb.MongoCredential createCredentials(java.util.Map,java.lang.String,char[]):832 -> a
    10915:10918:java.lang.String getAuthSourceOrDefault(java.lang.String,java.lang.String):915:918 -> a
    10915:10918:com.mongodb.MongoCredential createMongoCredentialWithMechanism(com.mongodb.AuthenticationMechanism,java.lang.String,char[],java.lang.String,java.lang.String):875 -> a
    10915:10918:com.mongodb.MongoCredential createCredentials(java.util.Map,java.lang.String,char[]):832 -> a
    11915:11918:java.lang.String getAuthSourceOrDefault(java.lang.String,java.lang.String):915:918 -> a
    11915:11918:com.mongodb.MongoCredential createCredentials(java.util.Map,java.lang.String,char[]):835 -> a
    924:928:java.lang.String getLastValue(java.util.Map,java.lang.String) -> a
    932:983:java.util.Map parseOptions(java.lang.String) -> a
    12142:12142:java.lang.String urldecode(java.lang.String):1142:1142 -> a
    12142:12142:java.util.Map parseOptions(java.lang.String):949 -> a
    1008:1033:com.mongodb.WriteConcern buildWriteConcern(java.lang.Boolean,java.lang.String,java.lang.Integer,java.lang.Boolean) -> a
    1037:1048:com.mongodb.TagSet getTags(java.lang.String) -> b
    1056:1073:java.lang.Boolean parseBoolean(java.lang.String,java.lang.String) -> b
    1079:1081:int parseInteger(java.lang.String,java.lang.String) -> c
    1087:1118:java.util.List parseHosts(java.util.List) -> a
    13142:13142:java.lang.String urldecode(java.lang.String):1142:1142 -> a
    13142:13142:java.util.List parseHosts(java.util.List):1095 -> a
    1122:1135:void validatePort(java.lang.String,java.lang.String) -> d
    1138:1138:int countOccurrences(java.lang.String,java.lang.String) -> e
    1147:1153:java.lang.String urldecode(java.lang.String,boolean) -> a
    1515:1515:java.lang.String toString() -> toString
    1520:1556:boolean equals(java.lang.Object) -> equals
    1561:1561:int hashCode() -> hashCode
    253:1052:void <clinit>() -> <clinit>
com.mongodb.ConnectionString$1 -> com.a.f$1:
    int[] $SwitchMap$com$mongodb$AuthenticationMechanism -> a
    863:863:void <clinit>() -> <clinit>
com.mongodb.ContextProvider -> com.a.g:
com.mongodb.CursorType -> com.a.h:
    com.mongodb.CursorType NonTailable -> a
    com.mongodb.CursorType Tailable -> c
    com.mongodb.CursorType TailableAwait -> b
    com.mongodb.CursorType[] $VALUES -> d
    25:25:com.mongodb.CursorType[] values() -> values
    25:25:com.mongodb.CursorType valueOf(java.lang.String) -> valueOf
    25:25:void <init>(java.lang.String,int) -> <init>
    boolean isTailable() -> a
    25:25:void <init>(java.lang.String,int,byte) -> <init>
    25:52:void <clinit>() -> <clinit>
    1025:1025:com.mongodb.CursorType[] $values():25:25 -> <clinit>
    1025:1025:void <clinit>():25 -> <clinit>
com.mongodb.CursorType$1 -> com.a.h$1:
    29:29:void <init>(java.lang.String,int) -> <init>
    32:32:boolean isTailable() -> a
com.mongodb.CursorType$2 -> com.a.h$2:
    41:41:void <init>(java.lang.String,int) -> <init>
    44:44:boolean isTailable() -> a
com.mongodb.CursorType$3 -> com.a.h$3:
    52:52:void <init>(java.lang.String,int) -> <init>
    55:55:boolean isTailable() -> a
com.mongodb.DBObject -> com.a.i:
com.mongodb.DBObjectCodec -> com.a.j:
    org.bson.codecs.BsonTypeClassMap DEFAULT_BSON_TYPE_CLASS_MAP -> a
    org.bson.codecs.configuration.CodecRegistry DEFAULT_REGISTRY -> b
    org.bson.codecs.configuration.CodecRegistry codecRegistry -> c
    org.bson.codecs.BsonTypeCodecMap bsonTypeCodecMap -> d
    com.mongodb.internal.connection.ScramShaAuthenticator$AuthenticationHashGenerator objectFactory$477a9805 -> e
    org.bson.codecs.IdGenerator idGenerator -> f
    org.bson.UuidRepresentation uuidRepresentation -> g
    93:93:org.bson.codecs.BsonTypeClassMap getDefaultBsonTypeClassMap() -> b
    97:97:org.bson.codecs.configuration.CodecRegistry getDefaultRegistry() -> c
    106:107:void <init>() -> <init>
    115:116:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    125:126:void <init>(org.bson.codecs.configuration.CodecRegistry,org.bson.codecs.BsonTypeClassMap) -> <init>
    136:138:void <init>(org.bson.codecs.configuration.CodecRegistry,org.bson.codecs.BsonTypeClassMap,com.mongodb.internal.connection.ScramShaAuthenticator$AuthenticationHashGenerator) -> <init>
    78:146:void <init>(org.bson.codecs.configuration.CodecRegistry,org.bson.codecs.BsonTypeCodecMap,com.mongodb.internal.connection.ScramShaAuthenticator$AuthenticationHashGenerator,org.bson.UuidRepresentation) -> <init>
    172:172:java.lang.Class getEncoderClass() -> a
    210:213:org.bson.codecs.Codec withUuidRepresentation(org.bson.UuidRepresentation) -> a
    229:251:void writeValue(org.bson.BsonWriter,org.bson.codecs.EncoderContext,java.lang.Object) -> a
    1050:1050:java.lang.String org.bson.types.Symbol.getSymbol():50:50 -> a
    1050:1050:void writeValue(org.bson.BsonWriter,org.bson.codecs.EncoderContext,java.lang.Object):246 -> a
    254:261:void encodeMap(org.bson.BsonWriter,java.util.Map,org.bson.codecs.EncoderContext) -> a
    264:271:void encodeBsonObject(org.bson.BsonWriter,org.bson.BSONObject,org.bson.codecs.EncoderContext) -> a
    274:275:void encodeByteArray(org.bson.BsonWriter,byte[]) -> a
    278:286:void encodeArray(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> b
    289:298:void encodeDBRef(org.bson.BsonWriter,com.mongodb.DBRef,org.bson.codecs.EncoderContext) -> a
    1089:1089:java.lang.String com.mongodb.DBRef.getCollectionName():89:89 -> a
    1089:1089:void encodeDBRef(org.bson.BsonWriter,com.mongodb.DBRef,org.bson.codecs.EncoderContext):291 -> a
    2080:2080:java.lang.Object com.mongodb.DBRef.getId():80:80 -> a
    2080:2080:void encodeDBRef(org.bson.BsonWriter,com.mongodb.DBRef,org.bson.codecs.EncoderContext):293 -> a
    2101:2101:java.lang.String com.mongodb.DBRef.getDatabaseName():101:101 -> a
    2101:2101:void encodeDBRef(org.bson.BsonWriter,com.mongodb.DBRef,org.bson.codecs.EncoderContext):294 -> a
    3101:3101:java.lang.String com.mongodb.DBRef.getDatabaseName():101:101 -> a
    3101:3101:void encodeDBRef(org.bson.BsonWriter,com.mongodb.DBRef,org.bson.codecs.EncoderContext):295 -> a
    301:303:void encodeCodeWScope(org.bson.BsonWriter,org.bson.types.CodeWScope,org.bson.codecs.EncoderContext) -> a
    4050:4050:java.lang.String org.bson.types.Code.getCode():50:50 -> a
    4050:4050:void encodeCodeWScope(org.bson.BsonWriter,org.bson.types.CodeWScope,org.bson.codecs.EncoderContext):301 -> a
    5050:5050:org.bson.BSONObject org.bson.types.CodeWScope.getScope():50:50 -> a
    5050:5050:void encodeCodeWScope(org.bson.BsonWriter,org.bson.types.CodeWScope,org.bson.codecs.EncoderContext):302 -> a
    306:311:void encodeIterable(org.bson.BsonWriter,java.lang.Iterable,org.bson.codecs.EncoderContext) -> a
    316:353:java.lang.Object readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext,java.lang.String,java.util.List) -> a
    5414:5417:java.lang.Object verifyForDBRef(com.mongodb.DBObject):414:417 -> a
    5414:5417:java.lang.Object readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext,java.lang.String,java.util.List):325 -> a
    6387:6393:java.util.List readArray(org.bson.BsonReader,org.bson.codecs.DecoderContext,java.util.List):387:393 -> a
    6387:6393:java.lang.Object readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext,java.lang.String,java.util.List):328 -> a
    6410:6410:org.bson.types.CodeWScope readCodeWScope(org.bson.BsonReader,org.bson.codecs.DecoderContext,java.util.List):410:410 -> a
    6410:6410:java.lang.Object readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext,java.lang.String,java.util.List):331 -> a
    7059:7059:java.lang.String org.bson.BsonDbPointer.getNamespace():59:59 -> a
    7059:7059:java.lang.Object readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext,java.lang.String,java.util.List):335 -> a
    7068:7068:org.bson.types.ObjectId org.bson.BsonDbPointer.getId():68:68 -> a
    7068:7068:java.lang.Object readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext,java.lang.String,java.util.List):335 -> a
    7357:7383:java.lang.Object readBinary(org.bson.BsonReader,org.bson.codecs.DecoderContext):357:383 -> a
    7357:7383:java.lang.Object readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext,java.lang.String,java.util.List):338 -> a
    8097:8097:byte org.bson.BsonBinarySubType.getValue():97:97 -> a
    8097:8097:java.lang.Object readBinary(org.bson.BsonReader,org.bson.codecs.DecoderContext):378 -> a
    8097:8097:java.lang.Object readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext,java.lang.String,java.util.List):338 -> a
    9097:9097:byte org.bson.BsonBinarySubType.getValue():97:97 -> a
    9097:9097:java.lang.Object readBinary(org.bson.BsonReader,org.bson.codecs.DecoderContext):378 -> a
    9097:9097:java.lang.Object readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext,java.lang.String,java.util.List):338 -> a
    397:406:com.mongodb.DBObject readDocument(org.bson.BsonReader,org.bson.codecs.DecoderContext,java.util.List) -> a
    67:67:java.lang.Object generateIdIfAbsentFromDocument(java.lang.Object) -> a
    9202:9205:com.mongodb.DBObject generateIdIfAbsentFromDocument(com.mongodb.DBObject):202:205 -> a
    9202:9205:java.lang.Object generateIdIfAbsentFromDocument(java.lang.Object):67 -> a
    10177:10177:boolean documentHasId(com.mongodb.DBObject):177:177 -> a
    10177:10177:com.mongodb.DBObject generateIdIfAbsentFromDocument(com.mongodb.DBObject):202 -> a
    10177:10177:java.lang.Object generateIdIfAbsentFromDocument(java.lang.Object):67 -> a
    67:67:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    11150:11162:void encode(org.bson.BsonWriter,com.mongodb.DBObject,org.bson.codecs.EncoderContext):150:162 -> a
    11150:11162:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):67 -> a
    11217:11221:void beforeFields(org.bson.BsonWriter,org.bson.codecs.EncoderContext,com.mongodb.DBObject):217:221 -> a
    11217:11221:void encode(org.bson.BsonWriter,com.mongodb.DBObject,org.bson.codecs.EncoderContext):152 -> a
    11217:11221:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):67 -> a
    12079:12079:boolean org.bson.codecs.EncoderContext.isEncodingCollectibleDocument():79:79 -> a
    12079:12079:void beforeFields(org.bson.BsonWriter,org.bson.codecs.EncoderContext,com.mongodb.DBObject):217 -> a
    12079:12079:void encode(org.bson.BsonWriter,com.mongodb.DBObject,org.bson.codecs.EncoderContext):152 -> a
    12079:12079:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):67 -> a
    12224:12224:boolean skipField(org.bson.codecs.EncoderContext,java.lang.String):224:224 -> a
    12224:12224:void encode(org.bson.BsonWriter,com.mongodb.DBObject,org.bson.codecs.EncoderContext):155 -> a
    12224:12224:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):67 -> a
    13079:13079:boolean org.bson.codecs.EncoderContext.isEncodingCollectibleDocument():79:79 -> a
    13079:13079:boolean skipField(org.bson.codecs.EncoderContext,java.lang.String):224 -> a
    13079:13079:void encode(org.bson.BsonWriter,com.mongodb.DBObject,org.bson.codecs.EncoderContext):155 -> a
    13079:13079:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):67 -> a
    67:67:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    13166:13167:com.mongodb.DBObject decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):166:167 -> a
    13166:13167:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):67 -> a
    69:71:void <clinit>() -> <clinit>
    14082:14089:org.bson.codecs.BsonTypeClassMap createDefaultBsonTypeClassMap():82:89 -> <clinit>
    14082:14089:void <clinit>():69 -> <clinit>
com.mongodb.DBObjectCodec$1 -> com.a.j$1:
    int[] $SwitchMap$org$bson$BsonType -> a
    323:323:void <clinit>() -> <clinit>
com.mongodb.DBRef -> com.a.k:
    java.lang.Object id -> a
    java.lang.String collectionName -> b
    java.lang.String databaseName -> c
    57:58:void <init>(java.lang.String,java.lang.Object) -> <init>
    68:72:void <init>(java.lang.String,java.lang.String,java.lang.Object) -> <init>
    106:125:boolean equals(java.lang.Object) -> equals
    130:133:int hashCode() -> hashCode
    138:140:java.lang.String toString() -> toString
com.mongodb.DBRefCodec -> com.a.l:
    org.bson.codecs.configuration.CodecRegistry registry -> a
    41:43:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    61:61:java.lang.Class getEncoderClass() -> a
    33:33:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1048:1057:void encode(org.bson.BsonWriter,com.mongodb.DBRef,org.bson.codecs.EncoderContext):48:57 -> a
    1048:1057:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):33 -> a
    1089:1089:java.lang.String com.mongodb.DBRef.getCollectionName():89:89 -> a
    1089:1089:void encode(org.bson.BsonWriter,com.mongodb.DBRef,org.bson.codecs.EncoderContext):49 -> a
    1089:1089:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):33 -> a
    2080:2080:java.lang.Object com.mongodb.DBRef.getId():80:80 -> a
    2080:2080:void encode(org.bson.BsonWriter,com.mongodb.DBRef,org.bson.codecs.EncoderContext):51 -> a
    2080:2080:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):33 -> a
    3080:3080:java.lang.Object com.mongodb.DBRef.getId():80:80 -> a
    3080:3080:void encode(org.bson.BsonWriter,com.mongodb.DBRef,org.bson.codecs.EncoderContext):52 -> a
    3080:3080:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):33 -> a
    3101:3101:java.lang.String com.mongodb.DBRef.getDatabaseName():101:101 -> a
    3101:3101:void encode(org.bson.BsonWriter,com.mongodb.DBRef,org.bson.codecs.EncoderContext):53 -> a
    3101:3101:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):33 -> a
    4101:4101:java.lang.String com.mongodb.DBRef.getDatabaseName():101:101 -> a
    4101:4101:void encode(org.bson.BsonWriter,com.mongodb.DBRef,org.bson.codecs.EncoderContext):54 -> a
    4101:4101:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):33 -> a
    33:33:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    5066:5066:com.mongodb.DBRef decode$424390f2():66:66 -> a
    5066:5066:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):33 -> a
com.mongodb.DocumentToDBRefTransformer -> com.a.m:
    29:29:void <init>() -> <init>
    32:38:java.lang.Object transform(java.lang.Object) -> transform
    43:50:boolean equals(java.lang.Object) -> equals
    55:55:int hashCode() -> hashCode
com.mongodb.ErrorCategory -> com.a.n:
    com.mongodb.ErrorCategory UNCATEGORIZED -> b
    com.mongodb.ErrorCategory DUPLICATE_KEY -> c
    com.mongodb.ErrorCategory EXECUTION_TIMEOUT -> a
    java.util.List DUPLICATE_KEY_ERROR_CODES -> d
    java.util.List EXECUTION_TIMEOUT_ERROR_CODES -> e
    com.mongodb.ErrorCategory[] $VALUES -> f
    27:27:com.mongodb.ErrorCategory[] values() -> values
    27:27:com.mongodb.ErrorCategory valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    57:62:com.mongodb.ErrorCategory fromErrorCode(int) -> a
    27:48:void <clinit>() -> <clinit>
    1027:1027:com.mongodb.ErrorCategory[] $values():27:27 -> <clinit>
    1027:1027:void <clinit>():27 -> <clinit>
com.mongodb.Function -> com.a.o:
    java.lang.Object apply(java.lang.Object) -> apply
com.mongodb.Jep395RecordCodecProvider -> com.a.p:
    org.bson.codecs.configuration.CodecProvider RECORD_CODEC_PROVIDER -> a
    35:35:void <init>() -> <init>
    56:56:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    43:51:void <clinit>() -> <clinit>
com.mongodb.KerberosSubjectProvider -> com.a.q:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> a
    java.util.concurrent.locks.ReentrantLock lock -> b
    java.lang.String loginContextName -> c
    java.lang.String fallbackLoginContextName -> d
    javax.security.auth.Subject subject -> e
    69:70:void <init>() -> <init>
    59:84:void <init>(java.lang.String,java.lang.String) -> <init>
    94:94:javax.security.auth.Subject getSubject() -> getSubject
    105:119:javax.security.auth.Subject createNewSubject() -> a
    95:98:javax.security.auth.Subject lambda$getSubject$0() -> b
    1123:1132:boolean needNewSubject(javax.security.auth.Subject):123:132 -> b
    1123:1132:javax.security.auth.Subject lambda$getSubject$0():95 -> b
    56:56:void <clinit>() -> <clinit>
com.mongodb.LoggerSettings -> com.a.r:
    int maxDocumentLength -> a
    44:44:com.mongodb.LoggerSettings$Builder builder() -> a
    121:128:boolean equals(java.lang.Object) -> equals
    133:133:int hashCode() -> hashCode
    138:138:java.lang.String toString() -> toString
    143:145:void <init>(com.mongodb.LoggerSettings$Builder) -> <init>
    1060:1060:int com.mongodb.LoggerSettings$Builder.access$300(com.mongodb.LoggerSettings$Builder):60:60 -> <init>
    1060:1060:void <init>(com.mongodb.LoggerSettings$Builder):144 -> <init>
    37:37:void <init>(com.mongodb.LoggerSettings$Builder,byte) -> <init>
com.mongodb.LoggerSettings$Builder -> com.a.r$a:
    int maxDocumentLength -> a
    61:63:void <init>() -> <init>
    60:60:void <init>(byte) -> <init>
com.mongodb.MongoBulkWriteException -> com.a.s:
    com.mongodb.bulk.BulkWriteResult writeResult -> a
    java.util.List errors -> b
    com.mongodb.ServerAddress serverAddress -> c
    net.kyori.adventure.text.ComponentCompaction writeConcernError$53bdfe66 -> d
    75:88:void <init>(com.mongodb.bulk.BulkWriteResult,java.util.List,net.kyori.adventure.text.ComponentCompaction,com.mongodb.ServerAddress,java.util.Set) -> <init>
    125:125:com.mongodb.ServerAddress getServerAddress() -> a
    130:152:boolean equals(java.lang.Object) -> equals
    157:161:int hashCode() -> hashCode
com.mongodb.MongoClientException -> com.a.t:
    36:37:void <init>(java.lang.String) -> <init>
    46:47:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.mongodb.MongoClientSettings -> com.a.u:
    org.bson.codecs.configuration.CodecRegistry DEFAULT_CODEC_REGISTRY -> w
    com.mongodb.ReadPreference readPreference -> a
    com.mongodb.WriteConcern writeConcern -> b
    boolean retryWrites -> c
    boolean retryReads -> d
    com.mongodb.ReadConcern readConcern -> e
    com.mongodb.MongoCredential credential -> f
    com.mongodb.internal.connection.ScramShaAuthenticator$AuthenticationHashGenerator streamFactoryFactory$379e137f -> g
    java.util.List commandListeners -> h
    org.bson.codecs.configuration.CodecRegistry codecRegistry -> i
    com.mongodb.LoggerSettings loggerSettings -> j
    com.mongodb.connection.ClusterSettings clusterSettings -> k
    com.mongodb.connection.SocketSettings socketSettings -> l
    com.mongodb.connection.SocketSettings heartbeatSocketSettings -> m
    com.mongodb.connection.ConnectionPoolSettings connectionPoolSettings -> n
    com.mongodb.connection.ServerSettings serverSettings -> o
    com.mongodb.connection.SslSettings sslSettings -> p
    java.lang.String applicationName -> q
    java.util.List compressorList -> r
    org.bson.UuidRepresentation uuidRepresentation -> s
    com.mongodb.internal.connection.DescriptionHelper serverApi$10f7fbbb -> t
    co.aikar.commands.BukkitCommandContexts_1_12 autoEncryptionSettings$7a463d11 -> u
    boolean heartbeatSocketTimeoutSetExplicitly -> x
    boolean heartbeatConnectTimeoutSetExplicitly -> y
    com.mongodb.ContextProvider contextProvider -> v
    139:139:org.bson.codecs.configuration.CodecRegistry getDefaultCodecRegistry() -> a
    148:148:com.mongodb.MongoClientSettings$Builder builder() -> b
    876:906:boolean equals(java.lang.Object) -> equals
    911:914:int hashCode() -> hashCode
    919:919:java.lang.String toString() -> toString
    945:977:void <init>(com.mongodb.MongoClientSettings$Builder) -> <init>
    1166:1166:com.mongodb.ReadPreference com.mongodb.MongoClientSettings$Builder.access$600(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    1166:1166:void <init>(com.mongodb.MongoClientSettings$Builder):946 -> <init>
    2166:2166:com.mongodb.WriteConcern com.mongodb.MongoClientSettings$Builder.access$700(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    2166:2166:void <init>(com.mongodb.MongoClientSettings$Builder):947 -> <init>
    3166:3166:boolean com.mongodb.MongoClientSettings$Builder.access$800(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    3166:3166:void <init>(com.mongodb.MongoClientSettings$Builder):948 -> <init>
    4166:4166:boolean com.mongodb.MongoClientSettings$Builder.access$900(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    4166:4166:void <init>(com.mongodb.MongoClientSettings$Builder):949 -> <init>
    5166:5166:com.mongodb.ReadConcern com.mongodb.MongoClientSettings$Builder.access$1000(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    5166:5166:void <init>(com.mongodb.MongoClientSettings$Builder):950 -> <init>
    6166:6166:com.mongodb.MongoCredential com.mongodb.MongoClientSettings$Builder.access$1100(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    6166:6166:void <init>(com.mongodb.MongoClientSettings$Builder):951 -> <init>
    7166:7166:com.mongodb.internal.connection.ScramShaAuthenticator$AuthenticationHashGenerator com.mongodb.MongoClientSettings$Builder.access$1200$77826229(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    7166:7166:void <init>(com.mongodb.MongoClientSettings$Builder):952 -> <init>
    8166:8166:org.bson.codecs.configuration.CodecRegistry com.mongodb.MongoClientSettings$Builder.access$1300(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    8166:8166:void <init>(com.mongodb.MongoClientSettings$Builder):953 -> <init>
    9166:9166:java.util.List com.mongodb.MongoClientSettings$Builder.access$1400(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    9166:9166:void <init>(com.mongodb.MongoClientSettings$Builder):954 -> <init>
    10166:10166:java.lang.String com.mongodb.MongoClientSettings$Builder.access$1500(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    10166:10166:void <init>(com.mongodb.MongoClientSettings$Builder):955 -> <init>
    11166:11166:com.mongodb.LoggerSettings$Builder com.mongodb.MongoClientSettings$Builder.access$1600(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    11166:11166:void <init>(com.mongodb.MongoClientSettings$Builder):956 -> <init>
    12096:12096:com.mongodb.LoggerSettings com.mongodb.LoggerSettings$Builder.build():96:96 -> <init>
    12096:12096:void <init>(com.mongodb.MongoClientSettings$Builder):956 -> <init>
    12166:12166:com.mongodb.connection.ClusterSettings$Builder com.mongodb.MongoClientSettings$Builder.access$1700(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    12166:12166:void <init>(com.mongodb.MongoClientSettings$Builder):957 -> <init>
    13166:13166:com.mongodb.connection.ServerSettings$Builder com.mongodb.MongoClientSettings$Builder.access$1800(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    13166:13166:void <init>(com.mongodb.MongoClientSettings$Builder):958 -> <init>
    14166:14166:com.mongodb.connection.SocketSettings$Builder com.mongodb.MongoClientSettings$Builder.access$1900(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    14166:14166:void <init>(com.mongodb.MongoClientSettings$Builder):959 -> <init>
    15166:15166:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.MongoClientSettings$Builder.access$2000(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    15166:15166:void <init>(com.mongodb.MongoClientSettings$Builder):960 -> <init>
    15250:15250:com.mongodb.connection.ConnectionPoolSettings com.mongodb.connection.ConnectionPoolSettings$Builder.build():250:250 -> <init>
    15250:15250:void <init>(com.mongodb.MongoClientSettings$Builder):960 -> <init>
    16166:16166:com.mongodb.connection.SslSettings$Builder com.mongodb.MongoClientSettings$Builder.access$2100(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    16166:16166:void <init>(com.mongodb.MongoClientSettings$Builder):961 -> <init>
    17153:17153:com.mongodb.connection.SslSettings com.mongodb.connection.SslSettings$Builder.build():153:153 -> <init>
    17153:17153:void <init>(com.mongodb.MongoClientSettings$Builder):961 -> <init>
    17166:17166:java.util.List com.mongodb.MongoClientSettings$Builder.access$2200(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    17166:17166:void <init>(com.mongodb.MongoClientSettings$Builder):962 -> <init>
    18166:18166:org.bson.UuidRepresentation com.mongodb.MongoClientSettings$Builder.access$2300(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    18166:18166:void <init>(com.mongodb.MongoClientSettings$Builder):963 -> <init>
    19166:19166:com.mongodb.internal.connection.DescriptionHelper com.mongodb.MongoClientSettings$Builder.access$2400$67e09d(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    19166:19166:void <init>(com.mongodb.MongoClientSettings$Builder):964 -> <init>
    20166:20166:co.aikar.commands.BukkitCommandContexts_1_12 com.mongodb.MongoClientSettings$Builder.access$2500$18c92fb9(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    20166:20166:void <init>(com.mongodb.MongoClientSettings$Builder):965 -> <init>
    21166:21166:int com.mongodb.MongoClientSettings$Builder.access$2700(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    21166:21166:void <init>(com.mongodb.MongoClientSettings$Builder):967 -> <init>
    22166:22166:int com.mongodb.MongoClientSettings$Builder.access$2700(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    22166:22166:void <init>(com.mongodb.MongoClientSettings$Builder):968 -> <init>
    23166:23166:int com.mongodb.MongoClientSettings$Builder.access$2600(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    23166:23166:void <init>(com.mongodb.MongoClientSettings$Builder):970 -> <init>
    24166:24166:int com.mongodb.MongoClientSettings$Builder.access$2600(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    24166:24166:void <init>(com.mongodb.MongoClientSettings$Builder):971 -> <init>
    25166:25166:int com.mongodb.MongoClientSettings$Builder.access$2700(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    25166:25166:void <init>(com.mongodb.MongoClientSettings$Builder):974 -> <init>
    26166:26166:int com.mongodb.MongoClientSettings$Builder.access$2600(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    26166:26166:void <init>(com.mongodb.MongoClientSettings$Builder):975 -> <init>
    27166:27166:com.mongodb.ContextProvider com.mongodb.MongoClientSettings$Builder.access$2800(com.mongodb.MongoClientSettings$Builder):166:166 -> <init>
    27166:27166:void <init>(com.mongodb.MongoClientSettings$Builder):976 -> <init>
    64:64:void <init>(com.mongodb.MongoClientSettings$Builder,byte) -> <init>
    65:66:void <clinit>() -> <clinit>
com.mongodb.MongoClientSettings$Builder -> com.a.u$a:
    com.mongodb.ReadPreference readPreference -> a
    com.mongodb.WriteConcern writeConcern -> b
    boolean retryWrites -> c
    boolean retryReads -> d
    com.mongodb.ReadConcern readConcern -> e
    org.bson.codecs.configuration.CodecRegistry codecRegistry -> f
    com.mongodb.internal.connection.ScramShaAuthenticator$AuthenticationHashGenerator streamFactoryFactory$379e137f -> g
    java.util.List commandListeners -> h
    com.mongodb.LoggerSettings$Builder loggerSettingsBuilder -> i
    com.mongodb.connection.ClusterSettings$Builder clusterSettingsBuilder -> j
    com.mongodb.connection.SocketSettings$Builder socketSettingsBuilder -> k
    com.mongodb.connection.ConnectionPoolSettings$Builder connectionPoolSettingsBuilder -> l
    com.mongodb.connection.ServerSettings$Builder serverSettingsBuilder -> m
    com.mongodb.connection.SslSettings$Builder sslSettingsBuilder -> n
    com.mongodb.MongoCredential credential -> o
    java.lang.String applicationName -> p
    java.util.List compressorList -> q
    org.bson.UuidRepresentation uuidRepresentation -> r
    com.mongodb.internal.connection.DescriptionHelper serverApi$10f7fbbb -> s
    co.aikar.commands.BukkitCommandContexts_1_12 autoEncryptionSettings$7a463d11 -> t
    int heartbeatConnectTimeoutMS -> u
    int heartbeatSocketTimeoutMS -> v
    com.mongodb.ContextProvider contextProvider -> w
    167:196:void <init>() -> <init>
    2059:2059:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings.builder():59:59 -> <init>
    2059:2059:void <init>():179 -> <init>
    236:268:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString) -> a
    2487:2487:java.lang.String com.mongodb.ConnectionString.getApplicationName():1487:1487 -> a
    2487:2487:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):236 -> a
    3487:3487:java.lang.String com.mongodb.ConnectionString.getApplicationName():1487:1487 -> a
    3487:3487:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):237 -> a
    3497:3497:java.util.List com.mongodb.ConnectionString.getCompressorList():1497:1497 -> a
    3497:3497:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):240 -> a
    4497:4497:java.util.List com.mongodb.ConnectionString.getCompressorList():1497:1497 -> a
    4497:4497:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):241 -> a
    5260:5290:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):260:290 -> a
    5260:5290:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):243 -> a
    5355:5355:java.lang.Integer com.mongodb.ConnectionString.getMaxConnectionPoolSize():1355:1355 -> a
    5355:5355:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):260 -> a
    5355:5355:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):243 -> a
    6124:6125:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.maxSize(int):124:125 -> a
    6124:6125:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):262 -> a
    6124:6125:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):243 -> a
    6346:6346:java.lang.Integer com.mongodb.ConnectionString.getMinConnectionPoolSize():1346:1346 -> a
    6346:6346:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):265 -> a
    6346:6346:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):243 -> a
    7138:7139:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.minSize(int):138:139 -> a
    7138:7139:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):267 -> a
    7138:7139:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):243 -> a
    7364:7364:java.lang.Integer com.mongodb.ConnectionString.getMaxWaitTime():1364:1364 -> a
    7364:7364:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):270 -> a
    7364:7364:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):243 -> a
    8152:8153:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.maxWaitTime(long,java.util.concurrent.TimeUnit):152:153 -> a
    8152:8153:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):272 -> a
    8152:8153:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):243 -> a
    8373:8373:java.lang.Integer com.mongodb.ConnectionString.getMaxConnectionIdleTime():1373:1373 -> a
    8373:8373:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):275 -> a
    8373:8373:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):243 -> a
    9178:9179:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.maxConnectionIdleTime(long,java.util.concurrent.TimeUnit):178:179 -> a
    9178:9179:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):277 -> a
    9178:9179:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):243 -> a
    9383:9383:java.lang.Integer com.mongodb.ConnectionString.getMaxConnectionLifeTime():1383:1383 -> a
    9383:9383:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):280 -> a
    9383:9383:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):243 -> a
    10165:10166:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.maxConnectionLifeTime(long,java.util.concurrent.TimeUnit):165:166 -> a
    10165:10166:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):282 -> a
    10165:10166:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):243 -> a
    10395:10395:java.lang.Integer com.mongodb.ConnectionString.getMaxConnecting():1395:1395 -> a
    10395:10395:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):285 -> a
    10395:10395:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):243 -> a
    11240:11241:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.maxConnecting(int):240:241 -> a
    11240:11241:com.mongodb.connection.ConnectionPoolSettings$Builder com.mongodb.connection.ConnectionPoolSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):287 -> a
    11240:11241:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):243 -> a
    11282:11282:com.mongodb.MongoCredential com.mongodb.ConnectionString.getCredential():1282:1282 -> a
    11282:11282:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):244 -> a
    12282:12282:com.mongodb.MongoCredential com.mongodb.ConnectionString.getCredential():1282:1282 -> a
    12282:12282:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):245 -> a
    12300:12300:com.mongodb.ReadConcern com.mongodb.ConnectionString.getReadConcern():1300:1300 -> a
    12300:12300:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):247 -> a
    13300:13300:com.mongodb.ReadConcern com.mongodb.ConnectionString.getReadConcern():1300:1300 -> a
    13300:13300:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):248 -> a
    14291:14291:com.mongodb.ReadPreference com.mongodb.ConnectionString.getReadPreference():1291:1291 -> a
    14291:14291:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):250 -> a
    15291:15291:com.mongodb.ReadPreference com.mongodb.ConnectionString.getReadPreference():1291:1291 -> a
    15291:15291:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):251 -> a
    15325:15325:java.lang.Boolean com.mongodb.ConnectionString.getRetryWritesValue():1325:1325 -> a
    15325:15325:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):254 -> a
    15510:15510:org.bson.UuidRepresentation com.mongodb.ConnectionString.getUuidRepresentation():1510:1510 -> a
    15510:15510:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):258 -> a
    16510:16510:org.bson.UuidRepresentation com.mongodb.ConnectionString.getUuidRepresentation():1510:1510 -> a
    16510:16510:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):259 -> a
    17180:17184:com.mongodb.connection.ServerSettings$Builder com.mongodb.connection.ServerSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):180:184 -> a
    17180:17184:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):262 -> a
    17472:17472:java.lang.Integer com.mongodb.ConnectionString.getHeartbeatFrequency():1472:1472 -> a
    17472:17472:com.mongodb.connection.ServerSettings$Builder com.mongodb.connection.ServerSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):180 -> a
    17472:17472:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):262 -> a
    18143:18153:com.mongodb.connection.SocketSettings$Builder com.mongodb.connection.SocketSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):143:153 -> a
    18143:18153:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):263 -> a
    18404:18404:java.lang.Integer com.mongodb.ConnectionString.getConnectTimeout():1404:1404 -> a
    18404:18404:com.mongodb.connection.SocketSettings$Builder com.mongodb.connection.SocketSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):143 -> a
    18404:18404:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):263 -> a
    18413:18413:java.lang.Integer com.mongodb.ConnectionString.getSocketTimeout():1413:1413 -> a
    18413:18413:com.mongodb.connection.SocketSettings$Builder com.mongodb.connection.SocketSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):148 -> a
    18413:18413:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):263 -> a
    19134:19144:com.mongodb.connection.SslSettings$Builder com.mongodb.connection.SslSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):134:144 -> a
    19134:19144:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):264 -> a
    19422:19422:java.lang.Boolean com.mongodb.ConnectionString.getSslEnabled():1422:1422 -> a
    19422:19422:com.mongodb.connection.SslSettings$Builder com.mongodb.connection.SslSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):134 -> a
    19422:19422:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):264 -> a
    19433:19433:java.lang.Boolean com.mongodb.ConnectionString.getSslInvalidHostnameAllowed():1433:1433 -> a
    19433:19433:com.mongodb.connection.SslSettings$Builder com.mongodb.connection.SslSettings$Builder.applyConnectionString(com.mongodb.ConnectionString):139 -> a
    19433:19433:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):264 -> a
    20309:20309:com.mongodb.WriteConcern com.mongodb.ConnectionString.getWriteConcern():1309:1309 -> a
    20309:20309:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):265 -> a
    21309:21309:com.mongodb.WriteConcern com.mongodb.ConnectionString.getWriteConcern():1309:1309 -> a
    21309:21309:com.mongodb.MongoClientSettings$Builder applyConnectionString(com.mongodb.ConnectionString):266 -> a
    600:600:com.mongodb.MongoClientSettings build() -> a
    166:166:void <init>(byte) -> <init>
com.mongodb.MongoCommandException -> com.a.v:
    org.bson.BsonDocument response -> a
    49:54:void <init>(org.bson.BsonDocument,com.mongodb.ServerAddress) -> <init>
    1103:1108:java.lang.String extractErrorCodeAndName(org.bson.BsonDocument):103:108 -> <init>
    1103:1108:void <init>(org.bson.BsonDocument,com.mongodb.ServerAddress):50 -> <init>
    2096:2099:java.lang.String getResponseAsJson(org.bson.BsonDocument):96:99 -> <init>
    2096:2099:void <init>(org.bson.BsonDocument,com.mongodb.ServerAddress):51 -> <init>
    113:113:int extractErrorCode(org.bson.BsonDocument) -> b
    117:117:java.lang.String extractErrorCodeName(org.bson.BsonDocument) -> c
    3056:3056:java.lang.String org.bson.BsonString.getValue():56:56 -> c
    3056:3056:java.lang.String extractErrorCodeName(org.bson.BsonDocument):117 -> c
    121:126:java.lang.String extractErrorMessage(org.bson.BsonDocument) -> a
    4056:4056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    4056:4056:java.lang.String extractErrorMessage(org.bson.BsonDocument):121 -> a
com.mongodb.MongoConfigurationException -> com.a.w:
    33:34:void <init>(java.lang.String) -> <init>
    45:46:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.mongodb.MongoConnectionPoolClearedException -> com.a.x:
    42:44:void <init>(com.mongodb.connection.ServerId,java.lang.Throwable) -> <init>
com.mongodb.MongoCredential -> com.a.y:
    com.mongodb.AuthenticationMechanism mechanism -> a
    java.lang.String userName -> b
    java.lang.String source -> c
    char[] password -> d
    java.util.Map mechanismProperties -> e
    200:200:com.mongodb.MongoCredential createCredential(java.lang.String,java.lang.String,char[]) -> a
    220:220:com.mongodb.MongoCredential createScramSha1Credential(java.lang.String,java.lang.String,char[]) -> b
    237:237:com.mongodb.MongoCredential createScramSha256Credential(java.lang.String,java.lang.String,char[]) -> c
    250:250:com.mongodb.MongoCredential createMongoX509Credential(java.lang.String) -> a
    281:281:com.mongodb.MongoCredential createPlainCredential(java.lang.String,java.lang.String,char[]) -> d
    311:311:com.mongodb.MongoCredential createGSSAPICredential(java.lang.String) -> b
    327:327:com.mongodb.MongoCredential createAwsCredential(java.lang.String,char[]) -> a
    340:340:com.mongodb.MongoCredential withMechanismProperty(java.lang.String,java.lang.Object) -> a
    351:354:com.mongodb.MongoCredential withMechanism(com.mongodb.AuthenticationMechanism) -> a
    367:368:void <init>(com.mongodb.AuthenticationMechanism,java.lang.String,java.lang.String,char[]) -> <init>
    371:398:void <init>(com.mongodb.AuthenticationMechanism,java.lang.String,java.lang.String,char[],java.util.Map) -> <init>
    1401:1401:boolean mechanismRequiresPassword(com.mongodb.AuthenticationMechanism):401:401 -> <init>
    1401:1401:void <init>(com.mongodb.AuthenticationMechanism,java.lang.String,java.lang.String,char[],java.util.Map):380 -> <init>
    413:422:void <init>(com.mongodb.MongoCredential,java.lang.String,java.lang.Object) -> <init>
    431:431:java.lang.String getMechanism() -> a
    2074:2074:java.lang.String com.mongodb.AuthenticationMechanism.getMechanismName():74:74 -> a
    2074:2074:java.lang.String getMechanism():431 -> a
    471:474:char[] getPassword() -> b
    489:492:java.lang.Object getMechanismProperty(java.lang.String,java.lang.Object) -> b
    498:523:boolean equals(java.lang.Object) -> equals
    528:533:int hashCode() -> hashCode
    538:538:java.lang.String toString() -> toString
    57:91:void <clinit>() -> <clinit>
    3074:3074:java.lang.String com.mongodb.AuthenticationMechanism.getMechanismName():74:74 -> <clinit>
    3074:3074:void <clinit>():57 -> <clinit>
    4074:4074:java.lang.String com.mongodb.AuthenticationMechanism.getMechanismName():74:74 -> <clinit>
    4074:4074:void <clinit>():65 -> <clinit>
    5074:5074:java.lang.String com.mongodb.AuthenticationMechanism.getMechanismName():74:74 -> <clinit>
    5074:5074:void <clinit>():73 -> <clinit>
    6074:6074:java.lang.String com.mongodb.AuthenticationMechanism.getMechanismName():74:74 -> <clinit>
    6074:6074:void <clinit>():82 -> <clinit>
    7074:7074:java.lang.String com.mongodb.AuthenticationMechanism.getMechanismName():74:74 -> <clinit>
    7074:7074:void <clinit>():91 -> <clinit>
com.mongodb.MongoCursorNotFoundException -> com.a.z:
    42:44:void <init>(long,org.bson.BsonDocument,com.mongodb.ServerAddress) -> <init>
com.mongodb.MongoDriverInformation -> com.a.A:
    java.util.List driverNames -> a
    java.util.List driverVersions -> b
    java.util.List driverPlatforms -> c
    59:59:com.mongodb.MongoDriverInformation$Builder builder() -> a
    69:69:com.mongodb.MongoDriverInformation$Builder builder(com.mongodb.MongoDriverInformation) -> a
    179:183:void <init>(java.util.List,java.util.List,java.util.List) -> <init>
    48:48:void <init>(java.util.List,java.util.List,java.util.List,byte) -> <init>
com.mongodb.MongoDriverInformation$Builder -> com.a.A$a:
    com.mongodb.MongoDriverInformation driverInformation -> a
    java.lang.String driverName -> b
    java.lang.String driverVersion -> c
    java.lang.String driverPlatform -> d
    116:117:com.mongodb.MongoDriverInformation$Builder driverName(java.lang.String) -> a
    131:132:com.mongodb.MongoDriverInformation$Builder driverVersion(java.lang.String) -> b
    142:143:com.mongodb.MongoDriverInformation$Builder driverPlatform(java.lang.String) -> c
    150:155:com.mongodb.MongoDriverInformation build() -> a
    1078:1078:java.util.List com.mongodb.MongoDriverInformation.getDriverNames():78:78 -> a
    1078:1078:com.mongodb.MongoDriverInformation build():152 -> a
    1087:1087:java.util.List com.mongodb.MongoDriverInformation.getDriverVersions():87:87 -> a
    1087:1087:com.mongodb.MongoDriverInformation build():153 -> a
    1096:1096:java.util.List com.mongodb.MongoDriverInformation.getDriverPlatforms():96:96 -> a
    1096:1096:com.mongodb.MongoDriverInformation build():154 -> a
    159:165:java.util.List prependToList(java.util.List,java.lang.String) -> a
    169:172:void <init>() -> <init>
    174:176:void <init>(com.mongodb.MongoDriverInformation) -> <init>
    103:103:void <init>(byte) -> <init>
    103:103:void <init>(com.mongodb.MongoDriverInformation,byte) -> <init>
com.mongodb.MongoException -> com.a.B:
    int code -> e
    java.util.Set errorLabels -> f
    66:69:com.mongodb.MongoException fromThrowable(java.lang.Throwable) -> a
    81:84:com.mongodb.MongoException fromThrowableNonNull(java.lang.Throwable) -> b
    56:94:void <init>(java.lang.String) -> <init>
    56:103:void <init>(int,java.lang.String) -> <init>
    56:112:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    56:125:void <init>(int,java.lang.String,java.lang.Throwable) -> <init>
    1179:1179:java.util.Set getErrorLabels():179:179 -> <init>
    1179:1179:void <init>(int,java.lang.String,java.lang.Throwable):123 -> <init>
    56:137:void <init>(int,java.lang.String,org.bson.BsonDocument) -> <init>
    145:145:int getCode() -> b
    156:158:void addLabel(java.lang.String) -> a
    190:191:boolean hasErrorLabel(java.lang.String) -> b
    200:203:void addLabels(org.bson.BsonArray) -> a
    2056:2056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    2056:2056:void addLabels(org.bson.BsonArray):201 -> a
    211:214:void addLabels(java.util.Collection) -> a
com.mongodb.MongoExecutionTimeoutException -> com.a.C:
    49:51:void <init>(int,java.lang.String,org.bson.BsonDocument) -> <init>
com.mongodb.MongoIncompatibleDriverException -> com.a.D:
    39:41:void <init>(java.lang.String,com.mongodb.connection.ClusterDescription) -> <init>
com.mongodb.MongoInternalException -> com.a.E:
    31:32:void <init>(java.lang.String) -> <init>
    39:40:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.mongodb.MongoInterruptedException -> com.a.F:
    37:38:void <init>(java.lang.String,java.lang.Exception) -> <init>
com.mongodb.MongoNamespace -> com.a.G:
    java.util.Set PROHIBITED_CHARACTERS_IN_DATABASE_NAME -> d
    java.lang.String databaseName -> a
    java.lang.String collectionName -> b
    java.lang.String fullName -> c
    61:68:void checkDatabaseNameValidity(java.lang.String) -> a
    80:82:void checkCollectionNameValidity(java.lang.String) -> b
    91:98:void <init>(java.lang.String) -> <init>
    1194:1198:java.lang.String getDatatabaseNameFromFullName(java.lang.String):194:198 -> <init>
    1194:1198:void <init>(java.lang.String):94 -> <init>
    2186:2190:java.lang.String getCollectionNameFullName(java.lang.String):186:190 -> <init>
    2186:2190:void <init>(java.lang.String):95 -> <init>
    110:116:void <init>(java.lang.String,java.lang.String) -> <init>
    149:165:boolean equals(java.lang.Object) -> equals
    175:175:java.lang.String toString() -> toString
    180:182:int hashCode() -> hashCode
    43:44:void <clinit>() -> <clinit>
com.mongodb.MongoNodeIsRecoveringException -> com.a.H:
    38:39:void <init>(org.bson.BsonDocument,com.mongodb.ServerAddress) -> <init>
com.mongodb.MongoNotPrimaryException -> com.a.I:
    38:39:void <init>(org.bson.BsonDocument,com.mongodb.ServerAddress) -> <init>
com.mongodb.MongoQueryException -> com.a.J:
    41:42:void <init>(org.bson.BsonDocument,com.mongodb.ServerAddress) -> <init>
com.mongodb.MongoSecurityException -> com.a.K:
    38:40:void <init>(com.mongodb.MongoCredential,java.lang.String,java.lang.Throwable) -> <init>
    49:51:void <init>(com.mongodb.MongoCredential,java.lang.String) -> <init>
com.mongodb.MongoServerException -> com.a.L:
    com.mongodb.ServerAddress serverAddress -> a
    40:43:void <init>(java.lang.String,com.mongodb.ServerAddress) -> <init>
    53:56:void <init>(int,java.lang.String,com.mongodb.ServerAddress) -> <init>
    69:72:void <init>(int,java.lang.String,java.lang.String,com.mongodb.ServerAddress) -> <init>
    80:80:com.mongodb.ServerAddress getServerAddress() -> a
com.mongodb.MongoServerUnavailableException -> com.a.M:
    38:39:void <init>(java.lang.String) -> <init>
com.mongodb.MongoSocketClosedException -> com.a.N:
    35:36:void <init>(java.lang.String,com.mongodb.ServerAddress) -> <init>
    1035:1036:void com.mongodb.MongoSocketOpenException.<init>(java.lang.String,com.mongodb.ServerAddress,java.lang.Throwable):35:36 -> <init>
com.mongodb.MongoSocketException -> com.a.O:
    37:39:void <init>(java.lang.String,com.mongodb.ServerAddress,java.lang.Throwable) -> <init>
    48:50:void <init>(java.lang.String,com.mongodb.ServerAddress) -> <init>
com.mongodb.MongoSocketReadException -> com.a.P:
    34:35:void <init>(java.lang.String,com.mongodb.ServerAddress) -> <init>
    45:46:void <init>(java.lang.String,com.mongodb.ServerAddress,java.lang.Throwable) -> <init>
com.mongodb.MongoSocketReadTimeoutException -> com.a.Q:
    36:37:void <init>(java.lang.String,com.mongodb.ServerAddress,java.lang.Throwable) -> <init>
com.mongodb.MongoSocketWriteException -> com.a.R:
    35:36:void <init>(java.lang.String,com.mongodb.ServerAddress,java.lang.Throwable) -> <init>
com.mongodb.MongoTimeoutException -> com.a.S:
    32:33:void <init>(java.lang.String) -> <init>
com.mongodb.MongoWriteConcernException -> com.a.T:
    net.kyori.adventure.text.ComponentCompaction writeConcernError$53bdfe66 -> a
    59:65:void <init>(net.kyori.adventure.text.ComponentCompaction,com.mongodb.WriteConcernResult,com.mongodb.ServerAddress) -> <init>
    70:72:void addLabel(java.lang.String) -> a
com.mongodb.MongoWriteException -> com.a.U:
    37:39:void <init>(com.mongodb.internal.connection.ServerTypeHelper,com.mongodb.ServerAddress) -> <init>
com.mongodb.ReadConcern -> com.a.V:
    com.mongodb.ReadConcernLevel level -> a
    com.mongodb.ReadConcern DEFAULT -> b
    com.mongodb.ReadConcern MAJORITY -> c
    com.mongodb.ReadConcern SNAPSHOT -> d
    40:42:void <init>(com.mongodb.ReadConcernLevel) -> <init>
    120:129:boolean equals(java.lang.Object) -> equals
    134:134:int hashCode() -> hashCode
    140:140:java.lang.String toString() -> toString
    145:147:void <init>() -> <init>
    47:85:void <clinit>() -> <clinit>
com.mongodb.ReadConcernLevel -> com.a.W:
    com.mongodb.ReadConcernLevel LOCAL -> a
    com.mongodb.ReadConcernLevel MAJORITY -> b
    com.mongodb.ReadConcernLevel LINEARIZABLE -> c
    com.mongodb.ReadConcernLevel SNAPSHOT -> d
    com.mongodb.ReadConcernLevel AVAILABLE -> e
    java.lang.String value -> f
    com.mongodb.ReadConcernLevel[] $VALUES -> g
    29:29:com.mongodb.ReadConcernLevel[] values() -> values
    29:29:com.mongodb.ReadConcernLevel valueOf(java.lang.String) -> valueOf
    71:73:void <init>(java.lang.String,int,java.lang.String) -> <init>
    89:95:com.mongodb.ReadConcernLevel fromString(java.lang.String) -> a
    29:67:void <clinit>() -> <clinit>
    1029:1029:com.mongodb.ReadConcernLevel[] $values():29:29 -> <clinit>
    1029:1029:void <clinit>():29 -> <clinit>
com.mongodb.ReadPreference -> com.a.X:
    com.mongodb.ReadPreference PRIMARY -> a
    com.mongodb.ReadPreference SECONDARY -> b
    com.mongodb.ReadPreference SECONDARY_PREFERRED -> c
    com.mongodb.ReadPreference PRIMARY_PREFERRED -> d
    com.mongodb.ReadPreference NEAREST -> e
    48:49:void <init>() -> <init>
    java.lang.String getName() -> a
    org.bson.BsonDocument toDocument() -> b
    142:153:java.util.List choose(com.mongodb.connection.ClusterDescription) -> a
    1210:1210:com.mongodb.connection.ClusterType com.mongodb.connection.ClusterDescription.getType():210:210 -> a
    1210:1210:java.util.List choose(com.mongodb.connection.ClusterDescription):142 -> a
    1231:1231:java.util.List com.mongodb.connection.ClusterDescription.getServerDescriptions():231:231 -> a
    1231:1231:java.util.List choose(com.mongodb.connection.ClusterDescription):149 -> a
    2210:2210:com.mongodb.connection.ClusterType com.mongodb.connection.ClusterDescription.getType():210:210 -> a
    2210:2210:java.util.List choose(com.mongodb.connection.ClusterDescription):153 -> a
    java.util.List chooseForNonReplicaSet(com.mongodb.connection.ClusterDescription) -> b
    java.util.List chooseForReplicaSet(com.mongodb.connection.ClusterDescription) -> c
    179:179:com.mongodb.ReadPreference primary() -> c
    188:188:com.mongodb.ReadPreference primaryPreferred() -> d
    587:607:com.mongodb.ReadPreference valueOf(java.lang.String) -> a
    619:619:com.mongodb.TaggableReadPreference valueOf(java.lang.String,java.util.List) -> a
    641:641:com.mongodb.TaggableReadPreference valueOf(java.lang.String,java.util.List,long,java.util.concurrent.TimeUnit) -> a
    646:669:com.mongodb.TaggableReadPreference valueOf(java.lang.String,java.util.List,java.lang.Long,java.util.concurrent.TimeUnit) -> a
    751:756:void <clinit>() -> <clinit>
com.mongodb.ReadPreference$1 -> com.a.X$1:
    int[] $SwitchMap$com$mongodb$connection$ClusterType -> a
    142:142:void <clinit>() -> <clinit>
com.mongodb.ReadPreference$PrimaryReadPreference -> com.a.X$a:
    676:677:void <init>() -> <init>
    711:711:java.lang.String toString() -> toString
    1740:1740:java.lang.String getName():740:740 -> toString
    1740:1740:java.lang.String toString():711 -> toString
    716:716:boolean equals(java.lang.Object) -> equals
    721:721:int hashCode() -> hashCode
    2740:2740:java.lang.String getName():740:740 -> hashCode
    2740:2740:int hashCode():721 -> hashCode
    725:725:org.bson.BsonDocument toDocument() -> b
    3740:3740:java.lang.String getName():740:740 -> b
    3740:3740:org.bson.BsonDocument toDocument():725 -> b
    730:730:java.util.List chooseForReplicaSet(com.mongodb.connection.ClusterDescription) -> c
    735:735:java.util.List chooseForNonReplicaSet(com.mongodb.connection.ClusterDescription) -> b
    740:740:java.lang.String getName() -> a
    675:675:void <init>(byte) -> <init>
com.mongodb.RequestContext -> com.a.Y:
    1031:1031:void com.mongodb.event.CommandListener.commandStarted(com.mongodb.event.CommandStartedEvent):31:31 -> a
    1039:1039:void com.mongodb.event.CommandListener.commandSucceeded(com.mongodb.event.CommandSucceededEvent):39:39 -> a
    1047:1047:void com.mongodb.event.CommandListener.commandFailed(com.mongodb.event.CommandFailedEvent):47:47 -> a
    2038:2038:boolean com.mongodb.internal.diagnostics.logging.Logger.isTraceEnabled():38:38 -> a
    2048:2048:void com.mongodb.internal.diagnostics.logging.Logger.trace(java.lang.String):48:48 -> a
    2066:2066:boolean com.mongodb.internal.diagnostics.logging.Logger.isDebugEnabled():66:66 -> d_
    2075:2075:void com.mongodb.internal.diagnostics.logging.Logger.debug(java.lang.String):75:75 -> b
    2085:2085:void com.mongodb.internal.diagnostics.logging.Logger.debug(java.lang.String,java.lang.Throwable):85:85 -> a
    2093:2093:boolean com.mongodb.internal.diagnostics.logging.Logger.isInfoEnabled():93:93 -> e_
    2102:2102:void com.mongodb.internal.diagnostics.logging.Logger.info(java.lang.String):102:102 -> c
    2111:2111:void com.mongodb.internal.diagnostics.logging.Logger.info(java.lang.String,java.lang.Throwable):111:111 -> b
    2119:2119:boolean com.mongodb.internal.diagnostics.logging.Logger.isWarnEnabled():119:119 -> f_
    2128:2128:void com.mongodb.internal.diagnostics.logging.Logger.warn(java.lang.String):128:128 -> d
    2137:2137:void com.mongodb.internal.diagnostics.logging.Logger.warn(java.lang.String,java.lang.Throwable):137:137 -> c
    2154:2154:void com.mongodb.internal.diagnostics.logging.Logger.error(java.lang.String):154:154 -> e
    2163:2163:void com.mongodb.internal.diagnostics.logging.Logger.error(java.lang.String,java.lang.Throwable):163:163 -> d
com.mongodb.ServerAddress -> com.a.Z:
    java.lang.String host -> a
    int port -> b
    49:50:void <init>() -> <init>
    1232:1232:java.lang.String defaultHost():232:232 -> <init>
    1232:1232:void <init>():49 -> <init>
    58:59:void <init>(java.lang.String) -> <init>
    95:138:void <init>(java.lang.String,int) -> <init>
    2232:2232:java.lang.String defaultHost():232:232 -> <init>
    2232:2232:void <init>(java.lang.String,int):98 -> <init>
    3232:3232:java.lang.String defaultHost():232:232 -> <init>
    3232:3232:void <init>(java.lang.String,int):102 -> <init>
    142:159:boolean equals(java.lang.Object) -> equals
    164:166:int hashCode() -> hashCode
    175:175:java.lang.String getHost() -> a
    209:217:java.util.List getSocketAddresses() -> b
    223:223:java.lang.String toString() -> toString
    241:241:int defaultPort() -> c
com.mongodb.ServerCursor -> com.a.aa:
    long id -> a
    com.mongodb.ServerAddress address -> b
    49:55:void <init>(long,com.mongodb.ServerAddress) -> <init>
    77:93:boolean equals(java.lang.Object) -> equals
    98:100:int hashCode() -> hashCode
    105:105:java.lang.String toString() -> toString
com.mongodb.SubjectProvider -> com.a.ab:
    javax.security.auth.Subject getSubject() -> getSubject
com.mongodb.TagSet -> com.a.ac:
    java.util.List wrapped -> a
    44:46:void <init>() -> <init>
    63:79:void <init>(java.util.List) -> <init>
    83:83:java.util.Iterator iterator() -> iterator
    98:111:boolean equals(java.lang.Object) -> equals
    116:116:int hashCode() -> hashCode
    121:121:java.lang.String toString() -> toString
    77:77:int lambda$new$0$38234b98(com.mongodb.internal.connection.ServerDescriptionHelper,com.mongodb.internal.connection.ServerDescriptionHelper) -> a
com.mongodb.TaggableReadPreference -> com.a.ad:
    java.util.List tagSetList -> a
    java.lang.Long maxStalenessMS -> b
    com.mongodb.internal.connection.ClusterDescriptionHelper hedgeOptions$555b6f7a -> c
    55:62:void <init>() -> <init>
    55:72:void <init>(java.util.List,java.lang.Long,java.util.concurrent.TimeUnit,com.mongodb.internal.connection.ClusterDescriptionHelper) -> <init>
    99:112:org.bson.BsonDocument toDocument() -> b
    1555:1559:org.bson.BsonArray tagsListToBsonArray():555:559 -> b
    1555:1559:org.bson.BsonDocument toDocument():102 -> b
    1563:1569:org.bson.BsonDocument toDocument(com.mongodb.TagSet):563:569 -> b
    1563:1569:org.bson.BsonArray tagsListToBsonArray():557 -> b
    1563:1569:org.bson.BsonDocument toDocument():102 -> b
    122:122:java.util.List getTagSetList() -> e
    142:146:java.lang.Long getMaxStaleness(java.util.concurrent.TimeUnit) -> a
    163:166:java.lang.String toString() -> toString
    173:192:boolean equals(java.lang.Object) -> equals
    197:201:int hashCode() -> hashCode
    206:206:java.util.List chooseForNonReplicaSet(com.mongodb.connection.ClusterDescription) -> b
    211:215:com.mongodb.connection.ClusterDescription copyClusterDescription(com.mongodb.connection.ClusterDescription,java.util.List) -> a
    2201:2201:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterDescription.getConnectionMode():201:201 -> a
    2201:2201:com.mongodb.connection.ClusterDescription copyClusterDescription(com.mongodb.connection.ClusterDescription,java.util.List):211 -> a
    2210:2210:com.mongodb.connection.ClusterType com.mongodb.connection.ClusterDescription.getType():210:210 -> a
    2210:2210:com.mongodb.connection.ClusterDescription copyClusterDescription(com.mongodb.connection.ClusterDescription,java.util.List):212 -> a
    3112:3112:com.mongodb.connection.ClusterSettings com.mongodb.connection.ClusterDescription.getClusterSettings():112:112 -> a
    3112:3112:com.mongodb.connection.ClusterDescription copyClusterDescription(com.mongodb.connection.ClusterDescription,java.util.List):214 -> a
    3122:3122:com.mongodb.connection.ServerSettings com.mongodb.connection.ClusterDescription.getServerSettings():122:122 -> a
    3122:3122:com.mongodb.connection.ClusterDescription copyClusterDescription(com.mongodb.connection.ClusterDescription,java.util.List):215 -> a
    220:275:java.util.List selectFreshServers(com.mongodb.connection.ClusterDescription,java.util.List) -> b
    4122:4122:com.mongodb.connection.ServerSettings com.mongodb.connection.ClusterDescription.getServerSettings():122:122 -> b
    4122:4122:java.util.List selectFreshServers(com.mongodb.connection.ClusterDescription,java.util.List):225 -> b
    4210:4210:com.mongodb.connection.ClusterType com.mongodb.connection.ClusterDescription.getType():210:210 -> b
    4210:4210:java.util.List selectFreshServers(com.mongodb.connection.ClusterDescription,java.util.List):233 -> b
    5122:5122:com.mongodb.connection.ServerSettings com.mongodb.connection.ClusterDescription.getServerSettings():122:122 -> b
    5122:5122:java.util.List selectFreshServers(com.mongodb.connection.ClusterDescription,java.util.List):237 -> b
    280:282:long getStalenessOfSecondaryRelativeToPrimary(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription,long) -> a
    287:292:com.mongodb.connection.ServerDescription findPrimary(com.mongodb.connection.ClusterDescription) -> d
    5231:5231:java.util.List com.mongodb.connection.ClusterDescription.getServerDescriptions():231:231 -> d
    5231:5231:com.mongodb.connection.ServerDescription findPrimary(com.mongodb.connection.ClusterDescription):287 -> d
    296:305:com.mongodb.connection.ServerDescription findMostUpToDateSecondary(com.mongodb.connection.ClusterDescription) -> e
    6231:6231:java.util.List com.mongodb.connection.ClusterDescription.getServerDescriptions():231:231 -> e
    6231:6231:com.mongodb.connection.ServerDescription findMostUpToDateSecondary(com.mongodb.connection.ClusterDescription):297 -> e
    309:313:java.util.Date getLastWriteDateNonNull(com.mongodb.connection.ServerDescription) -> a
    6745:6745:java.util.Date com.mongodb.connection.ServerDescription.getLastWriteDate():745:745 -> a
    6745:6745:java.util.Date getLastWriteDateNonNull(com.mongodb.connection.ServerDescription):309 -> a
    317:322:boolean serversAreAllThreeDotFour(com.mongodb.connection.ClusterDescription) -> f
    7231:7231:java.util.List com.mongodb.connection.ClusterDescription.getServerDescriptions():231:231 -> f
    7231:7231:boolean serversAreAllThreeDotFour(com.mongodb.connection.ClusterDescription):317 -> f
    7702:7702:int com.mongodb.connection.ServerDescription.getMaxWireVersion():702:702 -> f
    7702:7702:boolean serversAreAllThreeDotFour(com.mongodb.connection.ClusterDescription):318 -> f
com.mongodb.TaggableReadPreference$NearestReadPreference -> com.a.ad$a:
    443:444:void <init>() -> <init>
    447:448:void <init>(java.util.List,java.lang.Long,java.util.concurrent.TimeUnit) -> <init>
    452:453:void <init>(java.util.List,java.lang.Long,java.util.concurrent.TimeUnit,com.mongodb.internal.connection.ClusterDescriptionHelper) -> <init>
    479:479:java.lang.String getName() -> a
    485:497:java.util.List chooseForReplicaSet(com.mongodb.connection.ClusterDescription) -> c
com.mongodb.TaggableReadPreference$PrimaryPreferredReadPreference -> com.a.ad$b:
    505:506:void <init>() -> <init>
    509:510:void <init>(java.util.List,java.lang.Long,java.util.concurrent.TimeUnit) -> <init>
    514:515:void <init>(java.util.List,java.lang.Long,java.util.concurrent.TimeUnit,com.mongodb.internal.connection.ClusterDescriptionHelper) -> <init>
    541:541:java.lang.String getName() -> a
    546:550:java.util.List chooseForReplicaSet(com.mongodb.connection.ClusterDescription) -> c
com.mongodb.TaggableReadPreference$SecondaryPreferredReadPreference -> com.a.ad$c:
    390:391:void <init>() -> <init>
    394:395:void <init>(java.util.List,java.lang.Long,java.util.concurrent.TimeUnit) -> <init>
    399:400:void <init>(java.util.List,java.lang.Long,java.util.concurrent.TimeUnit,com.mongodb.internal.connection.ClusterDescriptionHelper) -> <init>
    426:426:java.lang.String getName() -> a
    431:435:java.util.List chooseForReplicaSet(com.mongodb.connection.ClusterDescription) -> c
com.mongodb.TaggableReadPreference$SecondaryReadPreference -> com.a.ad$d:
    329:330:void <init>() -> <init>
    333:334:void <init>(java.util.List,java.lang.Long,java.util.concurrent.TimeUnit) -> <init>
    338:339:void <init>(java.util.List,java.lang.Long,java.util.concurrent.TimeUnit,com.mongodb.internal.connection.ClusterDescriptionHelper) -> <init>
    365:365:java.lang.String getName() -> a
    370:382:java.util.List chooseForReplicaSet(com.mongodb.connection.ClusterDescription) -> c
com.mongodb.TransactionOptions -> com.a.ae:
    com.mongodb.ReadConcern readConcern -> a
    com.mongodb.WriteConcern writeConcern -> b
    com.mongodb.ReadPreference readPreference -> c
    java.lang.Long maxCommitTimeMS -> d
    87:91:java.lang.Long getMaxCommitTime(java.util.concurrent.TimeUnit) -> a
    100:100:com.mongodb.TransactionOptions$Builder builder() -> a
    128:150:boolean equals(java.lang.Object) -> equals
    155:159:int hashCode() -> hashCode
    164:164:java.lang.String toString() -> toString
    248:253:void <init>(com.mongodb.TransactionOptions$Builder) -> <init>
    1175:1175:com.mongodb.ReadConcern com.mongodb.TransactionOptions$Builder.access$200(com.mongodb.TransactionOptions$Builder):175:175 -> <init>
    1175:1175:void <init>(com.mongodb.TransactionOptions$Builder):249 -> <init>
    2175:2175:com.mongodb.WriteConcern com.mongodb.TransactionOptions$Builder.access$300(com.mongodb.TransactionOptions$Builder):175:175 -> <init>
    2175:2175:void <init>(com.mongodb.TransactionOptions$Builder):250 -> <init>
    3175:3175:com.mongodb.ReadPreference com.mongodb.TransactionOptions$Builder.access$400(com.mongodb.TransactionOptions$Builder):175:175 -> <init>
    3175:3175:void <init>(com.mongodb.TransactionOptions$Builder):251 -> <init>
    4175:4175:java.lang.Long com.mongodb.TransactionOptions$Builder.access$500(com.mongodb.TransactionOptions$Builder):175:175 -> <init>
    4175:4175:void <init>(com.mongodb.TransactionOptions$Builder):252 -> <init>
    40:40:void <init>(com.mongodb.TransactionOptions$Builder,byte) -> <init>
com.mongodb.TransactionOptions$Builder -> com.a.ae$a:
    com.mongodb.ReadConcern readConcern -> a
    com.mongodb.WriteConcern writeConcern -> b
    com.mongodb.ReadPreference readPreference -> c
    java.lang.Long maxCommitTimeMS -> d
    240:240:com.mongodb.TransactionOptions build() -> a
    243:244:void <init>() -> <init>
    175:175:void <init>(byte) -> <init>
com.mongodb.UnixServerAddress -> com.a.af:
    43:45:void <init>(java.lang.String) -> <init>
    61:61:java.lang.String toString() -> toString
com.mongodb.WriteConcern -> com.a.ag:
    java.util.Map NAMED_CONCERNS -> e
    java.lang.Object w -> f
    java.lang.Integer wTimeoutMS -> a
    java.lang.Boolean journal -> b
    com.mongodb.WriteConcern ACKNOWLEDGED -> c
    com.mongodb.WriteConcern UNACKNOWLEDGED -> d
    150:151:void <init>(int) -> <init>
    162:164:void <init>(java.lang.String) -> <init>
    180:193:void <init>(java.lang.Object,java.lang.Integer,java.lang.Boolean) -> <init>
    269:275:org.bson.BsonDocument asDocument() -> a
    1395:1400:void addW(org.bson.BsonDocument):395:400 -> a
    1395:1400:org.bson.BsonDocument asDocument():271 -> a
    1409:1412:void addWTimeout(org.bson.BsonDocument):409:412 -> a
    1409:1412:org.bson.BsonDocument asDocument():272 -> a
    2403:2406:void addJ(org.bson.BsonDocument):403:406 -> a
    2403:2406:org.bson.BsonDocument asDocument():273 -> a
    285:288:boolean isAcknowledged() -> b
    304:323:boolean equals(java.lang.Object) -> equals
    328:331:int hashCode() -> hashCode
    336:336:java.lang.String toString() -> toString
    374:374:com.mongodb.WriteConcern withJournal(java.lang.Boolean) -> a
    387:391:com.mongodb.WriteConcern withWTimeout(long,java.util.concurrent.TimeUnit) -> a
    95:426:void <clinit>() -> <clinit>
com.mongodb.WriteConcernResult -> com.a.ah:
    29:29:void <init>() -> <init>
    int getCount() -> a
    boolean isUpdateOfExisting() -> b
    org.bson.BsonValue getUpsertedId() -> c
    72:72:com.mongodb.WriteConcernResult acknowledged(int,boolean,org.bson.BsonValue) -> a
com.mongodb.WriteConcernResult$1 -> com.a.ah$1:
    int val$count -> a
    boolean val$isUpdateOfExisting -> b
    org.bson.BsonValue val$upsertedId -> c
    72:72:void <init>(int,boolean,org.bson.BsonValue) -> <init>
    80:80:int getCount() -> a
    85:85:boolean isUpdateOfExisting() -> b
    91:91:org.bson.BsonValue getUpsertedId() -> c
    96:118:boolean equals(java.lang.Object) -> equals
    123:126:int hashCode() -> hashCode
    131:131:java.lang.String toString() -> toString
com.mongodb.bulk.BulkWriteError -> com.a.a.a:
    int index -> a
    39:41:void <init>(int,java.lang.String,org.bson.BsonDocument,int) -> <init>
    49:49:int getIndex() -> a
    54:67:boolean equals(java.lang.Object) -> equals
    72:74:int hashCode() -> hashCode
    79:83:java.lang.String toString() -> toString
com.mongodb.bulk.BulkWriteResult -> com.a.a.b:
    32:32:void <init>() -> <init>
    boolean wasAcknowledged() -> a
    int getInsertedCount() -> b
    int getMatchedCount() -> c
    int getDeletedCount() -> d
    int getModifiedCount() -> e
    java.util.List getInserts() -> f
    java.util.List getUpserts() -> g
    143:145:com.mongodb.bulk.BulkWriteResult acknowledged(com.mongodb.internal.bulk.WriteRequest$Type,int,java.lang.Integer,java.util.List,java.util.List) -> a
    181:181:com.mongodb.bulk.BulkWriteResult acknowledged(int,int,int,java.lang.Integer,java.util.List,java.util.List) -> a
com.mongodb.bulk.BulkWriteResult$1 -> com.a.a.b$1:
    int val$insertedCount -> a
    int val$matchedCount -> b
    int val$removedCount -> c
    java.lang.Integer val$modifiedCount -> d
    java.util.List val$inserts -> e
    java.util.List val$upserts -> f
    181:181:void <init>(int,int,int,java.lang.Integer,java.util.List,java.util.List) -> <init>
    184:184:boolean wasAcknowledged() -> a
    189:189:int getInsertedCount() -> b
    194:194:int getMatchedCount() -> c
    199:199:int getDeletedCount() -> d
    204:204:int getModifiedCount() -> e
    209:209:java.util.List getInserts() -> f
    214:214:java.util.List getUpserts() -> g
    219:250:boolean equals(java.lang.Object) -> equals
    255:261:int hashCode() -> hashCode
    266:266:java.lang.String toString() -> toString
com.mongodb.bulk.BulkWriteResult$2 -> com.a.a.b$2:
    284:284:void <init>() -> <init>
    287:287:boolean wasAcknowledged() -> a
    292:292:int getInsertedCount() -> b
    297:297:int getMatchedCount() -> c
    302:302:int getDeletedCount() -> d
    307:307:int getModifiedCount() -> e
    312:312:java.util.List getInserts() -> f
    317:317:java.util.List getUpserts() -> g
    322:330:boolean equals(java.lang.Object) -> equals
    335:335:int hashCode() -> hashCode
    340:340:java.lang.String toString() -> toString
    344:344:java.lang.UnsupportedOperationException getUnacknowledgedWriteException() -> h
com.mongodb.client.ClientSession -> com.a.b.a:
    com.mongodb.ServerAddress getPinnedServerAddress() -> a
    boolean hasActiveTransaction() -> b
    boolean notifyMessageSent() -> c
    void notifyOperationInitiated(java.lang.Object) -> a
    com.mongodb.TransactionOptions getTransactionOptions() -> d
com.mongodb.client.FindIterable -> com.a.b.b:
    com.mongodb.client.FindIterable limit(int) -> a
    com.mongodb.client.FindIterable skip(int) -> b
com.mongodb.client.ListCollectionsIterable -> com.a.b.c:
    com.mongodb.client.ListCollectionsIterable filter(org.bson.conversions.Bson) -> a
com.mongodb.client.MongoClient -> com.a.b.d:
    com.mongodb.client.MongoDatabase getDatabase(java.lang.String) -> a
    void close() -> close
com.mongodb.client.MongoClients -> com.a.b.e:
    java.lang.String accessKeyId -> a
    java.lang.String secretAccessKey -> b
    java.lang.String sessionToken -> c
    50:50:com.mongodb.client.MongoClient create(com.mongodb.MongoClientSettings) -> a
    1106:1108:com.mongodb.client.MongoClient create(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):106:108 -> a
    1106:1108:com.mongodb.client.MongoClient create(com.mongodb.MongoClientSettings):50 -> a
    2044:2048:void com.mongodb.AwsCredential.<init>(java.lang.String,java.lang.String,java.lang.String):44:48 -> <init>
    2056:2056:java.lang.String com.mongodb.AwsCredential.getAccessKeyId():56:56 -> a
    2065:2065:java.lang.String com.mongodb.AwsCredential.getSecretAccessKey():65:65 -> b
    2075:2075:java.lang.String com.mongodb.AwsCredential.getSessionToken():75:75 -> c
    3036:3039:java.lang.Object org.bson.assertions.Assertions.notNull(java.lang.String,java.lang.Object):36:39 -> a
    3050:3053:void org.bson.assertions.Assertions.isTrue(java.lang.String,boolean):50:53 -> a
    3063:3066:void org.bson.assertions.Assertions.isTrueArgument(java.lang.String,boolean):63:66 -> b
    3113:3116:java.lang.Object org.bson.assertions.Assertions.assertNotNull(java.lang.Object):113:116 -> a
com.mongodb.client.MongoCollection -> com.a.b.f:
    com.mongodb.client.MongoCollection withReadConcern(com.mongodb.ReadConcern) -> a
    com.mongodb.client.FindIterable find(org.bson.conversions.Bson) -> a
    com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object) -> a
    com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson) -> b
com.mongodb.client.MongoCursor -> com.a.b.g:
    void close() -> close
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.mongodb.client.MongoDatabase -> com.a.b.h:
    com.mongodb.client.MongoDatabase withReadPreference(com.mongodb.ReadPreference) -> a
    com.mongodb.client.MongoDatabase withReadConcern(com.mongodb.ReadConcern) -> a
    com.mongodb.client.MongoCollection getCollection(java.lang.String) -> a
    com.mongodb.client.MongoCollection getCollection(java.lang.String,java.lang.Class) -> a
    java.lang.Object runCommand(org.bson.conversions.Bson,java.lang.Class) -> a
    com.mongodb.client.MongoIterable listCollectionNames() -> a
    com.mongodb.client.ListCollectionsIterable listCollections(java.lang.Class) -> a
    void createCollection(java.lang.String) -> b
com.mongodb.client.MongoIterable -> com.a.b.i:
    com.mongodb.client.MongoCursor iterator() -> a
    java.lang.Object first() -> b
    com.mongodb.client.MongoIterable map(com.mongodb.Function) -> a
    java.util.Collection into(java.util.Collection) -> a
    30:30:java.util.Iterator iterator() -> iterator
com.mongodb.client.SynchronousContextProvider -> com.a.b.j:
    com.mongodb.RequestContext getContext() -> a
com.mongodb.client.gridfs.codecs.GridFSFileCodec -> com.a.b.a.a.a:
    org.bson.codecs.Codec documentCodec -> a
    org.bson.codecs.Codec bsonDocumentCodec -> b
    56:59:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    95:95:java.lang.Class getEncoderClass() -> a
    47:47:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1079:1091:void encode(org.bson.BsonWriter,com.mongodb.client.gridfs.model.GridFSFile,org.bson.codecs.EncoderContext):79:91 -> a
    1079:1091:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):47 -> a
    2085:2085:org.bson.BsonValue com.mongodb.client.gridfs.model.GridFSFile.getId():85:85 -> a
    2085:2085:void encode(org.bson.BsonWriter,com.mongodb.client.gridfs.model.GridFSFile,org.bson.codecs.EncoderContext):80 -> a
    2085:2085:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):47 -> a
    2094:2094:java.lang.String com.mongodb.client.gridfs.model.GridFSFile.getFilename():94:94 -> a
    2094:2094:void encode(org.bson.BsonWriter,com.mongodb.client.gridfs.model.GridFSFile,org.bson.codecs.EncoderContext):81 -> a
    2094:2094:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):47 -> a
    2103:2103:long com.mongodb.client.gridfs.model.GridFSFile.getLength():103:103 -> a
    2103:2103:void encode(org.bson.BsonWriter,com.mongodb.client.gridfs.model.GridFSFile,org.bson.codecs.EncoderContext):82 -> a
    2103:2103:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):47 -> a
    2112:2112:int com.mongodb.client.gridfs.model.GridFSFile.getChunkSize():112:112 -> a
    2112:2112:void encode(org.bson.BsonWriter,com.mongodb.client.gridfs.model.GridFSFile,org.bson.codecs.EncoderContext):83 -> a
    2112:2112:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):47 -> a
    2121:2121:java.util.Date com.mongodb.client.gridfs.model.GridFSFile.getUploadDate():121:121 -> a
    2121:2121:void encode(org.bson.BsonWriter,com.mongodb.client.gridfs.model.GridFSFile,org.bson.codecs.EncoderContext):84 -> a
    2121:2121:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):47 -> a
    2131:2131:org.bson.Document com.mongodb.client.gridfs.model.GridFSFile.getMetadata():131:131 -> a
    2131:2131:void encode(org.bson.BsonWriter,com.mongodb.client.gridfs.model.GridFSFile,org.bson.codecs.EncoderContext):86 -> a
    2131:2131:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):47 -> a
    47:47:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    3063:3074:com.mongodb.client.gridfs.model.GridFSFile decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):63:74 -> a
    3063:3074:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):47 -> a
    4056:4056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    4056:4056:com.mongodb.client.gridfs.model.GridFSFile decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):66 -> a
    4056:4056:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):47 -> a
    5053:5053:long org.bson.BsonDateTime.getValue():53:53 -> a
    5053:5053:com.mongodb.client.gridfs.model.GridFSFile decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):69 -> a
    5053:5053:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):47 -> a
    5100:5104:org.bson.Document asDocumentOrNull(org.bson.BsonDocument):100:104 -> a
    5100:5104:com.mongodb.client.gridfs.model.GridFSFile decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):72 -> a
    5100:5104:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):47 -> a
com.mongodb.client.gridfs.model.GridFSFile -> com.a.b.a.b.a:
    org.bson.BsonValue id -> a
    java.lang.String filename -> b
    long length -> c
    int chunkSize -> d
    java.util.Date uploadDate -> e
    org.bson.Document metadata -> f
    56:63:void <init>(org.bson.BsonValue,java.lang.String,long,int,java.util.Date,org.bson.Document) -> <init>
    136:163:boolean equals(java.lang.Object) -> equals
    168:174:int hashCode() -> hashCode
    179:179:java.lang.String toString() -> toString
com.mongodb.client.internal.ClientSessionBinding -> com.a.b.b.a:
    com.mongodb.internal.binding.ClusterAwareReadWriteBinding wrapped -> a
    com.mongodb.client.ClientSession session -> b
    boolean ownsSession -> c
    com.mongodb.internal.session.ClientSessionContext sessionContext -> d
    49:55:void <init>(com.mongodb.client.ClientSession,boolean,com.mongodb.internal.binding.ClusterAwareReadWriteBinding) -> <init>
    59:59:com.mongodb.ReadPreference getReadPreference() -> a
    69:70:com.mongodb.client.internal.ClientSessionBinding retain() -> b
    75:83:int release() -> c
    88:91:com.mongodb.internal.binding.ConnectionSource getReadConnectionSource() -> d
    105:108:com.mongodb.internal.binding.ConnectionSource getWriteConnectionSource() -> e
    114:114:com.mongodb.internal.session.SessionContext getSessionContext() -> f
    120:120:com.mongodb.internal.connection.DescriptionHelper getServerApi$14c3e59a() -> g
    125:125:com.mongodb.RequestContext getRequestContext() -> h
    129:130:boolean isConnectionSourcePinningRequired() -> m
    1210:1210:com.mongodb.connection.ClusterType com.mongodb.connection.ClusterDescription.getType():210:210 -> m
    1210:1210:boolean isConnectionSourcePinningRequired():129 -> m
    134:144:com.mongodb.internal.binding.ConnectionSource getPinnedConnectionSource(boolean) -> a
    2210:2210:com.mongodb.connection.ClusterType com.mongodb.connection.ClusterDescription.getType():210:210 -> a
    2210:2210:com.mongodb.internal.binding.ConnectionSource getPinnedConnectionSource(boolean):138 -> a
    2583:2583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> a
    2583:2583:com.mongodb.internal.binding.ConnectionSource getPinnedConnectionSource(boolean):139 -> a
    43:43:com.mongodb.internal.binding.ReferenceCounted retain() -> i
    3069:3070:com.mongodb.client.internal.ClientSessionBinding retain():69:70 -> i
    3069:3070:com.mongodb.internal.binding.ReferenceCounted retain():43 -> i
    43:43:com.mongodb.internal.binding.ReadWriteBinding retain() -> j
    4069:4070:com.mongodb.client.internal.ClientSessionBinding retain():69:70 -> j
    4069:4070:com.mongodb.internal.binding.ReadWriteBinding retain():43 -> j
    43:43:com.mongodb.internal.binding.ReadBinding retain() -> k
    5069:5070:com.mongodb.client.internal.ClientSessionBinding retain():69:70 -> k
    5069:5070:com.mongodb.internal.binding.ReadBinding retain():43 -> k
    43:43:com.mongodb.internal.binding.WriteBinding retain() -> l
    6069:6070:com.mongodb.client.internal.ClientSessionBinding retain():69:70 -> l
    6069:6070:com.mongodb.internal.binding.WriteBinding retain():43 -> l
com.mongodb.client.internal.ClientSessionBinding$SessionBindingConnectionSource -> com.a.b.b.a$a:
    com.mongodb.internal.binding.ConnectionSource wrapped -> a
    com.mongodb.client.internal.ClientSessionBinding this$0 -> b
    150:153:void <init>(com.mongodb.client.internal.ClientSessionBinding,com.mongodb.internal.binding.ConnectionSource) -> <init>
    157:157:com.mongodb.connection.ServerDescription getServerDescription() -> a
    162:162:com.mongodb.internal.session.SessionContext getSessionContext() -> b
    1043:1043:com.mongodb.internal.session.ClientSessionContext com.mongodb.client.internal.ClientSessionBinding.access$000(com.mongodb.client.internal.ClientSessionBinding):43:43 -> b
    1043:1043:com.mongodb.internal.session.SessionContext getSessionContext():162 -> b
    167:167:com.mongodb.internal.connection.DescriptionHelper getServerApi$14c3e59a() -> d
    172:172:com.mongodb.RequestContext getRequestContext() -> e
    177:177:com.mongodb.ReadPreference getReadPreference() -> f
    182:193:com.mongodb.internal.connection.Connection getConnection() -> g
    2043:2043:com.mongodb.client.ClientSession com.mongodb.client.internal.ClientSessionBinding.access$100(com.mongodb.client.internal.ClientSessionBinding):43:43 -> g
    2043:2043:com.mongodb.internal.connection.Connection getConnection():182 -> g
    2050:2050:boolean com.mongodb.internal.binding.TransactionContext.isConnectionPinningRequired():50:50 -> g
    2050:2050:com.mongodb.internal.connection.Connection getConnection():183 -> g
    3040:3040:com.mongodb.internal.binding.ReferenceCounted com.mongodb.internal.binding.TransactionContext.getPinnedConnection():40:40 -> g
    3040:3040:com.mongodb.internal.connection.Connection getConnection():184 -> g
    3045:3047:void com.mongodb.internal.binding.TransactionContext.pinConnection(com.mongodb.internal.binding.ReferenceCounted,java.util.function.BiConsumer):45:47 -> g
    3045:3047:com.mongodb.internal.connection.Connection getConnection():187 -> g
    200:201:com.mongodb.internal.binding.ConnectionSource retain() -> h
    211:215:int release() -> c
    147:147:com.mongodb.internal.binding.ReferenceCounted retain() -> i
com.mongodb.client.internal.ClientSessionBinding$SyncClientSessionContext -> com.a.b.b.a$b:
    com.mongodb.client.ClientSession clientSession -> a
    com.mongodb.client.internal.ClientSessionBinding this$0 -> b
    223:226:void <init>(com.mongodb.client.internal.ClientSessionBinding,com.mongodb.client.ClientSession) -> <init>
    230:230:boolean isImplicitSession() -> a
    1043:1043:boolean com.mongodb.client.internal.ClientSessionBinding.access$200(com.mongodb.client.internal.ClientSessionBinding):43:43 -> a
    1043:1043:boolean isImplicitSession():230 -> a
    235:235:boolean notifyMessageSent() -> b
    240:240:boolean hasActiveTransaction() -> c
    245:250:com.mongodb.ReadConcern getReadConcern() -> d
    1053:1053:com.mongodb.ReadConcern com.mongodb.TransactionOptions.getReadConcern():53:53 -> d
    1053:1053:com.mongodb.ReadConcern getReadConcern():246 -> d
    2043:2043:com.mongodb.internal.binding.ClusterAwareReadWriteBinding com.mongodb.client.internal.ClientSessionBinding.access$300(com.mongodb.client.internal.ClientSessionBinding):43:43 -> d
    2043:2043:com.mongodb.ReadConcern getReadConcern():250 -> d
com.mongodb.client.internal.ClientSessionImpl -> com.a.b.b.b:
    com.mongodb.client.internal.MongoClientDelegate delegate -> a
    com.mongodb.client.internal.ClientSessionImpl$TransactionState transactionState -> b
    boolean messageSentInCurrentTransaction -> c
    com.mongodb.TransactionOptions transactionOptions -> d
    53:62:void <init>(com.mongodb.internal.session.ServerSessionPool,java.lang.Object,com.mongodb.ClientSessionOptions,com.mongodb.client.internal.MongoClientDelegate) -> <init>
    66:66:boolean hasActiveTransaction() -> b
    71:79:boolean notifyMessageSent() -> c
    86:92:void notifyOperationInitiated(java.lang.Object) -> a
    96:97:com.mongodb.TransactionOptions getTransactionOptions() -> d
    269:276:void close() -> close
    1165:1190:void abortTransaction():165:190 -> close
    1165:1190:void close():270 -> close
    2053:2053:com.mongodb.ReadConcern com.mongodb.TransactionOptions.getReadConcern():53:53 -> close
    2053:2053:void abortTransaction():176 -> close
    2053:2053:void close():270 -> close
    2090:2090:net.kyori.adventure.sound.Sound$Source$Provider com.mongodb.client.internal.MongoClientDelegate.getOperationExecutor$1c1ccf3b():90:90 -> close
    2090:2090:void abortTransaction():180 -> close
    2090:2090:void close():270 -> close
    3063:3063:com.mongodb.WriteConcern com.mongodb.TransactionOptions.getWriteConcern():63:63 -> close
    3063:3063:void abortTransaction():180 -> close
    3063:3063:void close():270 -> close
    4037:4038:com.mongodb.internal.operation.AbortTransactionOperation com.mongodb.internal.operation.AbortTransactionOperation.recoveryToken(org.bson.BsonDocument):37:38 -> close
    4037:4038:void abortTransaction():181 -> close
    4037:4038:void close():270 -> close
    279:282:void cleanupTransaction(com.mongodb.client.internal.ClientSessionImpl$TransactionState) -> a
com.mongodb.client.internal.ClientSessionImpl$TransactionState -> com.a.b.b.b$a:
    com.mongodb.client.internal.ClientSessionImpl$TransactionState NONE -> a
    com.mongodb.client.internal.ClientSessionImpl$TransactionState IN -> b
    com.mongodb.client.internal.ClientSessionImpl$TransactionState COMMITTED -> c
    com.mongodb.client.internal.ClientSessionImpl$TransactionState ABORTED -> d
    com.mongodb.client.internal.ClientSessionImpl$TransactionState[] $VALUES -> e
    46:46:com.mongodb.client.internal.ClientSessionImpl$TransactionState[] values() -> values
    46:46:com.mongodb.client.internal.ClientSessionImpl$TransactionState valueOf(java.lang.String) -> valueOf
    46:46:void <init>(java.lang.String,int) -> <init>
    46:47:void <clinit>() -> <clinit>
    1046:1046:com.mongodb.client.internal.ClientSessionImpl$TransactionState[] $values():46:46 -> <clinit>
    1046:1046:void <clinit>():46 -> <clinit>
com.mongodb.client.internal.CommandMarker -> com.a.b.b.c:
    com.mongodb.client.MongoClient client -> a
    java.lang.ProcessBuilder processBuilder -> b
    84:99:org.bson.RawBsonDocument mark(java.lang.String,org.bson.RawBsonDocument) -> a
    1119:1119:com.mongodb.MongoClientException wrapInClientException(com.mongodb.MongoException):119:119 -> a
    1119:1119:org.bson.RawBsonDocument mark(java.lang.String,org.bson.RawBsonDocument):96 -> a
    105:108:void close() -> close
    111:115:org.bson.RawBsonDocument executeCommand(java.lang.String,org.bson.RawBsonDocument) -> b
com.mongodb.client.internal.Crypt -> com.a.b.b.d:
    org.bson.RawBsonDocument EMPTY_RAW_BSON_DOCUMENT -> a
    com.mongodb.crypt.capi.MongoCrypt mongoCrypt -> b
    java.util.Map kmsProviders -> c
    java.util.Map kmsProviderPropertySuppliers -> d
    net.kyori.examination.string.Strings collectionInfoRetriever$554a872a -> e
    com.mongodb.client.internal.CommandMarker commandMarker -> f
    org.bson.StringUtils keyRetriever$37982be1 -> g
    com.mongodb.client.internal.KeyManagementService keyManagementService -> h
    boolean bypassAutoEncryption -> i
    com.mongodb.client.MongoClient internalClient -> j
    128:138:org.bson.RawBsonDocument encrypt(java.lang.String,org.bson.RawBsonDocument) -> a
    149:153:org.bson.RawBsonDocument decrypt(org.bson.RawBsonDocument) -> a
    261:267:void close() -> close
    271:295:org.bson.RawBsonDocument executeStateMachine(com.mongodb.crypt.capi.MongoCryptContext,java.lang.String) -> a
    299:300:void fetchCredentials(com.mongodb.crypt.capi.MongoCryptContext) -> a
    304:312:void collInfo(com.mongodb.crypt.capi.MongoCryptContext,java.lang.String) -> b
    316:322:void mark(com.mongodb.crypt.capi.MongoCryptContext,java.lang.String) -> c
    326:333:void fetchKeys(com.mongodb.crypt.capi.MongoCryptContext) -> b
    337:346:void decryptKeys(com.mongodb.crypt.capi.MongoCryptContext) -> c
    349:360:void decryptKey(com.mongodb.crypt.capi.MongoKeyDecryptor) -> a
    363:363:com.mongodb.MongoClientException wrapInClientException(java.lang.Throwable) -> a
    57:57:void <clinit>() -> <clinit>
com.mongodb.client.internal.Crypt$1 -> com.a.b.b.d$1:
    int[] $SwitchMap$com$mongodb$crypt$capi$MongoCryptContext$State -> a
    272:272:void <clinit>() -> <clinit>
com.mongodb.client.internal.CryptBinding -> com.a.b.b.e:
    com.mongodb.internal.binding.ClusterAwareReadWriteBinding wrapped -> b
    com.mongodb.client.internal.Crypt crypt -> a
    36:39:void <init>(com.mongodb.internal.binding.ClusterAwareReadWriteBinding,com.mongodb.client.internal.Crypt) -> <init>
    43:43:com.mongodb.ReadPreference getReadPreference() -> a
    48:48:com.mongodb.internal.binding.ConnectionSource getReadConnectionSource() -> d
    58:58:com.mongodb.internal.binding.ConnectionSource getWriteConnectionSource() -> e
    63:63:com.mongodb.internal.binding.ConnectionSource getConnectionSource(com.mongodb.ServerAddress) -> a
    68:68:com.mongodb.internal.session.SessionContext getSessionContext() -> f
    74:74:com.mongodb.internal.connection.DescriptionHelper getServerApi$14c3e59a() -> g
    79:79:com.mongodb.RequestContext getRequestContext() -> h
    89:90:com.mongodb.internal.binding.ReadWriteBinding retain() -> j
    95:95:int release() -> c
    100:100:com.mongodb.internal.connection.Cluster getCluster() -> b
    32:32:com.mongodb.internal.binding.ReadBinding retain() -> k
    32:32:com.mongodb.internal.binding.ReferenceCounted retain() -> i
    32:32:com.mongodb.internal.binding.WriteBinding retain() -> l
com.mongodb.client.internal.CryptBinding$CryptConnectionSource -> com.a.b.b.e$a:
    com.mongodb.internal.binding.ConnectionSource wrapped -> a
    com.mongodb.client.internal.CryptBinding this$0 -> b
    106:108:void <init>(com.mongodb.client.internal.CryptBinding,com.mongodb.internal.binding.ConnectionSource) -> <init>
    112:112:com.mongodb.connection.ServerDescription getServerDescription() -> a
    117:117:com.mongodb.internal.session.SessionContext getSessionContext() -> b
    122:122:com.mongodb.internal.connection.DescriptionHelper getServerApi$14c3e59a() -> d
    127:127:com.mongodb.RequestContext getRequestContext() -> e
    132:132:com.mongodb.ReadPreference getReadPreference() -> f
    137:137:com.mongodb.internal.connection.Connection getConnection() -> g
    1032:1032:com.mongodb.client.internal.Crypt com.mongodb.client.internal.CryptBinding.access$000(com.mongodb.client.internal.CryptBinding):32:32 -> g
    1032:1032:com.mongodb.internal.connection.Connection getConnection():137 -> g
    147:148:com.mongodb.internal.binding.ConnectionSource retain() -> h
    153:153:int release() -> c
    103:103:com.mongodb.internal.binding.ReferenceCounted retain() -> i
com.mongodb.client.internal.CryptConnection -> com.a.b.b.f:
    org.bson.codecs.configuration.CodecRegistry REGISTRY -> a
    com.mongodb.internal.connection.Connection wrapped -> b
    com.mongodb.client.internal.Crypt crypt -> c
    61:64:void <init>(com.mongodb.internal.connection.Connection,com.mongodb.client.internal.Crypt) -> <init>
    73:74:com.mongodb.client.internal.CryptConnection retain() -> d
    79:79:int release() -> c
    84:84:com.mongodb.connection.ConnectionDescription getDescription() -> a
    94:123:java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator) -> a
    1219:1219:int com.mongodb.connection.ConnectionDescription.getMaxDocumentSize():219:219 -> a
    1219:1219:java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator):100 -> a
    2143:2149:org.bson.FieldNameValidator getFieldNameValidator(com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator,org.bson.FieldNameValidator):143:149 -> a
    2143:2149:java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator):101 -> a
    2153:2157:com.mongodb.internal.connection.MessageSettings createSplittablePayloadMessageSettings():153:157 -> a
    2153:2157:java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator):104 -> a
    3046:3046:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings.builder():46:46 -> a
    3046:3046:com.mongodb.internal.connection.MessageSettings createSplittablePayloadMessageSettings():153 -> a
    3046:3046:java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator):104 -> a
    3210:3210:int com.mongodb.connection.ConnectionDescription.getMaxBatchCount():210:210 -> a
    3210:3210:com.mongodb.internal.connection.MessageSettings createSplittablePayloadMessageSettings():154 -> a
    3210:3210:java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator):104 -> a
    4098:4099:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.maxBatchCount(int):98:99 -> a
    4098:4099:com.mongodb.internal.connection.MessageSettings createSplittablePayloadMessageSettings():154 -> a
    4098:4099:java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator):104 -> a
    4228:4228:int com.mongodb.connection.ConnectionDescription.getMaxMessageSize():228:228 -> a
    4228:4228:com.mongodb.internal.connection.MessageSettings createSplittablePayloadMessageSettings():155 -> a
    4228:4228:java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator):104 -> a
    5087:5088:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.maxMessageSize(int):87:88 -> a
    5087:5088:com.mongodb.internal.connection.MessageSettings createSplittablePayloadMessageSettings():155 -> a
    5087:5088:java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator):104 -> a
    5219:5219:int com.mongodb.connection.ConnectionDescription.getMaxDocumentSize():219:219 -> a
    5219:5219:com.mongodb.internal.connection.MessageSettings createSplittablePayloadMessageSettings():156 -> a
    5219:5219:java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator):104 -> a
    6076:6077:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.maxDocumentSize(int):76:77 -> a
    6076:6077:com.mongodb.internal.connection.MessageSettings createSplittablePayloadMessageSettings():156 -> a
    6076:6077:java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator):104 -> a
    6137:6137:org.bson.codecs.Codec getEncoder(org.bson.BsonDocument):137:137 -> a
    6137:6137:java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator):107 -> a
    7061:7061:byte[] org.bson.io.BasicOutputBuffer.getInternalBuffer():61:61 -> a
    7061:7061:java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator):110 -> a
    131:131:java.lang.Object command$4c71378a(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext) -> a
    162:163:void markAsPinned(com.mongodb.internal.connection.Connection$PinningMode) -> a
    54:54:com.mongodb.internal.connection.Connection retain() -> b
    54:54:com.mongodb.internal.binding.ReferenceCounted retain() -> i
    55:55:void <clinit>() -> <clinit>
    7085:7085:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.fromProviders(org.bson.codecs.configuration.CodecProvider[]):85:85 -> <clinit>
    7085:7085:void <clinit>():55 -> <clinit>
com.mongodb.client.internal.Crypts -> com.a.b.b.g:
    39:58:com.mongodb.client.internal.Crypt createCrypt$2dc4612f(com.mongodb.client.internal.MongoClientImpl,co.aikar.commands.BukkitCommandContexts_1_12) -> a
    1263:1263:com.mongodb.MongoClientSettings com.mongodb.client.internal.MongoClientImpl.getSettings():263:263 -> a
    1263:1263:com.mongodb.client.internal.Crypt createCrypt$2dc4612f(com.mongodb.client.internal.MongoClientImpl,co.aikar.commands.BukkitCommandContexts_1_12):42 -> a
    1316:1317:com.mongodb.MongoClientSettings$Builder com.mongodb.MongoClientSettings$Builder.applyToConnectionPoolSettings(com.mongodb.Block):316:317 -> a
    1316:1317:com.mongodb.client.internal.Crypt createCrypt$2dc4612f(com.mongodb.client.internal.MongoClientImpl,co.aikar.commands.BukkitCommandContexts_1_12):43 -> a
    1558:1559:com.mongodb.MongoClientSettings$Builder com.mongodb.MongoClientSettings$Builder.autoEncryptionSettings$2139fc67(co.aikar.commands.BukkitCommandContexts_1_12):558:559 -> a
    1558:1559:com.mongodb.client.internal.Crypt createCrypt$2dc4612f(com.mongodb.client.internal.MongoClientImpl,co.aikar.commands.BukkitCommandContexts_1_12):44 -> a
    2060:2066:com.mongodb.crypt.capi.MongoCryptOptions com.mongodb.internal.capi.MongoCryptHelper.createMongoCryptOptions$1a544337(co.aikar.commands.BukkitCommandContexts_1_12):60:66 -> a
    2060:2066:com.mongodb.client.internal.Crypt createCrypt$2dc4612f(com.mongodb.client.internal.MongoClientImpl,co.aikar.commands.BukkitCommandContexts_1_12):50 -> a
    2082:2090:com.mongodb.crypt.capi.MongoCryptOptions com.mongodb.internal.capi.MongoCryptHelper.createMongoCryptOptions(java.util.Map,boolean,java.util.List,java.util.Map,java.util.Map,java.util.Map):82:90 -> a
    2082:2090:com.mongodb.crypt.capi.MongoCryptOptions com.mongodb.internal.capi.MongoCryptHelper.createMongoCryptOptions$1a544337(co.aikar.commands.BukkitCommandContexts_1_12):60 -> a
    2082:2090:com.mongodb.client.internal.Crypt createCrypt$2dc4612f(com.mongodb.client.internal.MongoClientImpl,co.aikar.commands.BukkitCommandContexts_1_12):50 -> a
    3073:3073:org.bson.StringUtils createKeyRetriever$6ffd898d(com.mongodb.client.MongoClient,java.lang.String):73:73 -> a
    3073:3073:com.mongodb.client.internal.Crypt createCrypt$2dc4612f(com.mongodb.client.internal.MongoClientImpl,co.aikar.commands.BukkitCommandContexts_1_12):53 -> a
    3077:3077:com.mongodb.client.internal.KeyManagementService createKeyManagementService(java.util.Map):77:77 -> a
    3077:3077:com.mongodb.client.internal.Crypt createCrypt$2dc4612f(com.mongodb.client.internal.MongoClientImpl,co.aikar.commands.BukkitCommandContexts_1_12):54 -> a
    4021:4021:void com.mongodb.BasicDBObjectFactory.<init>():21:21 -> <init>
    4029:4029:com.mongodb.DBObject com.mongodb.BasicDBObjectFactory.getInstance$23a3c337():29:29 -> a
com.mongodb.client.internal.FindIterableImpl -> com.a.b.b.h:
    com.mongodb.internal.operation.SyncOperations operations -> a
    java.lang.Class resultClass -> b
    com.mongodb.internal.client.model.FindOptions findOptions -> c
    org.bson.conversions.Bson filter -> d
    60:66:void <init>(com.mongodb.client.ClientSession,com.mongodb.MongoNamespace,java.lang.Class,java.lang.Class,org.bson.codecs.configuration.CodecRegistry,com.mongodb.ReadPreference,com.mongodb.ReadConcern,net.kyori.adventure.sound.Sound$Source$Provider,org.bson.conversions.Bson,boolean) -> <init>
    76:77:com.mongodb.client.FindIterable limit(int) -> a
    1118:1119:com.mongodb.internal.client.model.FindOptions com.mongodb.internal.client.model.FindOptions.limit(int):118:119 -> a
    1118:1119:com.mongodb.client.FindIterable limit(int):76 -> a
    82:83:com.mongodb.client.FindIterable skip(int) -> b
    1140:1141:com.mongodb.internal.client.model.FindOptions com.mongodb.internal.client.model.FindOptions.skip(int):140:141 -> b
    1140:1141:com.mongodb.client.FindIterable skip(int):82 -> b
    213:216:java.lang.Object first() -> b
    2093:2093:com.mongodb.internal.operation.ReadOperation com.mongodb.internal.operation.SyncOperations.findFirst(org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):93:93 -> b
    2093:2093:java.lang.Object first():213 -> b
    2171:2171:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.Operations.findFirst(org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):171:171 -> b
    2171:2171:com.mongodb.internal.operation.ReadOperation com.mongodb.internal.operation.SyncOperations.findFirst(org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):93 -> b
    2171:2171:java.lang.Object first():213 -> b
    3128:3129:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.batchSize(int):128:129 -> b
    3128:3129:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.Operations.findFirst(org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):171 -> b
    3128:3129:com.mongodb.internal.operation.ReadOperation com.mongodb.internal.operation.SyncOperations.findFirst(org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):93 -> b
    3128:3129:java.lang.Object first():213 -> b
    3137:3138:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.limit(int):137:138 -> b
    3137:3138:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.Operations.findFirst(org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):171 -> b
    3137:3138:com.mongodb.internal.operation.ReadOperation com.mongodb.internal.operation.SyncOperations.findFirst(org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):93 -> b
    3137:3138:java.lang.Object first():213 -> b
    41:41:com.mongodb.internal.operation.ReadOperation asReadOperation() -> c
    3246:3246:com.mongodb.internal.operation.ExplainableReadOperation asReadOperation():246:246 -> c
    3246:3246:com.mongodb.internal.operation.ReadOperation asReadOperation():41 -> c
    4098:4098:com.mongodb.internal.operation.ExplainableReadOperation com.mongodb.internal.operation.SyncOperations.find(org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):98:98 -> c
    4098:4098:com.mongodb.internal.operation.ExplainableReadOperation asReadOperation():246 -> c
    4098:4098:com.mongodb.internal.operation.ReadOperation asReadOperation():41 -> c
    4176:4176:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.Operations.find(org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):176:176 -> c
    4176:4176:com.mongodb.internal.operation.ExplainableReadOperation com.mongodb.internal.operation.SyncOperations.find(org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):98 -> c
    4176:4176:com.mongodb.internal.operation.ExplainableReadOperation asReadOperation():246 -> c
    4176:4176:com.mongodb.internal.operation.ReadOperation asReadOperation():41 -> c
com.mongodb.client.internal.KeyManagementService -> com.a.b.b.i:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> a
    java.util.Map kmsProviderSslContextMap -> b
    int timeoutMillis -> c
    51:85:java.io.InputStream stream(java.lang.String,java.lang.String,java.nio.ByteBuffer) -> a
    1090:1096:void enableHostNameVerification(javax.net.ssl.SSLSocket):90:96 -> a
    1090:1096:java.io.InputStream stream(java.lang.String,java.lang.String,java.nio.ByteBuffer):59 -> a
    2036:2037:void com.mongodb.internal.connection.SslHelper.enableHostNameVerification(javax.net.ssl.SSLParameters):36:37 -> a
    2036:2037:void enableHostNameVerification(javax.net.ssl.SSLSocket):94 -> a
    2036:2037:java.io.InputStream stream(java.lang.String,java.lang.String,java.nio.ByteBuffer):59 -> a
    2175:2175:java.lang.String com.mongodb.ServerAddress.getHost():175:175 -> a
    2175:2175:java.io.InputStream stream(java.lang.String,java.lang.String,java.nio.ByteBuffer):63 -> a
    2184:2184:int com.mongodb.ServerAddress.getPort():184:184 -> a
    2184:2184:java.io.InputStream stream(java.lang.String,java.lang.String,java.nio.ByteBuffer):63 -> a
    100:104:void closeSocket(java.net.Socket) -> a
    41:41:void <clinit>() -> <clinit>
com.mongodb.client.internal.ListCollectionsIterableImpl -> com.a.b.b.j:
    com.mongodb.internal.operation.SyncOperations operations -> a
    java.lang.String databaseName -> b
    java.lang.Class resultClass -> c
    org.bson.conversions.Bson filter -> d
    boolean collectionNamesOnly -> e
    org.bson.BsonValue comment -> f
    57:62:void <init>(com.mongodb.client.ClientSession,java.lang.String,boolean,java.lang.Class,org.bson.codecs.configuration.CodecRegistry,com.mongodb.ReadPreference,net.kyori.adventure.sound.Sound$Source$Provider,boolean) -> <init>
    66:67:com.mongodb.client.ListCollectionsIterable filter(org.bson.conversions.Bson) -> a
    97:97:com.mongodb.internal.operation.ReadOperation asReadOperation() -> c
    1264:1264:com.mongodb.internal.operation.ReadOperation com.mongodb.internal.operation.SyncOperations.listCollections(java.lang.String,java.lang.Class,org.bson.conversions.Bson,boolean,java.lang.Integer,long,org.bson.BsonValue):264:264 -> c
    1264:1264:com.mongodb.internal.operation.ReadOperation asReadOperation():97 -> c
    1661:1667:com.mongodb.internal.operation.ListCollectionsOperation com.mongodb.internal.operation.Operations.listCollections(java.lang.String,java.lang.Class,org.bson.conversions.Bson,boolean,java.lang.Integer,long,org.bson.BsonValue):661:667 -> c
    1661:1667:com.mongodb.internal.operation.ReadOperation com.mongodb.internal.operation.SyncOperations.listCollections(java.lang.String,java.lang.Class,org.bson.conversions.Bson,boolean,java.lang.Integer,long,org.bson.BsonValue):264 -> c
    1661:1667:com.mongodb.internal.operation.ReadOperation asReadOperation():97 -> c
    2124:2125:com.mongodb.internal.operation.ListCollectionsOperation com.mongodb.internal.operation.ListCollectionsOperation.retryReads(boolean):124:125 -> c
    2124:2125:com.mongodb.internal.operation.ListCollectionsOperation com.mongodb.internal.operation.Operations.listCollections(java.lang.String,java.lang.Class,org.bson.conversions.Bson,boolean,java.lang.Integer,long,org.bson.BsonValue):662 -> c
    2124:2125:com.mongodb.internal.operation.ReadOperation com.mongodb.internal.operation.SyncOperations.listCollections(java.lang.String,java.lang.Class,org.bson.conversions.Bson,boolean,java.lang.Integer,long,org.bson.BsonValue):264 -> c
    2124:2125:com.mongodb.internal.operation.ReadOperation asReadOperation():97 -> c
    3094:3095:com.mongodb.internal.operation.ListCollectionsOperation com.mongodb.internal.operation.ListCollectionsOperation.filter(org.bson.BsonDocument):94:95 -> c
    3094:3095:com.mongodb.internal.operation.ListCollectionsOperation com.mongodb.internal.operation.Operations.listCollections(java.lang.String,java.lang.Class,org.bson.conversions.Bson,boolean,java.lang.Integer,long,org.bson.BsonValue):663 -> c
    3094:3095:com.mongodb.internal.operation.ReadOperation com.mongodb.internal.operation.SyncOperations.listCollections(java.lang.String,java.lang.Class,org.bson.conversions.Bson,boolean,java.lang.Integer,long,org.bson.BsonValue):264 -> c
    3094:3095:com.mongodb.internal.operation.ReadOperation asReadOperation():97 -> c
    3099:3100:com.mongodb.internal.operation.ListCollectionsOperation com.mongodb.internal.operation.ListCollectionsOperation.nameOnly(boolean):99:100 -> c
    3099:3100:com.mongodb.internal.operation.ListCollectionsOperation com.mongodb.internal.operation.Operations.listCollections(java.lang.String,java.lang.Class,org.bson.conversions.Bson,boolean,java.lang.Integer,long,org.bson.BsonValue):664 -> c
    3099:3100:com.mongodb.internal.operation.ReadOperation com.mongodb.internal.operation.SyncOperations.listCollections(java.lang.String,java.lang.Class,org.bson.conversions.Bson,boolean,java.lang.Integer,long,org.bson.BsonValue):264 -> c
    3099:3100:com.mongodb.internal.operation.ReadOperation asReadOperation():97 -> c
    3108:3109:com.mongodb.internal.operation.ListCollectionsOperation com.mongodb.internal.operation.ListCollectionsOperation.batchSize(int):108:109 -> c
    3108:3109:com.mongodb.internal.operation.ListCollectionsOperation com.mongodb.internal.operation.Operations.listCollections(java.lang.String,java.lang.Class,org.bson.conversions.Bson,boolean,java.lang.Integer,long,org.bson.BsonValue):665 -> c
    3108:3109:com.mongodb.internal.operation.ReadOperation com.mongodb.internal.operation.SyncOperations.listCollections(java.lang.String,java.lang.Class,org.bson.conversions.Bson,boolean,java.lang.Integer,long,org.bson.BsonValue):264 -> c
    3108:3109:com.mongodb.internal.operation.ReadOperation asReadOperation():97 -> c
    3118:3120:com.mongodb.internal.operation.ListCollectionsOperation com.mongodb.internal.operation.ListCollectionsOperation.maxTime(long,java.util.concurrent.TimeUnit):118:120 -> c
    3118:3120:com.mongodb.internal.operation.ListCollectionsOperation com.mongodb.internal.operation.Operations.listCollections(java.lang.String,java.lang.Class,org.bson.conversions.Bson,boolean,java.lang.Integer,long,org.bson.BsonValue):666 -> c
    3118:3120:com.mongodb.internal.operation.ReadOperation com.mongodb.internal.operation.SyncOperations.listCollections(java.lang.String,java.lang.Class,org.bson.conversions.Bson,boolean,java.lang.Integer,long,org.bson.BsonValue):264 -> c
    3118:3120:com.mongodb.internal.operation.ReadOperation asReadOperation():97 -> c
    3138:3139:com.mongodb.internal.operation.ListCollectionsOperation com.mongodb.internal.operation.ListCollectionsOperation.comment(org.bson.BsonValue):138:139 -> c
    3138:3139:com.mongodb.internal.operation.ListCollectionsOperation com.mongodb.internal.operation.Operations.listCollections(java.lang.String,java.lang.Class,org.bson.conversions.Bson,boolean,java.lang.Integer,long,org.bson.BsonValue):667 -> c
    3138:3139:com.mongodb.internal.operation.ReadOperation com.mongodb.internal.operation.SyncOperations.listCollections(java.lang.String,java.lang.Class,org.bson.conversions.Bson,boolean,java.lang.Integer,long,org.bson.BsonValue):264 -> c
    3138:3139:com.mongodb.internal.operation.ReadOperation asReadOperation():97 -> c
com.mongodb.client.internal.MappingIterable -> com.a.b.b.k:
    com.mongodb.client.MongoIterable iterable -> a
    com.mongodb.Function mapper -> b
    35:38:void <init>(com.mongodb.client.MongoIterable,com.mongodb.Function) -> <init>
    42:42:com.mongodb.client.MongoCursor iterator() -> a
    53:57:java.lang.Object first() -> b
    62:63:void forEach(java.util.function.Consumer) -> forEach
    67:68:java.util.Collection into(java.util.Collection) -> a
    79:79:com.mongodb.client.MongoIterable map(com.mongodb.Function) -> a
    30:30:java.util.Iterator iterator() -> iterator
    67:67:void lambda$into$1(java.util.Collection,java.lang.Object) -> a
    62:62:void lambda$forEach$0(java.util.function.Consumer,java.lang.Object) -> a
com.mongodb.client.internal.MongoBatchCursorAdapter -> com.a.b.b.l:
    com.mongodb.internal.operation.BatchCursor batchCursor -> a
    java.util.List curBatch -> b
    int curPos -> c
    36:38:void <init>(com.mongodb.internal.operation.BatchCursor) -> <init>
    42:42:void remove() -> remove
    47:48:void close() -> close
    52:52:boolean hasNext() -> hasNext
    57:65:java.lang.Object next() -> next
    1099:1106:java.lang.Object getNextInBatch():99:106 -> next
    1099:1106:java.lang.Object next():65 -> next
com.mongodb.client.internal.MongoClientDelegate -> com.a.b.b.m:
    com.mongodb.internal.connection.Cluster cluster -> a
    com.mongodb.internal.session.ServerSessionPool serverSessionPool -> h
    java.lang.Object originator -> b
    net.kyori.adventure.sound.Sound$Source$Provider operationExecutor$4b10cc1a -> c
    com.mongodb.client.internal.Crypt crypt -> d
    com.mongodb.internal.connection.DescriptionHelper serverApi$10f7fbbb -> e
    org.bson.codecs.configuration.CodecRegistry codecRegistry -> f
    com.mongodb.client.SynchronousContextProvider contextProvider -> g
    java.util.concurrent.atomic.AtomicBoolean closed -> i
    77:87:void <init>(com.mongodb.internal.connection.Cluster,org.bson.codecs.configuration.CodecRegistry,java.lang.Object,net.kyori.adventure.sound.Sound$Source$Provider,com.mongodb.client.internal.Crypt,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.client.SynchronousContextProvider) -> <init>
    96:116:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference) -> a
    1143:1148:com.mongodb.connection.ClusterDescription getConnectedClusterDescription():143:148 -> a
    1143:1148:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):100 -> a
    1243:1243:java.lang.Integer com.mongodb.connection.ClusterDescription.getLogicalSessionTimeoutMinutes():243:243 -> a
    1243:1243:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):102 -> a
    2201:2201:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterDescription.getConnectionMode():201:201 -> a
    2201:2201:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):103 -> a
    3139:3144:com.mongodb.ClientSessionOptions$Builder com.mongodb.ClientSessionOptions.builder(com.mongodb.ClientSessionOptions):139:144 -> a
    3139:3144:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):106 -> a
    4052:4052:java.lang.Boolean com.mongodb.ClientSessionOptions.isCausallyConsistent():52:52 -> a
    4052:4052:com.mongodb.ClientSessionOptions$Builder com.mongodb.ClientSessionOptions.builder(com.mongodb.ClientSessionOptions):141 -> a
    4052:4052:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):106 -> a
    4151:4151:java.lang.Boolean com.mongodb.ClientSessionOptions$Builder.access$102(com.mongodb.ClientSessionOptions$Builder,java.lang.Boolean):151:151 -> a
    4151:4151:com.mongodb.ClientSessionOptions$Builder com.mongodb.ClientSessionOptions.builder(com.mongodb.ClientSessionOptions):141 -> a
    4151:4151:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):106 -> a
    5066:5066:java.lang.Boolean com.mongodb.ClientSessionOptions.isSnapshot():66:66 -> a
    5066:5066:com.mongodb.ClientSessionOptions$Builder com.mongodb.ClientSessionOptions.builder(com.mongodb.ClientSessionOptions):142 -> a
    5066:5066:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):106 -> a
    5151:5151:java.lang.Boolean com.mongodb.ClientSessionOptions$Builder.access$202(com.mongodb.ClientSessionOptions$Builder,java.lang.Boolean):151:151 -> a
    5151:5151:com.mongodb.ClientSessionOptions$Builder com.mongodb.ClientSessionOptions.builder(com.mongodb.ClientSessionOptions):142 -> a
    5151:5151:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):106 -> a
    6077:6077:com.mongodb.TransactionOptions com.mongodb.ClientSessionOptions.getDefaultTransactionOptions():77:77 -> a
    6077:6077:com.mongodb.ClientSessionOptions$Builder com.mongodb.ClientSessionOptions.builder(com.mongodb.ClientSessionOptions):143 -> a
    6077:6077:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):106 -> a
    6151:6151:com.mongodb.TransactionOptions com.mongodb.ClientSessionOptions$Builder.access$302(com.mongodb.ClientSessionOptions$Builder,com.mongodb.TransactionOptions):151:151 -> a
    6151:6151:com.mongodb.ClientSessionOptions$Builder com.mongodb.ClientSessionOptions.builder(com.mongodb.ClientSessionOptions):143 -> a
    6151:6151:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):106 -> a
    7077:7077:com.mongodb.TransactionOptions com.mongodb.ClientSessionOptions.getDefaultTransactionOptions():77:77 -> a
    7077:7077:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):109 -> a
    7188:7189:com.mongodb.TransactionOptions$Builder com.mongodb.TransactionOptions$Builder.readConcern(com.mongodb.ReadConcern):188:189 -> a
    7188:7189:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):111 -> a
    7199:7200:com.mongodb.TransactionOptions$Builder com.mongodb.TransactionOptions$Builder.writeConcern(com.mongodb.WriteConcern):199:200 -> a
    7199:7200:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):112 -> a
    7210:7211:com.mongodb.TransactionOptions$Builder com.mongodb.TransactionOptions$Builder.readPreference(com.mongodb.ReadPreference):210:211 -> a
    7210:7211:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):113 -> a
    8111:8123:com.mongodb.TransactionOptions com.mongodb.TransactionOptions.merge(com.mongodb.TransactionOptions,com.mongodb.TransactionOptions):111:123 -> a
    8111:8123:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):108 -> a
    9063:9063:com.mongodb.WriteConcern com.mongodb.TransactionOptions.getWriteConcern():63:63 -> a
    9063:9063:com.mongodb.TransactionOptions com.mongodb.TransactionOptions.merge(com.mongodb.TransactionOptions,com.mongodb.TransactionOptions):114 -> a
    9063:9063:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):108 -> a
    10063:10063:com.mongodb.WriteConcern com.mongodb.TransactionOptions.getWriteConcern():63:63 -> a
    10063:10063:com.mongodb.TransactionOptions com.mongodb.TransactionOptions.merge(com.mongodb.TransactionOptions,com.mongodb.TransactionOptions):115 -> a
    10063:10063:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):108 -> a
    11063:11063:com.mongodb.WriteConcern com.mongodb.TransactionOptions.getWriteConcern():63:63 -> a
    11063:11063:com.mongodb.TransactionOptions com.mongodb.TransactionOptions.merge(com.mongodb.TransactionOptions,com.mongodb.TransactionOptions):115 -> a
    11063:11063:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):108 -> a
    11199:11200:com.mongodb.TransactionOptions$Builder com.mongodb.TransactionOptions$Builder.writeConcern(com.mongodb.WriteConcern):199:200 -> a
    11199:11200:com.mongodb.TransactionOptions com.mongodb.TransactionOptions.merge(com.mongodb.TransactionOptions,com.mongodb.TransactionOptions):114 -> a
    11199:11200:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):108 -> a
    12053:12053:com.mongodb.ReadConcern com.mongodb.TransactionOptions.getReadConcern():53:53 -> a
    12053:12053:com.mongodb.TransactionOptions com.mongodb.TransactionOptions.merge(com.mongodb.TransactionOptions,com.mongodb.TransactionOptions):116 -> a
    12053:12053:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):108 -> a
    13053:13053:com.mongodb.ReadConcern com.mongodb.TransactionOptions.getReadConcern():53:53 -> a
    13053:13053:com.mongodb.TransactionOptions com.mongodb.TransactionOptions.merge(com.mongodb.TransactionOptions,com.mongodb.TransactionOptions):117 -> a
    13053:13053:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):108 -> a
    14053:14053:com.mongodb.ReadConcern com.mongodb.TransactionOptions.getReadConcern():53:53 -> a
    14053:14053:com.mongodb.TransactionOptions com.mongodb.TransactionOptions.merge(com.mongodb.TransactionOptions,com.mongodb.TransactionOptions):117 -> a
    14053:14053:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):108 -> a
    14188:14189:com.mongodb.TransactionOptions$Builder com.mongodb.TransactionOptions$Builder.readConcern(com.mongodb.ReadConcern):188:189 -> a
    14188:14189:com.mongodb.TransactionOptions com.mongodb.TransactionOptions.merge(com.mongodb.TransactionOptions,com.mongodb.TransactionOptions):116 -> a
    14188:14189:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):108 -> a
    15073:15073:com.mongodb.ReadPreference com.mongodb.TransactionOptions.getReadPreference():73:73 -> a
    15073:15073:com.mongodb.TransactionOptions com.mongodb.TransactionOptions.merge(com.mongodb.TransactionOptions,com.mongodb.TransactionOptions):118 -> a
    15073:15073:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):108 -> a
    16073:16073:com.mongodb.ReadPreference com.mongodb.TransactionOptions.getReadPreference():73:73 -> a
    16073:16073:com.mongodb.TransactionOptions com.mongodb.TransactionOptions.merge(com.mongodb.TransactionOptions,com.mongodb.TransactionOptions):119 -> a
    16073:16073:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):108 -> a
    17073:17073:com.mongodb.ReadPreference com.mongodb.TransactionOptions.getReadPreference():73:73 -> a
    17073:17073:com.mongodb.TransactionOptions com.mongodb.TransactionOptions.merge(com.mongodb.TransactionOptions,com.mongodb.TransactionOptions):119 -> a
    17073:17073:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):108 -> a
    17210:17211:com.mongodb.TransactionOptions$Builder com.mongodb.TransactionOptions$Builder.readPreference(com.mongodb.ReadPreference):210:211 -> a
    17210:17211:com.mongodb.TransactionOptions com.mongodb.TransactionOptions.merge(com.mongodb.TransactionOptions,com.mongodb.TransactionOptions):118 -> a
    17210:17211:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):108 -> a
    17224:17231:com.mongodb.TransactionOptions$Builder com.mongodb.TransactionOptions$Builder.maxCommitTime(java.lang.Long,java.util.concurrent.TimeUnit):224:231 -> a
    17224:17231:com.mongodb.TransactionOptions com.mongodb.TransactionOptions.merge(com.mongodb.TransactionOptions,com.mongodb.TransactionOptions):120 -> a
    17224:17231:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):108 -> a
    18195:18196:com.mongodb.ClientSessionOptions$Builder com.mongodb.ClientSessionOptions$Builder.defaultTransactionOptions(com.mongodb.TransactionOptions):195:196 -> a
    18195:18196:com.mongodb.client.ClientSession createClientSession(com.mongodb.ClientSessionOptions,com.mongodb.ReadConcern,com.mongodb.WriteConcern,com.mongodb.ReadPreference):107 -> a
    121:128:void close() -> a
    19105:19107:void com.mongodb.internal.session.ServerSessionPool.close():105:107 -> a
    19105:19107:void close():125 -> a
    152:155:java.util.List getServerDescriptionListToConsiderForSessionSupport(com.mongodb.connection.ClusterDescription) -> a
    19201:19201:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterDescription.getConnectionMode():201:201 -> a
    19201:19201:java.util.List getServerDescriptionListToConsiderForSessionSupport(com.mongodb.connection.ClusterDescription):152 -> a
    145:145:java.util.List lambda$getConnectedClusterDescription$0(com.mongodb.connection.ClusterDescription) -> b
com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor -> com.a.b.b.m$a:
    com.mongodb.client.internal.MongoClientDelegate this$0 -> a
    159:159:void <init>(com.mongodb.client.internal.MongoClientDelegate) -> <init>
    173:192:java.lang.Object execute(com.mongodb.internal.operation.ReadOperation,com.mongodb.ReadPreference,com.mongodb.ReadConcern,com.mongodb.client.ClientSession) -> a
    1222:1222:com.mongodb.internal.binding.ReadBinding getReadBinding(com.mongodb.ReadPreference,com.mongodb.ReadConcern,com.mongodb.client.ClientSession,boolean):222:222 -> a
    1222:1222:java.lang.Object execute(com.mongodb.internal.operation.ReadOperation,com.mongodb.ReadPreference,com.mongodb.ReadConcern,com.mongodb.client.ClientSession):178 -> a
    197:213:java.lang.Object execute(com.mongodb.internal.operation.WriteOperation,com.mongodb.ReadConcern,com.mongodb.client.ClientSession) -> a
    2217:2217:com.mongodb.internal.binding.WriteBinding getWriteBinding(com.mongodb.ReadConcern,com.mongodb.client.ClientSession,boolean):217:217 -> a
    2217:2217:java.lang.Object execute(com.mongodb.internal.operation.WriteOperation,com.mongodb.ReadConcern,com.mongodb.client.ClientSession):202 -> a
    227:237:com.mongodb.internal.binding.ReadWriteBinding getReadWriteBinding(com.mongodb.ReadPreference,com.mongodb.ReadConcern,com.mongodb.client.ClientSession,boolean) -> a
    3061:3061:com.mongodb.internal.connection.Cluster com.mongodb.client.internal.MongoClientDelegate.access$100(com.mongodb.client.internal.MongoClientDelegate):61:61 -> a
    3061:3061:com.mongodb.internal.binding.ReadWriteBinding getReadWriteBinding(com.mongodb.ReadPreference,com.mongodb.ReadConcern,com.mongodb.client.ClientSession,boolean):227 -> a
    4061:4061:com.mongodb.internal.connection.DescriptionHelper com.mongodb.client.internal.MongoClientDelegate.access$200$7d174106(com.mongodb.client.internal.MongoClientDelegate):61:61 -> a
    4061:4061:com.mongodb.internal.binding.ReadWriteBinding getReadWriteBinding(com.mongodb.ReadPreference,com.mongodb.ReadConcern,com.mongodb.client.ClientSession,boolean):228 -> a
    5061:5061:com.mongodb.client.internal.Crypt com.mongodb.client.internal.MongoClientDelegate.access$300(com.mongodb.client.internal.MongoClientDelegate):61:61 -> a
    5061:5061:com.mongodb.internal.binding.ReadWriteBinding getReadWriteBinding(com.mongodb.ReadPreference,com.mongodb.ReadConcern,com.mongodb.client.ClientSession,boolean):230 -> a
    6061:6061:com.mongodb.client.internal.Crypt com.mongodb.client.internal.MongoClientDelegate.access$300(com.mongodb.client.internal.MongoClientDelegate):61:61 -> a
    6061:6061:com.mongodb.internal.binding.ReadWriteBinding getReadWriteBinding(com.mongodb.ReadPreference,com.mongodb.ReadConcern,com.mongodb.client.ClientSession,boolean):231 -> a
    242:246:com.mongodb.RequestContext getContext() -> a
    7061:7061:com.mongodb.client.SynchronousContextProvider com.mongodb.client.internal.MongoClientDelegate.access$400(com.mongodb.client.internal.MongoClientDelegate):61:61 -> a
    7061:7061:com.mongodb.RequestContext getContext():243 -> a
    8061:8061:com.mongodb.client.SynchronousContextProvider com.mongodb.client.internal.MongoClientDelegate.access$400(com.mongodb.client.internal.MongoClientDelegate):61:61 -> a
    8061:8061:com.mongodb.RequestContext getContext():244 -> a
    250:256:void labelException(com.mongodb.client.ClientSession,com.mongodb.MongoException) -> a
    8145:8145:int com.mongodb.MongoException.getCode():145:145 -> a
    8145:8145:void labelException(com.mongodb.client.ClientSession,com.mongodb.MongoException):252 -> a
    259:262:void clearTransactionContextOnTransientTransactionError(com.mongodb.client.ClientSession,com.mongodb.MongoException) -> b
    265:275:com.mongodb.ReadPreference getReadPreferenceForBinding(com.mongodb.ReadPreference,com.mongodb.client.ClientSession) -> a
    9073:9073:com.mongodb.ReadPreference com.mongodb.TransactionOptions.getReadPreference():73:73 -> a
    9073:9073:com.mongodb.ReadPreference getReadPreferenceForBinding(com.mongodb.ReadPreference,com.mongodb.client.ClientSession):269 -> a
    281:288:com.mongodb.client.ClientSession getClientSession(com.mongodb.client.ClientSession) -> a
    10061:10061:java.lang.Object com.mongodb.client.internal.MongoClientDelegate.access$500(com.mongodb.client.internal.MongoClientDelegate):61:61 -> a
    10061:10061:com.mongodb.client.ClientSession getClientSession(com.mongodb.client.ClientSession):282 -> a
    159:159:void <init>(com.mongodb.client.internal.MongoClientDelegate,byte) -> <init>
com.mongodb.client.internal.MongoClientImpl -> com.a.b.b.n:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> b
    com.mongodb.MongoClientSettings settings -> a
    com.mongodb.client.internal.MongoClientDelegate delegate -> c
    72:73:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation) -> <init>
    1227:1232:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):227:232 -> <init>
    1227:1232:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    1806:1806:com.mongodb.connection.ClusterSettings com.mongodb.MongoClientSettings.getClusterSettings():806:806 -> <init>
    1806:1806:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    1806:1806:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    1860:1860:com.mongodb.connection.ServerSettings com.mongodb.MongoClientSettings.getServerSettings():860:860 -> <init>
    1860:1860:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    1860:1860:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    2849:2849:com.mongodb.connection.ConnectionPoolSettings com.mongodb.MongoClientSettings.getConnectionPoolSettings():849:849 -> <init>
    2849:2849:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):229 -> <init>
    2849:2849:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    3035:3035:com.mongodb.internal.connection.InternalConnectionPoolSettings$Builder com.mongodb.internal.connection.InternalConnectionPoolSettings.builder():35:35 -> <init>
    3035:3035:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):229 -> <init>
    3035:3035:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    3094:3094:com.mongodb.internal.connection.InternalConnectionPoolSettings com.mongodb.internal.connection.InternalConnectionPoolSettings$Builder.build():94:94 -> <init>
    3094:3094:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):229 -> <init>
    3094:3094:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    3623:3623:com.mongodb.MongoCredential com.mongodb.MongoClientSettings.getCredential():623:623 -> <init>
    3623:3623:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):231 -> <init>
    3623:3623:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    3797:3797:com.mongodb.LoggerSettings com.mongodb.MongoClientSettings.getLoggerSettings():797:797 -> <init>
    3797:3797:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):231 -> <init>
    3797:3797:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    4699:4699:java.util.List com.mongodb.MongoClientSettings.getCommandListeners():699:699 -> <init>
    4699:4699:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):231 -> <init>
    4699:4699:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    4713:4713:java.lang.String com.mongodb.MongoClientSettings.getApplicationName():713:713 -> <init>
    4713:4713:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):232 -> <init>
    4713:4713:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    4726:4726:java.util.List com.mongodb.MongoClientSettings.getCompressorList():726:726 -> <init>
    4726:4726:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):232 -> <init>
    4726:4726:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    4755:4755:com.mongodb.internal.connection.DescriptionHelper com.mongodb.MongoClientSettings.getServerApi$14c3e59a():755:755 -> <init>
    4755:4755:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):232 -> <init>
    4755:4755:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    5064:5114:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):64:114 -> <init>
    5064:5114:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    5064:5114:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    5120:5122:boolean com.mongodb.internal.connection.DefaultClusterFactory.noClusterEventListeners(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings):120:122 -> <init>
    5120:5122:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):68 -> <init>
    5120:5122:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    5120:5122:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    5523:5523:java.util.List com.mongodb.connection.ClusterSettings.getClusterListeners():523:523 -> <init>
    5523:5523:boolean com.mongodb.internal.connection.DefaultClusterFactory.noClusterEventListeners(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings):120 -> <init>
    5523:5523:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):68 -> <init>
    5523:5523:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    5523:5523:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    6225:6225:java.util.List com.mongodb.connection.ServerSettings.getServerListeners():225:225 -> <init>
    6225:6225:boolean com.mongodb.internal.connection.DefaultClusterFactory.noClusterEventListeners(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings):121 -> <init>
    6225:6225:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):68 -> <init>
    6225:6225:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    6225:6225:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    6235:6235:java.util.List com.mongodb.connection.ServerSettings.getServerMonitorListeners():235:235 -> <init>
    6235:6235:boolean com.mongodb.internal.connection.DefaultClusterFactory.noClusterEventListeners(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings):122 -> <init>
    6235:6235:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):68 -> <init>
    6235:6235:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    6235:6235:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    7080:7080:com.mongodb.connection.ClusterSettings$Builder com.mongodb.connection.ClusterSettings.builder(com.mongodb.connection.ClusterSettings):80:80 -> <init>
    7080:7080:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):69 -> <init>
    7080:7080:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    7080:7080:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    8061:8061:com.mongodb.connection.ServerSettings$Builder com.mongodb.connection.ServerSettings.builder(com.mongodb.connection.ServerSettings):61:61 -> <init>
    8061:8061:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):72 -> <init>
    8061:8061:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    8061:8061:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    8126:8128:com.mongodb.event.ClusterListener com.mongodb.internal.connection.DefaultClusterFactory.getClusterListener(com.mongodb.connection.ClusterSettings):126:128 -> <init>
    8126:8128:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):78 -> <init>
    8126:8128:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    8126:8128:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    8523:8523:java.util.List com.mongodb.connection.ClusterSettings.getClusterListeners():523:523 -> <init>
    8523:8523:com.mongodb.event.ClusterListener com.mongodb.internal.connection.DefaultClusterFactory.getClusterListener(com.mongodb.connection.ClusterSettings):126 -> <init>
    8523:8523:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):78 -> <init>
    8523:8523:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    8523:8523:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    9523:9523:java.util.List com.mongodb.connection.ClusterSettings.getClusterListeners():523:523 -> <init>
    9523:9523:com.mongodb.event.ClusterListener com.mongodb.internal.connection.DefaultClusterFactory.getClusterListener(com.mongodb.connection.ClusterSettings):128 -> <init>
    9523:9523:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):78 -> <init>
    9523:9523:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    9523:9523:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    10132:10134:com.mongodb.event.ClusterListener com.mongodb.internal.connection.DefaultClusterFactory.getServerListener$5e73f792(com.mongodb.connection.ServerSettings):132:134 -> <init>
    10132:10134:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):79 -> <init>
    10132:10134:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    10132:10134:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    10225:10225:java.util.List com.mongodb.connection.ServerSettings.getServerListeners():225:225 -> <init>
    10225:10225:com.mongodb.event.ClusterListener com.mongodb.internal.connection.DefaultClusterFactory.getServerListener$5e73f792(com.mongodb.connection.ServerSettings):132 -> <init>
    10225:10225:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):79 -> <init>
    10225:10225:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    10225:10225:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    11225:11225:java.util.List com.mongodb.connection.ServerSettings.getServerListeners():225:225 -> <init>
    11225:11225:com.mongodb.event.ClusterListener com.mongodb.internal.connection.DefaultClusterFactory.getServerListener$5e73f792(com.mongodb.connection.ServerSettings):134 -> <init>
    11225:11225:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):79 -> <init>
    11225:11225:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    11225:11225:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    12138:12140:com.mongodb.event.ClusterListener com.mongodb.internal.connection.DefaultClusterFactory.getServerMonitorListener$7053b186(com.mongodb.connection.ServerSettings):138:140 -> <init>
    12138:12140:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):79 -> <init>
    12138:12140:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    12138:12140:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    12235:12235:java.util.List com.mongodb.connection.ServerSettings.getServerMonitorListeners():235:235 -> <init>
    12235:12235:com.mongodb.event.ClusterListener com.mongodb.internal.connection.DefaultClusterFactory.getServerMonitorListener$7053b186(com.mongodb.connection.ServerSettings):138 -> <init>
    12235:12235:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):79 -> <init>
    12235:12235:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    12235:12235:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    13235:13235:java.util.List com.mongodb.connection.ServerSettings.getServerMonitorListeners():235:235 -> <init>
    13235:13235:com.mongodb.event.ClusterListener com.mongodb.internal.connection.DefaultClusterFactory.getServerMonitorListener$7053b186(com.mongodb.connection.ServerSettings):140 -> <init>
    13235:13235:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):79 -> <init>
    13235:13235:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    13235:13235:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    14080:14080:com.mongodb.connection.ClusterSettings$Builder com.mongodb.connection.ClusterSettings.builder(com.mongodb.connection.ClusterSettings):80:80 -> <init>
    14080:14080:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):81 -> <init>
    14080:14080:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    14080:14080:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    15061:15061:com.mongodb.connection.ServerSettings$Builder com.mongodb.connection.ServerSettings.builder(com.mongodb.connection.ServerSettings):61:61 -> <init>
    15061:15061:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):84 -> <init>
    15061:15061:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    15061:15061:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    15430:15430:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterSettings.getMode():430:430 -> <init>
    15430:15430:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):92 -> <init>
    15430:15430:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    15430:15430:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    16430:16430:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterSettings.getMode():430:430 -> <init>
    16430:16430:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):105 -> <init>
    16430:16430:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    16430:16430:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    17430:17430:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterSettings.getMode():430:430 -> <init>
    17430:17430:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):107 -> <init>
    17430:17430:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    17430:17430:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    18381:18381:java.lang.String com.mongodb.connection.ClusterSettings.getSrvHost():381:381 -> <init>
    18381:18381:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):108 -> <init>
    18381:18381:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    18381:18381:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    18430:18430:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterSettings.getMode():430:430 -> <init>
    18430:18430:com.mongodb.internal.connection.Cluster com.mongodb.internal.connection.DefaultClusterFactory.createCluster$20e72c00(com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper):114 -> <init>
    18430:18430:com.mongodb.internal.connection.Cluster createCluster(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):228 -> <init>
    18430:18430:void <init>(com.mongodb.MongoClientSettings,com.mongodb.MongoDriverInformation):72 -> <init>
    77:95:void <init>(com.mongodb.internal.connection.Cluster,com.mongodb.MongoDriverInformation,com.mongodb.MongoClientSettings,net.kyori.adventure.sound.Sound$Source$Provider) -> <init>
    18787:18787:co.aikar.commands.BukkitCommandContexts_1_12 com.mongodb.MongoClientSettings.getAutoEncryptionSettings$1f7ce490():787:787 -> <init>
    18787:18787:void <init>(com.mongodb.internal.connection.Cluster,com.mongodb.MongoDriverInformation,com.mongodb.MongoClientSettings,net.kyori.adventure.sound.Sound$Source$Provider):80 -> <init>
    18871:18871:com.mongodb.ContextProvider com.mongodb.MongoClientSettings.getContextProvider():871:871 -> <init>
    18871:18871:void <init>(com.mongodb.internal.connection.Cluster,com.mongodb.MongoDriverInformation,com.mongodb.MongoClientSettings,net.kyori.adventure.sound.Sound$Source$Provider):81 -> <init>
    19871:19871:com.mongodb.ContextProvider com.mongodb.MongoClientSettings.getContextProvider():871:871 -> <init>
    19871:19871:void <init>(com.mongodb.internal.connection.Cluster,com.mongodb.MongoDriverInformation,com.mongodb.MongoClientSettings,net.kyori.adventure.sound.Sound$Source$Provider):81 -> <init>
    20678:20678:org.bson.codecs.configuration.CodecRegistry com.mongodb.MongoClientSettings.getCodecRegistry():678:678 -> <init>
    20678:20678:void <init>(com.mongodb.internal.connection.Cluster,com.mongodb.MongoDriverInformation,com.mongodb.MongoClientSettings,net.kyori.adventure.sound.Sound$Source$Provider):86 -> <init>
    20744:20744:org.bson.UuidRepresentation com.mongodb.MongoClientSettings.getUuidRepresentation():744:744 -> <init>
    20744:20744:void <init>(com.mongodb.internal.connection.Cluster,com.mongodb.MongoDriverInformation,com.mongodb.MongoClientSettings,net.kyori.adventure.sound.Sound$Source$Provider):86 -> <init>
    20755:20755:com.mongodb.internal.connection.DescriptionHelper com.mongodb.MongoClientSettings.getServerApi$14c3e59a():755:755 -> <init>
    20755:20755:void <init>(com.mongodb.internal.connection.Cluster,com.mongodb.MongoDriverInformation,com.mongodb.MongoClientSettings,net.kyori.adventure.sound.Sound$Source$Provider):87 -> <init>
    20871:20871:com.mongodb.ContextProvider com.mongodb.MongoClientSettings.getContextProvider():871:871 -> <init>
    20871:20871:void <init>(com.mongodb.internal.connection.Cluster,com.mongodb.MongoDriverInformation,com.mongodb.MongoClientSettings,net.kyori.adventure.sound.Sound$Source$Provider):88 -> <init>
    21713:21713:java.lang.String com.mongodb.MongoClientSettings.getApplicationName():713:713 -> <init>
    21713:21713:void <init>(com.mongodb.internal.connection.Cluster,com.mongodb.MongoDriverInformation,com.mongodb.MongoClientSettings,net.kyori.adventure.sound.Sound$Source$Provider):89 -> <init>
    99:101:com.mongodb.client.MongoDatabase getDatabase(java.lang.String) -> a
    22135:22135:org.bson.codecs.configuration.CodecRegistry com.mongodb.client.internal.MongoClientDelegate.getCodecRegistry():135:135 -> a
    22135:22135:com.mongodb.client.MongoDatabase getDatabase(java.lang.String):99 -> a
    22613:22613:com.mongodb.ReadPreference com.mongodb.MongoClientSettings.getReadPreference():613:613 -> a
    22613:22613:com.mongodb.client.MongoDatabase getDatabase(java.lang.String):99 -> a
    22635:22635:com.mongodb.WriteConcern com.mongodb.MongoClientSettings.getWriteConcern():635:635 -> a
    22635:22635:com.mongodb.client.MongoDatabase getDatabase(java.lang.String):99 -> a
    22647:22647:boolean com.mongodb.MongoClientSettings.getRetryWrites():647:647 -> a
    22647:22647:com.mongodb.client.MongoDatabase getDatabase(java.lang.String):100 -> a
    22658:22658:boolean com.mongodb.MongoClientSettings.getRetryReads():658:658 -> a
    22658:22658:com.mongodb.client.MongoDatabase getDatabase(java.lang.String):100 -> a
    22669:22669:com.mongodb.ReadConcern com.mongodb.MongoClientSettings.getReadConcern():669:669 -> a
    22669:22669:com.mongodb.client.MongoDatabase getDatabase(java.lang.String):100 -> a
    22744:22744:org.bson.UuidRepresentation com.mongodb.MongoClientSettings.getUuidRepresentation():744:744 -> a
    22744:22744:com.mongodb.client.MongoDatabase getDatabase(java.lang.String):101 -> a
    22787:22787:co.aikar.commands.BukkitCommandContexts_1_12 com.mongodb.MongoClientSettings.getAutoEncryptionSettings$1f7ce490():787:787 -> a
    22787:22787:com.mongodb.client.MongoDatabase getDatabase(java.lang.String):101 -> a
    23090:23090:net.kyori.adventure.sound.Sound$Source$Provider com.mongodb.client.internal.MongoClientDelegate.getOperationExecutor$1c1ccf3b():90:90 -> a
    23090:23090:com.mongodb.client.MongoDatabase getDatabase(java.lang.String):101 -> a
    159:160:void close() -> close
    236:241:com.mongodb.connection.StreamFactory getStreamFactory(com.mongodb.MongoClientSettings,boolean) -> a
    23688:23688:com.mongodb.internal.connection.ScramShaAuthenticator$AuthenticationHashGenerator com.mongodb.MongoClientSettings.getStreamFactoryFactory$28626ae0():688:688 -> a
    23688:23688:com.mongodb.connection.StreamFactory getStreamFactory(com.mongodb.MongoClientSettings,boolean):236 -> a
    23837:23837:com.mongodb.connection.SocketSettings com.mongodb.MongoClientSettings.getHeartbeatSocketSettings():837:837 -> a
    23837:23837:com.mongodb.connection.StreamFactory getStreamFactory(com.mongodb.MongoClientSettings,boolean):237 -> a
    24826:24826:com.mongodb.connection.SocketSettings com.mongodb.MongoClientSettings.getSocketSettings():826:826 -> a
    24826:24826:com.mongodb.connection.StreamFactory getStreamFactory(com.mongodb.MongoClientSettings,boolean):237 -> a
    25815:25815:com.mongodb.connection.SslSettings com.mongodb.MongoClientSettings.getSslSettings():815:815 -> a
    25815:25815:com.mongodb.connection.StreamFactory getStreamFactory(com.mongodb.MongoClientSettings,boolean):239 -> a
    26815:26815:com.mongodb.connection.SslSettings com.mongodb.MongoClientSettings.getSslSettings():815:815 -> a
    26815:26815:com.mongodb.connection.StreamFactory getStreamFactory(com.mongodb.MongoClientSettings,boolean):241 -> a
    65:65:void <clinit>() -> <clinit>
com.mongodb.client.internal.MongoCollectionImpl -> com.a.b.b.o:
    com.mongodb.MongoNamespace namespace -> a
    java.lang.Class documentClass -> b
    com.mongodb.ReadPreference readPreference -> c
    org.bson.codecs.configuration.CodecRegistry codecRegistry -> d
    com.mongodb.WriteConcern writeConcern -> e
    boolean retryWrites -> f
    boolean retryReads -> g
    com.mongodb.ReadConcern readConcern -> h
    com.mongodb.internal.operation.SyncOperations operations -> i
    org.bson.UuidRepresentation uuidRepresentation -> j
    co.aikar.commands.BukkitCommandContexts_1_12 autoEncryptionSettings$7a463d11 -> k
    net.kyori.adventure.sound.Sound$Source$Provider executor$4b10cc1a -> l
    106:120:void <init>(com.mongodb.MongoNamespace,java.lang.Class,org.bson.codecs.configuration.CodecRegistry,com.mongodb.ReadPreference,com.mongodb.WriteConcern,boolean,boolean,com.mongodb.ReadConcern,org.bson.UuidRepresentation,co.aikar.commands.BukkitCommandContexts_1_12,net.kyori.adventure.sound.Sound$Source$Provider) -> <init>
    178:178:com.mongodb.client.MongoCollection withReadConcern(com.mongodb.ReadConcern) -> a
    268:268:com.mongodb.client.FindIterable find(org.bson.conversions.Bson) -> a
    1273:1273:com.mongodb.client.FindIterable find(org.bson.conversions.Bson,java.lang.Class):273:273 -> a
    1273:1273:com.mongodb.client.FindIterable find(org.bson.conversions.Bson):268 -> a
    1303:1303:com.mongodb.client.FindIterable createFindIterable(com.mongodb.client.ClientSession,org.bson.conversions.Bson,java.lang.Class):303:303 -> a
    1303:1303:com.mongodb.client.FindIterable find(org.bson.conversions.Bson,java.lang.Class):273 -> a
    1303:1303:com.mongodb.client.FindIterable find(org.bson.conversions.Bson):268 -> a
    452:452:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object) -> a
    1457:1458:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):457:458 -> a
    1457:1458:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object):452 -> a
    1475:1475:com.mongodb.client.result.InsertOneResult executeInsertOne(com.mongodb.client.ClientSession,java.lang.Object,com.mongodb.client.model.InsertOneOptions):475:475 -> a
    1475:1475:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):458 -> a
    1475:1475:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object):452 -> a
    2176:2176:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):176:176 -> a
    2176:2176:com.mongodb.client.result.InsertOneResult executeInsertOne(com.mongodb.client.ClientSession,java.lang.Object,com.mongodb.client.model.InsertOneOptions):475 -> a
    2176:2176:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):458 -> a
    2176:2176:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object):452 -> a
    2390:2391:com.mongodb.internal.operation.MixedBulkWriteOperation com.mongodb.internal.operation.Operations.insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):390:391 -> a
    2390:2391:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):176 -> a
    2390:2391:com.mongodb.client.result.InsertOneResult executeInsertOne(com.mongodb.client.ClientSession,java.lang.Object,com.mongodb.client.model.InsertOneOptions):475 -> a
    2390:2391:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):458 -> a
    2390:2391:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object):452 -> a
    3042:3042:java.lang.Boolean com.mongodb.client.model.InsertOneOptions.getBypassDocumentValidation():42:42 -> a
    3042:3042:com.mongodb.internal.operation.MixedBulkWriteOperation com.mongodb.internal.operation.Operations.insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):391 -> a
    3042:3042:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):176 -> a
    3042:3042:com.mongodb.client.result.InsertOneResult executeInsertOne(com.mongodb.client.ClientSession,java.lang.Object,com.mongodb.client.model.InsertOneOptions):475 -> a
    3042:3042:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):458 -> a
    3042:3042:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object):452 -> a
    3065:3065:org.bson.BsonValue com.mongodb.client.model.InsertOneOptions.getComment():65:65 -> a
    3065:3065:com.mongodb.internal.operation.MixedBulkWriteOperation com.mongodb.internal.operation.Operations.insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):391 -> a
    3065:3065:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):176 -> a
    3065:3065:com.mongodb.client.result.InsertOneResult executeInsertOne(com.mongodb.client.ClientSession,java.lang.Object,com.mongodb.client.model.InsertOneOptions):475 -> a
    3065:3065:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):458 -> a
    3065:3065:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object):452 -> a
    4059:4063:com.mongodb.client.result.InsertOneResult toInsertOneResult(com.mongodb.bulk.BulkWriteResult):1059:1063 -> a
    4059:4063:com.mongodb.client.result.InsertOneResult executeInsertOne(com.mongodb.client.ClientSession,java.lang.Object,com.mongodb.client.model.InsertOneOptions):475 -> a
    4059:4063:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):458 -> a
    4059:4063:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object):452 -> a
    5057:5057:com.mongodb.client.result.InsertOneResult com.mongodb.client.result.InsertOneResult.acknowledged(org.bson.BsonValue):57:57 -> a
    5057:5057:com.mongodb.client.result.InsertOneResult toInsertOneResult(com.mongodb.bulk.BulkWriteResult):1061 -> a
    5057:5057:com.mongodb.client.result.InsertOneResult executeInsertOne(com.mongodb.client.ClientSession,java.lang.Object,com.mongodb.client.model.InsertOneOptions):475 -> a
    5057:5057:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):458 -> a
    5057:5057:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object):452 -> a
    5066:5066:com.mongodb.client.result.InsertOneResult com.mongodb.client.result.InsertOneResult.unacknowledged():66:66 -> a
    5066:5066:com.mongodb.client.result.InsertOneResult toInsertOneResult(com.mongodb.bulk.BulkWriteResult):1063 -> a
    5066:5066:com.mongodb.client.result.InsertOneResult executeInsertOne(com.mongodb.client.ClientSession,java.lang.Object,com.mongodb.client.model.InsertOneOptions):475 -> a
    5066:5066:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object,com.mongodb.client.model.InsertOneOptions):458 -> a
    5066:5066:com.mongodb.client.result.InsertOneResult insertOne(java.lang.Object):452 -> a
    508:508:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson) -> b
    5513:5513:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions):513:513 -> b
    5513:5513:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson):508 -> b
    5997:6002:com.mongodb.client.result.DeleteResult executeDelete(com.mongodb.client.ClientSession,org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions,boolean):997:1002 -> b
    5997:6002:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions):513 -> b
    5997:6002:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson):508 -> b
    6185:6185:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.deleteOne(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions):185:185 -> b
    6185:6185:com.mongodb.client.result.DeleteResult executeDelete(com.mongodb.client.ClientSession,org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions,boolean):998 -> b
    6185:6185:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions):513 -> b
    6185:6185:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson):508 -> b
    6402:6403:com.mongodb.internal.operation.MixedBulkWriteOperation com.mongodb.internal.operation.Operations.deleteOne(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions):402:403 -> b
    6402:6403:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.deleteOne(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions):185 -> b
    6402:6403:com.mongodb.client.result.DeleteResult executeDelete(com.mongodb.client.ClientSession,org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions,boolean):998 -> b
    6402:6403:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions):513 -> b
    6402:6403:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson):508 -> b
    7121:7121:org.bson.BsonValue com.mongodb.client.model.DeleteOptions.getComment():121:121 -> b
    7121:7121:com.mongodb.internal.operation.MixedBulkWriteOperation com.mongodb.internal.operation.Operations.deleteOne(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions):403 -> b
    7121:7121:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.deleteOne(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions):185 -> b
    7121:7121:com.mongodb.client.result.DeleteResult executeDelete(com.mongodb.client.ClientSession,org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions,boolean):998 -> b
    7121:7121:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions):513 -> b
    7121:7121:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson):508 -> b
    7165:7165:org.bson.conversions.Bson com.mongodb.client.model.DeleteOptions.getLet():165:165 -> b
    7165:7165:com.mongodb.internal.operation.MixedBulkWriteOperation com.mongodb.internal.operation.Operations.deleteOne(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions):403 -> b
    7165:7165:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.deleteOne(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions):185 -> b
    7165:7165:com.mongodb.client.result.DeleteResult executeDelete(com.mongodb.client.ClientSession,org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions,boolean):998 -> b
    7165:7165:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions):513 -> b
    7165:7165:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson):508 -> b
    8050:8050:com.mongodb.client.result.DeleteResult com.mongodb.client.result.DeleteResult.acknowledged(long):50:50 -> b
    8050:8050:com.mongodb.client.result.DeleteResult executeDelete(com.mongodb.client.ClientSession,org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions,boolean):1000 -> b
    8050:8050:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions):513 -> b
    8050:8050:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson):508 -> b
    8059:8059:com.mongodb.client.result.DeleteResult com.mongodb.client.result.DeleteResult.unacknowledged():59:59 -> b
    8059:8059:com.mongodb.client.result.DeleteResult executeDelete(com.mongodb.client.ClientSession,org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions,boolean):1002 -> b
    8059:8059:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions):513 -> b
    8059:8059:com.mongodb.client.result.DeleteResult deleteOne(org.bson.conversions.Bson):508 -> b
    1024:1037:com.mongodb.bulk.BulkWriteResult executeSingleWriteRequest(com.mongodb.client.ClientSession,com.mongodb.internal.operation.WriteOperation,com.mongodb.internal.bulk.WriteRequest$Type) -> a
    8105:8105:java.util.List com.mongodb.MongoBulkWriteException.getWriteErrors():105:105 -> a
    8105:8105:com.mongodb.bulk.BulkWriteResult executeSingleWriteRequest(com.mongodb.client.ClientSession,com.mongodb.internal.operation.WriteOperation,com.mongodb.internal.bulk.WriteRequest$Type):1027 -> a
    8116:8116:net.kyori.adventure.text.ComponentCompaction com.mongodb.MongoBulkWriteException.getWriteConcernError$70b5a1b():116:116 -> a
    8116:8116:com.mongodb.bulk.BulkWriteResult executeSingleWriteRequest(com.mongodb.client.ClientSession,com.mongodb.internal.operation.WriteOperation,com.mongodb.internal.bulk.WriteRequest$Type):1028 -> a
    9096:9096:com.mongodb.bulk.BulkWriteResult com.mongodb.MongoBulkWriteException.getWriteResult():96:96 -> a
    9096:9096:com.mongodb.bulk.BulkWriteResult executeSingleWriteRequest(com.mongodb.client.ClientSession,com.mongodb.internal.operation.WriteOperation,com.mongodb.internal.bulk.WriteRequest$Type):1029 -> a
    10042:10054:com.mongodb.WriteConcernResult translateBulkWriteResult(com.mongodb.internal.bulk.WriteRequest$Type,com.mongodb.bulk.BulkWriteResult):1042:1054 -> a
    10042:10054:com.mongodb.bulk.BulkWriteResult executeSingleWriteRequest(com.mongodb.client.ClientSession,com.mongodb.internal.operation.WriteOperation,com.mongodb.internal.bulk.WriteRequest$Type):1029 -> a
    10125:10125:com.mongodb.ServerAddress com.mongodb.MongoBulkWriteException.getServerAddress():125:125 -> a
    10125:10125:com.mongodb.bulk.BulkWriteResult executeSingleWriteRequest(com.mongodb.client.ClientSession,com.mongodb.internal.operation.WriteOperation,com.mongodb.internal.bulk.WriteRequest$Type):1030 -> a
    11105:11105:java.util.List com.mongodb.MongoBulkWriteException.getWriteErrors():105:105 -> a
    11105:11105:com.mongodb.bulk.BulkWriteResult executeSingleWriteRequest(com.mongodb.client.ClientSession,com.mongodb.internal.operation.WriteOperation,com.mongodb.internal.bulk.WriteRequest$Type):1032 -> a
    11125:11125:com.mongodb.ServerAddress com.mongodb.MongoBulkWriteException.getServerAddress():125:125 -> a
    11125:11125:com.mongodb.bulk.BulkWriteResult executeSingleWriteRequest(com.mongodb.client.ClientSession,com.mongodb.internal.operation.WriteOperation,com.mongodb.internal.bulk.WriteRequest$Type):1032 -> a
    11179:11179:java.util.Set com.mongodb.MongoException.getErrorLabels():179:179 -> a
    11179:11179:com.mongodb.bulk.BulkWriteResult executeSingleWriteRequest(com.mongodb.client.ClientSession,com.mongodb.internal.operation.WriteOperation,com.mongodb.internal.bulk.WriteRequest$Type):1034 -> a
com.mongodb.client.internal.MongoCollectionImpl$1 -> com.a.b.b.o$1:
    int[] $SwitchMap$com$mongodb$internal$bulk$WriteRequest$Type -> a
    1042:1042:void <clinit>() -> <clinit>
com.mongodb.client.internal.MongoDatabaseImpl -> com.a.b.b.p:
    java.lang.String name -> a
    com.mongodb.ReadPreference readPreference -> b
    org.bson.codecs.configuration.CodecRegistry codecRegistry -> c
    com.mongodb.WriteConcern writeConcern -> d
    boolean retryWrites -> e
    boolean retryReads -> f
    com.mongodb.ReadConcern readConcern -> g
    co.aikar.commands.BukkitCommandContexts_1_12 autoEncryptionSettings$7a463d11 -> h
    net.kyori.adventure.sound.Sound$Source$Provider executor$4b10cc1a -> i
    org.bson.UuidRepresentation uuidRepresentation -> j
    com.mongodb.internal.operation.SyncOperations operations -> k
    72:86:void <init>(java.lang.String,org.bson.codecs.configuration.CodecRegistry,com.mongodb.ReadPreference,com.mongodb.WriteConcern,boolean,boolean,com.mongodb.ReadConcern,org.bson.UuidRepresentation,co.aikar.commands.BukkitCommandContexts_1_12,net.kyori.adventure.sound.Sound$Source$Provider) -> <init>
    121:121:com.mongodb.client.MongoDatabase withReadPreference(com.mongodb.ReadPreference) -> a
    133:133:com.mongodb.client.MongoDatabase withReadConcern(com.mongodb.ReadConcern) -> a
    139:139:com.mongodb.client.MongoCollection getCollection(java.lang.String) -> a
    144:144:com.mongodb.client.MongoCollection getCollection(java.lang.String,java.lang.Class) -> a
    160:160:java.lang.Object runCommand(org.bson.conversions.Bson,java.lang.Class) -> a
    1165:1165:java.lang.Object runCommand(org.bson.conversions.Bson,com.mongodb.ReadPreference,java.lang.Class):165:165 -> a
    1165:1165:java.lang.Object runCommand(org.bson.conversions.Bson,java.lang.Class):160 -> a
    1192:1196:java.lang.Object executeCommand(com.mongodb.client.ClientSession,org.bson.conversions.Bson,com.mongodb.ReadPreference,java.lang.Class):192:196 -> a
    1192:1196:java.lang.Object runCommand(org.bson.conversions.Bson,com.mongodb.ReadPreference,java.lang.Class):165 -> a
    1192:1196:java.lang.Object runCommand(org.bson.conversions.Bson,java.lang.Class):160 -> a
    1221:1221:com.mongodb.internal.operation.ReadOperation com.mongodb.internal.operation.SyncOperations.commandRead(org.bson.conversions.Bson,java.lang.Class):221:221 -> a
    1221:1221:java.lang.Object executeCommand(com.mongodb.client.ClientSession,org.bson.conversions.Bson,com.mongodb.ReadPreference,java.lang.Class):196 -> a
    1221:1221:java.lang.Object runCommand(org.bson.conversions.Bson,com.mongodb.ReadPreference,java.lang.Class):165 -> a
    1221:1221:java.lang.Object runCommand(org.bson.conversions.Bson,java.lang.Class):160 -> a
    1524:1527:com.mongodb.internal.operation.CommandReadOperation com.mongodb.internal.operation.Operations.commandRead(org.bson.conversions.Bson,java.lang.Class):524:527 -> a
    1524:1527:com.mongodb.internal.operation.ReadOperation com.mongodb.internal.operation.SyncOperations.commandRead(org.bson.conversions.Bson,java.lang.Class):221 -> a
    1524:1527:java.lang.Object executeCommand(com.mongodb.client.ClientSession,org.bson.conversions.Bson,com.mongodb.ReadPreference,java.lang.Class):196 -> a
    1524:1527:java.lang.Object runCommand(org.bson.conversions.Bson,com.mongodb.ReadPreference,java.lang.Class):165 -> a
    1524:1527:java.lang.Object runCommand(org.bson.conversions.Bson,java.lang.Class):160 -> a
    2125:2125:java.lang.String com.mongodb.MongoNamespace.getDatabaseName():125:125 -> a
    2125:2125:com.mongodb.internal.operation.CommandReadOperation com.mongodb.internal.operation.Operations.commandRead(org.bson.conversions.Bson,java.lang.Class):526 -> a
    2125:2125:com.mongodb.internal.operation.ReadOperation com.mongodb.internal.operation.SyncOperations.commandRead(org.bson.conversions.Bson,java.lang.Class):221 -> a
    2125:2125:java.lang.Object executeCommand(com.mongodb.client.ClientSession,org.bson.conversions.Bson,com.mongodb.ReadPreference,java.lang.Class):196 -> a
    2125:2125:java.lang.Object runCommand(org.bson.conversions.Bson,com.mongodb.ReadPreference,java.lang.Class):165 -> a
    2125:2125:java.lang.Object runCommand(org.bson.conversions.Bson,java.lang.Class):160 -> a
    216:216:com.mongodb.client.MongoIterable listCollectionNames() -> a
    2226:2227:com.mongodb.client.MongoIterable createListCollectionNamesIterable(com.mongodb.client.ClientSession):226:227 -> a
    2226:2227:com.mongodb.client.MongoIterable listCollectionNames():216 -> a
    237:237:com.mongodb.client.ListCollectionsIterable listCollections(java.lang.Class) -> a
    254:255:com.mongodb.client.ListCollectionsIterable createListCollectionsIterable(com.mongodb.client.ClientSession,java.lang.Class,boolean) -> a
    260:261:void createCollection(java.lang.String) -> b
    2265:2266:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265:266 -> b
    2265:2266:void createCollection(java.lang.String):260 -> b
    2282:2284:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282:284 -> b
    2282:2284:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    2282:2284:void createCollection(java.lang.String):260 -> b
    3231:3231:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231:231 -> b
    3231:3231:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    3231:3231:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    3231:3231:void createCollection(java.lang.String):260 -> b
    3538:3575:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):538:575 -> b
    3538:3575:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    3538:3575:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    3538:3575:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    3538:3575:void createCollection(java.lang.String):260 -> b
    4125:4125:java.lang.String com.mongodb.MongoNamespace.getDatabaseName():125:125 -> b
    4125:4125:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):538 -> b
    4125:4125:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    4125:4125:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    4125:4125:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    4125:4125:void createCollection(java.lang.String):260 -> b
    4215:4215:com.mongodb.client.model.mql.MqlExpression$AstPlaceholder com.mongodb.client.model.CreateCollectionOptions.getCollation$35680fe6():215:215 -> b
    4215:4215:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):540 -> b
    4215:4215:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    4215:4215:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    4215:4215:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    4215:4215:void createCollection(java.lang.String):260 -> b
    5193:5194:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.collation$25c79d6d(com.mongodb.client.model.mql.MqlExpression$AstPlaceholder):193:194 -> b
    5193:5194:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):540 -> b
    5193:5194:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    5193:5194:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    5193:5194:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    5193:5194:void createCollection(java.lang.String):260 -> b
    6100:6100:boolean com.mongodb.client.model.CreateCollectionOptions.isCapped():100:100 -> b
    6100:6100:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):541 -> b
    6100:6100:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    6100:6100:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    6100:6100:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    6100:6100:void createCollection(java.lang.String):260 -> b
    6130:6131:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.capped(boolean):130:131 -> b
    6130:6131:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):541 -> b
    6130:6131:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    6130:6131:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    6130:6131:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    6130:6131:void createCollection(java.lang.String):260 -> b
    7121:7121:long com.mongodb.client.model.CreateCollectionOptions.getSizeInBytes():121:121 -> b
    7121:7121:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):542 -> b
    7121:7121:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    7121:7121:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    7121:7121:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    7121:7121:void createCollection(java.lang.String):260 -> b
    7139:7140:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.sizeInBytes(long):139:140 -> b
    7139:7140:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):542 -> b
    7139:7140:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    7139:7140:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    7139:7140:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    7139:7140:void createCollection(java.lang.String):260 -> b
    8080:8080:long com.mongodb.client.model.CreateCollectionOptions.getMaxDocuments():80:80 -> b
    8080:8080:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):543 -> b
    8080:8080:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    8080:8080:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    8080:8080:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    8080:8080:void createCollection(java.lang.String):260 -> b
    8121:8122:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.maxDocuments(long):121:122 -> b
    8121:8122:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):543 -> b
    8121:8122:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    8121:8122:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    8121:8122:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    8121:8122:void createCollection(java.lang.String):260 -> b
    8143:8143:org.bson.conversions.Bson com.mongodb.client.model.CreateCollectionOptions.getStorageEngineOptions():143:143 -> b
    8143:8143:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):544 -> b
    8143:8143:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    8143:8143:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    8143:8143:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    8143:8143:void createCollection(java.lang.String):260 -> b
    8148:8149:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.storageEngineOptions(org.bson.BsonDocument):148:149 -> b
    8148:8149:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):544 -> b
    8148:8149:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    8148:8149:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    8148:8149:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    8148:8149:void createCollection(java.lang.String):260 -> b
    8241:8242:long com.mongodb.client.model.CreateCollectionOptions.getExpireAfter(java.util.concurrent.TimeUnit):241:242 -> b
    8241:8242:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):545 -> b
    8241:8242:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    8241:8242:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    8241:8242:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    8241:8242:void createCollection(java.lang.String):260 -> b
    9198:9199:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.expireAfter(long):198:199 -> b
    9198:9199:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):545 -> b
    9198:9199:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    9198:9199:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    9198:9199:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    9198:9199:void createCollection(java.lang.String):260 -> b
    9281:9281:com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest com.mongodb.client.model.CreateCollectionOptions.getTimeSeriesOptions$6747c735():281:281 -> b
    9281:9281:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):546 -> b
    9281:9281:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    9281:9281:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    9281:9281:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    9281:9281:void createCollection(java.lang.String):260 -> b
    10203:10204:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.timeSeriesOptions$5361c042(com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest):203:204 -> b
    10203:10204:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):546 -> b
    10203:10204:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    10203:10204:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    10203:10204:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    10203:10204:void createCollection(java.lang.String):260 -> b
    10328:10328:org.bson.internal.UuidHelper com.mongodb.client.model.CreateCollectionOptions.getChangeStreamPreAndPostImagesOptions$70054b73():328:328 -> b
    10328:10328:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):547 -> b
    10328:10328:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    10328:10328:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    10328:10328:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    10328:10328:void createCollection(java.lang.String):260 -> b
    11209:11210:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.changeStreamPreAndPostImagesOptions$e6d50da(org.bson.internal.UuidHelper):209:210 -> b
    11209:11210:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):547 -> b
    11209:11210:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    11209:11210:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    11209:11210:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    11209:11210:void createCollection(java.lang.String):260 -> b
    11305:11305:co.aikar.locales.LanguageTable com.mongodb.client.model.CreateCollectionOptions.getClusteredIndexOptions$38241f36():305:305 -> b
    11305:11305:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):549 -> b
    11305:11305:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    11305:11305:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    11305:11305:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    11305:11305:void createCollection(java.lang.String):260 -> b
    12214:12215:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.clusteredIndexKey(org.bson.BsonDocument):214:215 -> b
    12214:12215:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):551 -> b
    12214:12215:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    12214:12215:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    12214:12215:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    12214:12215:void createCollection(java.lang.String):260 -> b
    12219:12220:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.clusteredIndexUnique(boolean):219:220 -> b
    12219:12220:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):552 -> b
    12219:12220:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    12219:12220:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    12219:12220:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    12219:12220:void createCollection(java.lang.String):260 -> b
    12224:12225:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.clusteredIndexName(java.lang.String):224:225 -> b
    12224:12225:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):553 -> b
    12224:12225:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    12224:12225:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    12224:12225:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    12224:12225:void createCollection(java.lang.String):260 -> b
    12354:12354:org.bson.conversions.Bson com.mongodb.client.model.CreateCollectionOptions.getEncryptedFields():354:354 -> b
    12354:12354:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):556 -> b
    12354:12354:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    12354:12354:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    12354:12354:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    12354:12354:void createCollection(java.lang.String):260 -> b
    13228:13229:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.encryptedFields(org.bson.BsonDocument):228:229 -> b
    13228:13229:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):557 -> b
    13228:13229:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    13228:13229:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    13228:13229:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    13228:13229:void createCollection(java.lang.String):260 -> b
    14125:14125:java.lang.String com.mongodb.MongoNamespace.getDatabaseName():125:125 -> b
    14125:14125:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):561 -> b
    14125:14125:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    14125:14125:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    14125:14125:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    14125:14125:void createCollection(java.lang.String):260 -> b
    14228:14229:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.encryptedFields(org.bson.BsonDocument):228:229 -> b
    14228:14229:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):561 -> b
    14228:14229:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    14228:14229:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    14228:14229:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    14228:14229:void createCollection(java.lang.String):260 -> b
    15166:15166:com.mongodb.client.model.IndexOptionDefaults com.mongodb.client.model.CreateCollectionOptions.getIndexOptionDefaults():166:166 -> b
    15166:15166:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):565 -> b
    15166:15166:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    15166:15166:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    15166:15166:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    15166:15166:void createCollection(java.lang.String):260 -> b
    16040:16040:org.bson.conversions.Bson com.mongodb.client.model.IndexOptionDefaults.getStorageEngine():40:40 -> b
    16040:16040:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):566 -> b
    16040:16040:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    16040:16040:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    16040:16040:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    16040:16040:void createCollection(java.lang.String):260 -> b
    16157:16158:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.indexOptionDefaults(org.bson.BsonDocument):157:158 -> b
    16157:16158:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):568 -> b
    16157:16158:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    16157:16158:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    16157:16158:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    16157:16158:void createCollection(java.lang.String):260 -> b
    16190:16190:com.mongodb.client.model.ValidationOptions com.mongodb.client.model.CreateCollectionOptions.getValidationOptions():190:190 -> b
    16190:16190:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):570 -> b
    16190:16190:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    16190:16190:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    16190:16190:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    16190:16190:void createCollection(java.lang.String):260 -> b
    17041:17041:org.bson.conversions.Bson com.mongodb.client.model.ValidationOptions.getValidator():41:41 -> b
    17041:17041:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):571 -> b
    17041:17041:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    17041:17041:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    17041:17041:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    17041:17041:void createCollection(java.lang.String):260 -> b
    17166:17167:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.validator(org.bson.BsonDocument):166:167 -> b
    17166:17167:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):572 -> b
    17166:17167:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    17166:17167:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    17166:17167:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    17166:17167:void createCollection(java.lang.String):260 -> b
    18063:18063:com.mongodb.client.model.ValidationLevel com.mongodb.client.model.ValidationOptions.getValidationLevel():63:63 -> b
    18063:18063:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):573 -> b
    18063:18063:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    18063:18063:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    18063:18063:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    18063:18063:void createCollection(java.lang.String):260 -> b
    18175:18176:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.validationLevel(com.mongodb.client.model.ValidationLevel):175:176 -> b
    18175:18176:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):573 -> b
    18175:18176:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    18175:18176:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    18175:18176:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    18175:18176:void createCollection(java.lang.String):260 -> b
    19085:19085:com.mongodb.client.model.ValidationAction com.mongodb.client.model.ValidationOptions.getValidationAction():85:85 -> b
    19085:19085:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):574 -> b
    19085:19085:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    19085:19085:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    19085:19085:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    19085:19085:void createCollection(java.lang.String):260 -> b
    19184:19185:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.CreateCollectionOperation.validationAction(com.mongodb.client.model.ValidationAction):184:185 -> b
    19184:19185:com.mongodb.internal.operation.CreateCollectionOperation com.mongodb.internal.operation.Operations.createCollection$38aa900f(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):574 -> b
    19184:19185:com.mongodb.internal.operation.WriteOperation com.mongodb.internal.operation.SyncOperations.createCollection$306a9b92(java.lang.String,com.mongodb.client.model.CreateCollectionOptions,co.aikar.commands.BukkitCommandContexts_1_12):231 -> b
    19184:19185:void executeCreateCollection(com.mongodb.client.ClientSession,java.lang.String,com.mongodb.client.model.CreateCollectionOptions):282 -> b
    19184:19185:void createCollection(java.lang.String,com.mongodb.client.model.CreateCollectionOptions):265 -> b
    19184:19185:void createCollection(java.lang.String):260 -> b
    227:227:java.lang.String lambda$createListCollectionNamesIterable$0(org.bson.BsonDocument) -> a
    20056:20056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    20056:20056:java.lang.String lambda$createListCollectionNamesIterable$0(org.bson.BsonDocument):227 -> a
com.mongodb.client.internal.MongoIterableImpl -> com.a.b.b.q:
    com.mongodb.client.ClientSession clientSession -> a
    com.mongodb.ReadConcern readConcern -> b
    net.kyori.adventure.sound.Sound$Source$Provider executor$4b10cc1a -> c
    com.mongodb.ReadPreference readPreference -> d
    java.lang.Integer batchSize -> e
    46:52:void <init>(com.mongodb.client.ClientSession,net.kyori.adventure.sound.Sound$Source$Provider,com.mongodb.ReadConcern,com.mongodb.ReadPreference,boolean) -> <init>
    com.mongodb.internal.operation.ReadOperation asReadOperation() -> c
    58:58:com.mongodb.client.ClientSession getClientSession() -> d
    62:62:net.kyori.adventure.sound.Sound$Source$Provider getExecutor$1c1ccf3b() -> e
    66:66:com.mongodb.ReadPreference getReadPreference() -> f
    70:70:com.mongodb.ReadConcern getReadConcern() -> g
    79:79:java.lang.Integer getBatchSize() -> h
    90:90:com.mongodb.client.MongoCursor iterator() -> a
    1130:1130:com.mongodb.internal.operation.BatchCursor execute():130:130 -> a
    1130:1130:com.mongodb.client.MongoCursor iterator():90 -> a
    101:106:java.lang.Object first() -> b
    111:111:com.mongodb.client.MongoIterable map(com.mongodb.Function) -> a
    116:121:void forEach(java.util.function.Consumer) -> forEach
    125:126:java.util.Collection into(java.util.Collection) -> a
    37:37:java.util.Iterator iterator() -> iterator
com.mongodb.client.internal.MongoMappingCursor -> com.a.b.b.r:
    com.mongodb.client.MongoCursor proxied -> a
    com.mongodb.Function mapper -> b
    31:34:void <init>(com.mongodb.client.MongoCursor,com.mongodb.Function) -> <init>
    38:39:void close() -> close
    43:43:boolean hasNext() -> hasNext
    48:48:java.lang.Object next() -> next
    69:70:void remove() -> remove
com.mongodb.client.model.CreateCollectionOptions -> com.a.b.c.a:
    org.bson.conversions.Bson storageEngineOptions -> a
    com.mongodb.client.model.IndexOptionDefaults indexOptionDefaults -> b
    com.mongodb.client.model.ValidationOptions validationOptions -> c
    com.mongodb.client.model.mql.MqlExpression$AstPlaceholder collation$2561489b -> d
    com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest timeSeriesOptions$5725804c -> e
    org.bson.internal.UuidHelper changeStreamPreAndPostImagesOptions$312a14b4 -> f
    co.aikar.locales.LanguageTable clusteredIndexOptions$185041c9 -> g
    org.bson.conversions.Bson encryptedFields -> h
    39:49:void <init>() -> <init>
    375:375:java.lang.String toString() -> toString
com.mongodb.client.model.DeleteManyModel -> com.a.b.c.b:
    org.bson.conversions.Bson filter -> a
    com.mongodb.client.model.DeleteOptions options -> b
    78:78:java.lang.String toString() -> toString
com.mongodb.client.model.DeleteOneModel -> com.a.b.c.c:
    org.bson.conversions.Bson filter -> a
    com.mongodb.client.model.DeleteOptions options -> b
    52:55:void <init>(org.bson.conversions.Bson,com.mongodb.client.model.DeleteOptions) -> <init>
    78:78:java.lang.String toString() -> toString
com.mongodb.client.model.DeleteOptions -> com.a.b.c.d:
    org.bson.conversions.Bson hint -> a
    java.lang.String hintString -> b
    com.mongodb.client.model.mql.MqlExpression$AstPlaceholder collation$2561489b -> c
    org.bson.BsonValue comment -> d
    org.bson.conversions.Bson variables -> e
    31:31:void <init>() -> <init>
    186:186:java.lang.String toString() -> toString
com.mongodb.client.model.IndexOptionDefaults -> com.a.b.c.e:
    org.bson.conversions.Bson storageEngine -> a
    30:30:void <init>() -> <init>
    56:56:java.lang.String toString() -> toString
com.mongodb.client.model.InsertOneModel -> com.a.b.c.f:
    java.lang.Object document -> a
    36:38:void <init>(java.lang.Object) -> <init>
    51:51:java.lang.String toString() -> toString
com.mongodb.client.model.InsertOneOptions -> com.a.b.c.g:
    java.lang.Boolean bypassDocumentValidation -> a
    org.bson.BsonValue comment -> b
    31:31:void <init>() -> <init>
    100:100:java.lang.String toString() -> toString
com.mongodb.client.model.ReplaceOneModel -> com.a.b.c.h:
    89:89:java.lang.String toString() -> toString
com.mongodb.client.model.UpdateManyModel -> com.a.b.c.i:
    140:142:java.lang.String toString() -> toString
com.mongodb.client.model.UpdateOneModel -> com.a.b.c.j:
    136:138:java.lang.String toString() -> toString
com.mongodb.client.model.ValidationAction -> com.a.b.c.k:
    com.mongodb.client.model.ValidationAction ERROR -> b
    com.mongodb.client.model.ValidationAction WARN -> c
    java.lang.String value -> a
    com.mongodb.client.model.ValidationAction[] $VALUES -> d
    29:29:com.mongodb.client.model.ValidationAction[] values() -> values
    29:29:com.mongodb.client.model.ValidationAction valueOf(java.lang.String) -> valueOf
    44:46:void <init>(java.lang.String,int,java.lang.String) -> <init>
    29:40:void <clinit>() -> <clinit>
    1029:1029:com.mongodb.client.model.ValidationAction[] $values():29:29 -> <clinit>
    1029:1029:void <clinit>():29 -> <clinit>
com.mongodb.client.model.ValidationLevel -> com.a.b.c.l:
    com.mongodb.client.model.ValidationLevel OFF -> b
    com.mongodb.client.model.ValidationLevel STRICT -> c
    com.mongodb.client.model.ValidationLevel MODERATE -> d
    java.lang.String value -> a
    com.mongodb.client.model.ValidationLevel[] $VALUES -> e
    29:29:com.mongodb.client.model.ValidationLevel[] values() -> values
    29:29:com.mongodb.client.model.ValidationLevel valueOf(java.lang.String) -> valueOf
    49:51:void <init>(java.lang.String,int,java.lang.String) -> <init>
    29:46:void <clinit>() -> <clinit>
    1029:1029:com.mongodb.client.model.ValidationLevel[] $values():29:29 -> <clinit>
    1029:1029:void <clinit>():29 -> <clinit>
com.mongodb.client.model.ValidationOptions -> com.a.b.c.m:
    org.bson.conversions.Bson validator -> a
    com.mongodb.client.model.ValidationLevel validationLevel -> b
    com.mongodb.client.model.ValidationAction validationAction -> c
    29:29:void <init>() -> <init>
    102:102:java.lang.String toString() -> toString
com.mongodb.client.model.WriteModel -> com.a.b.c.n:
    26:27:void <init>() -> <init>
com.mongodb.client.model.geojson.CoordinateReferenceSystem -> com.a.b.c.a.a:
    27:27:void <init>() -> <init>
com.mongodb.client.model.geojson.CoordinateReferenceSystemType -> com.a.b.c.a.b:
    com.mongodb.client.model.geojson.CoordinateReferenceSystemType NAME -> a
    com.mongodb.client.model.geojson.CoordinateReferenceSystemType LINK -> c
    java.lang.String typeName -> b
    com.mongodb.client.model.geojson.CoordinateReferenceSystemType[] $VALUES -> d
    24:24:com.mongodb.client.model.geojson.CoordinateReferenceSystemType[] values() -> values
    24:24:com.mongodb.client.model.geojson.CoordinateReferenceSystemType valueOf(java.lang.String) -> valueOf
    46:48:void <init>(java.lang.String,int,java.lang.String) -> <init>
    24:33:void <clinit>() -> <clinit>
    1024:1024:com.mongodb.client.model.geojson.CoordinateReferenceSystemType[] $values():24:24 -> <clinit>
    1024:1024:void <clinit>():24 -> <clinit>
com.mongodb.client.model.geojson.GeoJsonObjectType -> com.a.b.c.a.c:
    com.mongodb.client.model.geojson.GeoJsonObjectType GEOMETRY_COLLECTION -> a
    com.mongodb.client.model.geojson.GeoJsonObjectType LINE_STRING -> b
    com.mongodb.client.model.geojson.GeoJsonObjectType MULTI_LINE_STRING -> c
    com.mongodb.client.model.geojson.GeoJsonObjectType MULTI_POINT -> d
    com.mongodb.client.model.geojson.GeoJsonObjectType MULTI_POLYGON -> e
    com.mongodb.client.model.geojson.GeoJsonObjectType POINT -> f
    com.mongodb.client.model.geojson.GeoJsonObjectType POLYGON -> g
    java.lang.String typeName -> h
    com.mongodb.client.model.geojson.GeoJsonObjectType[] $VALUES -> i
    24:24:com.mongodb.client.model.geojson.GeoJsonObjectType[] values() -> values
    24:24:com.mongodb.client.model.geojson.GeoJsonObjectType valueOf(java.lang.String) -> valueOf
    71:73:void <init>(java.lang.String,int,java.lang.String) -> <init>
    24:58:void <clinit>() -> <clinit>
    1024:1024:com.mongodb.client.model.geojson.GeoJsonObjectType[] $values():24:24 -> <clinit>
    1024:1024:void <clinit>():24 -> <clinit>
com.mongodb.client.model.geojson.Geometry -> com.a.b.c.a.d:
    com.mongodb.client.model.geojson.CoordinateReferenceSystem coordinateReferenceSystem -> a
    47:48:void <init>() -> <init>
    55:57:void <init>(com.mongodb.client.model.geojson.CoordinateReferenceSystem) -> <init>
    com.mongodb.client.model.geojson.GeoJsonObjectType getType() -> a
    91:91:com.mongodb.client.model.geojson.CoordinateReferenceSystem getCoordinateReferenceSystem() -> b
    96:109:boolean equals(java.lang.Object) -> equals
    114:114:int hashCode() -> hashCode
    38:38:void <clinit>() -> <clinit>
    1085:1085:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.fromProviders(org.bson.codecs.configuration.CodecProvider[]):85:85 -> <clinit>
    1085:1085:void <clinit>():38 -> <clinit>
com.mongodb.client.model.geojson.GeometryCollection -> com.a.b.c.a.e:
    java.util.List geometries -> b
    41:42:void <init>(java.util.List) -> <init>
    52:56:void <init>(com.mongodb.client.model.geojson.CoordinateReferenceSystem,java.util.List) -> <init>
    60:60:com.mongodb.client.model.geojson.GeoJsonObjectType getType() -> a
    74:90:boolean equals(java.lang.Object) -> equals
    95:97:int hashCode() -> hashCode
    102:105:java.lang.String toString() -> toString
com.mongodb.client.model.geojson.LineString -> com.a.b.c.a.f:
    java.util.List coordinates -> b
    43:44:void <init>(java.util.List) -> <init>
    54:60:void <init>(com.mongodb.client.model.geojson.CoordinateReferenceSystem,java.util.List) -> <init>
    64:64:com.mongodb.client.model.geojson.GeoJsonObjectType getType() -> a
    78:95:boolean equals(java.lang.Object) -> equals
    100:101:int hashCode() -> hashCode
    106:108:java.lang.String toString() -> toString
com.mongodb.client.model.geojson.MultiLineString -> com.a.b.c.a.g:
    java.util.List coordinates -> b
    42:43:void <init>(java.util.List) -> <init>
    52:62:void <init>(com.mongodb.client.model.geojson.CoordinateReferenceSystem,java.util.List) -> <init>
    66:66:com.mongodb.client.model.geojson.GeoJsonObjectType getType() -> a
    80:97:boolean equals(java.lang.Object) -> equals
    102:104:int hashCode() -> hashCode
    109:111:java.lang.String toString() -> toString
com.mongodb.client.model.geojson.MultiPoint -> com.a.b.c.a.h:
    java.util.List coordinates -> b
    42:43:void <init>(java.util.List) -> <init>
    52:57:void <init>(com.mongodb.client.model.geojson.CoordinateReferenceSystem,java.util.List) -> <init>
    61:61:com.mongodb.client.model.geojson.GeoJsonObjectType getType() -> a
    75:92:boolean equals(java.lang.Object) -> equals
    97:98:int hashCode() -> hashCode
    103:105:java.lang.String toString() -> toString
com.mongodb.client.model.geojson.MultiPolygon -> com.a.b.c.a.i:
    java.util.List coordinates -> b
    42:43:void <init>(java.util.List) -> <init>
    52:56:void <init>(com.mongodb.client.model.geojson.CoordinateReferenceSystem,java.util.List) -> <init>
    60:60:com.mongodb.client.model.geojson.GeoJsonObjectType getType() -> a
    74:90:boolean equals(java.lang.Object) -> equals
    95:97:int hashCode() -> hashCode
    102:104:java.lang.String toString() -> toString
com.mongodb.client.model.geojson.NamedCoordinateReferenceSystem -> com.a.b.c.a.j:
    java.lang.String name -> a
    58:61:void <init>(java.lang.String) -> <init>
    65:65:com.mongodb.client.model.geojson.CoordinateReferenceSystemType getType() -> a
    79:92:boolean equals(java.lang.Object) -> equals
    97:97:int hashCode() -> hashCode
    102:102:java.lang.String toString() -> toString
    34:48:void <clinit>() -> <clinit>
com.mongodb.client.model.geojson.Point -> com.a.b.c.a.k:
    com.mongodb.client.model.geojson.Position coordinate -> b
    37:38:void <init>(com.mongodb.client.model.geojson.Position) -> <init>
    47:49:void <init>(com.mongodb.client.model.geojson.CoordinateReferenceSystem,com.mongodb.client.model.geojson.Position) -> <init>
    53:53:com.mongodb.client.model.geojson.GeoJsonObjectType getType() -> a
    76:93:boolean equals(java.lang.Object) -> equals
    98:99:int hashCode() -> hashCode
    104:106:java.lang.String toString() -> toString
com.mongodb.client.model.geojson.Polygon -> com.a.b.c.a.l:
    com.mongodb.client.model.geojson.PolygonCoordinates coordinates -> b
    62:63:void <init>(com.mongodb.client.model.geojson.PolygonCoordinates) -> <init>
    72:74:void <init>(com.mongodb.client.model.geojson.CoordinateReferenceSystem,com.mongodb.client.model.geojson.PolygonCoordinates) -> <init>
    78:78:com.mongodb.client.model.geojson.GeoJsonObjectType getType() -> a
    110:127:boolean equals(java.lang.Object) -> equals
    132:134:int hashCode() -> hashCode
    139:142:java.lang.String toString() -> toString
    1082:1082:java.util.List com.mongodb.client.model.geojson.PolygonCoordinates.getExterior():82:82 -> toString
    1082:1082:java.lang.String toString():140 -> toString
    1091:1091:java.util.List com.mongodb.client.model.geojson.PolygonCoordinates.getHoles():91:91 -> toString
    1091:1091:java.lang.String toString():141 -> toString
    2091:2091:java.util.List com.mongodb.client.model.geojson.PolygonCoordinates.getHoles():91:91 -> toString
    2091:2091:java.lang.String toString():141 -> toString
com.mongodb.client.model.geojson.PolygonCoordinates -> com.a.b.c.a.m:
    java.util.List exterior -> a
    java.util.List holes -> b
    46:47:void <init>(java.util.List,java.util.List[]) -> <init>
    56:74:void <init>(java.util.List,java.util.List) -> <init>
    96:112:boolean equals(java.lang.Object) -> equals
    117:119:int hashCode() -> hashCode
    124:126:java.lang.String toString() -> toString
com.mongodb.client.model.geojson.Position -> com.a.b.c.a.n:
    java.util.List values -> a
    43:48:void <init>(java.util.List) -> <init>
    77:90:boolean equals(java.lang.Object) -> equals
    95:95:int hashCode() -> hashCode
    100:100:java.lang.String toString() -> toString
com.mongodb.client.model.geojson.codecs.AbstractGeometryCodec -> com.a.b.c.a.a.a:
    org.bson.codecs.configuration.CodecRegistry registry -> a
    java.lang.Class encoderClass -> b
    34:37:void <init>(org.bson.codecs.configuration.CodecRegistry,java.lang.Class) -> <init>
    41:42:void encode(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext) -> a
    46:46:com.mongodb.client.model.geojson.Geometry decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    1046:1064:com.mongodb.client.model.geojson.Geometry com.mongodb.client.model.geojson.codecs.GeometryDecoderHelper.decodeGeometry(org.bson.BsonReader,java.lang.Class):46:64 -> b
    1046:1064:com.mongodb.client.model.geojson.Geometry decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):46 -> b
    51:51:java.lang.Class getEncoderClass() -> a
    30:30:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    30:30:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
com.mongodb.client.model.geojson.codecs.GeoJsonCodecProvider -> com.a.b.c.a.a.b:
    37:37:void <init>() -> <init>
    41:61:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    66:66:java.lang.String toString() -> toString
com.mongodb.client.model.geojson.codecs.GeometryCodec -> com.a.b.c.a.a.c:
    35:36:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    27:27:java.lang.Class getEncoderClass() -> a
    27:27:com.mongodb.client.model.geojson.Geometry decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    27:27:void encode(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext) -> a
com.mongodb.client.model.geojson.codecs.GeometryCollectionCodec -> com.a.b.c.a.a.d:
    35:36:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    27:27:java.lang.Class getEncoderClass() -> a
    27:27:com.mongodb.client.model.geojson.Geometry decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    27:27:void encode(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext) -> a
com.mongodb.client.model.geojson.codecs.LineStringCodec -> com.a.b.c.a.a.e:
    34:35:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    27:27:java.lang.Class getEncoderClass() -> a
    27:27:com.mongodb.client.model.geojson.Geometry decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    27:27:void encode(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext) -> a
com.mongodb.client.model.geojson.codecs.MultiLineStringCodec -> com.a.b.c.a.a.f:
    35:36:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    27:27:java.lang.Class getEncoderClass() -> a
    27:27:com.mongodb.client.model.geojson.Geometry decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    27:27:void encode(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext) -> a
com.mongodb.client.model.geojson.codecs.MultiPointCodec -> com.a.b.c.a.a.g:
    35:36:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    27:27:java.lang.Class getEncoderClass() -> a
    27:27:com.mongodb.client.model.geojson.Geometry decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    27:27:void encode(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext) -> a
com.mongodb.client.model.geojson.codecs.MultiPolygonCodec -> com.a.b.c.a.a.h:
    35:36:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    27:27:java.lang.Class getEncoderClass() -> a
    27:27:com.mongodb.client.model.geojson.Geometry decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    27:27:void encode(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext) -> a
com.mongodb.client.model.geojson.codecs.NamedCoordinateReferenceSystemCodec -> com.a.b.c.a.a.i:
    35:35:void <init>() -> <init>
    51:51:java.lang.Class getEncoderClass() -> a
    35:35:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1038:1047:void encode$3055652c(org.bson.BsonWriter,com.mongodb.client.model.geojson.NamedCoordinateReferenceSystem):38:47 -> a
    1038:1047:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):35 -> a
    2041:2041:java.lang.String com.mongodb.client.model.geojson.CoordinateReferenceSystemType.getTypeName():41:41 -> a
    2041:2041:void encode$3055652c(org.bson.BsonWriter,com.mongodb.client.model.geojson.NamedCoordinateReferenceSystem):40 -> a
    2041:2041:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):35 -> a
    2074:2074:java.lang.String com.mongodb.client.model.geojson.NamedCoordinateReferenceSystem.getName():74:74 -> a
    2074:2074:void encode$3055652c(org.bson.BsonWriter,com.mongodb.client.model.geojson.NamedCoordinateReferenceSystem):43 -> a
    2074:2074:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):35 -> a
    35:35:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    3056:3060:com.mongodb.client.model.geojson.NamedCoordinateReferenceSystem decode$3a987882(org.bson.BsonReader):56:60 -> a
    3056:3060:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):35 -> a
com.mongodb.client.model.geojson.codecs.PointCodec -> com.a.b.c.a.a.j:
    35:36:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    27:27:java.lang.Class getEncoderClass() -> a
    27:27:com.mongodb.client.model.geojson.Geometry decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    27:27:void encode(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext) -> a
com.mongodb.client.model.geojson.codecs.PolygonCodec -> com.a.b.c.a.a.k:
    35:36:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    27:27:java.lang.Class getEncoderClass() -> a
    27:27:com.mongodb.client.model.geojson.Geometry decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    27:27:void encode(org.bson.BsonWriter,com.mongodb.client.model.geojson.Geometry,org.bson.codecs.EncoderContext) -> a
com.mongodb.client.model.mql.ExpressionCodecProvider -> com.a.b.c.b.a:
    40:40:void <init>() -> <init>
    45:48:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
com.mongodb.client.model.mql.MqlExpression -> com.a.b.c.b.b:
    java.util.function.Function fn -> a
com.mongodb.client.model.mql.MqlExpression$AstPlaceholder -> com.a.b.c.b.b$a:
    1343:1378:boolean com.mongodb.client.model.Collation.equals(java.lang.Object):343:378 -> equals
    1383:1392:int com.mongodb.client.model.Collation.hashCode():383:392 -> hashCode
    1397:1397:java.lang.String com.mongodb.client.model.Collation.toString():397:397 -> toString
com.mongodb.client.model.mql.MqlExpressionCodec -> com.a.b.c.b.c:
    org.bson.codecs.configuration.CodecRegistry codecRegistry -> a
    31:33:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    50:50:java.lang.Class getEncoderClass() -> a
    27:27:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1043:1046:void encode(org.bson.BsonWriter,com.mongodb.client.model.mql.MqlExpression,org.bson.codecs.EncoderContext):43:46 -> a
    1043:1046:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):27 -> a
    1051:1051:org.bson.BsonValue com.mongodb.client.model.mql.MqlExpression.toBsonValue(org.bson.codecs.configuration.CodecRegistry):51:51 -> a
    1051:1051:void encode(org.bson.BsonWriter,com.mongodb.client.model.mql.MqlExpression,org.bson.codecs.EncoderContext):43 -> a
    1051:1051:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):27 -> a
    1080:1080:org.bson.BsonValue com.mongodb.client.model.mql.MqlExpression$AstPlaceholder.access$000(com.mongodb.client.model.mql.MqlExpression$AstPlaceholder):80:80 -> a
    1080:1080:org.bson.BsonValue com.mongodb.client.model.mql.MqlExpression.toBsonValue(org.bson.codecs.configuration.CodecRegistry):51 -> a
    1080:1080:void encode(org.bson.BsonWriter,com.mongodb.client.model.mql.MqlExpression,org.bson.codecs.EncoderContext):43 -> a
    1080:1080:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):27 -> a
    27:27:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2037:2037:com.mongodb.client.model.mql.MqlExpression decode$1d9d6360():37:37 -> a
    2037:2037:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):27 -> a
com.mongodb.client.result.DeleteResult -> com.a.b.d.a:
    26:26:void <init>() -> <init>
com.mongodb.client.result.DeleteResult$AcknowledgedDeleteResult -> com.a.b.d.a$a:
    long deletedCount -> a
    65:67:void <init>(long) -> <init>
    81:94:boolean equals(java.lang.Object) -> equals
    99:99:int hashCode() -> hashCode
    104:104:java.lang.String toString() -> toString
com.mongodb.client.result.DeleteResult$UnacknowledgedDeleteResult -> com.a.b.d.a$b:
    110:110:void <init>() -> <init>
    123:130:boolean equals(java.lang.Object) -> equals
    135:135:int hashCode() -> hashCode
    140:140:java.lang.String toString() -> toString
    110:110:void <init>(byte) -> <init>
com.mongodb.client.result.InsertOneResult -> com.a.b.d.b:
    31:31:void <init>() -> <init>
com.mongodb.client.result.InsertOneResult$AcknowledgedInsertOneResult -> com.a.b.d.b$a:
    org.bson.BsonValue insertedId -> a
    72:74:void <init>(org.bson.BsonValue) -> <init>
    89:96:boolean equals(java.lang.Object) -> equals
    101:101:int hashCode() -> hashCode
    106:106:java.lang.String toString() -> toString
com.mongodb.client.result.InsertOneResult$UnacknowledgedInsertOneResult -> com.a.b.d.b$b:
    112:112:void <init>() -> <init>
    126:133:boolean equals(java.lang.Object) -> equals
    138:138:int hashCode() -> hashCode
    143:143:java.lang.String toString() -> toString
    112:112:void <init>(byte) -> <init>
com.mongodb.connection.BufferProvider -> com.a.c.a:
    org.bson.ByteBuf getBuffer(int) -> a
com.mongodb.connection.ClusterConnectionMode -> com.a.c.b:
    com.mongodb.connection.ClusterConnectionMode SINGLE -> a
    com.mongodb.connection.ClusterConnectionMode MULTIPLE -> b
    com.mongodb.connection.ClusterConnectionMode LOAD_BALANCED -> c
    com.mongodb.connection.ClusterConnectionMode[] $VALUES -> d
    24:24:com.mongodb.connection.ClusterConnectionMode[] values() -> values
    24:24:com.mongodb.connection.ClusterConnectionMode valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:40:void <clinit>() -> <clinit>
    1024:1024:com.mongodb.connection.ClusterConnectionMode[] $values():24:24 -> <clinit>
    1024:1024:void <clinit>():24 -> <clinit>
com.mongodb.connection.ClusterDescription -> com.a.c.c:
    com.mongodb.connection.ClusterConnectionMode connectionMode -> a
    com.mongodb.connection.ClusterType type -> b
    java.util.List serverDescriptions -> c
    com.mongodb.connection.ClusterSettings clusterSettings -> d
    com.mongodb.connection.ServerSettings serverSettings -> e
    com.mongodb.MongoException srvResolutionException -> f
    java.lang.Integer logicalSessionTimeoutMinutes -> g
    76:77:void <init>(com.mongodb.connection.ClusterConnectionMode,com.mongodb.connection.ClusterType,java.util.List,com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings) -> <init>
    94:103:void <init>(com.mongodb.connection.ClusterConnectionMode,com.mongodb.connection.ClusterType,com.mongodb.MongoException,java.util.List,com.mongodb.connection.ClusterSettings,com.mongodb.connection.ServerSettings) -> <init>
    248:284:boolean equals(java.lang.Object) -> equals
    289:293:int hashCode() -> hashCode
    298:300:java.lang.String toString() -> toString
    1210:1210:com.mongodb.connection.ClusterType getType():210:210 -> toString
    1210:1210:java.lang.String toString():299 -> toString
    312:321:java.lang.String getShortDescription() -> a
    2015:2021:java.lang.String com.mongodb.connection.ServerDescription.getShortDescription():1015:1021 -> a
    2015:2021:java.lang.String getShortDescription():315 -> a
    2044:2044:java.lang.String com.mongodb.connection.ServerDescription.getRoundTripFormattedInMilliseconds():1044:1044 -> a
    2044:2044:java.lang.String com.mongodb.connection.ServerDescription.getShortDescription():1019 -> a
    2044:2044:java.lang.String getShortDescription():315 -> a
    327:342:java.lang.Integer calculateLogicalSessionTimeoutMinutes() -> b
    2140:2140:java.lang.Integer com.mongodb.connection.ServerDescription.getLogicalSessionTimeoutMinutes():140:140 -> b
    2140:2140:java.lang.Integer calculateLogicalSessionTimeoutMinutes():332 -> b
    330:330:boolean lambda$calculateLogicalSessionTimeoutMinutes$0(com.mongodb.connection.ServerDescription) -> a
com.mongodb.connection.ClusterId -> com.a.c.d:
    java.lang.String value -> a
    java.lang.String description -> b
    43:44:void <init>() -> <init>
    51:54:void <init>(java.lang.String) -> <init>
    83:99:boolean equals(java.lang.Object) -> equals
    104:106:int hashCode() -> hashCode
    111:111:java.lang.String toString() -> toString
com.mongodb.connection.ClusterSettings -> com.a.c.e:
    java.lang.String srvHost -> a
    java.lang.Integer srvMaxHosts -> b
    java.lang.String srvServiceName -> c
    java.util.List hosts -> d
    com.mongodb.connection.ClusterConnectionMode mode -> e
    com.mongodb.connection.ClusterType requiredClusterType -> f
    java.lang.String requiredReplicaSetName -> g
    com.mongodb.selector.ServerSelector serverSelector -> h
    long localThresholdMS -> i
    long serverSelectionTimeoutMS -> j
    java.util.List clusterListeners -> k
    69:69:com.mongodb.connection.ClusterSettings$Builder builder() -> a
    491:491:long getServerSelectionTimeout(java.util.concurrent.TimeUnit) -> a
    528:545:boolean equals(java.lang.Object) -> equals
    550:551:int hashCode() -> hashCode
    556:560:java.lang.String toString() -> toString
    587:637:void <init>(com.mongodb.connection.ClusterSettings$Builder) -> <init>
    50:50:void <init>(com.mongodb.connection.ClusterSettings$Builder,byte) -> <init>
com.mongodb.connection.ClusterSettings$Builder -> com.a.c.e$a:
    java.util.List DEFAULT_HOSTS -> a
    java.lang.String srvHost -> b
    java.lang.Integer srvMaxHosts -> c
    java.lang.String srvServiceName -> d
    java.util.List hosts -> e
    com.mongodb.connection.ClusterConnectionMode mode -> f
    com.mongodb.connection.ClusterType requiredClusterType -> g
    java.lang.String requiredReplicaSetName -> h
    com.mongodb.selector.ServerSelector serverSelector -> i
    long serverSelectionTimeoutMS -> j
    long localThresholdMS -> k
    java.util.List clusterListeners -> l
    91:102:void <init>() -> <init>
    114:126:com.mongodb.connection.ClusterSettings$Builder applySettings(com.mongodb.connection.ClusterSettings) -> a
    2050:2050:java.lang.String com.mongodb.connection.ClusterSettings.access$100(com.mongodb.connection.ClusterSettings):50:50 -> a
    2050:2050:com.mongodb.connection.ClusterSettings$Builder applySettings(com.mongodb.connection.ClusterSettings):115 -> a
    3050:3050:java.lang.String com.mongodb.connection.ClusterSettings.access$200(com.mongodb.connection.ClusterSettings):50:50 -> a
    3050:3050:com.mongodb.connection.ClusterSettings$Builder applySettings(com.mongodb.connection.ClusterSettings):116 -> a
    4050:4050:java.lang.Integer com.mongodb.connection.ClusterSettings.access$300(com.mongodb.connection.ClusterSettings):50:50 -> a
    4050:4050:com.mongodb.connection.ClusterSettings$Builder applySettings(com.mongodb.connection.ClusterSettings):117 -> a
    5050:5050:java.util.List com.mongodb.connection.ClusterSettings.access$400(com.mongodb.connection.ClusterSettings):50:50 -> a
    5050:5050:com.mongodb.connection.ClusterSettings$Builder applySettings(com.mongodb.connection.ClusterSettings):118 -> a
    6050:6050:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterSettings.access$500(com.mongodb.connection.ClusterSettings):50:50 -> a
    6050:6050:com.mongodb.connection.ClusterSettings$Builder applySettings(com.mongodb.connection.ClusterSettings):119 -> a
    7050:7050:java.lang.String com.mongodb.connection.ClusterSettings.access$600(com.mongodb.connection.ClusterSettings):50:50 -> a
    7050:7050:com.mongodb.connection.ClusterSettings$Builder applySettings(com.mongodb.connection.ClusterSettings):120 -> a
    8050:8050:com.mongodb.connection.ClusterType com.mongodb.connection.ClusterSettings.access$700(com.mongodb.connection.ClusterSettings):50:50 -> a
    8050:8050:com.mongodb.connection.ClusterSettings$Builder applySettings(com.mongodb.connection.ClusterSettings):121 -> a
    9050:9050:long com.mongodb.connection.ClusterSettings.access$800(com.mongodb.connection.ClusterSettings):50:50 -> a
    9050:9050:com.mongodb.connection.ClusterSettings$Builder applySettings(com.mongodb.connection.ClusterSettings):122 -> a
    10050:10050:long com.mongodb.connection.ClusterSettings.access$900(com.mongodb.connection.ClusterSettings):50:50 -> a
    10050:10050:com.mongodb.connection.ClusterSettings$Builder applySettings(com.mongodb.connection.ClusterSettings):123 -> a
    11050:11050:java.util.List com.mongodb.connection.ClusterSettings.access$1000(com.mongodb.connection.ClusterSettings):50:50 -> a
    11050:11050:com.mongodb.connection.ClusterSettings$Builder applySettings(com.mongodb.connection.ClusterSettings):124 -> a
    12050:12050:com.mongodb.selector.ServerSelector com.mongodb.connection.ClusterSettings.access$1100(com.mongodb.connection.ClusterSettings):50:50 -> a
    12050:12050:com.mongodb.connection.ClusterSettings$Builder applySettings(com.mongodb.connection.ClusterSettings):125 -> a
    145:149:com.mongodb.connection.ClusterSettings$Builder srvHost(java.lang.String) -> a
    193:206:com.mongodb.connection.ClusterSettings$Builder hosts(java.util.List) -> b
    12175:12175:java.lang.String com.mongodb.ServerAddress.getHost():175:175 -> b
    12175:12175:com.mongodb.connection.ClusterSettings$Builder hosts(java.util.List):203 -> b
    12184:12184:int com.mongodb.ServerAddress.getPort():184:184 -> b
    12184:12184:com.mongodb.connection.ClusterSettings$Builder hosts(java.util.List):203 -> b
    216:217:com.mongodb.connection.ClusterSettings$Builder mode(com.mongodb.connection.ClusterConnectionMode) -> a
    281:282:com.mongodb.connection.ClusterSettings$Builder serverSelectionTimeout(long,java.util.concurrent.TimeUnit) -> a
    306:308:com.mongodb.connection.ClusterSettings$Builder clusterListenerList(java.util.List) -> a
    318:361:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString) -> a
    12250:12250:java.lang.Boolean com.mongodb.ConnectionString.isDirectConnection():1250:1250 -> a
    12250:12250:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):318 -> a
    12261:12261:java.lang.Boolean com.mongodb.ConnectionString.isLoadBalanced():1261:1261 -> a
    12261:12261:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):319 -> a
    13186:13186:boolean com.mongodb.ConnectionString.isSrvProtocol():1186:1186 -> a
    13186:13186:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):323 -> a
    13219:13219:java.util.List com.mongodb.ConnectionString.getHosts():1219:1219 -> a
    13219:13219:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):324 -> a
    14219:14219:java.util.List com.mongodb.ConnectionString.getHosts():1219:1219 -> a
    14219:14219:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):326 -> a
    15186:15186:boolean com.mongodb.ConnectionString.isSrvProtocol():1186:1186 -> a
    15186:15186:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):328 -> a
    15219:15219:java.util.List com.mongodb.ConnectionString.getHosts():1219:1219 -> a
    15219:15219:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):330 -> a
    16197:16197:java.lang.Integer com.mongodb.ConnectionString.getSrvMaxHosts():1197:1197 -> a
    16197:16197:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):331 -> a
    17160:17161:com.mongodb.connection.ClusterSettings$Builder srvMaxHosts(java.lang.Integer):160:161 -> a
    17160:17161:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):333 -> a
    17210:17210:java.lang.String com.mongodb.ConnectionString.getSrvServiceName():1210:1210 -> a
    17210:17210:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):335 -> a
    18182:18183:com.mongodb.connection.ClusterSettings$Builder srvServiceName(java.lang.String):182:183 -> a
    18182:18183:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):337 -> a
    18219:18219:java.util.List com.mongodb.ConnectionString.getHosts():1219:1219 -> a
    18219:18219:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):340 -> a
    18442:18442:java.lang.String com.mongodb.ConnectionString.getRequiredReplicaSetName():1442:1442 -> a
    18442:18442:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):341 -> a
    19219:19219:java.util.List com.mongodb.ConnectionString.getHosts():1219:1219 -> a
    19219:19219:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):343 -> a
    20219:20219:java.util.List com.mongodb.ConnectionString.getHosts():1219:1219 -> a
    20219:20219:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):345 -> a
    20442:20442:java.lang.String com.mongodb.ConnectionString.getRequiredReplicaSetName():1442:1442 -> a
    20442:20442:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):350 -> a
    21227:21228:com.mongodb.connection.ClusterSettings$Builder requiredReplicaSetName(java.lang.String):227:228 -> a
    21227:21228:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):350 -> a
    21452:21452:java.lang.Integer com.mongodb.ConnectionString.getServerSelectionTimeout():1452:1452 -> a
    21452:21452:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):352 -> a
    21462:21462:java.lang.Integer com.mongodb.ConnectionString.getLocalThreshold():1462:1462 -> a
    21462:21462:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):357 -> a
    22252:22254:com.mongodb.connection.ClusterSettings$Builder localThreshold(long,java.util.concurrent.TimeUnit):252:254 -> a
    22252:22254:com.mongodb.connection.ClusterSettings$Builder applyConnectionString(com.mongodb.ConnectionString):359 -> a
    370:370:com.mongodb.connection.ClusterSettings build() -> a
    87:87:void <init>(byte) -> <init>
    87:87:java.lang.String access$1300(com.mongodb.connection.ClusterSettings$Builder) -> a
    87:87:java.util.List access$1400(com.mongodb.connection.ClusterSettings$Builder) -> b
    87:87:com.mongodb.connection.ClusterType access$1500(com.mongodb.connection.ClusterSettings$Builder) -> c
    87:87:java.lang.String access$1600(com.mongodb.connection.ClusterSettings$Builder) -> d
    87:87:com.mongodb.connection.ClusterType access$1502(com.mongodb.connection.ClusterSettings$Builder,com.mongodb.connection.ClusterType) -> a
    87:87:com.mongodb.connection.ClusterConnectionMode access$1700(com.mongodb.connection.ClusterSettings$Builder) -> e
    87:87:java.lang.Integer access$1800(com.mongodb.connection.ClusterSettings$Builder) -> f
    87:87:java.lang.String access$1900(com.mongodb.connection.ClusterSettings$Builder) -> g
    87:87:long access$2000(com.mongodb.connection.ClusterSettings$Builder) -> h
    87:87:com.mongodb.selector.ServerSelector access$2100(com.mongodb.connection.ClusterSettings$Builder) -> i
    87:87:long access$2200(com.mongodb.connection.ClusterSettings$Builder) -> j
    87:87:java.util.List access$2300(com.mongodb.connection.ClusterSettings$Builder) -> k
    88:88:void <clinit>() -> <clinit>
com.mongodb.connection.ClusterType -> com.a.c.f:
    com.mongodb.connection.ClusterType STANDALONE -> a
    com.mongodb.connection.ClusterType REPLICA_SET -> b
    com.mongodb.connection.ClusterType SHARDED -> c
    com.mongodb.connection.ClusterType LOAD_BALANCED -> d
    com.mongodb.connection.ClusterType UNKNOWN -> e
    com.mongodb.connection.ClusterType[] $VALUES -> f
    24:24:com.mongodb.connection.ClusterType[] values() -> values
    24:24:com.mongodb.connection.ClusterType valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:49:void <clinit>() -> <clinit>
    1024:1024:com.mongodb.connection.ClusterType[] $values():24:24 -> <clinit>
    1024:1024:void <clinit>():24 -> <clinit>
com.mongodb.connection.ConnectionDescription -> com.a.c.g:
    org.bson.types.ObjectId serviceId -> a
    com.mongodb.connection.ConnectionId connectionId -> b
    int maxWireVersion -> c
    com.mongodb.connection.ServerType serverType -> d
    int maxBatchCount -> e
    int maxDocumentSize -> f
    int maxMessageSize -> g
    java.util.List compressors -> h
    org.bson.BsonArray saslSupportedMechanisms -> i
    59:61:void <init>(com.mongodb.connection.ServerId) -> <init>
    78:79:void <init>(com.mongodb.connection.ConnectionId,int,com.mongodb.connection.ServerType,int,int,int,java.util.List) -> <init>
    98:100:void <init>(com.mongodb.connection.ConnectionId,int,com.mongodb.connection.ServerType,int,int,int,java.util.List,org.bson.BsonArray) -> <init>
    119:129:void <init>(org.bson.types.ObjectId,com.mongodb.connection.ConnectionId,int,com.mongodb.connection.ServerType,int,int,int,java.util.List,org.bson.BsonArray) -> <init>
    138:139:com.mongodb.connection.ConnectionDescription withConnectionId(com.mongodb.connection.ConnectionId) -> a
    162:162:com.mongodb.ServerAddress getServerAddress() -> a
    1097:1097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> a
    1097:1097:com.mongodb.ServerAddress getServerAddress():162 -> a
    2059:2059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> a
    2059:2059:com.mongodb.ServerAddress getServerAddress():162 -> a
    272:305:boolean equals(java.lang.Object) -> equals
    310:319:int hashCode() -> hashCode
    324:324:java.lang.String toString() -> toString
com.mongodb.connection.ConnectionId -> com.a.c.h:
    java.util.concurrent.atomic.AtomicInteger INCREMENTING_ID -> d
    com.mongodb.connection.ServerId serverId -> a
    int localValue -> b
    java.lang.Integer serverValue -> c
    java.lang.String stringValue -> e
    52:53:void <init>(com.mongodb.connection.ServerId) -> <init>
    68:77:void <init>(com.mongodb.connection.ServerId,int,java.lang.Integer) -> <init>
    87:88:com.mongodb.connection.ConnectionId withServerValue(int) -> a
    121:140:boolean equals(java.lang.Object) -> equals
    145:148:int hashCode() -> hashCode
    153:153:java.lang.String toString() -> toString
    38:38:void <clinit>() -> <clinit>
com.mongodb.connection.ConnectionPoolSettings -> com.a.c.i:
    java.util.List connectionPoolListeners -> a
    int maxSize -> b
    int minSize -> c
    long maxWaitTimeMS -> d
    long maxConnectionLifeTimeMS -> e
    long maxConnectionIdleTimeMS -> f
    long maintenanceInitialDelayMS -> g
    long maintenanceFrequencyMS -> h
    int maxConnecting -> i
    338:338:long getMaxConnectionLifeTime(java.util.concurrent.TimeUnit) -> a
    349:349:long getMaxConnectionIdleTime(java.util.concurrent.TimeUnit) -> b
    359:359:long getMaintenanceInitialDelay(java.util.concurrent.TimeUnit) -> c
    399:435:boolean equals(java.lang.Object) -> equals
    440:449:int hashCode() -> hashCode
    454:454:java.lang.String toString() -> toString
    467:486:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder) -> <init>
    1077:1077:int com.mongodb.connection.ConnectionPoolSettings$Builder.access$900(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    1077:1077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):468 -> <init>
    2077:2077:int com.mongodb.connection.ConnectionPoolSettings$Builder.access$1000(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    2077:2077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):469 -> <init>
    3077:3077:long com.mongodb.connection.ConnectionPoolSettings$Builder.access$1100(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    3077:3077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):470 -> <init>
    4077:4077:long com.mongodb.connection.ConnectionPoolSettings$Builder.access$1200(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    4077:4077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):471 -> <init>
    5077:5077:long com.mongodb.connection.ConnectionPoolSettings$Builder.access$1300(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    5077:5077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):472 -> <init>
    6077:6077:long com.mongodb.connection.ConnectionPoolSettings$Builder.access$1400(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    6077:6077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):473 -> <init>
    7077:7077:int com.mongodb.connection.ConnectionPoolSettings$Builder.access$900(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    7077:7077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):474 -> <init>
    8077:8077:int com.mongodb.connection.ConnectionPoolSettings$Builder.access$1000(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    8077:8077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):474 -> <init>
    9077:9077:int com.mongodb.connection.ConnectionPoolSettings$Builder.access$1500(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    9077:9077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):475 -> <init>
    10077:10077:int com.mongodb.connection.ConnectionPoolSettings$Builder.access$900(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    10077:10077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):477 -> <init>
    11077:11077:int com.mongodb.connection.ConnectionPoolSettings$Builder.access$1000(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    11077:11077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):478 -> <init>
    12077:12077:long com.mongodb.connection.ConnectionPoolSettings$Builder.access$1600(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    12077:12077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):479 -> <init>
    13077:13077:long com.mongodb.connection.ConnectionPoolSettings$Builder.access$1200(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    13077:13077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):480 -> <init>
    14077:14077:long com.mongodb.connection.ConnectionPoolSettings$Builder.access$1300(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    14077:14077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):481 -> <init>
    15077:15077:long com.mongodb.connection.ConnectionPoolSettings$Builder.access$1100(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    15077:15077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):482 -> <init>
    16077:16077:long com.mongodb.connection.ConnectionPoolSettings$Builder.access$1400(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    16077:16077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):483 -> <init>
    17077:17077:java.util.List com.mongodb.connection.ConnectionPoolSettings$Builder.access$1700(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    17077:17077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):484 -> <init>
    18077:18077:int com.mongodb.connection.ConnectionPoolSettings$Builder.access$1500(com.mongodb.connection.ConnectionPoolSettings$Builder):77:77 -> <init>
    18077:18077:void <init>(com.mongodb.connection.ConnectionPoolSettings$Builder):485 -> <init>
com.mongodb.connection.ConnectionPoolSettings$Builder -> com.a.c.i$a:
    java.util.List connectionPoolListeners -> a
    int maxSize -> b
    int minSize -> c
    long maxWaitTimeMS -> d
    long maxConnectionLifeTimeMS -> e
    long maxConnectionIdleTimeMS -> f
    long maintenanceInitialDelayMS -> g
    long maintenanceFrequencyMS -> h
    int maxConnecting -> i
    78:89:void <init>() -> <init>
com.mongodb.connection.ServerConnectionState -> com.a.c.j:
    com.mongodb.connection.ServerConnectionState CONNECTING -> a
    com.mongodb.connection.ServerConnectionState CONNECTED -> b
    com.mongodb.connection.ServerConnectionState[] $VALUES -> c
    24:24:com.mongodb.connection.ServerConnectionState[] values() -> values
    24:24:com.mongodb.connection.ServerConnectionState valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:33:void <clinit>() -> <clinit>
    1024:1024:com.mongodb.connection.ServerConnectionState[] $values():24:24 -> <clinit>
    1024:1024:void <clinit>():24 -> <clinit>
com.mongodb.connection.ServerDescription -> com.a.c.k:
    com.mongodb.ServerAddress address -> a
    com.mongodb.connection.ServerType type -> b
    java.lang.String canonicalAddress -> c
    java.util.Set hosts -> d
    java.util.Set passives -> e
    java.util.Set arbiters -> f
    java.lang.String primary -> g
    int maxDocumentSize -> h
    com.mongodb.TagSet tagSet -> i
    java.lang.String setName -> j
    long roundTripTimeNanos -> k
    boolean ok -> l
    com.mongodb.connection.ServerConnectionState state -> m
    int minWireVersion -> n
    int maxWireVersion -> o
    org.bson.types.ObjectId electionId -> p
    java.lang.Integer setVersion -> q
    com.mongodb.connection.TopologyVersion topologyVersion -> r
    java.util.Date lastWriteDate -> s
    long lastUpdateTimeNanos -> t
    java.lang.Integer logicalSessionTimeoutMinutes -> u
    java.lang.Throwable exception -> v
    boolean helloOk -> w
    532:532:boolean isIncompatiblyNewerThanDriver() -> a
    547:547:boolean isIncompatiblyOlderThanDriver() -> b
    592:592:boolean isReplicaSetMember() -> c
    619:619:boolean isPrimary() -> d
    628:628:boolean isSecondary() -> e
    757:757:long getLastUpdateTime(java.util.concurrent.TimeUnit) -> a
    769:777:boolean hasTags(com.mongodb.TagSet) -> a
    1093:1093:boolean com.mongodb.TagSet.containsAll(com.mongodb.TagSet):93:93 -> a
    1093:1093:boolean hasTags(com.mongodb.TagSet):777 -> a
    796:796:boolean isOk() -> f
    854:944:boolean equals(java.lang.Object) -> equals
    949:972:int hashCode() -> hashCode
    977:1005:java.lang.String toString() -> toString
    1026:1039:java.lang.String translateExceptionToString() -> g
    1047:1071:void <init>(com.mongodb.connection.ServerDescription$Builder) -> <init>
    1159:1159:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription$Builder.access$2200(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    1159:1159:void <init>(com.mongodb.connection.ServerDescription$Builder):1048 -> <init>
    2159:2159:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription$Builder.access$2300(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    2159:2159:void <init>(com.mongodb.connection.ServerDescription$Builder):1049 -> <init>
    3159:3159:com.mongodb.connection.ServerConnectionState com.mongodb.connection.ServerDescription$Builder.access$2400(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    3159:3159:void <init>(com.mongodb.connection.ServerDescription$Builder):1050 -> <init>
    4159:4159:java.lang.String com.mongodb.connection.ServerDescription$Builder.access$2500(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    4159:4159:void <init>(com.mongodb.connection.ServerDescription$Builder):1051 -> <init>
    5159:5159:java.util.Set com.mongodb.connection.ServerDescription$Builder.access$2600(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    5159:5159:void <init>(com.mongodb.connection.ServerDescription$Builder):1052 -> <init>
    6159:6159:java.util.Set com.mongodb.connection.ServerDescription$Builder.access$2700(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    6159:6159:void <init>(com.mongodb.connection.ServerDescription$Builder):1053 -> <init>
    7159:7159:java.util.Set com.mongodb.connection.ServerDescription$Builder.access$2800(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    7159:7159:void <init>(com.mongodb.connection.ServerDescription$Builder):1054 -> <init>
    8159:8159:java.lang.String com.mongodb.connection.ServerDescription$Builder.access$2900(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    8159:8159:void <init>(com.mongodb.connection.ServerDescription$Builder):1055 -> <init>
    9159:9159:int com.mongodb.connection.ServerDescription$Builder.access$3000(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    9159:9159:void <init>(com.mongodb.connection.ServerDescription$Builder):1056 -> <init>
    10159:10159:com.mongodb.TagSet com.mongodb.connection.ServerDescription$Builder.access$3100(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    10159:10159:void <init>(com.mongodb.connection.ServerDescription$Builder):1057 -> <init>
    11159:11159:java.lang.String com.mongodb.connection.ServerDescription$Builder.access$3200(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    11159:11159:void <init>(com.mongodb.connection.ServerDescription$Builder):1058 -> <init>
    12159:12159:long com.mongodb.connection.ServerDescription$Builder.access$3300(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    12159:12159:void <init>(com.mongodb.connection.ServerDescription$Builder):1059 -> <init>
    13159:13159:boolean com.mongodb.connection.ServerDescription$Builder.access$3400(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    13159:13159:void <init>(com.mongodb.connection.ServerDescription$Builder):1060 -> <init>
    14159:14159:int com.mongodb.connection.ServerDescription$Builder.access$3500(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    14159:14159:void <init>(com.mongodb.connection.ServerDescription$Builder):1061 -> <init>
    15159:15159:int com.mongodb.connection.ServerDescription$Builder.access$3600(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    15159:15159:void <init>(com.mongodb.connection.ServerDescription$Builder):1062 -> <init>
    16159:16159:org.bson.types.ObjectId com.mongodb.connection.ServerDescription$Builder.access$3700(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    16159:16159:void <init>(com.mongodb.connection.ServerDescription$Builder):1063 -> <init>
    17159:17159:java.lang.Integer com.mongodb.connection.ServerDescription$Builder.access$3800(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    17159:17159:void <init>(com.mongodb.connection.ServerDescription$Builder):1064 -> <init>
    18159:18159:com.mongodb.connection.TopologyVersion com.mongodb.connection.ServerDescription$Builder.access$3900(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    18159:18159:void <init>(com.mongodb.connection.ServerDescription$Builder):1065 -> <init>
    19159:19159:java.util.Date com.mongodb.connection.ServerDescription$Builder.access$4000(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    19159:19159:void <init>(com.mongodb.connection.ServerDescription$Builder):1066 -> <init>
    20159:20159:long com.mongodb.connection.ServerDescription$Builder.access$4100(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    20159:20159:void <init>(com.mongodb.connection.ServerDescription$Builder):1067 -> <init>
    21159:21159:java.lang.Integer com.mongodb.connection.ServerDescription$Builder.access$4200(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    21159:21159:void <init>(com.mongodb.connection.ServerDescription$Builder):1068 -> <init>
    22159:22159:boolean com.mongodb.connection.ServerDescription$Builder.access$4300(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    22159:22159:void <init>(com.mongodb.connection.ServerDescription$Builder):1069 -> <init>
    23159:23159:java.lang.Throwable com.mongodb.connection.ServerDescription$Builder.access$4400(com.mongodb.connection.ServerDescription$Builder):159:159 -> <init>
    23159:23159:void <init>(com.mongodb.connection.ServerDescription$Builder):1070 -> <init>
com.mongodb.connection.ServerDescription$Builder -> com.a.c.k$a:
    com.mongodb.ServerAddress address -> a
    com.mongodb.connection.ServerType type -> b
    java.lang.String canonicalAddress -> c
    java.util.Set hosts -> d
    java.util.Set passives -> e
    java.util.Set arbiters -> f
    java.lang.String primary -> g
    int maxDocumentSize -> h
    com.mongodb.TagSet tagSet -> i
    java.lang.String setName -> j
    long roundTripTimeNanos -> k
    boolean ok -> l
    com.mongodb.connection.ServerConnectionState state -> m
    int minWireVersion -> n
    int maxWireVersion -> o
    org.bson.types.ObjectId electionId -> p
    java.lang.Integer setVersion -> q
    com.mongodb.connection.TopologyVersion topologyVersion -> r
    java.util.Date lastWriteDate -> s
    long lastUpdateTimeNanos -> t
    java.lang.Integer logicalSessionTimeoutMinutes -> u
    boolean helloOk -> v
    java.lang.Throwable exception -> w
    161:186:void <init>() -> <init>
    1038:1038:long com.mongodb.internal.connection.Time.nanoTime():38:38 -> <init>
    1038:1038:void <init>():179 -> <init>
    161:211:void <init>(com.mongodb.connection.ServerDescription) -> <init>
    2038:2038:long com.mongodb.internal.connection.Time.nanoTime():38:38 -> <init>
    2038:2038:void <init>(com.mongodb.connection.ServerDescription):179 -> <init>
    2050:2050:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.access$000(com.mongodb.connection.ServerDescription):50:50 -> <init>
    2050:2050:void <init>(com.mongodb.connection.ServerDescription):189 -> <init>
    3050:3050:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.access$100(com.mongodb.connection.ServerDescription):50:50 -> <init>
    3050:3050:void <init>(com.mongodb.connection.ServerDescription):190 -> <init>
    4050:4050:java.lang.String com.mongodb.connection.ServerDescription.access$200(com.mongodb.connection.ServerDescription):50:50 -> <init>
    4050:4050:void <init>(com.mongodb.connection.ServerDescription):191 -> <init>
    5050:5050:java.util.Set com.mongodb.connection.ServerDescription.access$300(com.mongodb.connection.ServerDescription):50:50 -> <init>
    5050:5050:void <init>(com.mongodb.connection.ServerDescription):192 -> <init>
    6050:6050:java.util.Set com.mongodb.connection.ServerDescription.access$400(com.mongodb.connection.ServerDescription):50:50 -> <init>
    6050:6050:void <init>(com.mongodb.connection.ServerDescription):193 -> <init>
    7050:7050:java.util.Set com.mongodb.connection.ServerDescription.access$500(com.mongodb.connection.ServerDescription):50:50 -> <init>
    7050:7050:void <init>(com.mongodb.connection.ServerDescription):194 -> <init>
    8050:8050:java.lang.String com.mongodb.connection.ServerDescription.access$600(com.mongodb.connection.ServerDescription):50:50 -> <init>
    8050:8050:void <init>(com.mongodb.connection.ServerDescription):195 -> <init>
    9050:9050:int com.mongodb.connection.ServerDescription.access$700(com.mongodb.connection.ServerDescription):50:50 -> <init>
    9050:9050:void <init>(com.mongodb.connection.ServerDescription):196 -> <init>
    10050:10050:com.mongodb.TagSet com.mongodb.connection.ServerDescription.access$800(com.mongodb.connection.ServerDescription):50:50 -> <init>
    10050:10050:void <init>(com.mongodb.connection.ServerDescription):197 -> <init>
    11050:11050:java.lang.String com.mongodb.connection.ServerDescription.access$900(com.mongodb.connection.ServerDescription):50:50 -> <init>
    11050:11050:void <init>(com.mongodb.connection.ServerDescription):198 -> <init>
    12050:12050:long com.mongodb.connection.ServerDescription.access$1000(com.mongodb.connection.ServerDescription):50:50 -> <init>
    12050:12050:void <init>(com.mongodb.connection.ServerDescription):199 -> <init>
    13050:13050:boolean com.mongodb.connection.ServerDescription.access$1100(com.mongodb.connection.ServerDescription):50:50 -> <init>
    13050:13050:void <init>(com.mongodb.connection.ServerDescription):200 -> <init>
    14050:14050:com.mongodb.connection.ServerConnectionState com.mongodb.connection.ServerDescription.access$1200(com.mongodb.connection.ServerDescription):50:50 -> <init>
    14050:14050:void <init>(com.mongodb.connection.ServerDescription):201 -> <init>
    15050:15050:int com.mongodb.connection.ServerDescription.access$1300(com.mongodb.connection.ServerDescription):50:50 -> <init>
    15050:15050:void <init>(com.mongodb.connection.ServerDescription):202 -> <init>
    16050:16050:int com.mongodb.connection.ServerDescription.access$1400(com.mongodb.connection.ServerDescription):50:50 -> <init>
    16050:16050:void <init>(com.mongodb.connection.ServerDescription):203 -> <init>
    17050:17050:org.bson.types.ObjectId com.mongodb.connection.ServerDescription.access$1500(com.mongodb.connection.ServerDescription):50:50 -> <init>
    17050:17050:void <init>(com.mongodb.connection.ServerDescription):204 -> <init>
    18050:18050:java.lang.Integer com.mongodb.connection.ServerDescription.access$1600(com.mongodb.connection.ServerDescription):50:50 -> <init>
    18050:18050:void <init>(com.mongodb.connection.ServerDescription):205 -> <init>
    19050:19050:com.mongodb.connection.TopologyVersion com.mongodb.connection.ServerDescription.access$1700(com.mongodb.connection.ServerDescription):50:50 -> <init>
    19050:19050:void <init>(com.mongodb.connection.ServerDescription):206 -> <init>
    20050:20050:java.util.Date com.mongodb.connection.ServerDescription.access$1800(com.mongodb.connection.ServerDescription):50:50 -> <init>
    20050:20050:void <init>(com.mongodb.connection.ServerDescription):207 -> <init>
    21050:21050:long com.mongodb.connection.ServerDescription.access$1900(com.mongodb.connection.ServerDescription):50:50 -> <init>
    21050:21050:void <init>(com.mongodb.connection.ServerDescription):208 -> <init>
    22050:22050:java.lang.Integer com.mongodb.connection.ServerDescription.access$2000(com.mongodb.connection.ServerDescription):50:50 -> <init>
    22050:22050:void <init>(com.mongodb.connection.ServerDescription):209 -> <init>
    23050:23050:java.lang.Throwable com.mongodb.connection.ServerDescription.access$2100(com.mongodb.connection.ServerDescription):50:50 -> <init>
    23050:23050:void <init>(com.mongodb.connection.ServerDescription):210 -> <init>
    244:245:com.mongodb.connection.ServerDescription$Builder type(com.mongodb.connection.ServerType) -> a
    256:257:com.mongodb.connection.ServerDescription$Builder hosts(java.util.Set) -> a
    268:269:com.mongodb.connection.ServerDescription$Builder passives(java.util.Set) -> b
    280:281:com.mongodb.connection.ServerDescription$Builder arbiters(java.util.Set) -> c
    313:314:com.mongodb.connection.ServerDescription$Builder tagSet(com.mongodb.TagSet) -> a
    325:326:com.mongodb.connection.ServerDescription$Builder roundTripTime(long,java.util.concurrent.TimeUnit) -> a
    415:416:com.mongodb.connection.ServerDescription$Builder topologyVersion(com.mongodb.connection.TopologyVersion) -> a
    490:490:com.mongodb.connection.ServerDescription build() -> a
com.mongodb.connection.ServerId -> com.a.c.l:
    com.mongodb.connection.ClusterId clusterId -> a
    com.mongodb.ServerAddress address -> b
    40:43:void <init>(com.mongodb.connection.ClusterId,com.mongodb.ServerAddress) -> <init>
    64:80:boolean equals(java.lang.Object) -> equals
    85:87:int hashCode() -> hashCode
    92:92:java.lang.String toString() -> toString
com.mongodb.connection.ServerSettings -> com.a.c.m:
    long heartbeatFrequencyMS -> a
    long minHeartbeatFrequencyMS -> b
    java.util.List serverListeners -> c
    java.util.List serverMonitorListeners -> d
    50:50:com.mongodb.connection.ServerSettings$Builder builder() -> a
    204:204:long getHeartbeatFrequency(java.util.concurrent.TimeUnit) -> a
    215:215:long getMinHeartbeatFrequency(java.util.concurrent.TimeUnit) -> b
    240:263:boolean equals(java.lang.Object) -> equals
    268:272:int hashCode() -> hashCode
    277:277:java.lang.String toString() -> toString
    285:290:void <init>(com.mongodb.connection.ServerSettings$Builder) -> <init>
    1068:1068:long com.mongodb.connection.ServerSettings$Builder.access$500(com.mongodb.connection.ServerSettings$Builder):68:68 -> <init>
    1068:1068:void <init>(com.mongodb.connection.ServerSettings$Builder):286 -> <init>
    2068:2068:long com.mongodb.connection.ServerSettings$Builder.access$600(com.mongodb.connection.ServerSettings$Builder):68:68 -> <init>
    2068:2068:void <init>(com.mongodb.connection.ServerSettings$Builder):287 -> <init>
    3068:3068:java.util.List com.mongodb.connection.ServerSettings$Builder.access$700(com.mongodb.connection.ServerSettings$Builder):68:68 -> <init>
    3068:3068:void <init>(com.mongodb.connection.ServerSettings$Builder):288 -> <init>
    4068:4068:java.util.List com.mongodb.connection.ServerSettings$Builder.access$800(com.mongodb.connection.ServerSettings$Builder):68:68 -> <init>
    4068:4068:void <init>(com.mongodb.connection.ServerSettings$Builder):289 -> <init>
com.mongodb.connection.ServerSettings$Builder -> com.a.c.m$a:
    long heartbeatFrequencyMS -> a
    long minHeartbeatFrequencyMS -> b
    java.util.List serverListeners -> c
    java.util.List serverMonitorListeners -> d
    69:75:void <init>() -> <init>
    87:92:com.mongodb.connection.ServerSettings$Builder applySettings(com.mongodb.connection.ServerSettings) -> a
    1038:1038:long com.mongodb.connection.ServerSettings.access$100(com.mongodb.connection.ServerSettings):38:38 -> a
    1038:1038:com.mongodb.connection.ServerSettings$Builder applySettings(com.mongodb.connection.ServerSettings):88 -> a
    2038:2038:long com.mongodb.connection.ServerSettings.access$200(com.mongodb.connection.ServerSettings):38:38 -> a
    2038:2038:com.mongodb.connection.ServerSettings$Builder applySettings(com.mongodb.connection.ServerSettings):89 -> a
    3038:3038:java.util.List com.mongodb.connection.ServerSettings.access$300(com.mongodb.connection.ServerSettings):38:38 -> a
    3038:3038:com.mongodb.connection.ServerSettings$Builder applySettings(com.mongodb.connection.ServerSettings):90 -> a
    4038:4038:java.util.List com.mongodb.connection.ServerSettings.access$400(com.mongodb.connection.ServerSettings):38:38 -> a
    4038:4038:com.mongodb.connection.ServerSettings$Builder applySettings(com.mongodb.connection.ServerSettings):91 -> a
    141:143:com.mongodb.connection.ServerSettings$Builder serverListenerList(java.util.List) -> a
    167:169:com.mongodb.connection.ServerSettings$Builder serverMonitorListenerList(java.util.List) -> b
    193:193:com.mongodb.connection.ServerSettings build() -> a
    68:68:void <init>(byte) -> <init>
com.mongodb.connection.ServerType -> com.a.c.n:
    com.mongodb.connection.ServerType STANDALONE -> a
    com.mongodb.connection.ServerType REPLICA_SET_PRIMARY -> b
    com.mongodb.connection.ServerType REPLICA_SET_SECONDARY -> c
    com.mongodb.connection.ServerType REPLICA_SET_ARBITER -> d
    com.mongodb.connection.ServerType REPLICA_SET_OTHER -> e
    com.mongodb.connection.ServerType REPLICA_SET_GHOST -> f
    com.mongodb.connection.ServerType SHARD_ROUTER -> g
    com.mongodb.connection.ServerType LOAD_BALANCER -> h
    com.mongodb.connection.ServerType UNKNOWN -> i
    com.mongodb.connection.ServerType[] $VALUES -> j
    24:24:com.mongodb.connection.ServerType[] values() -> values
    24:24:com.mongodb.connection.ServerType valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    com.mongodb.connection.ClusterType getClusterType() -> a
    24:24:void <init>(java.lang.String,int,byte) -> <init>
    24:108:void <clinit>() -> <clinit>
    1024:1024:com.mongodb.connection.ServerType[] $values():24:24 -> <clinit>
    1024:1024:void <clinit>():24 -> <clinit>
com.mongodb.connection.ServerType$1 -> com.a.c.n$1:
    28:28:void <init>(java.lang.String,int) -> <init>
    31:31:com.mongodb.connection.ClusterType getClusterType() -> a
com.mongodb.connection.ServerType$2 -> com.a.c.n$2:
    38:38:void <init>(java.lang.String,int) -> <init>
    41:41:com.mongodb.connection.ClusterType getClusterType() -> a
com.mongodb.connection.ServerType$3 -> com.a.c.n$3:
    48:48:void <init>(java.lang.String,int) -> <init>
    51:51:com.mongodb.connection.ClusterType getClusterType() -> a
com.mongodb.connection.ServerType$4 -> com.a.c.n$4:
    58:58:void <init>(java.lang.String,int) -> <init>
    61:61:com.mongodb.connection.ClusterType getClusterType() -> a
com.mongodb.connection.ServerType$5 -> com.a.c.n$5:
    68:68:void <init>(java.lang.String,int) -> <init>
    71:71:com.mongodb.connection.ClusterType getClusterType() -> a
com.mongodb.connection.ServerType$6 -> com.a.c.n$6:
    78:78:void <init>(java.lang.String,int) -> <init>
    81:81:com.mongodb.connection.ClusterType getClusterType() -> a
com.mongodb.connection.ServerType$7 -> com.a.c.n$7:
    88:88:void <init>(java.lang.String,int) -> <init>
    91:91:com.mongodb.connection.ClusterType getClusterType() -> a
com.mongodb.connection.ServerType$8 -> com.a.c.n$8:
    98:98:void <init>(java.lang.String,int) -> <init>
    101:101:com.mongodb.connection.ClusterType getClusterType() -> a
com.mongodb.connection.ServerType$9 -> com.a.c.n$9:
    108:108:void <init>(java.lang.String,int) -> <init>
    111:111:com.mongodb.connection.ClusterType getClusterType() -> a
com.mongodb.connection.SocketSettings -> com.a.c.o:
    long connectTimeoutMS -> a
    long readTimeoutMS -> b
    int receiveBufferSize -> c
    int sendBufferSize -> d
    44:44:com.mongodb.connection.SocketSettings$Builder builder() -> a
    172:172:int getConnectTimeout(java.util.concurrent.TimeUnit) -> a
    182:182:int getReadTimeout(java.util.concurrent.TimeUnit) -> b
    204:226:boolean equals(java.lang.Object) -> equals
    231:235:int hashCode() -> hashCode
    240:240:java.lang.String toString() -> toString
    248:253:void <init>(com.mongodb.connection.SocketSettings$Builder) -> <init>
    1061:1061:long com.mongodb.connection.SocketSettings$Builder.access$600(com.mongodb.connection.SocketSettings$Builder):61:61 -> <init>
    1061:1061:void <init>(com.mongodb.connection.SocketSettings$Builder):249 -> <init>
    2061:2061:long com.mongodb.connection.SocketSettings$Builder.access$700(com.mongodb.connection.SocketSettings$Builder):61:61 -> <init>
    2061:2061:void <init>(com.mongodb.connection.SocketSettings$Builder):250 -> <init>
    3061:3061:int com.mongodb.connection.SocketSettings$Builder.access$800(com.mongodb.connection.SocketSettings$Builder):61:61 -> <init>
    3061:3061:void <init>(com.mongodb.connection.SocketSettings$Builder):251 -> <init>
    4061:4061:int com.mongodb.connection.SocketSettings$Builder.access$900(com.mongodb.connection.SocketSettings$Builder):61:61 -> <init>
    4061:4061:void <init>(com.mongodb.connection.SocketSettings$Builder):252 -> <init>
    33:33:void <init>(com.mongodb.connection.SocketSettings$Builder,byte) -> <init>
com.mongodb.connection.SocketSettings$Builder -> com.a.c.o$a:
    long connectTimeoutMS -> a
    long readTimeoutMS -> b
    int receiveBufferSize -> c
    int sendBufferSize -> d
    62:68:void <init>() -> <init>
    96:97:com.mongodb.connection.SocketSettings$Builder connectTimeout(int,java.util.concurrent.TimeUnit) -> a
    108:109:com.mongodb.connection.SocketSettings$Builder readTimeout(int,java.util.concurrent.TimeUnit) -> b
    161:161:com.mongodb.connection.SocketSettings build() -> a
    61:61:void <init>(byte) -> <init>
com.mongodb.connection.SocketStreamFactory -> com.a.c.p:
    com.mongodb.connection.SocketSettings settings -> a
    com.mongodb.connection.SslSettings sslSettings -> b
    javax.net.SocketFactory socketFactory -> c
    com.mongodb.connection.BufferProvider bufferProvider -> d
    52:53:void <init>(com.mongodb.connection.SocketSettings,com.mongodb.connection.SslSettings) -> <init>
    43:66:void <init>(com.mongodb.connection.SocketSettings,com.mongodb.connection.SslSettings,javax.net.SocketFactory) -> <init>
    71:85:net.kyori.adventure.sound.Sound$Type create$58f06e8f(com.mongodb.ServerAddress) -> a
    1163:1163:boolean com.mongodb.connection.SslSettings.isEnabled():163:163 -> a
    1163:1163:net.kyori.adventure.sound.Sound$Type create$58f06e8f(com.mongodb.ServerAddress):72 -> a
    2163:2163:boolean com.mongodb.connection.SslSettings.isEnabled():163:163 -> a
    2163:2163:net.kyori.adventure.sound.Sound$Type create$58f06e8f(com.mongodb.ServerAddress):79 -> a
    90:92:javax.net.ssl.SSLContext getSslContext() -> a
    2186:2186:javax.net.ssl.SSLContext com.mongodb.connection.SslSettings.getContext():186:186 -> a
    2186:2186:javax.net.ssl.SSLContext getSslContext():90 -> a
com.mongodb.connection.SslSettings -> com.a.c.q:
    boolean enabled -> a
    boolean invalidHostNameAllowed -> b
    javax.net.ssl.SSLContext context -> c
    46:46:com.mongodb.connection.SslSettings$Builder builder() -> a
    189:193:void <init>(com.mongodb.connection.SslSettings$Builder) -> <init>
    1064:1064:boolean com.mongodb.connection.SslSettings$Builder.access$400(com.mongodb.connection.SslSettings$Builder):64:64 -> <init>
    1064:1064:void <init>(com.mongodb.connection.SslSettings$Builder):190 -> <init>
    2064:2064:boolean com.mongodb.connection.SslSettings$Builder.access$500(com.mongodb.connection.SslSettings$Builder):64:64 -> <init>
    2064:2064:void <init>(com.mongodb.connection.SslSettings$Builder):191 -> <init>
    3064:3064:javax.net.ssl.SSLContext com.mongodb.connection.SslSettings$Builder.access$600(com.mongodb.connection.SslSettings$Builder):64:64 -> <init>
    3064:3064:void <init>(com.mongodb.connection.SslSettings$Builder):192 -> <init>
    197:212:boolean equals(java.lang.Object) -> equals
    217:220:int hashCode() -> hashCode
    225:225:java.lang.String toString() -> toString
com.mongodb.connection.SslSettings$Builder -> com.a.c.q$a:
    boolean enabled -> a
    boolean invalidHostNameAllowed -> b
    javax.net.ssl.SSLContext context -> c
    69:70:void <init>() -> <init>
    64:64:void <init>(byte) -> <init>
com.mongodb.connection.StreamFactory -> com.a.c.r:
    net.kyori.adventure.sound.Sound$Type create$58f06e8f(com.mongodb.ServerAddress) -> a
com.mongodb.connection.TopologyVersion -> com.a.c.s:
    org.bson.types.ObjectId processId -> a
    long counter -> b
    41:44:void <init>(org.bson.BsonDocument) -> <init>
    1054:1054:org.bson.types.ObjectId org.bson.BsonObjectId.getValue():54:54 -> <init>
    1054:1054:void <init>(org.bson.BsonDocument):42 -> <init>
    1202:1203:org.bson.BsonInt64 org.bson.BsonDocument.getInt64(java.lang.Object):202:203 -> <init>
    1202:1203:void <init>(org.bson.BsonDocument):43 -> <init>
    2054:2054:long org.bson.BsonInt64.getValue():54:54 -> <init>
    2054:2054:void <init>(org.bson.BsonDocument):43 -> <init>
    88:100:boolean equals(java.lang.Object) -> equals
    105:107:int hashCode() -> hashCode
    112:112:java.lang.String toString() -> toString
com.mongodb.event.ClusterClosedEvent -> com.a.d.a:
    com.mongodb.connection.ClusterId clusterId -> a
    37:39:void <init>(com.mongodb.connection.ClusterId) -> <init>
    52:52:java.lang.String toString() -> toString
com.mongodb.event.ClusterDescriptionChangedEvent -> com.a.d.b:
    com.mongodb.connection.ClusterId clusterId -> a
    com.mongodb.connection.ClusterDescription newDescription -> b
    com.mongodb.connection.ClusterDescription previousDescription -> c
    42:46:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription) -> <init>
    77:77:java.lang.String toString() -> toString
com.mongodb.event.ClusterListener -> com.a.d.c:
    40:40:void clusterOpening(com.mongodb.event.ClusterOpeningEvent) -> a
    48:48:void clusterClosed(com.mongodb.event.ClusterClosedEvent) -> a
    56:56:void clusterDescriptionChanged(com.mongodb.event.ClusterDescriptionChangedEvent) -> a
    1037:1037:void com.mongodb.event.ConnectionPoolListener.connectionPoolOpened(com.mongodb.event.ConnectionPoolOpenedEvent):37:37 -> a
    1046:1046:void com.mongodb.event.ConnectionPoolListener.connectionPoolCreated(com.mongodb.event.ConnectionPoolCreatedEvent):46:46 -> a
    1055:1055:void com.mongodb.event.ConnectionPoolListener.connectionPoolCleared(com.mongodb.event.ConnectionPoolClearedEvent):55:55 -> a
    1064:1064:void com.mongodb.event.ConnectionPoolListener.connectionPoolReady(com.mongodb.event.ConnectionPoolReadyEvent):64:64 -> a
    1072:1072:void com.mongodb.event.ConnectionPoolListener.connectionPoolClosed(com.mongodb.event.ConnectionPoolClosedEvent):72:72 -> a
    1081:1081:void com.mongodb.event.ConnectionPoolListener.connectionCheckOutStarted(com.mongodb.event.ConnectionCheckOutStartedEvent):81:81 -> a
    1089:1089:void com.mongodb.event.ConnectionPoolListener.connectionCheckedOut(com.mongodb.event.ConnectionCheckedOutEvent):89:89 -> a
    1098:1098:void com.mongodb.event.ConnectionPoolListener.connectionCheckOutFailed(com.mongodb.event.ConnectionCheckOutFailedEvent):98:98 -> a
    1106:1106:void com.mongodb.event.ConnectionPoolListener.connectionCheckedIn(com.mongodb.event.ConnectionCheckedInEvent):106:106 -> a
    1118:1118:void com.mongodb.event.ConnectionPoolListener.connectionAdded(com.mongodb.event.ConnectionAddedEvent):118:118 -> a
    1127:1127:void com.mongodb.event.ConnectionPoolListener.connectionCreated(com.mongodb.event.ConnectionCreatedEvent):127:127 -> a
    1136:1136:void com.mongodb.event.ConnectionPoolListener.connectionReady(com.mongodb.event.ConnectionReadyEvent):136:136 -> a
    1148:1148:void com.mongodb.event.ConnectionPoolListener.connectionRemoved(com.mongodb.event.ConnectionRemovedEvent):148:148 -> a
    1157:1157:void com.mongodb.event.ConnectionPoolListener.connectionClosed(com.mongodb.event.ConnectionClosedEvent):157:157 -> a
    2038:2038:void com.mongodb.event.ServerListener.serverOpening(com.mongodb.event.ServerOpeningEvent):38:38 -> a
    2046:2046:void com.mongodb.event.ServerListener.serverClosed(com.mongodb.event.ServerClosedEvent):46:46 -> a
    2054:2054:void com.mongodb.event.ServerListener.serverDescriptionChanged(com.mongodb.event.ServerDescriptionChangedEvent):54:54 -> a
    3040:3040:void com.mongodb.event.ServerMonitorListener.serverHearbeatStarted(com.mongodb.event.ServerHeartbeatStartedEvent):40:40 -> a
    3048:3048:void com.mongodb.event.ServerMonitorListener.serverHeartbeatSucceeded(com.mongodb.event.ServerHeartbeatSucceededEvent):48:48 -> a
    3056:3056:void com.mongodb.event.ServerMonitorListener.serverHeartbeatFailed(com.mongodb.event.ServerHeartbeatFailedEvent):56:56 -> a
com.mongodb.event.ClusterOpeningEvent -> com.a.d.d:
    com.mongodb.connection.ClusterId clusterId -> a
    37:39:void <init>(com.mongodb.connection.ClusterId) -> <init>
    53:53:java.lang.String toString() -> toString
com.mongodb.event.CommandEvent -> com.a.d.e:
    44:49:void <init>(com.mongodb.RequestContext,int,com.mongodb.connection.ConnectionDescription,java.lang.String) -> <init>
com.mongodb.event.CommandFailedEvent -> com.a.d.f:
    50:54:void <init>(com.mongodb.RequestContext,int,com.mongodb.connection.ConnectionDescription,java.lang.String,long,java.lang.Throwable) -> <init>
com.mongodb.event.CommandStartedEvent -> com.a.d.g:
    47:50:void <init>(com.mongodb.RequestContext,int,com.mongodb.connection.ConnectionDescription,java.lang.String,java.lang.String,org.bson.BsonDocument) -> <init>
com.mongodb.event.CommandSucceededEvent -> com.a.d.h:
    50:54:void <init>(com.mongodb.RequestContext,int,com.mongodb.connection.ConnectionDescription,java.lang.String,org.bson.BsonDocument,long) -> <init>
com.mongodb.event.ConnectionAddedEvent -> com.a.d.i:
    com.mongodb.connection.ConnectionId connectionId -> a
    38:40:void <init>(com.mongodb.connection.ConnectionId) -> <init>
    53:53:java.lang.String toString() -> toString
com.mongodb.event.ConnectionCheckOutFailedEvent -> com.a.d.j:
    com.mongodb.connection.ServerId serverId -> a
    com.mongodb.event.ConnectionCheckOutFailedEvent$Reason reason -> b
    64:67:void <init>(com.mongodb.connection.ServerId,com.mongodb.event.ConnectionCheckOutFailedEvent$Reason) -> <init>
    90:92:java.lang.String toString() -> toString
    1059:1059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> toString
    1059:1059:java.lang.String toString():91 -> toString
    2051:2051:com.mongodb.connection.ClusterId com.mongodb.connection.ServerId.getClusterId():51:51 -> toString
    2051:2051:java.lang.String toString():92 -> toString
com.mongodb.event.ConnectionCheckOutFailedEvent$Reason -> com.a.d.j$a:
    com.mongodb.event.ConnectionCheckOutFailedEvent$Reason POOL_CLOSED -> a
    com.mongodb.event.ConnectionCheckOutFailedEvent$Reason TIMEOUT -> b
    com.mongodb.event.ConnectionCheckOutFailedEvent$Reason CONNECTION_ERROR -> c
    com.mongodb.event.ConnectionCheckOutFailedEvent$Reason UNKNOWN -> d
    com.mongodb.event.ConnectionCheckOutFailedEvent$Reason[] $VALUES -> e
    33:33:com.mongodb.event.ConnectionCheckOutFailedEvent$Reason[] values() -> values
    33:33:com.mongodb.event.ConnectionCheckOutFailedEvent$Reason valueOf(java.lang.String) -> valueOf
    33:33:void <init>(java.lang.String,int) -> <init>
    33:52:void <clinit>() -> <clinit>
    1033:1033:com.mongodb.event.ConnectionCheckOutFailedEvent$Reason[] $values():33:33 -> <clinit>
    1033:1033:void <clinit>():33 -> <clinit>
com.mongodb.event.ConnectionCheckOutStartedEvent -> com.a.d.k:
    com.mongodb.connection.ServerId serverId -> a
    36:38:void <init>(com.mongodb.connection.ServerId) -> <init>
    51:53:java.lang.String toString() -> toString
    1059:1059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> toString
    1059:1059:java.lang.String toString():52 -> toString
    2051:2051:com.mongodb.connection.ClusterId com.mongodb.connection.ServerId.getClusterId():51:51 -> toString
    2051:2051:java.lang.String toString():53 -> toString
com.mongodb.event.ConnectionCheckedInEvent -> com.a.d.l:
    com.mongodb.connection.ConnectionId connectionId -> a
    36:38:void <init>(com.mongodb.connection.ConnectionId) -> <init>
    51:54:java.lang.String toString() -> toString
    1097:1097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    1097:1097:java.lang.String toString():53 -> toString
    2059:2059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> toString
    2059:2059:java.lang.String toString():53 -> toString
    2097:2097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    2097:2097:java.lang.String toString():54 -> toString
    3051:3051:com.mongodb.connection.ClusterId com.mongodb.connection.ServerId.getClusterId():51:51 -> toString
    3051:3051:java.lang.String toString():54 -> toString
com.mongodb.event.ConnectionCheckedOutEvent -> com.a.d.m:
    com.mongodb.connection.ConnectionId connectionId -> a
    36:38:void <init>(com.mongodb.connection.ConnectionId) -> <init>
    51:54:java.lang.String toString() -> toString
    1097:1097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    1097:1097:java.lang.String toString():53 -> toString
    2059:2059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> toString
    2059:2059:java.lang.String toString():53 -> toString
    2097:2097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    2097:2097:java.lang.String toString():54 -> toString
    3051:3051:com.mongodb.connection.ClusterId com.mongodb.connection.ServerId.getClusterId():51:51 -> toString
    3051:3051:java.lang.String toString():54 -> toString
com.mongodb.event.ConnectionClosedEvent -> com.a.d.n:
    com.mongodb.connection.ConnectionId connectionId -> a
    com.mongodb.event.ConnectionClosedEvent$Reason reason -> b
    64:67:void <init>(com.mongodb.connection.ConnectionId,com.mongodb.event.ConnectionClosedEvent$Reason) -> <init>
    89:92:java.lang.String toString() -> toString
    1097:1097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    1097:1097:java.lang.String toString():91 -> toString
    2059:2059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> toString
    2059:2059:java.lang.String toString():91 -> toString
    2097:2097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    2097:2097:java.lang.String toString():92 -> toString
    3051:3051:com.mongodb.connection.ClusterId com.mongodb.connection.ServerId.getClusterId():51:51 -> toString
    3051:3051:java.lang.String toString():92 -> toString
com.mongodb.event.ConnectionClosedEvent$Reason -> com.a.d.n$a:
    com.mongodb.event.ConnectionClosedEvent$Reason STALE -> a
    com.mongodb.event.ConnectionClosedEvent$Reason IDLE -> b
    com.mongodb.event.ConnectionClosedEvent$Reason ERROR -> c
    com.mongodb.event.ConnectionClosedEvent$Reason POOL_CLOSED -> d
    com.mongodb.event.ConnectionClosedEvent$Reason[] $VALUES -> e
    33:33:com.mongodb.event.ConnectionClosedEvent$Reason[] values() -> values
    33:33:com.mongodb.event.ConnectionClosedEvent$Reason valueOf(java.lang.String) -> valueOf
    33:33:void <init>(java.lang.String,int) -> <init>
    33:52:void <clinit>() -> <clinit>
    1033:1033:com.mongodb.event.ConnectionClosedEvent$Reason[] $values():33:33 -> <clinit>
    1033:1033:void <clinit>():33 -> <clinit>
com.mongodb.event.ConnectionCreatedEvent -> com.a.d.o:
    com.mongodb.connection.ConnectionId connectionId -> a
    36:38:void <init>(com.mongodb.connection.ConnectionId) -> <init>
    51:54:java.lang.String toString() -> toString
    1097:1097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    1097:1097:java.lang.String toString():53 -> toString
    2059:2059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> toString
    2059:2059:java.lang.String toString():53 -> toString
    2097:2097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    2097:2097:java.lang.String toString():54 -> toString
    3051:3051:com.mongodb.connection.ClusterId com.mongodb.connection.ServerId.getClusterId():51:51 -> toString
    3051:3051:java.lang.String toString():54 -> toString
com.mongodb.event.ConnectionPoolClearedEvent -> com.a.d.p:
    com.mongodb.connection.ServerId serverId -> a
    org.bson.types.ObjectId serviceId -> b
    40:41:void <init>(com.mongodb.connection.ServerId) -> <init>
    50:53:void <init>(com.mongodb.connection.ServerId,org.bson.types.ObjectId) -> <init>
    82:82:java.lang.String toString() -> toString
com.mongodb.event.ConnectionPoolClosedEvent -> com.a.d.q:
    com.mongodb.connection.ServerId serverId -> a
    36:38:void <init>(com.mongodb.connection.ServerId) -> <init>
    51:51:java.lang.String toString() -> toString
com.mongodb.event.ConnectionPoolCreatedEvent -> com.a.d.r:
    com.mongodb.connection.ServerId serverId -> a
    com.mongodb.connection.ConnectionPoolSettings settings -> b
    39:42:void <init>(com.mongodb.connection.ServerId,com.mongodb.connection.ConnectionPoolSettings) -> <init>
    64:64:java.lang.String toString() -> toString
com.mongodb.event.ConnectionPoolOpenedEvent -> com.a.d.s:
    com.mongodb.connection.ServerId serverId -> a
    com.mongodb.connection.ConnectionPoolSettings settings -> b
    41:44:void <init>(com.mongodb.connection.ServerId,com.mongodb.connection.ConnectionPoolSettings) -> <init>
    66:66:java.lang.String toString() -> toString
com.mongodb.event.ConnectionPoolReadyEvent -> com.a.d.t:
    com.mongodb.connection.ServerId serverId -> a
    36:38:void <init>(com.mongodb.connection.ServerId) -> <init>
    51:51:java.lang.String toString() -> toString
com.mongodb.event.ConnectionReadyEvent -> com.a.d.u:
    com.mongodb.connection.ConnectionId connectionId -> a
    36:38:void <init>(com.mongodb.connection.ConnectionId) -> <init>
    51:54:java.lang.String toString() -> toString
    1097:1097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    1097:1097:java.lang.String toString():53 -> toString
    2059:2059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> toString
    2059:2059:java.lang.String toString():53 -> toString
    2097:2097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    2097:2097:java.lang.String toString():54 -> toString
    3051:3051:com.mongodb.connection.ClusterId com.mongodb.connection.ServerId.getClusterId():51:51 -> toString
    3051:3051:java.lang.String toString():54 -> toString
com.mongodb.event.ConnectionRemovedEvent -> com.a.d.v:
    com.mongodb.connection.ConnectionId connectionId -> a
    com.mongodb.event.ConnectionRemovedEvent$Reason reason -> b
    77:80:void <init>(com.mongodb.connection.ConnectionId,com.mongodb.event.ConnectionRemovedEvent$Reason) -> <init>
    104:107:java.lang.String toString() -> toString
    1097:1097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    1097:1097:java.lang.String toString():106 -> toString
    2059:2059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> toString
    2059:2059:java.lang.String toString():106 -> toString
    2097:2097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    2097:2097:java.lang.String toString():107 -> toString
    3051:3051:com.mongodb.connection.ClusterId com.mongodb.connection.ServerId.getClusterId():51:51 -> toString
    3051:3051:java.lang.String toString():107 -> toString
com.mongodb.event.ConnectionRemovedEvent$Reason -> com.a.d.v$a:
    com.mongodb.event.ConnectionRemovedEvent$Reason UNKNOWN -> a
    com.mongodb.event.ConnectionRemovedEvent$Reason STALE -> b
    com.mongodb.event.ConnectionRemovedEvent$Reason MAX_IDLE_TIME_EXCEEDED -> c
    com.mongodb.event.ConnectionRemovedEvent$Reason MAX_LIFE_TIME_EXCEEDED -> f
    com.mongodb.event.ConnectionRemovedEvent$Reason ERROR -> d
    com.mongodb.event.ConnectionRemovedEvent$Reason POOL_CLOSED -> e
    com.mongodb.event.ConnectionRemovedEvent$Reason[] $VALUES -> g
    35:35:com.mongodb.event.ConnectionRemovedEvent$Reason[] values() -> values
    35:35:com.mongodb.event.ConnectionRemovedEvent$Reason valueOf(java.lang.String) -> valueOf
    35:35:void <init>(java.lang.String,int) -> <init>
    35:64:void <clinit>() -> <clinit>
    1035:1035:com.mongodb.event.ConnectionRemovedEvent$Reason[] $values():35:35 -> <clinit>
    1035:1035:void <clinit>():35 -> <clinit>
com.mongodb.event.ServerClosedEvent -> com.a.d.w:
    com.mongodb.connection.ServerId serverId -> a
    36:38:void <init>(com.mongodb.connection.ServerId) -> <init>
    51:51:java.lang.String toString() -> toString
com.mongodb.event.ServerDescriptionChangedEvent -> com.a.d.x:
    com.mongodb.connection.ServerId serverId -> b
    com.mongodb.connection.ServerDescription newDescription -> a
    com.mongodb.connection.ServerDescription previousDescription -> c
    43:47:void <init>(com.mongodb.connection.ServerId,com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription) -> <init>
    79:79:java.lang.String toString() -> toString
com.mongodb.event.ServerHeartbeatFailedEvent -> com.a.d.y:
    com.mongodb.connection.ConnectionId connectionId -> a
    long elapsedTimeNanos -> b
    boolean awaited -> c
    java.lang.Throwable throwable -> d
    60:66:void <init>(com.mongodb.connection.ConnectionId,long,boolean,java.lang.Throwable) -> <init>
    111:118:java.lang.String toString() -> toString
    1097:1097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    1097:1097:java.lang.String toString():113 -> toString
    2059:2059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> toString
    2059:2059:java.lang.String toString():113 -> toString
    2097:2097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    2097:2097:java.lang.String toString():114 -> toString
    3051:3051:com.mongodb.connection.ClusterId com.mongodb.connection.ServerId.getClusterId():51:51 -> toString
    3051:3051:java.lang.String toString():114 -> toString
com.mongodb.event.ServerHeartbeatStartedEvent -> com.a.d.z:
    com.mongodb.connection.ConnectionId connectionId -> a
    36:38:void <init>(com.mongodb.connection.ConnectionId) -> <init>
    51:55:java.lang.String toString() -> toString
    1097:1097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    1097:1097:java.lang.String toString():53 -> toString
    2059:2059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> toString
    2059:2059:java.lang.String toString():53 -> toString
    2097:2097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    2097:2097:java.lang.String toString():54 -> toString
    3051:3051:com.mongodb.connection.ClusterId com.mongodb.connection.ServerId.getClusterId():51:51 -> toString
    3051:3051:java.lang.String toString():54 -> toString
com.mongodb.event.ServerHeartbeatSucceededEvent -> com.a.d.A:
    com.mongodb.connection.ConnectionId connectionId -> a
    org.bson.BsonDocument reply -> b
    long elapsedTimeNanos -> c
    boolean awaited -> d
    61:67:void <init>(com.mongodb.connection.ConnectionId,org.bson.BsonDocument,long,boolean) -> <init>
    112:115:java.lang.String toString() -> toString
    1097:1097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    1097:1097:java.lang.String toString():114 -> toString
    2059:2059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> toString
    2059:2059:java.lang.String toString():114 -> toString
    2097:2097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> toString
    2097:2097:java.lang.String toString():115 -> toString
    3051:3051:com.mongodb.connection.ClusterId com.mongodb.connection.ServerId.getClusterId():51:51 -> toString
    3051:3051:java.lang.String toString():115 -> toString
com.mongodb.event.ServerOpeningEvent -> com.a.d.B:
    com.mongodb.connection.ServerId serverId -> a
    36:38:void <init>(com.mongodb.connection.ServerId) -> <init>
    51:51:java.lang.String toString() -> toString
com.mongodb.internal.CheckedSupplier -> com.a.e.a:
    java.lang.Object get() -> get
com.mongodb.internal.ExpirableValue -> com.a.e.b:
    java.lang.Object value -> a
    long deadline -> b
    51:54:void <init>(java.lang.Object,java.time.Duration,long) -> <init>
com.mongodb.internal.IgnorableRequestContext -> com.a.e.c:
    com.mongodb.internal.IgnorableRequestContext INSTANCE -> a
    34:35:void <init>() -> <init>
    32:32:void <clinit>() -> <clinit>
com.mongodb.internal.Locks -> com.a.e.d:
    org.bson.codecs.BsonTypeClassMap bsonTypeClassMap -> a
    29:33:void withLock(java.util.concurrent.locks.Lock,java.lang.Runnable) -> a
    36:36:java.lang.Object withLock(java.util.concurrent.locks.Lock,java.util.function.Supplier) -> a
    41:49:java.lang.Object checkedWithLock(java.util.concurrent.locks.Lock,com.mongodb.internal.CheckedSupplier) -> a
    30:31:java.lang.Object lambda$withLock$0(java.lang.Runnable) -> a
    1045:1046:void com.mongodb.DBObjectCodecProvider.<init>():45:46 -> <init>
    1053:1055:void com.mongodb.DBObjectCodecProvider.<init>(org.bson.codecs.BsonTypeClassMap):53:55 -> <init>
    1060:1072:org.bson.codecs.Codec com.mongodb.DBObjectCodecProvider.get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry):60:72 -> a
    1077:1084:boolean com.mongodb.DBObjectCodecProvider.equals(java.lang.Object):77:84 -> equals
    1089:1089:int com.mongodb.DBObjectCodecProvider.hashCode():89:89 -> hashCode
    1094:1094:java.lang.String com.mongodb.DBObjectCodecProvider.toString():94:94 -> toString
com.mongodb.internal.Timeout -> com.a.e.e:
    com.mongodb.internal.Timeout INFINITE -> a
    com.mongodb.internal.Timeout IMMEDIATE -> b
    long durationNanos -> c
    long startNanos -> d
    44:47:void <init>(long,long) -> <init>
    59:60:com.mongodb.internal.Timeout startNow(long,java.util.concurrent.TimeUnit) -> a
    1074:1079:com.mongodb.internal.Timeout startNow(long):74:79 -> a
    1074:1079:com.mongodb.internal.Timeout startNow(long,java.util.concurrent.TimeUnit):60 -> a
    1087:1087:com.mongodb.internal.Timeout infinite():87:87 -> a
    1087:1087:com.mongodb.internal.Timeout startNow(long):75 -> a
    1087:1087:com.mongodb.internal.Timeout startNow(long,java.util.concurrent.TimeUnit):60 -> a
    1094:1094:com.mongodb.internal.Timeout immediate():94:94 -> a
    1094:1094:com.mongodb.internal.Timeout startNow(long):77 -> a
    1094:1094:com.mongodb.internal.Timeout startNow(long,java.util.concurrent.TimeUnit):60 -> a
    94:94:com.mongodb.internal.Timeout immediate() -> a
    186:187:long remainingOrInfinite(java.util.concurrent.TimeUnit) -> a
    1212:1212:boolean isInfinite():212:212 -> a
    1212:1212:long remainingOrInfinite(java.util.concurrent.TimeUnit):187 -> a
    2171:2175:long remaining(java.util.concurrent.TimeUnit):171:175 -> a
    2171:2175:long remainingOrInfinite(java.util.concurrent.TimeUnit):187 -> a
    2212:2212:boolean isInfinite():212:212 -> a
    2212:2212:long remaining(java.util.concurrent.TimeUnit):172 -> a
    2212:2212:long remainingOrInfinite(java.util.concurrent.TimeUnit):187 -> a
    2219:2219:boolean isImmediate():219:219 -> a
    2219:2219:long remaining(java.util.concurrent.TimeUnit):175 -> a
    2219:2219:long remainingOrInfinite(java.util.concurrent.TimeUnit):187 -> a
    3148:3150:long remainingNanos(long):148:150 -> a
    3148:3150:long remaining(java.util.concurrent.TimeUnit):175 -> a
    3148:3150:long remainingOrInfinite(java.util.concurrent.TimeUnit):187 -> a
    3212:3212:boolean isInfinite():212:212 -> a
    3212:3212:long remainingNanos(long):148 -> a
    3212:3212:long remaining(java.util.concurrent.TimeUnit):175 -> a
    3212:3212:long remainingOrInfinite(java.util.concurrent.TimeUnit):187 -> a
    3219:3219:boolean isImmediate():219:219 -> a
    3219:3219:long remainingNanos(long):148 -> a
    3219:3219:long remaining(java.util.concurrent.TimeUnit):175 -> a
    3219:3219:long remainingOrInfinite(java.util.concurrent.TimeUnit):187 -> a
    4136:4137:long elapsedNanos(long):136:137 -> a
    4136:4137:long remainingNanos(long):149 -> a
    4136:4137:long remaining(java.util.concurrent.TimeUnit):175 -> a
    4136:4137:long remainingOrInfinite(java.util.concurrent.TimeUnit):187 -> a
    4212:4212:boolean isInfinite():212:212 -> a
    4212:4212:long elapsedNanos(long):136 -> a
    4212:4212:long remainingNanos(long):149 -> a
    4212:4212:long remaining(java.util.concurrent.TimeUnit):175 -> a
    4212:4212:long remainingOrInfinite(java.util.concurrent.TimeUnit):187 -> a
    4219:4219:boolean isImmediate():219:219 -> a
    4219:4219:long elapsedNanos(long):136 -> a
    4219:4219:long remainingNanos(long):149 -> a
    4219:4219:long remaining(java.util.concurrent.TimeUnit):175 -> a
    4219:4219:long remainingOrInfinite(java.util.concurrent.TimeUnit):187 -> a
    205:205:boolean expired(long) -> a
    224:231:boolean equals(java.lang.Object) -> equals
    236:236:int hashCode() -> hashCode
    246:246:java.lang.String toString() -> toString
    258:263:java.lang.String toUserString() -> b
    5212:5212:boolean isInfinite():212:212 -> b
    5212:5212:java.lang.String toUserString():258 -> b
    5219:5219:boolean isImmediate():219:219 -> b
    5219:5219:java.lang.String toUserString():260 -> b
    279:284:long convertRoundUp(long,java.util.concurrent.TimeUnit) -> b
    38:39:void <clinit>() -> <clinit>
com.mongodb.internal.async.function.LoopState -> com.a.e.a.a.a:
    int iteration -> a
    boolean lastIteration -> b
    java.util.Map attachments -> c
    48:50:void <init>() -> <init>
    59:64:boolean advance() -> a
    1162:1166:void removeAutoRemovableAttachments():162:166 -> a
    1162:1166:boolean advance():63 -> a
    74:74:boolean isFirstIteration() -> b
    127:129:void markAsLastIteration() -> c
    155:158:java.util.Map attachments() -> d
    170:170:java.lang.String toString() -> toString
    165:165:boolean lambda$removeAutoRemovableAttachments$0(java.util.Map$Entry) -> a
    1204:1204:boolean com.mongodb.internal.async.function.LoopState$AttachmentValueContainer.autoRemove():204:204 -> a
    1204:1204:boolean lambda$removeAutoRemovableAttachments$0(java.util.Map$Entry):165 -> a
com.mongodb.internal.async.function.LoopState$AttachmentKey -> com.a.e.a.a.a$a:
com.mongodb.internal.async.function.LoopState$AttachmentValueContainer -> com.a.e.a.a.a$b:
    java.lang.Object value -> a
    boolean autoRemove -> b
    193:196:void <init>(java.lang.Object,boolean) -> <init>
    209:209:java.lang.String toString() -> toString
com.mongodb.internal.async.function.RetryState -> com.a.e.a.a.b:
    com.mongodb.internal.async.function.LoopState loopState -> a
    int attempts -> b
    java.lang.Throwable exception -> c
    58:62:void <init>(int) -> <init>
    69:70:void <init>() -> <init>
    118:124:void advanceOrThrow(java.lang.RuntimeException,java.util.function.BiFunction,java.util.function.BiPredicate) -> a
    1146:1166:void doAdvanceOrThrow(java.lang.Throwable,java.util.function.BiFunction,java.util.function.BiPredicate,boolean):146:166 -> a
    1146:1166:void advanceOrThrow(java.lang.RuntimeException,java.util.function.BiFunction,java.util.function.BiPredicate):118 -> a
    1323:1323:int attempt():323:323 -> a
    1323:1323:void doAdvanceOrThrow(java.lang.Throwable,java.util.function.BiFunction,java.util.function.BiPredicate,boolean):146 -> a
    1323:1323:void advanceOrThrow(java.lang.RuntimeException,java.util.function.BiFunction,java.util.function.BiPredicate):118 -> a
    2088:2088:int com.mongodb.internal.async.function.LoopState.iteration():88:88 -> a
    2088:2088:int attempt():323 -> a
    2088:2088:void doAdvanceOrThrow(java.lang.Throwable,java.util.function.BiFunction,java.util.function.BiPredicate,boolean):146 -> a
    2088:2088:void advanceOrThrow(java.lang.RuntimeException,java.util.function.BiFunction,java.util.function.BiPredicate):118 -> a
    2213:2213:boolean isRuntime(java.lang.Throwable):213:213 -> a
    2213:2213:void doAdvanceOrThrow(java.lang.Throwable,java.util.function.BiFunction,java.util.function.BiPredicate,boolean):149 -> a
    2213:2213:void advanceOrThrow(java.lang.RuntimeException,java.util.function.BiFunction,java.util.function.BiPredicate):118 -> a
    2302:2302:boolean isFirstAttempt():302:302 -> a
    2302:2302:void doAdvanceOrThrow(java.lang.Throwable,java.util.function.BiFunction,java.util.function.BiPredicate,boolean):151 -> a
    2302:2302:void advanceOrThrow(java.lang.RuntimeException,java.util.function.BiFunction,java.util.function.BiPredicate):118 -> a
    2314:2314:boolean isLastAttempt():314:314 -> a
    2314:2314:void doAdvanceOrThrow(java.lang.Throwable,java.util.function.BiFunction,java.util.function.BiPredicate,boolean):153 -> a
    2314:2314:void advanceOrThrow(java.lang.RuntimeException,java.util.function.BiFunction,java.util.function.BiPredicate):118 -> a
    2323:2323:int attempt():323:323 -> a
    2323:2323:boolean isLastAttempt():314 -> a
    2323:2323:void doAdvanceOrThrow(java.lang.Throwable,java.util.function.BiFunction,java.util.function.BiPredicate,boolean):153 -> a
    2323:2323:void advanceOrThrow(java.lang.RuntimeException,java.util.function.BiFunction,java.util.function.BiPredicate):118 -> a
    3088:3088:int com.mongodb.internal.async.function.LoopState.iteration():88:88 -> a
    3088:3088:int attempt():323 -> a
    3088:3088:boolean isLastAttempt():314 -> a
    3088:3088:void doAdvanceOrThrow(java.lang.Throwable,java.util.function.BiFunction,java.util.function.BiPredicate,boolean):153 -> a
    3088:3088:void advanceOrThrow(java.lang.RuntimeException,java.util.function.BiFunction,java.util.function.BiPredicate):118 -> a
    4081:4081:boolean com.mongodb.internal.async.function.LoopState.isLastIteration():81:81 -> a
    4081:4081:boolean isLastAttempt():314 -> a
    4081:4081:void doAdvanceOrThrow(java.lang.Throwable,java.util.function.BiFunction,java.util.function.BiPredicate,boolean):153 -> a
    4081:4081:void advanceOrThrow(java.lang.RuntimeException,java.util.function.BiFunction,java.util.function.BiPredicate):118 -> a
    173:192:java.lang.Throwable transformException(java.lang.Throwable,java.lang.Throwable,boolean,java.util.function.BiFunction) -> a
    4213:4213:boolean isRuntime(java.lang.Throwable):213:213 -> a
    4213:4213:java.lang.Throwable transformException(java.lang.Throwable,java.lang.Throwable,boolean,java.util.function.BiFunction):174 -> a
    5213:5213:boolean isRuntime(java.lang.Throwable):213:213 -> a
    5213:5213:java.lang.Throwable transformException(java.lang.Throwable,java.lang.Throwable,boolean,java.util.function.BiFunction):180 -> a
    6213:6213:boolean isRuntime(java.lang.Throwable):213:213 -> a
    6213:6213:java.lang.Throwable transformException(java.lang.Throwable,java.lang.Throwable,boolean,java.util.function.BiFunction):183 -> a
    202:208:boolean shouldRetry(com.mongodb.internal.async.function.RetryState,java.lang.Throwable,java.lang.Throwable,boolean,java.util.function.BiPredicate) -> a
    7213:7213:boolean isRuntime(java.lang.Throwable):213:213 -> a
    7213:7213:boolean shouldRetry(com.mongodb.internal.async.function.RetryState,java.lang.Throwable,java.lang.Throwable,boolean,java.util.function.BiPredicate):204 -> a
    244:261:void breakAndThrowIfRetryAnd(java.util.function.Supplier) -> a
    8081:8081:boolean com.mongodb.internal.async.function.LoopState.isLastIteration():81:81 -> a
    8081:8081:void breakAndThrowIfRetryAnd(java.util.function.Supplier):244 -> a
    8302:8302:boolean isFirstAttempt():302:302 -> a
    8302:8302:void breakAndThrowIfRetryAnd(java.util.function.Supplier):245 -> a
    9081:9081:boolean com.mongodb.internal.async.function.LoopState.isLastIteration():81:81 -> a
    9081:9081:void breakAndThrowIfRetryAnd(java.util.function.Supplier):257 -> a
    323:323:int attempt() -> a
    9088:9088:int com.mongodb.internal.async.function.LoopState.iteration():88:88 -> a
    9088:9088:int attempt():323 -> a
    350:351:java.util.Optional exception() -> b
    9302:9302:boolean isFirstAttempt():302:302 -> b
    9302:9302:java.util.Optional exception():350 -> b
    358:359:com.mongodb.internal.async.function.RetryState attach(com.mongodb.internal.async.function.LoopState$AttachmentKey,java.lang.Object,boolean) -> a
    10141:10142:com.mongodb.internal.async.function.LoopState com.mongodb.internal.async.function.LoopState.attach(com.mongodb.internal.async.function.LoopState$AttachmentKey,java.lang.Object,boolean):141:142 -> a
    10141:10142:com.mongodb.internal.async.function.RetryState attach(com.mongodb.internal.async.function.LoopState$AttachmentKey,java.lang.Object,boolean):358 -> a
    366:366:java.util.Optional attachment(com.mongodb.internal.async.function.LoopState$AttachmentKey) -> a
    10149:10151:java.util.Optional com.mongodb.internal.async.function.LoopState.attachment(com.mongodb.internal.async.function.LoopState$AttachmentKey):149:151 -> a
    10149:10151:java.util.Optional attachment(com.mongodb.internal.async.function.LoopState$AttachmentKey):366 -> a
    10200:10200:java.lang.Object com.mongodb.internal.async.function.LoopState$AttachmentValueContainer.value():200:200 -> a
    10200:10200:java.util.Optional com.mongodb.internal.async.function.LoopState.attachment(com.mongodb.internal.async.function.LoopState$AttachmentKey):150 -> a
    10200:10200:java.util.Optional attachment(com.mongodb.internal.async.function.LoopState$AttachmentKey):366 -> a
    371:373:java.lang.String toString() -> toString
com.mongodb.internal.async.function.RetryingSyncSupplier -> com.a.e.a.a.c:
    com.mongodb.internal.async.function.RetryState state -> a
    java.util.function.BiPredicate retryPredicate -> b
    java.util.function.BiFunction failedResultTransformer -> c
    java.util.function.Supplier syncFunction -> d
    56:61:void <init>(com.mongodb.internal.async.function.RetryState,java.util.function.BiFunction,java.util.function.BiPredicate,java.util.function.Supplier) -> <init>
    67:73:java.lang.Object get() -> get
com.mongodb.internal.authentication.AwsCredentialHelper -> com.a.e.b.a:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> a
    java.util.function.Supplier awsCredentialSupplier -> b
    58:61:boolean isClassAvailable(java.lang.String) -> a
    97:97:com.mongodb.client.MongoClients obtainFromEnvironment$4579c923() -> a
    35:54:void <clinit>() -> <clinit>
com.mongodb.internal.authentication.AwsSdkV1CredentialSupplier -> com.a.e.b.b:
    com.amazonaws.auth.AWSCredentialsProvider provider -> a
    27:29:void <init>() -> <init>
    27:27:java.lang.Object get() -> get
    1033:1039:com.mongodb.client.MongoClients get$4579c923():33:39 -> get
    1033:1039:java.lang.Object get():27 -> get
com.mongodb.internal.authentication.AwsSdkV2CredentialSupplier -> com.a.e.b.c:
    software.amazon.awssdk.auth.credentials.AwsCredentialsProvider provider -> a
    27:29:void <init>() -> <init>
    27:27:java.lang.Object get() -> get
    1033:1039:com.mongodb.client.MongoClients get$4579c923():33:39 -> get
    1033:1039:java.lang.Object get():27 -> get
com.mongodb.internal.authentication.AzureCredentialHelper -> com.a.e.b.d:
    com.mongodb.internal.ExpirableValue cachedAccessToken -> a
    45:77:org.bson.BsonDocument obtainFromEnvironment() -> a
    1060:1060:java.util.Optional com.mongodb.internal.ExpirableValue.getValue():60:60 -> a
    1060:1060:org.bson.BsonDocument obtainFromEnvironment():45 -> a
    1065:1068:java.util.Optional com.mongodb.internal.ExpirableValue.getValue(long):65:68 -> a
    1065:1068:java.util.Optional com.mongodb.internal.ExpirableValue.getValue():60 -> a
    1065:1068:org.bson.BsonDocument obtainFromEnvironment():45 -> a
    2056:2056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    2056:2056:org.bson.BsonDocument obtainFromEnvironment():72 -> a
    3056:3056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    3056:3056:org.bson.BsonDocument obtainFromEnvironment():73 -> a
    4048:4048:com.mongodb.internal.ExpirableValue com.mongodb.internal.ExpirableValue.expirable(java.lang.Object,java.time.Duration,long):48:48 -> a
    4048:4048:org.bson.BsonDocument obtainFromEnvironment():74 -> a
    41:41:void <clinit>() -> <clinit>
    5040:5040:com.mongodb.internal.ExpirableValue com.mongodb.internal.ExpirableValue.expired():40:40 -> <clinit>
    5040:5040:void <clinit>():41 -> <clinit>
com.mongodb.internal.authentication.BuiltInAwsCredentialSupplier -> com.a.e.b.e:
    28:28:void <init>() -> <init>
    28:28:java.lang.Object get() -> get
    1032:1035:com.mongodb.client.MongoClients get$4579c923():32:35 -> get
    1032:1035:java.lang.Object get():28 -> get
    1040:1043:com.mongodb.client.MongoClients obtainFromEnvironmentVariables$4579c923():40:43 -> get
    1040:1043:com.mongodb.client.MongoClients get$4579c923():33 -> get
    1040:1043:java.lang.Object get():28 -> get
    1047:1053:com.mongodb.client.MongoClients obtainFromEc2OrEcsResponse$4579c923():47:53 -> get
    1047:1053:com.mongodb.client.MongoClients get$4579c923():35 -> get
    1047:1053:java.lang.Object get():28 -> get
    1061:1071:java.lang.String getEc2Response():61:71 -> get
    1061:1071:com.mongodb.client.MongoClients obtainFromEc2OrEcsResponse$4579c923():48 -> get
    1061:1071:com.mongodb.client.MongoClients get$4579c923():35 -> get
    1061:1071:java.lang.Object get():28 -> get
    2057:2057:java.lang.String getEcsResponse(java.lang.String):57:57 -> get
    2057:2057:com.mongodb.client.MongoClients obtainFromEc2OrEcsResponse$4579c923():48 -> get
    2057:2057:com.mongodb.client.MongoClients get$4579c923():35 -> get
    2057:2057:java.lang.Object get():28 -> get
    3056:3056:java.lang.String org.bson.BsonString.getValue():56:56 -> get
    3056:3056:com.mongodb.client.MongoClients obtainFromEc2OrEcsResponse$4579c923():51 -> get
    3056:3056:com.mongodb.client.MongoClients get$4579c923():35 -> get
    3056:3056:java.lang.Object get():28 -> get
    4056:4056:java.lang.String org.bson.BsonString.getValue():56:56 -> get
    4056:4056:com.mongodb.client.MongoClients obtainFromEc2OrEcsResponse$4579c923():52 -> get
    4056:4056:com.mongodb.client.MongoClients get$4579c923():35 -> get
    4056:4056:java.lang.Object get():28 -> get
    5056:5056:java.lang.String org.bson.BsonString.getValue():56:56 -> get
    5056:5056:com.mongodb.client.MongoClients obtainFromEc2OrEcsResponse$4579c923():53 -> get
    5056:5056:com.mongodb.client.MongoClients get$4579c923():35 -> get
    5056:5056:java.lang.Object get():28 -> get
com.mongodb.internal.authentication.HttpHelper -> com.a.e.b.f:
    41:72:java.lang.String getHttpContents(java.lang.String,java.lang.String,java.util.Map) -> a
    1028:1028:void com.mongodb.DBRefCodecProvider.<init>():28:28 -> <init>
    1033:1037:org.bson.codecs.Codec com.mongodb.DBRefCodecProvider.get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry):33:37 -> a
    1042:1050:boolean com.mongodb.DBRefCodecProvider.equals(java.lang.Object):42:50 -> equals
    1055:1055:int com.mongodb.DBRefCodecProvider.hashCode():55:55 -> hashCode
    1060:1060:java.lang.String com.mongodb.DBRefCodecProvider.toString():60:60 -> toString
com.mongodb.internal.binding.AbstractReferenceCounted -> com.a.e.c.a:
    java.util.concurrent.atomic.AtomicInteger referenceCount -> a
    24:25:void <init>() -> <init>
    33:36:com.mongodb.internal.binding.ReferenceCounted retain() -> i
    41:45:int release() -> c
com.mongodb.internal.binding.AsyncClusterAwareReadWriteBinding -> com.a.e.c.b:
    com.mongodb.internal.binding.AsyncClusterAwareReadWriteBinding retain() -> a
    26:26:com.mongodb.internal.binding.AsyncReadWriteBinding retain() -> b
    26:26:com.mongodb.internal.binding.AsyncReadBinding retain() -> d
    26:26:com.mongodb.internal.binding.ReferenceCounted retain() -> i
    26:26:com.mongodb.internal.binding.AsyncWriteBinding retain() -> e
com.mongodb.internal.binding.AsyncConnectionSource -> com.a.e.c.c:
    com.mongodb.internal.binding.AsyncConnectionSource retain() -> a
    33:33:com.mongodb.internal.binding.ReferenceCounted retain() -> i
com.mongodb.internal.binding.AsyncReadBinding -> com.a.e.c.d:
    com.mongodb.internal.binding.AsyncReadBinding retain() -> d
    31:31:com.mongodb.internal.binding.ReferenceCounted retain() -> i
com.mongodb.internal.binding.AsyncReadWriteBinding -> com.a.e.c.e:
    com.mongodb.internal.binding.AsyncReadWriteBinding retain() -> b
    25:25:com.mongodb.internal.binding.AsyncReadBinding retain() -> d
    25:25:com.mongodb.internal.binding.ReferenceCounted retain() -> i
    25:25:com.mongodb.internal.binding.AsyncWriteBinding retain() -> e
com.mongodb.internal.binding.AsyncWriteBinding -> com.a.e.c.f:
    com.mongodb.internal.binding.AsyncWriteBinding retain() -> e
    30:30:com.mongodb.internal.binding.ReferenceCounted retain() -> i
com.mongodb.internal.binding.ClusterAwareReadWriteBinding -> com.a.e.c.g:
    com.mongodb.internal.connection.Cluster getCluster() -> b
    com.mongodb.internal.binding.ConnectionSource getConnectionSource(com.mongodb.ServerAddress) -> a
com.mongodb.internal.binding.ClusterBinding -> com.a.e.c.h:
    com.mongodb.internal.connection.Cluster cluster -> d
    com.mongodb.ReadPreference readPreference -> e
    com.mongodb.ReadConcern readConcern -> a
    com.mongodb.internal.connection.DescriptionHelper serverApi$10f7fbbb -> b
    com.mongodb.RequestContext requestContext -> c
    63:69:void <init>(com.mongodb.internal.connection.Cluster,com.mongodb.ReadPreference,com.mongodb.ReadConcern,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext) -> <init>
    76:76:com.mongodb.internal.connection.Cluster getCluster() -> b
    81:82:com.mongodb.internal.binding.ReadWriteBinding retain() -> j
    87:87:com.mongodb.ReadPreference getReadPreference() -> a
    92:92:com.mongodb.internal.session.SessionContext getSessionContext() -> f
    98:98:com.mongodb.internal.connection.DescriptionHelper getServerApi$14c3e59a() -> g
    103:103:com.mongodb.RequestContext getRequestContext() -> h
    108:108:com.mongodb.internal.binding.ConnectionSource getReadConnectionSource() -> d
    126:126:com.mongodb.internal.binding.ConnectionSource getWriteConnectionSource() -> e
    131:131:com.mongodb.internal.binding.ConnectionSource getConnectionSource(com.mongodb.ServerAddress) -> a
    46:46:com.mongodb.internal.binding.ReferenceCounted retain() -> i
    1081:1082:com.mongodb.internal.binding.ReadWriteBinding retain():81:82 -> i
    1081:1082:com.mongodb.internal.binding.ReferenceCounted retain():46 -> i
    46:46:com.mongodb.internal.binding.ReadBinding retain() -> k
    2081:2082:com.mongodb.internal.binding.ReadWriteBinding retain():81:82 -> k
    2081:2082:com.mongodb.internal.binding.ReadBinding retain():46 -> k
    46:46:com.mongodb.internal.binding.WriteBinding retain() -> l
    3081:3082:com.mongodb.internal.binding.ReadWriteBinding retain():81:82 -> l
    3081:3082:com.mongodb.internal.binding.WriteBinding retain():46 -> l
com.mongodb.internal.binding.ClusterBinding$ClusterBindingConnectionSource -> com.a.e.c.h$a:
    com.mongodb.internal.connection.Server server -> a
    com.mongodb.connection.ServerDescription serverDescription -> b
    com.mongodb.ReadPreference appliedReadPreference -> c
    com.mongodb.internal.binding.ClusterBinding this$0 -> d
    139:144:void <init>(com.mongodb.internal.binding.ClusterBinding,com.mongodb.internal.connection.ServerTuple,com.mongodb.ReadPreference) -> <init>
    1034:1034:com.mongodb.internal.connection.Server com.mongodb.internal.connection.ServerTuple.getServer():34:34 -> <init>
    1034:1034:void <init>(com.mongodb.internal.binding.ClusterBinding,com.mongodb.internal.connection.ServerTuple,com.mongodb.ReadPreference):140 -> <init>
    1038:1038:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.ServerTuple.getServerDescription():38:38 -> <init>
    1038:1038:void <init>(com.mongodb.internal.binding.ClusterBinding,com.mongodb.internal.connection.ServerTuple,com.mongodb.ReadPreference):141 -> <init>
    148:148:com.mongodb.connection.ServerDescription getServerDescription() -> a
    153:153:com.mongodb.internal.session.SessionContext getSessionContext() -> b
    1046:1046:com.mongodb.ReadConcern com.mongodb.internal.binding.ClusterBinding.access$100(com.mongodb.internal.binding.ClusterBinding):46:46 -> b
    1046:1046:com.mongodb.internal.session.SessionContext getSessionContext():153 -> b
    158:158:com.mongodb.internal.connection.DescriptionHelper getServerApi$14c3e59a() -> d
    2046:2046:com.mongodb.internal.connection.DescriptionHelper com.mongodb.internal.binding.ClusterBinding.access$200$527637d5(com.mongodb.internal.binding.ClusterBinding):46:46 -> d
    2046:2046:com.mongodb.internal.connection.DescriptionHelper getServerApi$14c3e59a():158 -> d
    163:163:com.mongodb.RequestContext getRequestContext() -> e
    3046:3046:com.mongodb.RequestContext com.mongodb.internal.binding.ClusterBinding.access$300(com.mongodb.internal.binding.ClusterBinding):46:46 -> e
    3046:3046:com.mongodb.RequestContext getRequestContext():163 -> e
    168:168:com.mongodb.ReadPreference getReadPreference() -> f
    173:173:com.mongodb.internal.connection.Connection getConnection() -> g
    177:179:com.mongodb.internal.binding.ConnectionSource retain() -> h
    184:186:int release() -> c
    134:134:com.mongodb.internal.binding.ReferenceCounted retain() -> i
    134:134:void <init>(com.mongodb.internal.binding.ClusterBinding,com.mongodb.internal.connection.ServerTuple,com.mongodb.ReadPreference,byte) -> <init>
com.mongodb.internal.binding.ConnectionSource -> com.a.e.c.i:
    com.mongodb.connection.ServerDescription getServerDescription() -> a
    com.mongodb.internal.session.SessionContext getSessionContext() -> b
    com.mongodb.internal.connection.DescriptionHelper getServerApi$14c3e59a() -> d
    com.mongodb.RequestContext getRequestContext() -> e
    com.mongodb.ReadPreference getReadPreference() -> f
    com.mongodb.internal.connection.Connection getConnection() -> g
    com.mongodb.internal.binding.ConnectionSource retain() -> h
    32:32:com.mongodb.internal.binding.ReferenceCounted retain() -> i
com.mongodb.internal.binding.ReadBinding -> com.a.e.c.j:
    com.mongodb.ReadPreference getReadPreference() -> a
    com.mongodb.internal.binding.ConnectionSource getReadConnectionSource() -> d
    com.mongodb.internal.session.SessionContext getSessionContext() -> f
    com.mongodb.internal.connection.DescriptionHelper getServerApi$14c3e59a() -> g
    com.mongodb.RequestContext getRequestContext() -> h
    com.mongodb.internal.binding.ReadBinding retain() -> k
    30:30:com.mongodb.internal.binding.ReferenceCounted retain() -> i
com.mongodb.internal.binding.ReadWriteBinding -> com.a.e.c.k:
    com.mongodb.internal.binding.ReadWriteBinding retain() -> j
    25:25:com.mongodb.internal.binding.ReadBinding retain() -> k
    25:25:com.mongodb.internal.binding.ReferenceCounted retain() -> i
    25:25:com.mongodb.internal.binding.WriteBinding retain() -> l
com.mongodb.internal.binding.ReferenceCounted -> com.a.e.c.l:
    com.mongodb.internal.binding.ReferenceCounted retain() -> i
    int release() -> c
com.mongodb.internal.binding.TransactionContext -> com.a.e.c.m:
    com.mongodb.connection.ClusterType clusterType -> a
    com.mongodb.internal.binding.ReferenceCounted pinnedConnection -> b
    34:36:void <init>(com.mongodb.connection.ClusterType) -> <init>
    55:61:int release() -> c
    67:67:com.mongodb.internal.binding.TransactionContext get(com.mongodb.session.ClientSession) -> a
com.mongodb.internal.binding.WriteBinding -> com.a.e.c.n:
    com.mongodb.internal.binding.ConnectionSource getWriteConnectionSource() -> e
    com.mongodb.internal.session.SessionContext getSessionContext() -> f
    com.mongodb.internal.connection.DescriptionHelper getServerApi$14c3e59a() -> g
    com.mongodb.RequestContext getRequestContext() -> h
    com.mongodb.internal.binding.WriteBinding retain() -> l
    29:29:com.mongodb.internal.binding.ReferenceCounted retain() -> i
com.mongodb.internal.bulk.DeleteRequest -> com.a.e.d.a:
    org.bson.BsonDocument filter -> a
    boolean isMulti -> b
    com.mongodb.client.model.mql.MqlExpression$AstPlaceholder collation$2561489b -> c
    org.bson.conversions.Bson hint -> d
    java.lang.String hintString -> e
    33:40:void <init>(org.bson.BsonDocument) -> <init>
    87:87:com.mongodb.internal.bulk.WriteRequest$Type getType() -> a
com.mongodb.internal.bulk.InsertRequest -> com.a.e.d.b:
    org.bson.BsonDocument document -> a
    31:33:void <init>(org.bson.BsonDocument) -> <init>
    41:41:com.mongodb.internal.bulk.WriteRequest$Type getType() -> a
com.mongodb.internal.bulk.UpdateRequest -> com.a.e.d.c:
    org.bson.BsonValue update -> a
    com.mongodb.internal.bulk.WriteRequest$Type updateType -> b
    org.bson.BsonDocument filter -> c
    boolean isMulti -> d
    boolean isUpsert -> e
    com.mongodb.client.model.mql.MqlExpression$AstPlaceholder collation$2561489b -> f
    java.util.List arrayFilters -> g
    org.bson.conversions.Bson hint -> h
    java.lang.String hintString -> i
    61:61:com.mongodb.internal.bulk.WriteRequest$Type getType() -> a
com.mongodb.internal.bulk.WriteRequest -> com.a.e.d.d:
    33:34:void <init>() -> <init>
    com.mongodb.internal.bulk.WriteRequest$Type getType() -> a
com.mongodb.internal.bulk.WriteRequest$Type -> com.a.e.d.d$a:
    com.mongodb.internal.bulk.WriteRequest$Type INSERT -> a
    com.mongodb.internal.bulk.WriteRequest$Type UPDATE -> b
    com.mongodb.internal.bulk.WriteRequest$Type REPLACE -> c
    com.mongodb.internal.bulk.WriteRequest$Type DELETE -> d
    com.mongodb.internal.bulk.WriteRequest$Type[] $VALUES -> e
    26:26:com.mongodb.internal.bulk.WriteRequest$Type[] values() -> values
    26:26:com.mongodb.internal.bulk.WriteRequest$Type valueOf(java.lang.String) -> valueOf
    26:26:void <init>(java.lang.String,int) -> <init>
    26:30:void <clinit>() -> <clinit>
    1026:1026:com.mongodb.internal.bulk.WriteRequest$Type[] $values():26:26 -> <clinit>
    1026:1026:void <clinit>():26 -> <clinit>
com.mongodb.internal.bulk.WriteRequestWithIndex -> com.a.e.d.e:
    int index -> a
    com.mongodb.internal.bulk.WriteRequest writeRequest -> b
    26:29:void <init>(com.mongodb.internal.bulk.WriteRequest,int) -> <init>
com.mongodb.internal.capi.MongoCryptHelper -> com.a.e.e.a:
    java.lang.String name -> a
    java.util.Map properties -> b
    94:133:org.bson.BsonDocument fetchCredentials(java.util.Map,java.util.Map) -> a
    1034:1043:org.bson.BsonDocument com.mongodb.internal.authentication.GcpCredentialHelper.obtainFromEnvironment():34:43 -> a
    1034:1043:org.bson.BsonDocument fetchCredentials(java.util.Map,java.util.Map):127 -> a
    137:139:org.bson.BsonDocument getKmsProvidersAsBsonDocument(java.util.Map) -> a
    143:146:org.bson.BsonDocument toBsonDocument(java.util.Map) -> b
    195:201:void startProcess(java.lang.ProcessBuilder) -> a
    138:138:void lambda$getKmsProvidersAsBsonDocument$0(org.bson.BsonDocument,java.lang.String,java.util.Map) -> a
    1080:1080:java.lang.String com.mongodb.MongoCompressor.getName():80:80 -> a
    1094:1097:java.lang.Object com.mongodb.MongoCompressor.getProperty(java.lang.String,java.lang.Object):94:97 -> a
    1111:1115:java.lang.Object com.mongodb.MongoCompressor.getPropertyNonNull(java.lang.String,java.lang.Object):111:115 -> b
    1127:1127:com.mongodb.MongoCompressor com.mongodb.MongoCompressor.withProperty(java.lang.String,java.lang.Object):127:127 -> c
    1131:1134:void com.mongodb.MongoCompressor.<init>(java.lang.String):131:134 -> <init>
    1136:1142:void com.mongodb.MongoCompressor.<init>(com.mongodb.MongoCompressor,java.lang.String,java.lang.Object):136:142 -> <init>
    1146:1158:boolean com.mongodb.MongoCompressor.equals(java.lang.Object):146:158 -> equals
    1163:1165:int com.mongodb.MongoCompressor.hashCode():163:165 -> hashCode
    1170:1170:java.lang.String com.mongodb.MongoCompressor.toString():170:170 -> toString
com.mongodb.internal.client.model.FindOptions -> com.a.e.f.a.a:
    int limit -> a
    org.bson.conversions.Bson projection -> b
    int skip -> c
    org.bson.conversions.Bson sort -> d
    com.mongodb.CursorType cursorType -> e
    com.mongodb.client.model.mql.MqlExpression$AstPlaceholder collation$2561489b -> f
    org.bson.BsonValue comment -> g
    org.bson.conversions.Bson hint -> h
    java.lang.String hintString -> i
    org.bson.conversions.Bson variables -> j
    org.bson.conversions.Bson max -> k
    org.bson.conversions.Bson min -> l
    java.lang.Boolean allowDiskUse -> m
    44:63:void <init>() -> <init>
    152:153:long getMaxTime(java.util.concurrent.TimeUnit) -> a
    187:188:long getMaxAwaitTime(java.util.concurrent.TimeUnit) -> b
com.mongodb.internal.connection.AbstractByteBufBsonDocument -> com.a.e.g.a:
    org.bson.codecs.configuration.CodecRegistry REGISTRY -> a
    37:37:void <init>() -> <init>
    43:43:void clear() -> clear
    48:48:org.bson.BsonValue put(java.lang.String,org.bson.BsonValue) -> a
    53:53:org.bson.BsonDocument append(java.lang.String,org.bson.BsonValue) -> b
    58:58:void putAll(java.util.Map) -> putAll
    63:63:org.bson.BsonValue remove(java.lang.Object) -> a
    68:68:boolean isEmpty() -> isEmpty
    83:83:int size() -> size
    104:104:java.util.Set entrySet() -> entrySet
    109:109:java.util.Collection values() -> values
    114:114:java.util.Set keySet() -> keySet
    119:138:boolean containsKey(java.lang.Object) -> containsKey
    143:158:boolean containsValue(java.lang.Object) -> containsValue
    164:165:org.bson.BsonValue get(java.lang.Object) -> b
    190:190:java.lang.String getFirstKey() -> a
    java.lang.Object findInDocument(com.mongodb.internal.connection.AbstractByteBufBsonDocument$Finder) -> a
    org.bson.BsonDocument toBaseBsonDocument() -> b
    218:221:boolean equals(java.lang.Object) -> equals
    226:226:int hashCode() -> hashCode
    37:37:java.lang.Object remove(java.lang.Object) -> remove
    37:37:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    37:37:java.lang.Object get(java.lang.Object) -> get
    37:37:org.bson.BsonValue access$000(com.mongodb.internal.connection.AbstractByteBufBsonDocument,org.bson.BsonReader) -> a
    1230:1230:org.bson.BsonValue deserializeBsonValue(org.bson.BsonReader):230:230 -> a
    1230:1230:org.bson.BsonValue access$000(com.mongodb.internal.connection.AbstractByteBufBsonDocument,org.bson.BsonReader):37 -> a
    39:39:void <clinit>() -> <clinit>
    2085:2085:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.fromProviders(org.bson.codecs.configuration.CodecProvider[]):85:85 -> <clinit>
    2085:2085:void <clinit>():39 -> <clinit>
com.mongodb.internal.connection.AbstractByteBufBsonDocument$1 -> com.a.e.g.a$1:
    68:68:void <init>(com.mongodb.internal.connection.AbstractByteBufBsonDocument) -> <init>
    68:68:java.lang.Object notFound() -> a
    1076:1076:java.lang.Boolean notFound():76:76 -> a
    1076:1076:java.lang.Object notFound():68 -> a
    68:68:java.lang.Object find(org.bson.BsonReader) -> a
    2071:2071:java.lang.Boolean find$1d823a82():71:71 -> a
    2071:2071:java.lang.Object find(org.bson.BsonReader):68 -> a
com.mongodb.internal.connection.AbstractByteBufBsonDocument$2 -> com.a.e.g.a$2:
    int size -> a
    83:83:void <init>(com.mongodb.internal.connection.AbstractByteBufBsonDocument) -> <init>
    83:83:java.lang.Object notFound() -> a
    1097:1097:java.lang.Integer notFound():97:97 -> a
    1097:1097:java.lang.Object notFound():83 -> a
    83:83:java.lang.Object find(org.bson.BsonReader) -> a
    2089:2092:java.lang.Integer find(org.bson.BsonReader):89:92 -> a
    2089:2092:java.lang.Object find(org.bson.BsonReader):83 -> a
com.mongodb.internal.connection.AbstractByteBufBsonDocument$3 -> com.a.e.g.a$3:
    java.lang.Object val$key -> a
    123:123:void <init>(com.mongodb.internal.connection.AbstractByteBufBsonDocument,java.lang.Object) -> <init>
    123:123:java.lang.Object notFound() -> a
    1135:1135:java.lang.Boolean notFound():135:135 -> a
    1135:1135:java.lang.Object notFound():123 -> a
    123:123:java.lang.Object find(org.bson.BsonReader) -> a
    2126:2130:java.lang.Boolean find(org.bson.BsonReader):126:130 -> a
    2126:2130:java.lang.Object find(org.bson.BsonReader):123 -> a
com.mongodb.internal.connection.AbstractByteBufBsonDocument$4 -> com.a.e.g.a$4:
    java.lang.Object val$value -> a
    com.mongodb.internal.connection.AbstractByteBufBsonDocument this$0 -> b
    143:143:void <init>(com.mongodb.internal.connection.AbstractByteBufBsonDocument,java.lang.Object) -> <init>
    143:143:java.lang.Object notFound() -> a
    1155:1155:java.lang.Boolean notFound():155:155 -> a
    1155:1155:java.lang.Object notFound():143 -> a
    143:143:java.lang.Object find(org.bson.BsonReader) -> a
    2146:2150:java.lang.Boolean find(org.bson.BsonReader):146:150 -> a
    2146:2150:java.lang.Object find(org.bson.BsonReader):143 -> a
com.mongodb.internal.connection.AbstractByteBufBsonDocument$5 -> com.a.e.g.a$5:
    java.lang.Object val$key -> a
    com.mongodb.internal.connection.AbstractByteBufBsonDocument this$0 -> b
    165:165:void <init>(com.mongodb.internal.connection.AbstractByteBufBsonDocument,java.lang.Object) -> <init>
    165:165:java.lang.Object notFound() -> a
    1178:1178:org.bson.BsonValue notFound():178:178 -> a
    1178:1178:java.lang.Object notFound():165 -> a
    165:165:java.lang.Object find(org.bson.BsonReader) -> a
    2168:2172:org.bson.BsonValue find(org.bson.BsonReader):168:172 -> a
    2168:2172:java.lang.Object find(org.bson.BsonReader):165 -> a
com.mongodb.internal.connection.AbstractByteBufBsonDocument$6 -> com.a.e.g.a$6:
    190:190:void <init>(com.mongodb.internal.connection.AbstractByteBufBsonDocument) -> <init>
    190:190:java.lang.Object notFound() -> a
    1198:1198:java.lang.String notFound():198:198 -> a
    1198:1198:java.lang.Object notFound():190 -> a
    190:190:java.lang.Object find(org.bson.BsonReader) -> a
    2193:2193:java.lang.String find(org.bson.BsonReader):193:193 -> a
    2193:2193:java.lang.Object find(org.bson.BsonReader):190 -> a
com.mongodb.internal.connection.AbstractByteBufBsonDocument$Finder -> com.a.e.g.a$a:
    java.lang.Object find(org.bson.BsonReader) -> a
    java.lang.Object notFound() -> a
com.mongodb.internal.connection.AbstractMultiServerCluster -> com.a.e.g.b:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> b
    com.mongodb.connection.ClusterType clusterType -> a
    java.lang.String replicaSetName -> c
    org.bson.types.ObjectId maxElectionId -> d
    java.lang.Integer maxSetVersion -> e
    java.util.concurrent.ConcurrentMap addressToServerTupleMap -> f
    62:80:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory) -> <init>
    1430:1430:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterSettings.getMode():430:430 -> <init>
    1430:1430:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory):77 -> <init>
    1439:1439:com.mongodb.connection.ClusterType com.mongodb.connection.ClusterSettings.getRequiredClusterType():439:439 -> <init>
    1439:1439:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory):78 -> <init>
    1448:1448:java.lang.String com.mongodb.connection.ClusterSettings.getRequiredReplicaSetName():448:448 -> <init>
    1448:1448:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory):79 -> <init>
    88:88:com.mongodb.MongoException getSrvResolutionException() -> a
    92:103:void initialize(java.util.Collection) -> a
    2054:2054:com.mongodb.connection.ClusterDescription getCurrentDescription():54:54 -> a
    2054:2054:void initialize(java.util.Collection):92 -> a
    3054:3054:void withLock(java.lang.Runnable):54:54 -> a
    3054:3054:void initialize(java.util.Collection):96 -> a
    107:110:void connect() -> b
    3065:3065:com.mongodb.internal.connection.ClusterableServer com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$000(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> b
    3065:3065:void connect():108 -> b
    114:122:void close() -> close
    4054:4054:void withLock(java.lang.Runnable):54:54 -> close
    4054:4054:void close():114 -> close
    126:132:com.mongodb.internal.connection.ClusterableServer getServer(com.mongodb.ServerAddress) -> a
    5054:5054:boolean isClosed():54:54 -> a
    5054:5054:com.mongodb.internal.connection.ClusterableServer getServer(com.mongodb.ServerAddress):126 -> a
    5065:5065:com.mongodb.internal.connection.ClusterableServer com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$000(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> a
    5065:5065:com.mongodb.internal.connection.ClusterableServer getServer(com.mongodb.ServerAddress):132 -> a
    136:161:void onChange(java.util.Collection) -> b
    6054:6054:void withLock(java.lang.Runnable):54:54 -> b
    6054:6054:void onChange(java.util.Collection):136 -> b
    165:221:void onChange(com.mongodb.event.ServerDescriptionChangedEvent) -> a
    7054:7054:void withLock(java.lang.Runnable):54:54 -> a
    7054:7054:void onChange(com.mongodb.event.ServerDescriptionChangedEvent):165 -> a
    308:314:int nullSafeCompareTo(java.lang.Comparable,java.lang.Comparable) -> a
    319:325:java.lang.Comparable nullSafeMax(java.lang.Comparable,java.lang.Comparable) -> b
    353:360:void addServer(com.mongodb.ServerAddress) -> c
    7381:7381:com.mongodb.connection.ServerDescription getConnectingServerDescription(com.mongodb.ServerAddress):381:381 -> c
    7381:7381:void addServer(com.mongodb.ServerAddress):358 -> c
    8106:8106:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription.builder():106:106 -> c
    8106:8106:com.mongodb.connection.ServerDescription getConnectingServerDescription(com.mongodb.ServerAddress):381 -> c
    8106:8106:void addServer(com.mongodb.ServerAddress):358 -> c
    8358:8359:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.state(com.mongodb.connection.ServerConnectionState):358:359 -> c
    8358:8359:com.mongodb.connection.ServerDescription getConnectingServerDescription(com.mongodb.ServerAddress):381 -> c
    8358:8359:void addServer(com.mongodb.ServerAddress):358 -> c
    9220:9221:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.address(com.mongodb.ServerAddress):220:221 -> c
    9220:9221:com.mongodb.connection.ServerDescription getConnectingServerDescription(com.mongodb.ServerAddress):381 -> c
    9220:9221:void addServer(com.mongodb.ServerAddress):358 -> c
    363:367:void removeServer(com.mongodb.ServerAddress) -> d
    10065:10065:com.mongodb.internal.connection.ClusterableServer com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$000(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> d
    10065:10065:void removeServer(com.mongodb.ServerAddress):365 -> d
    370:378:void invalidateOldPrimaries(com.mongodb.ServerAddress) -> e
    11065:11065:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$100(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> e
    11065:11065:void invalidateOldPrimaries(com.mongodb.ServerAddress):371 -> e
    11583:11583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> e
    11583:11583:void invalidateOldPrimaries(com.mongodb.ServerAddress):371 -> e
    12065:12065:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$100(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> e
    12065:12065:void invalidateOldPrimaries(com.mongodb.ServerAddress):371 -> e
    13065:13065:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$100(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> e
    13065:13065:void invalidateOldPrimaries(com.mongodb.ServerAddress):373 -> e
    13583:13583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> e
    13583:13583:void invalidateOldPrimaries(com.mongodb.ServerAddress):373 -> e
    14065:14065:com.mongodb.internal.connection.ClusterableServer com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$000(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> e
    14065:14065:void invalidateOldPrimaries(com.mongodb.ServerAddress):375 -> e
    385:388:com.mongodb.connection.ClusterDescription updateDescription() -> j
    15054:15054:com.mongodb.connection.ClusterSettings getSettings():54:54 -> j
    15054:15054:com.mongodb.connection.ClusterDescription updateDescription():386 -> j
    16054:16054:com.mongodb.internal.connection.ClusterableServerFactory getServerFactory():54:54 -> j
    16054:16054:com.mongodb.connection.ClusterDescription updateDescription():386 -> j
    392:396:java.util.List getNewServerDescriptionList() -> k
    16065:16065:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$100(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> k
    16065:16065:java.util.List getNewServerDescriptionList():394 -> k
    421:424:void addNewHosts(java.util.Set) -> a
    450:453:void addHostsToSet(java.util.Set,java.util.Set) -> a
    54:54:void withLock(java.lang.Runnable) -> a
    54:54:com.mongodb.connection.ClusterDescription getCurrentDescription() -> c
    54:54:boolean isClosed() -> d
    54:54:com.mongodb.internal.connection.ClusterableServerFactory getServerFactory() -> e
    54:54:com.mongodb.connection.ClusterSettings getSettings() -> f
    54:54:com.mongodb.connection.ClusterId getClusterId() -> g
    54:54:com.mongodb.connection.ClusterDescription getDescription() -> h
    54:54:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector) -> a
    54:54:com.mongodb.internal.connection.ClusterClock getClock() -> i
    166:220:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent) -> b
    17054:17054:boolean isClosed():54:54 -> b
    17054:17054:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):166 -> b
    17065:17065:com.mongodb.connection.ServerDescription com.mongodb.event.ServerDescriptionChangedEvent.getNewDescription():65:65 -> b
    17065:17065:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):170 -> b
    17583:17583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    17583:17583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):174 -> b
    18583:18583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    18583:18583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):177 -> b
    19583:19583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    19583:19583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):181 -> b
    19814:19814:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.getType():814:814 -> b
    19814:19814:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):188 -> b
    19823:19823:com.mongodb.connection.ClusterType com.mongodb.connection.ServerDescription.getClusterType():823:823 -> b
    19823:19823:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):189 -> b
    20224:20278:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):224:278 -> b
    20224:20278:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    20814:20814:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.getType():814:814 -> b
    20814:20814:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):226 -> b
    20814:20814:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    21583:21583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    21583:21583:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):226 -> b
    21583:21583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    22583:22583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    22583:22583:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):227 -> b
    22583:22583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    22814:22814:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.getType():814:814 -> b
    22814:22814:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):231 -> b
    22814:22814:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    23583:23583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    23583:23583:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):232 -> b
    23583:23583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    23787:23787:java.lang.String com.mongodb.connection.ServerDescription.getSetName():787:787 -> b
    23787:23787:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):237 -> b
    23787:23787:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    24787:24787:java.lang.String com.mongodb.connection.ServerDescription.getSetName():787:787 -> b
    24787:24787:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):240 -> b
    24787:24787:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    25787:25787:java.lang.String com.mongodb.connection.ServerDescription.getSetName():787:787 -> b
    25787:25787:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):243 -> b
    25787:25787:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    26583:26583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    26583:26583:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):243 -> b
    26583:26583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    27583:27583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    27583:27583:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):244 -> b
    27583:27583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    28400:28409:void ensureServers(com.mongodb.connection.ServerDescription):400:409 -> b
    28400:28409:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    28400:28409:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    28412:28417:boolean hasPrimary():412:417 -> b
    28412:28417:void ensureServers(com.mongodb.connection.ServerDescription):400 -> b
    28412:28417:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    28412:28417:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    29065:29065:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$100(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> b
    29065:29065:boolean hasPrimary():413 -> b
    29065:29065:void ensureServers(com.mongodb.connection.ServerDescription):400 -> b
    29065:29065:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    29065:29065:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    29638:29638:java.util.Set com.mongodb.connection.ServerDescription.getHosts():638:638 -> b
    29638:29638:void ensureServers(com.mongodb.connection.ServerDescription):401 -> b
    29638:29638:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    29638:29638:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    29647:29647:java.util.Set com.mongodb.connection.ServerDescription.getPassives():647:647 -> b
    29647:29647:void ensureServers(com.mongodb.connection.ServerDescription):402 -> b
    29647:29647:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    29647:29647:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    29656:29656:java.util.Set com.mongodb.connection.ServerDescription.getArbiters():656:656 -> b
    29656:29656:void ensureServers(com.mongodb.connection.ServerDescription):403 -> b
    29656:29656:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    29656:29656:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    30427:30439:void removeExtraHosts(com.mongodb.connection.ServerDescription):427:439 -> b
    30427:30439:void ensureServers(com.mongodb.connection.ServerDescription):407 -> b
    30427:30439:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    30427:30439:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    30442:30446:java.util.Set getAllServerAddresses(com.mongodb.connection.ServerDescription):442:446 -> b
    30442:30446:void removeExtraHosts(com.mongodb.connection.ServerDescription):427 -> b
    30442:30446:void ensureServers(com.mongodb.connection.ServerDescription):407 -> b
    30442:30446:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    30442:30446:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    30638:30638:java.util.Set com.mongodb.connection.ServerDescription.getHosts():638:638 -> b
    30638:30638:java.util.Set getAllServerAddresses(com.mongodb.connection.ServerDescription):443 -> b
    30638:30638:void removeExtraHosts(com.mongodb.connection.ServerDescription):427 -> b
    30638:30638:void ensureServers(com.mongodb.connection.ServerDescription):407 -> b
    30638:30638:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    30638:30638:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    30647:30647:java.util.Set com.mongodb.connection.ServerDescription.getPassives():647:647 -> b
    30647:30647:java.util.Set getAllServerAddresses(com.mongodb.connection.ServerDescription):444 -> b
    30647:30647:void removeExtraHosts(com.mongodb.connection.ServerDescription):427 -> b
    30647:30647:void ensureServers(com.mongodb.connection.ServerDescription):407 -> b
    30647:30647:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    30647:30647:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    30656:30656:java.util.Set com.mongodb.connection.ServerDescription.getArbiters():656:656 -> b
    30656:30656:java.util.Set getAllServerAddresses(com.mongodb.connection.ServerDescription):445 -> b
    30656:30656:void removeExtraHosts(com.mongodb.connection.ServerDescription):427 -> b
    30656:30656:void ensureServers(com.mongodb.connection.ServerDescription):407 -> b
    30656:30656:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    30656:30656:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    31065:31065:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$100(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> b
    31065:31065:void removeExtraHosts(com.mongodb.connection.ServerDescription):430 -> b
    31065:31065:void ensureServers(com.mongodb.connection.ServerDescription):407 -> b
    31065:31065:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    31065:31065:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    31583:31583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    31583:31583:void removeExtraHosts(com.mongodb.connection.ServerDescription):430 -> b
    31583:31583:void ensureServers(com.mongodb.connection.ServerDescription):407 -> b
    31583:31583:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    31583:31583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    32065:32065:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$100(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> b
    32065:32065:void removeExtraHosts(com.mongodb.connection.ServerDescription):433 -> b
    32065:32065:void ensureServers(com.mongodb.connection.ServerDescription):407 -> b
    32065:32065:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    32065:32065:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    32583:32583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    32583:32583:void removeExtraHosts(com.mongodb.connection.ServerDescription):433 -> b
    32583:32583:void ensureServers(com.mongodb.connection.ServerDescription):407 -> b
    32583:32583:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    32583:32583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    33065:33065:com.mongodb.internal.connection.ClusterableServer com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$000(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> b
    33065:33065:void removeExtraHosts(com.mongodb.connection.ServerDescription):436 -> b
    33065:33065:void ensureServers(com.mongodb.connection.ServerDescription):407 -> b
    33065:33065:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):248 -> b
    33065:33065:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    33128:33128:java.lang.String com.mongodb.connection.ServerDescription.getCanonicalAddress():128:128 -> b
    33128:33128:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):250 -> b
    33128:33128:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    33583:33583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    33583:33583:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):251 -> b
    33583:33583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    34128:34128:java.lang.String com.mongodb.connection.ServerDescription.getCanonicalAddress():128:128 -> b
    34128:34128:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):251 -> b
    34128:34128:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    35128:35128:java.lang.String com.mongodb.connection.ServerDescription.getCanonicalAddress():128:128 -> b
    35128:35128:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):254 -> b
    35128:35128:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    35583:35583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    35583:35583:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):254 -> b
    35583:35583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    36583:36583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    36583:36583:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):255 -> b
    36583:36583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    37282:37291:boolean isStalePrimary(com.mongodb.connection.ServerDescription):282:291 -> b
    37282:37291:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):263 -> b
    37282:37291:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    37712:37712:org.bson.types.ObjectId com.mongodb.connection.ServerDescription.getElectionId():712:712 -> b
    37712:37712:boolean isStalePrimary(com.mongodb.connection.ServerDescription):282 -> b
    37712:37712:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):263 -> b
    37712:37712:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    37722:37722:java.lang.Integer com.mongodb.connection.ServerDescription.getSetVersion():722:722 -> b
    37722:37722:boolean isStalePrimary(com.mongodb.connection.ServerDescription):283 -> b
    37722:37722:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):263 -> b
    37722:37722:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    38702:38702:int com.mongodb.connection.ServerDescription.getMaxWireVersion():702:702 -> b
    38702:38702:boolean isStalePrimary(com.mongodb.connection.ServerDescription):284 -> b
    38702:38702:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):263 -> b
    38702:38702:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    39296:39301:void invalidatePotentialPrimary(com.mongodb.connection.ServerDescription):296:301 -> b
    39296:39301:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):264 -> b
    39296:39301:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    39583:39583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    39583:39583:void invalidatePotentialPrimary(com.mongodb.connection.ServerDescription):298 -> b
    39583:39583:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):264 -> b
    39583:39583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    39722:39722:java.lang.Integer com.mongodb.connection.ServerDescription.getSetVersion():722:722 -> b
    39722:39722:void invalidatePotentialPrimary(com.mongodb.connection.ServerDescription):298 -> b
    39722:39722:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):264 -> b
    39722:39722:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    40712:40712:org.bson.types.ObjectId com.mongodb.connection.ServerDescription.getElectionId():712:712 -> b
    40712:40712:void invalidatePotentialPrimary(com.mongodb.connection.ServerDescription):298 -> b
    40712:40712:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):264 -> b
    40712:40712:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    41583:41583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    41583:41583:void invalidatePotentialPrimary(com.mongodb.connection.ServerDescription):300 -> b
    41583:41583:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):264 -> b
    41583:41583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    42065:42065:com.mongodb.internal.connection.ClusterableServer com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$000(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> b
    42065:42065:void invalidatePotentialPrimary(com.mongodb.connection.ServerDescription):300 -> b
    42065:42065:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):264 -> b
    42065:42065:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    42712:42712:org.bson.types.ObjectId com.mongodb.connection.ServerDescription.getElectionId():712:712 -> b
    42712:42712:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):268 -> b
    42712:42712:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    42722:42722:java.lang.Integer com.mongodb.connection.ServerDescription.getSetVersion():722:722 -> b
    42722:42722:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):269 -> b
    42722:42722:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    43583:43583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    43583:43583:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):271 -> b
    43583:43583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    44583:44583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    44583:44583:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):273 -> b
    44583:44583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    45329:45330:boolean isNotAlreadyPrimary(com.mongodb.ServerAddress):329:330 -> b
    45329:45330:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):273 -> b
    45329:45330:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    46065:46065:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$100(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> b
    46065:46065:boolean isNotAlreadyPrimary(com.mongodb.ServerAddress):330 -> b
    46065:46065:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):273 -> b
    46065:46065:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    46583:46583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    46583:46583:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):275 -> b
    46583:46583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    46712:46712:org.bson.types.ObjectId com.mongodb.connection.ServerDescription.getElectionId():712:712 -> b
    46712:46712:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):275 -> b
    46712:46712:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    46722:46722:java.lang.Integer com.mongodb.connection.ServerDescription.getSetVersion():722:722 -> b
    46722:46722:boolean handleReplicaSetMemberChanged(com.mongodb.connection.ServerDescription):275 -> b
    46722:46722:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):197 -> b
    47334:47339:boolean handleShardRouterChanged(com.mongodb.connection.ServerDescription):334:339 -> b
    47334:47339:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):200 -> b
    47601:47601:boolean com.mongodb.connection.ServerDescription.isShardRouter():601:601 -> b
    47601:47601:boolean handleShardRouterChanged(com.mongodb.connection.ServerDescription):334 -> b
    47601:47601:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):200 -> b
    47814:47814:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.getType():814:814 -> b
    47814:47814:boolean handleShardRouterChanged(com.mongodb.connection.ServerDescription):336 -> b
    47814:47814:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):200 -> b
    48583:48583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    48583:48583:boolean handleShardRouterChanged(com.mongodb.connection.ServerDescription):336 -> b
    48583:48583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):200 -> b
    49583:49583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    49583:49583:boolean handleShardRouterChanged(com.mongodb.connection.ServerDescription):337 -> b
    49583:49583:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):200 -> b
    50343:50349:boolean handleStandAloneChanged(com.mongodb.connection.ServerDescription):343:349 -> b
    50343:50349:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):203 -> b
    50350:50350:com.mongodb.connection.ClusterSettings getSettings():54:54 -> b
    50350:50350:boolean handleStandAloneChanged(com.mongodb.connection.ServerDescription):343 -> b
    50350:50350:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):203 -> b
    50351:50351:java.util.List com.mongodb.connection.ClusterSettings.getHosts():421:421 -> b
    50351:50351:boolean handleStandAloneChanged(com.mongodb.connection.ServerDescription):343 -> b
    50351:50351:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):203 -> b
    50352:50352:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    50352:50352:boolean handleStandAloneChanged(com.mongodb.connection.ServerDescription):345 -> b
    50352:50352:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):203 -> b
    50353:50353:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> b
    50353:50353:boolean handleStandAloneChanged(com.mongodb.connection.ServerDescription):347 -> b
    50353:50353:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):203 -> b
    50354:50354:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$102(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple,com.mongodb.connection.ServerDescription):65:65 -> b
    50354:50354:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):213 -> b
    50355:50355:com.mongodb.connection.ClusterDescription getCurrentDescription():54:54 -> b
    50355:50355:void lambda$onChange$3(com.mongodb.event.ServerDescriptionChangedEvent):214 -> b
    137:160:void lambda$onChange$2(java.util.Collection) -> c
    50356:50356:boolean isClosed():54:54 -> c
    50356:50356:void lambda$onChange$2(java.util.Collection):137 -> c
    50357:50357:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$100(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> c
    50357:50357:void lambda$onChange$2(java.util.Collection):147 -> c
    50358:50358:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> c
    50358:50358:void lambda$onChange$2(java.util.Collection):147 -> c
    50359:50359:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$100(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> c
    50359:50359:void lambda$onChange$2(java.util.Collection):149 -> c
    50360:50360:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> c
    50360:50360:void lambda$onChange$2(java.util.Collection):149 -> c
    50361:50361:com.mongodb.internal.connection.ClusterableServer com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$000(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> c
    50361:50361:void lambda$onChange$2(java.util.Collection):152 -> c
    50362:50362:com.mongodb.connection.ClusterDescription getCurrentDescription():54:54 -> c
    50362:50362:void lambda$onChange$2(java.util.Collection):156 -> c
    115:121:void lambda$close$1() -> l
    50363:50363:boolean isClosed():54:54 -> l
    50363:50363:void lambda$close$1():115 -> l
    50364:50364:com.mongodb.internal.connection.ClusterableServer com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple.access$000(com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple):65:65 -> l
    50364:50364:void lambda$close$1():117 -> l
    97:102:void lambda$initialize$0(java.util.Collection,com.mongodb.connection.ClusterDescription) -> a
    55:55:void <clinit>() -> <clinit>
com.mongodb.internal.connection.AbstractMultiServerCluster$1 -> com.a.e.g.b$1:
    int[] $SwitchMap$com$mongodb$connection$ClusterType -> a
    195:195:void <clinit>() -> <clinit>
com.mongodb.internal.connection.AbstractMultiServerCluster$ServerTuple -> com.a.e.g.b$a:
    com.mongodb.internal.connection.ClusterableServer server -> a
    com.mongodb.connection.ServerDescription description -> b
    69:72:void <init>(com.mongodb.internal.connection.ClusterableServer,com.mongodb.connection.ServerDescription) -> <init>
    65:65:void <init>(com.mongodb.internal.connection.ClusterableServer,com.mongodb.connection.ServerDescription,byte) -> <init>
com.mongodb.internal.connection.AbstractReferenceCounted -> com.a.e.g.c:
    java.util.concurrent.atomic.AtomicInteger referenceCount -> a
    23:24:void <init>() -> <init>
    32:35:com.mongodb.internal.binding.ReferenceCounted retain() -> i
    40:44:int release() -> c
com.mongodb.internal.connection.AsyncConnection -> com.a.e.g.d:
    com.mongodb.internal.connection.AsyncConnection retain() -> d
    37:37:com.mongodb.internal.binding.ReferenceCounted retain() -> i
com.mongodb.internal.connection.AsynchronousClusterEventListener -> com.a.e.g.e:
    java.util.concurrent.BlockingQueue eventPublishers -> a
    com.mongodb.event.ClusterListener clusterListener -> b
    com.mongodb.event.ClusterListener serverListener$24d157b8 -> c
    com.mongodb.event.ClusterListener serverMonitorListener$295e7afc -> d
    java.lang.Thread publishingThread -> e
    70:73:com.mongodb.internal.connection.AsynchronousClusterEventListener startNew$49f97f21(com.mongodb.connection.ClusterId,com.mongodb.event.ClusterListener,com.mongodb.event.ClusterListener,com.mongodb.event.ClusterListener) -> a
    56:83:void <init>(com.mongodb.connection.ClusterId,com.mongodb.event.ClusterListener,com.mongodb.event.ClusterListener,com.mongodb.event.ClusterListener) -> <init>
    1068:1068:java.lang.String com.mongodb.connection.ClusterId.getValue():68:68 -> <init>
    1068:1068:void <init>(com.mongodb.connection.ClusterId,com.mongodb.event.ClusterListener,com.mongodb.event.ClusterListener,com.mongodb.event.ClusterListener):81 -> <init>
    92:93:void clusterOpening(com.mongodb.event.ClusterOpeningEvent) -> a
    97:98:void clusterClosed(com.mongodb.event.ClusterClosedEvent) -> a
    102:103:void clusterDescriptionChanged(com.mongodb.event.ClusterDescriptionChangedEvent) -> a
    107:108:void serverOpening(com.mongodb.event.ServerOpeningEvent) -> a
    112:113:void serverClosed(com.mongodb.event.ServerClosedEvent) -> a
    117:118:void serverDescriptionChanged(com.mongodb.event.ServerDescriptionChangedEvent) -> a
    122:123:void serverHearbeatStarted(com.mongodb.event.ServerHeartbeatStartedEvent) -> a
    127:128:void serverHeartbeatSucceeded(com.mongodb.event.ServerHeartbeatSucceededEvent) -> a
    132:133:void serverHeartbeatFailed(com.mongodb.event.ServerHeartbeatFailedEvent) -> a
    136:140:void addClusterEventInvocation(com.mongodb.internal.connection.AsynchronousClusterEventListener$VoidFunction,boolean) -> a
    143:147:void addServerEventInvocation(com.mongodb.internal.connection.AsynchronousClusterEventListener$VoidFunction) -> a
    150:154:void addServerMonitorEventInvocation(com.mongodb.internal.connection.AsynchronousClusterEventListener$VoidFunction) -> b
    158:162:void addEvent(java.util.function.Supplier) -> a
    167:176:void publishEvents() -> a
    151:152:java.lang.Boolean lambda$addServerMonitorEventInvocation$11(com.mongodb.internal.connection.AsynchronousClusterEventListener$VoidFunction) -> c
    144:145:java.lang.Boolean lambda$addServerEventInvocation$10(com.mongodb.internal.connection.AsynchronousClusterEventListener$VoidFunction) -> d
    137:138:java.lang.Boolean lambda$addClusterEventInvocation$9(com.mongodb.internal.connection.AsynchronousClusterEventListener$VoidFunction,boolean) -> b
    132:132:void lambda$serverHeartbeatFailed$8$1eef8e76(com.mongodb.event.ServerHeartbeatFailedEvent,com.mongodb.event.ClusterListener) -> a
    127:127:void lambda$serverHeartbeatSucceeded$7$3649021c(com.mongodb.event.ServerHeartbeatSucceededEvent,com.mongodb.event.ClusterListener) -> a
    122:122:void lambda$serverHearbeatStarted$6$7b7f4ec4(com.mongodb.event.ServerHeartbeatStartedEvent,com.mongodb.event.ClusterListener) -> a
    117:117:void lambda$serverDescriptionChanged$5$5acbd425(com.mongodb.event.ServerDescriptionChangedEvent,com.mongodb.event.ClusterListener) -> a
    112:112:void lambda$serverClosed$4$6882e407(com.mongodb.event.ServerClosedEvent,com.mongodb.event.ClusterListener) -> a
    107:107:void lambda$serverOpening$3$78397a49(com.mongodb.event.ServerOpeningEvent,com.mongodb.event.ClusterListener) -> a
    102:102:void lambda$clusterDescriptionChanged$2(com.mongodb.event.ClusterDescriptionChangedEvent,com.mongodb.event.ClusterListener) -> a
    97:97:void lambda$clusterClosed$1(com.mongodb.event.ClusterClosedEvent,com.mongodb.event.ClusterListener) -> a
    92:92:void lambda$clusterOpening$0(com.mongodb.event.ClusterOpeningEvent,com.mongodb.event.ClusterListener) -> a
com.mongodb.internal.connection.AsynchronousClusterEventListener$VoidFunction -> com.a.e.g.e$a:
    void apply(java.lang.Object) -> apply
com.mongodb.internal.connection.Authenticator -> com.a.e.g.f:
    com.mongodb.internal.connection.MongoCredentialWithCache credential -> a
    com.mongodb.connection.ClusterConnectionMode clusterConnectionMode -> b
    com.mongodb.internal.connection.DescriptionHelper serverApi$10f7fbbb -> c
    39:43:void <init>(com.mongodb.internal.connection.MongoCredentialWithCache,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    47:47:com.mongodb.internal.connection.MongoCredentialWithCache getMongoCredentialWithCache() -> a
    52:52:com.mongodb.MongoCredential getMongoCredential() -> b
    1054:1054:com.mongodb.MongoCredential com.mongodb.internal.connection.MongoCredentialWithCache.getCredential():54:54 -> b
    1054:1054:com.mongodb.MongoCredential getMongoCredential():52 -> b
    56:56:com.mongodb.connection.ClusterConnectionMode getClusterConnectionMode() -> c
    61:61:com.mongodb.internal.connection.DescriptionHelper getServerApi$14c3e59a() -> d
    84:88:java.lang.Object getNonNullMechanismProperty(java.lang.String,java.lang.Object) -> a
    2054:2054:com.mongodb.MongoCredential com.mongodb.internal.connection.MongoCredentialWithCache.getCredential():54:54 -> a
    2054:2054:java.lang.Object getNonNullMechanismProperty(java.lang.String,java.lang.Object):84 -> a
    void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription) -> a
com.mongodb.internal.connection.AwsAuthenticator -> com.a.e.g.g:
    63:68:void <init>(com.mongodb.internal.connection.MongoCredentialWithCache,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    1442:1442:com.mongodb.AuthenticationMechanism com.mongodb.MongoCredential.getAuthenticationMechanism():442:442 -> <init>
    1442:1442:void <init>(com.mongodb.internal.connection.MongoCredentialWithCache,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):65 -> <init>
    72:72:java.lang.String getMechanismName() -> e
    77:77:javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress) -> a
    57:57:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription) -> a
com.mongodb.internal.connection.AwsAuthenticator$AwsSaslClient -> com.a.e.g.g$a:
    82:87:void <init>(com.mongodb.MongoCredential) -> <init>
com.mongodb.internal.connection.BaseCluster -> com.a.e.g.h:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> a
    java.util.concurrent.locks.ReentrantLock lock -> b
    java.util.concurrent.atomic.AtomicReference phase -> c
    com.mongodb.internal.connection.ClusterableServerFactory serverFactory -> d
    com.mongodb.connection.ClusterId clusterId -> e
    com.mongodb.connection.ClusterSettings settings -> f
    com.mongodb.event.ClusterListener clusterListener -> g
    com.mongodb.internal.connection.ClusterClock clusterClock -> h
    java.lang.Thread waitQueueHandler -> i
    boolean isClosed -> j
    com.mongodb.connection.ClusterDescription description -> k
    73:94:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory) -> <init>
    1430:1430:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterSettings.getMode():430:430 -> <init>
    1430:1430:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory):92 -> <init>
    98:98:com.mongodb.internal.connection.ClusterClock getClock() -> i
    103:145:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector) -> a
    2389:2394:com.mongodb.selector.ServerSelector getCompositeServerSelector(com.mongodb.selector.ServerSelector):389:394 -> a
    2389:2394:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):108 -> a
    2513:2513:long com.mongodb.connection.ClusterSettings.getLocalThreshold(java.util.concurrent.TimeUnit):513:513 -> a
    2513:2513:com.mongodb.selector.ServerSelector getCompositeServerSelector(com.mongodb.selector.ServerSelector):390 -> a
    2513:2513:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):108 -> a
    3477:3477:com.mongodb.selector.ServerSelector com.mongodb.connection.ClusterSettings.getServerSelector():477:477 -> a
    3477:3477:com.mongodb.selector.ServerSelector getCompositeServerSelector(com.mongodb.selector.ServerSelector):391 -> a
    3477:3477:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):108 -> a
    4477:4477:com.mongodb.selector.ServerSelector com.mongodb.connection.ClusterSettings.getServerSelector():477:477 -> a
    4477:4477:com.mongodb.selector.ServerSelector getCompositeServerSelector(com.mongodb.selector.ServerSelector):394 -> a
    4477:4477:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):108 -> a
    5403:5406:void throwIfIncompatible(com.mongodb.connection.ClusterDescription):403:406 -> a
    5403:5406:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):118 -> a
    6131:6136:boolean com.mongodb.connection.ClusterDescription.isCompatibleWithDriver():131:136 -> a
    6131:6136:void throwIfIncompatible(com.mongodb.connection.ClusterDescription):403 -> a
    6131:6136:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):118 -> a
    6505:6517:boolean com.mongodb.connection.ServerDescription.isCompatibleWithDriver():505:517 -> a
    6505:6517:boolean com.mongodb.connection.ClusterDescription.isCompatibleWithDriver():132 -> a
    6505:6517:void throwIfIncompatible(com.mongodb.connection.ClusterDescription):403 -> a
    6505:6517:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):118 -> a
    7410:7424:com.mongodb.MongoIncompatibleDriverException createIncompatibleException(com.mongodb.connection.ClusterDescription):410:424 -> a
    7410:7424:void throwIfIncompatible(com.mongodb.connection.ClusterDescription):404 -> a
    7410:7424:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):118 -> a
    8147:8152:com.mongodb.connection.ServerDescription com.mongodb.connection.ClusterDescription.findServerIncompatiblyOlderThanDriver():147:152 -> a
    8147:8152:com.mongodb.MongoIncompatibleDriverException createIncompatibleException(com.mongodb.connection.ClusterDescription):410 -> a
    8147:8152:void throwIfIncompatible(com.mongodb.connection.ClusterDescription):404 -> a
    8147:8152:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):118 -> a
    8583:8583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> a
    8583:8583:com.mongodb.MongoIncompatibleDriverException createIncompatibleException(com.mongodb.connection.ClusterDescription):413 -> a
    8583:8583:void throwIfIncompatible(com.mongodb.connection.ClusterDescription):404 -> a
    8583:8583:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):118 -> a
    8702:8702:int com.mongodb.connection.ServerDescription.getMaxWireVersion():702:702 -> a
    8702:8702:com.mongodb.MongoIncompatibleDriverException createIncompatibleException(com.mongodb.connection.ClusterDescription):413 -> a
    8702:8702:void throwIfIncompatible(com.mongodb.connection.ClusterDescription):404 -> a
    8702:8702:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):118 -> a
    9163:9168:com.mongodb.connection.ServerDescription com.mongodb.connection.ClusterDescription.findServerIncompatiblyNewerThanDriver():163:168 -> a
    9163:9168:com.mongodb.MongoIncompatibleDriverException createIncompatibleException(com.mongodb.connection.ClusterDescription):416 -> a
    9163:9168:void throwIfIncompatible(com.mongodb.connection.ClusterDescription):404 -> a
    9163:9168:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):118 -> a
    9583:9583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> a
    9583:9583:com.mongodb.MongoIncompatibleDriverException createIncompatibleException(com.mongodb.connection.ClusterDescription):419 -> a
    9583:9583:void throwIfIncompatible(com.mongodb.connection.ClusterDescription):404 -> a
    9583:9583:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):118 -> a
    9693:9693:int com.mongodb.connection.ServerDescription.getMinWireVersion():693:693 -> a
    9693:9693:com.mongodb.MongoIncompatibleDriverException createIncompatibleException(com.mongodb.connection.ClusterDescription):419 -> a
    9693:9693:void throwIfIncompatible(com.mongodb.connection.ClusterDescription):404 -> a
    9693:9693:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):118 -> a
    10428:10431:com.mongodb.MongoTimeoutException createTimeoutException(com.mongodb.selector.ServerSelector,com.mongodb.connection.ClusterDescription):428:431 -> a
    10428:10431:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):125 -> a
    11336:11345:void logServerSelectionFailure(com.mongodb.selector.ServerSelector,com.mongodb.connection.ClusterDescription):336:345 -> a
    11336:11345:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):129 -> a
    169:213:com.mongodb.connection.ClusterDescription getDescription() -> h
    12210:12210:com.mongodb.connection.ClusterType com.mongodb.connection.ClusterDescription.getType():210:210 -> h
    12210:12210:com.mongodb.connection.ClusterDescription getDescription():181 -> h
    218:218:com.mongodb.connection.ClusterId getClusterId() -> g
    222:222:com.mongodb.connection.ClusterSettings getSettings() -> f
    226:226:com.mongodb.internal.connection.ClusterableServerFactory getServerFactory() -> e
    void connect() -> b
    233:239:void close() -> close
    12487:12492:void stopWaitQueueHandler():487:492 -> close
    12487:12492:void close():237 -> close
    243:243:boolean isClosed() -> d
    247:255:void updateDescription(com.mongodb.connection.ClusterDescription) -> a
    262:266:void fireChangeEvent(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription) -> a
    13033:13051:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):33:51 -> a
    13033:13051:void fireChangeEvent(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):262 -> a
    13221:13221:com.mongodb.MongoException com.mongodb.connection.ClusterDescription.getSrvResolutionException():221:221 -> a
    13221:13221:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):33 -> a
    13221:13221:void fireChangeEvent(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):262 -> a
    14221:14221:com.mongodb.MongoException com.mongodb.connection.ClusterDescription.getSrvResolutionException():221:221 -> a
    14221:14221:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):33 -> a
    14221:14221:void fireChangeEvent(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):262 -> a
    14231:14231:java.util.List com.mongodb.connection.ClusterDescription.getServerDescriptions():231:231 -> a
    14231:14231:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):36 -> a
    14231:14231:void fireChangeEvent(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):262 -> a
    15231:15231:java.util.List com.mongodb.connection.ClusterDescription.getServerDescriptions():231:231 -> a
    15231:15231:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):36 -> a
    15231:15231:void fireChangeEvent(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):262 -> a
    16231:16231:java.util.List com.mongodb.connection.ClusterDescription.getServerDescriptions():231:231 -> a
    16231:16231:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):39 -> a
    16231:16231:void fireChangeEvent(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):262 -> a
    17231:17231:java.util.List com.mongodb.connection.ClusterDescription.getServerDescriptions():231:231 -> a
    17231:17231:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):41 -> a
    17231:17231:void fireChangeEvent(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):262 -> a
    17583:17583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> a
    17583:17583:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):42 -> a
    17583:17583:void fireChangeEvent(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):262 -> a
    18583:18583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> a
    18583:18583:boolean com.mongodb.internal.connection.EventHelper.wouldDescriptionsGenerateEquivalentEvents(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):42 -> a
    18583:18583:void fireChangeEvent(com.mongodb.connection.ClusterDescription,com.mongodb.connection.ClusterDescription):262 -> a
    270:270:com.mongodb.connection.ClusterDescription getCurrentDescription() -> c
    275:276:void withLock(java.lang.Runnable) -> a
    283:286:long getMaxWaitTimeNanos() -> a
    290:290:long getMinWaitTimeNanos() -> j
    349:349:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector,com.mongodb.connection.ClusterDescription) -> a
    356:361:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector,com.mongodb.connection.ClusterDescription,java.util.function.Function) -> a
    376:385:java.util.List atMostNRandom(java.util.ArrayList,int,java.util.function.Function) -> a
    399:399:com.mongodb.internal.connection.ClusterableServer createServer(com.mongodb.ServerAddress) -> b
    488:491:void lambda$stopWaitQueueHandler$5() -> k
    360:360:int lambda$selectServer$3(com.mongodb.internal.connection.ServerTuple) -> a
    19034:19034:com.mongodb.internal.connection.Server com.mongodb.internal.connection.ServerTuple.getServer():34:34 -> a
    19034:19034:int lambda$selectServer$3(com.mongodb.internal.connection.ServerTuple):360 -> a
    357:358:com.mongodb.internal.connection.ServerTuple lambda$selectServer$2(java.util.function.Function,com.mongodb.connection.ServerDescription) -> a
    19583:19583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> a
    19583:19583:com.mongodb.internal.connection.ServerTuple lambda$selectServer$2(java.util.function.Function,com.mongodb.connection.ServerDescription):357 -> a
    279:279:void lambda$updatePhase$1() -> l
    248:254:void lambda$updateDescription$0(com.mongodb.connection.ClusterDescription) -> b
    20279:20280:void updatePhase():279:280 -> b
    20279:20280:void lambda$updateDescription$0(com.mongodb.connection.ClusterDescription):253 -> b
    71:71:void <clinit>() -> <clinit>
com.mongodb.internal.connection.BsonWriterDecorator -> com.a.e.g.i:
    org.bson.BsonWriter bsonWriter -> a
    36:38:void <init>(org.bson.BsonWriter) -> <init>
    46:47:void writeStartDocument(java.lang.String) -> a
    51:52:void writeStartDocument() -> a
    56:57:void writeEndDocument() -> b
    61:62:void writeStartArray(java.lang.String) -> b
    66:67:void writeStartArray() -> c
    71:72:void writeEndArray() -> d
    81:82:void writeBinaryData(org.bson.BsonBinary) -> a
    86:87:void writeBoolean(java.lang.String,boolean) -> a
    91:92:void writeBoolean(boolean) -> a
    101:102:void writeDateTime(long) -> a
    111:112:void writeDBPointer(org.bson.BsonDbPointer) -> a
    121:122:void writeDouble(double) -> a
    126:127:void writeInt32(java.lang.String,int) -> a
    131:132:void writeInt32(int) -> a
    141:142:void writeInt64(long) -> b
    146:147:void writeDecimal128(org.bson.types.Decimal128) -> a
    161:162:void writeJavaScript(java.lang.String) -> c
    171:172:void writeJavaScriptWithScope(java.lang.String) -> d
    181:182:void writeMaxKey() -> e
    191:192:void writeMinKey() -> f
    196:197:void writeName(java.lang.String) -> e
    206:207:void writeNull() -> g
    211:212:void writeObjectId(java.lang.String,org.bson.types.ObjectId) -> a
    216:217:void writeObjectId(org.bson.types.ObjectId) -> a
    226:227:void writeRegularExpression(org.bson.BsonRegularExpression) -> a
    231:232:void writeString(java.lang.String,java.lang.String) -> a
    236:237:void writeString(java.lang.String) -> f
    246:247:void writeSymbol(java.lang.String) -> g
    256:257:void writeTimestamp(org.bson.BsonTimestamp) -> a
    266:267:void writeUndefined() -> h
    271:272:void pipe(org.bson.BsonReader) -> a
com.mongodb.internal.connection.BsonWriterHelper -> com.a.e.g.j:
    org.bson.codecs.configuration.CodecRegistry REGISTRY -> a
    org.bson.codecs.EncoderContext ENCODER_CONTEXT -> b
    41:45:void writeElements(org.bson.BsonWriter,java.util.List) -> a
    1046:1046:java.lang.String org.bson.BsonElement.getName():46:46 -> a
    1046:1046:void writeElements(org.bson.BsonWriter,java.util.List):42 -> a
    1055:1055:org.bson.BsonValue org.bson.BsonElement.getValue():55:55 -> a
    1055:1055:void writeElements(org.bson.BsonWriter,java.util.List):43 -> a
    2055:2055:org.bson.BsonValue org.bson.BsonElement.getValue():55:55 -> a
    2055:2055:void writeElements(org.bson.BsonWriter,java.util.List):43 -> a
    49:52:void writePayloadArray(org.bson.BsonWriter,org.bson.io.BsonOutput,com.mongodb.internal.connection.MessageSettings,int,com.mongodb.internal.connection.SplittablePayload,int) -> a
    2104:2106:com.mongodb.internal.connection.MessageSettings getDocumentMessageSettings(com.mongodb.internal.connection.MessageSettings):104:106 -> a
    2104:2106:void writePayloadArray(org.bson.BsonWriter,org.bson.io.BsonOutput,com.mongodb.internal.connection.MessageSettings,int,com.mongodb.internal.connection.SplittablePayload,int):50 -> a
    2119:2119:int com.mongodb.internal.connection.MessageSettings.getMaxDocumentSize():119:119 -> a
    2119:2119:com.mongodb.internal.connection.MessageSettings getDocumentMessageSettings(com.mongodb.internal.connection.MessageSettings):105 -> a
    2119:2119:void writePayloadArray(org.bson.BsonWriter,org.bson.io.BsonOutput,com.mongodb.internal.connection.MessageSettings,int,com.mongodb.internal.connection.SplittablePayload,int):50 -> a
    3087:3088:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.maxMessageSize(int):87:88 -> a
    3087:3088:com.mongodb.internal.connection.MessageSettings getDocumentMessageSettings(com.mongodb.internal.connection.MessageSettings):105 -> a
    3087:3088:void writePayloadArray(org.bson.BsonWriter,org.bson.io.BsonOutput,com.mongodb.internal.connection.MessageSettings,int,com.mongodb.internal.connection.SplittablePayload,int):50 -> a
    56:71:void writePayload(org.bson.BsonWriter,org.bson.io.BsonOutput,com.mongodb.internal.connection.MessageSettings,int,com.mongodb.internal.connection.SplittablePayload,int) -> b
    3103:3103:com.mongodb.internal.connection.SplittablePayload$Type com.mongodb.internal.connection.SplittablePayload.getPayloadType():103:103 -> b
    3103:3103:void writePayload(org.bson.BsonWriter,org.bson.io.BsonOutput,com.mongodb.internal.connection.MessageSettings,int,com.mongodb.internal.connection.SplittablePayload,int):56 -> b
    3156:3157:void com.mongodb.internal.connection.SplittablePayload.setPosition(int):156:157 -> b
    3156:3157:void writePayload(org.bson.BsonWriter,org.bson.io.BsonOutput,com.mongodb.internal.connection.MessageSettings,int,com.mongodb.internal.connection.SplittablePayload,int):61 -> b
    4148:4148:int com.mongodb.internal.connection.SplittablePayload.getPosition():148:148 -> b
    4148:4148:void writePayload(org.bson.BsonWriter,org.bson.io.BsonOutput,com.mongodb.internal.connection.MessageSettings,int,com.mongodb.internal.connection.SplittablePayload,int):67 -> b
    5119:5119:int com.mongodb.internal.connection.MessageSettings.getMaxDocumentSize():119:119 -> b
    5119:5119:void writePayload(org.bson.BsonWriter,org.bson.io.BsonOutput,com.mongodb.internal.connection.MessageSettings,int,com.mongodb.internal.connection.SplittablePayload,int):69 -> b
    76:85:boolean writeDocument(org.bson.BsonWriter,org.bson.io.BsonOutput,com.mongodb.internal.connection.MessageSettings,org.bson.BsonDocument,int,int,int) -> a
    90:90:org.bson.codecs.Codec getCodec(org.bson.BsonValue) -> a
    94:100:com.mongodb.internal.connection.MessageSettings getPayloadMessageSettings(com.mongodb.internal.connection.SplittablePayload$Type,com.mongodb.internal.connection.MessageSettings) -> a
    6119:6119:int com.mongodb.internal.connection.MessageSettings.getMaxDocumentSize():119:119 -> a
    6119:6119:com.mongodb.internal.connection.MessageSettings getPayloadMessageSettings(com.mongodb.internal.connection.SplittablePayload$Type,com.mongodb.internal.connection.MessageSettings):97 -> a
    7076:7077:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.maxDocumentSize(int):76:77 -> a
    7076:7077:com.mongodb.internal.connection.MessageSettings getPayloadMessageSettings(com.mongodb.internal.connection.SplittablePayload$Type,com.mongodb.internal.connection.MessageSettings):97 -> a
    110:114:com.mongodb.internal.connection.MessageSettings$Builder createMessageSettingsBuilder(com.mongodb.internal.connection.MessageSettings) -> a
    8046:8046:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings.builder():46:46 -> a
    8046:8046:com.mongodb.internal.connection.MessageSettings$Builder createMessageSettingsBuilder(com.mongodb.internal.connection.MessageSettings):110 -> a
    8137:8137:int com.mongodb.internal.connection.MessageSettings.getMaxBatchCount():137:137 -> a
    8137:8137:com.mongodb.internal.connection.MessageSettings$Builder createMessageSettingsBuilder(com.mongodb.internal.connection.MessageSettings):111 -> a
    9098:9099:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.maxBatchCount(int):98:99 -> a
    9098:9099:com.mongodb.internal.connection.MessageSettings$Builder createMessageSettingsBuilder(com.mongodb.internal.connection.MessageSettings):111 -> a
    9128:9128:int com.mongodb.internal.connection.MessageSettings.getMaxMessageSize():128:128 -> a
    9128:9128:com.mongodb.internal.connection.MessageSettings$Builder createMessageSettingsBuilder(com.mongodb.internal.connection.MessageSettings):112 -> a
    10087:10088:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.maxMessageSize(int):87:88 -> a
    10087:10088:com.mongodb.internal.connection.MessageSettings$Builder createMessageSettingsBuilder(com.mongodb.internal.connection.MessageSettings):112 -> a
    10119:10119:int com.mongodb.internal.connection.MessageSettings.getMaxDocumentSize():119:119 -> a
    10119:10119:com.mongodb.internal.connection.MessageSettings$Builder createMessageSettingsBuilder(com.mongodb.internal.connection.MessageSettings):113 -> a
    11076:11077:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.maxDocumentSize(int):76:77 -> a
    11076:11077:com.mongodb.internal.connection.MessageSettings$Builder createMessageSettingsBuilder(com.mongodb.internal.connection.MessageSettings):113 -> a
    11141:11141:int com.mongodb.internal.connection.MessageSettings.getMaxWireVersion():141:141 -> a
    11141:11141:com.mongodb.internal.connection.MessageSettings$Builder createMessageSettingsBuilder(com.mongodb.internal.connection.MessageSettings):114 -> a
    12103:12104:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.maxWireVersion(int):103:104 -> a
    12103:12104:com.mongodb.internal.connection.MessageSettings$Builder createMessageSettingsBuilder(com.mongodb.internal.connection.MessageSettings):114 -> a
    119:126:boolean exceedsLimits(com.mongodb.internal.connection.MessageSettings,int,int,int) -> a
    12137:12137:int com.mongodb.internal.connection.MessageSettings.getMaxBatchCount():137:137 -> a
    12137:12137:boolean exceedsLimits(com.mongodb.internal.connection.MessageSettings,int,int,int):119 -> a
    13128:13128:int com.mongodb.internal.connection.MessageSettings.getMaxMessageSize():128:128 -> a
    13128:13128:boolean exceedsLimits(com.mongodb.internal.connection.MessageSettings,int,int,int):121 -> a
    14119:14119:int com.mongodb.internal.connection.MessageSettings.getMaxDocumentSize():119:119 -> a
    14119:14119:boolean exceedsLimits(com.mongodb.internal.connection.MessageSettings,int,int,int):123 -> a
    37:38:void <clinit>() -> <clinit>
    15085:15085:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.fromProviders(org.bson.codecs.configuration.CodecProvider[]):85:85 -> <clinit>
    15085:15085:void <clinit>():37 -> <clinit>
com.mongodb.internal.connection.BulkWriteBatchCombiner -> com.a.e.g.k:
    com.mongodb.ServerAddress serverAddress -> a
    boolean ordered -> b
    com.mongodb.WriteConcern writeConcern -> f
    int insertedCount -> g
    int matchedCount -> h
    int deletedCount -> i
    int modifiedCount -> j
    java.util.Set writeUpserts -> k
    java.util.Set writeInserts -> l
    java.util.Set writeErrors -> c
    java.util.Set errorLabels -> d
    java.util.List writeConcernErrors -> e
    50:68:void <init>(com.mongodb.ServerAddress,boolean,com.mongodb.WriteConcern) -> <init>
    76:82:void addResult(com.mongodb.bulk.BulkWriteResult) -> a
    203:206:com.mongodb.bulk.BulkWriteResult createResult() -> a
    1284:1284:com.mongodb.bulk.BulkWriteResult com.mongodb.bulk.BulkWriteResult.unacknowledged():284:284 -> a
    1284:1284:com.mongodb.bulk.BulkWriteResult createResult():206 -> a
    210:210:boolean hasWriteErrors() -> b
com.mongodb.internal.connection.ByteBufBsonDocument -> com.a.e.g.l:
    org.bson.ByteBuf byteBuf -> a
    64:81:java.util.List createList(com.mongodb.internal.connection.ByteBufferBsonOutput,int) -> a
    1083:1083:int com.mongodb.internal.connection.CompositeByteBuf.position():83:83 -> a
    1083:1083:java.util.List createList(com.mongodb.internal.connection.ByteBufferBsonOutput,int):76 -> a
    85:95:com.mongodb.internal.connection.ByteBufBsonDocument createOne(com.mongodb.internal.connection.ByteBufferBsonOutput,int) -> b
    100:100:java.lang.String toJson() -> a_
    105:113:java.lang.String toJson(org.bson.json.JsonWriterSettings) -> a
    118:118:org.bson.BsonReader asBsonReader() -> d
    123:137:java.lang.Object findInDocument(com.mongodb.internal.connection.AbstractByteBufBsonDocument$Finder) -> a
    142:144:org.bson.BsonDocument clone() -> e
    152:157:org.bson.BsonDocument toBaseBsonDocument() -> b
    160:162:void <init>(org.bson.ByteBuf) -> <init>
    41:41:java.lang.Object clone() -> clone
com.mongodb.internal.connection.ByteBufferBsonOutput -> com.a.e.g.m:
    com.mongodb.connection.BufferProvider bufferProvider -> a
    java.util.List bufferList -> b
    int curBufferIndex -> c
    int position -> d
    boolean closed -> e
    42:54:void <init>(com.mongodb.connection.BufferProvider) -> <init>
    58:70:void writeBytes(byte[],int,int) -> a
    74:78:void writeByte(int) -> a
    81:87:org.bson.ByteBuf getCurrentByteBuffer() -> e
    91:96:org.bson.ByteBuf getByteBufferAtIndex(int) -> d
    101:102:int getPosition() -> a
    107:108:int getSize() -> b
    112:124:void write(int,int) -> a
    1208:1208:int com.mongodb.internal.connection.ByteBufferBsonOutput$BufferPositionPair.access$000(com.mongodb.internal.connection.ByteBufferBsonOutput$BufferPositionPair):208:208 -> a
    1208:1208:void write(int,int):122 -> a
    2208:2208:int com.mongodb.internal.connection.ByteBufferBsonOutput$BufferPositionPair.access$108(com.mongodb.internal.connection.ByteBufferBsonOutput$BufferPositionPair):208:208 -> a
    2208:2208:void write(int,int):123 -> a
    128:134:java.util.List getByteBuffers() -> c
    140:154:int pipe(java.io.OutputStream) -> a
    159:176:void truncateToPosition(int) -> b
    3208:3208:int com.mongodb.internal.connection.ByteBufferBsonOutput$BufferPositionPair.access$000(com.mongodb.internal.connection.ByteBufferBsonOutput$BufferPositionPair):208:208 -> b
    3208:3208:void truncateToPosition(int):167 -> b
    4208:4208:int com.mongodb.internal.connection.ByteBufferBsonOutput$BufferPositionPair.access$100(com.mongodb.internal.connection.ByteBufferBsonOutput$BufferPositionPair):208:208 -> b
    4208:4208:void truncateToPosition(int):167 -> b
    5208:5208:int com.mongodb.internal.connection.ByteBufferBsonOutput$BufferPositionPair.access$000(com.mongodb.internal.connection.ByteBufferBsonOutput$BufferPositionPair):208:208 -> b
    5208:5208:void truncateToPosition(int):169 -> b
    6208:6208:int com.mongodb.internal.connection.ByteBufferBsonOutput$BufferPositionPair.access$000(com.mongodb.internal.connection.ByteBufferBsonOutput$BufferPositionPair):208:208 -> b
    6208:6208:void truncateToPosition(int):174 -> b
    180:185:void close() -> close
    188:199:com.mongodb.internal.connection.ByteBufferBsonOutput$BufferPositionPair getBufferPositionPair(int) -> e
    203:206:void ensureOpen() -> f
com.mongodb.internal.connection.ByteBufferBsonOutput$BufferPositionPair -> com.a.e.g.m$a:
    int bufferIndex -> a
    int position -> b
    212:215:void <init>(int,int) -> <init>
com.mongodb.internal.connection.ClientMetadataHelper -> com.a.e.g.n:
    org.bson.BsonDocument CLIENT_METADATA_DOCUMENT -> a
    83:92:java.lang.String getOperatingSystemType(java.lang.String) -> a
    97:102:boolean nameMatches(java.lang.String,java.lang.String[]) -> a
    113:113:org.bson.BsonDocument createClientMetadataDocument(java.lang.String,com.mongodb.MongoDriverInformation) -> a
    1120:1157:org.bson.BsonDocument createClientMetadataDocument(java.lang.String,com.mongodb.MongoDriverInformation,org.bson.BsonDocument):120:157 -> a
    1120:1157:org.bson.BsonDocument createClientMetadataDocument(java.lang.String,com.mongodb.MongoDriverInformation):113 -> a
    162:167:org.bson.BsonDocument addDriverInformation(com.mongodb.MongoDriverInformation,org.bson.BsonDocument) -> a
    2078:2078:java.util.List com.mongodb.MongoDriverInformation.getDriverNames():78:78 -> a
    2078:2078:org.bson.BsonDocument addDriverInformation(com.mongodb.MongoDriverInformation,org.bson.BsonDocument):163 -> a
    2087:2087:java.util.List com.mongodb.MongoDriverInformation.getDriverVersions():87:87 -> a
    2087:2087:org.bson.BsonDocument addDriverInformation(com.mongodb.MongoDriverInformation,org.bson.BsonDocument):164 -> a
    2096:2096:java.util.List com.mongodb.MongoDriverInformation.getDriverPlatforms():96:96 -> a
    2096:2096:org.bson.BsonDocument addDriverInformation(com.mongodb.MongoDriverInformation,org.bson.BsonDocument):166 -> a
    171:173:boolean clientMetadataDocumentTooLarge(org.bson.BsonDocument) -> a
    177:184:com.mongodb.MongoDriverInformation getDriverInformation(com.mongodb.MongoDriverInformation) -> a
    188:197:org.bson.BsonString listToBsonString(java.util.List) -> a
    40:80:void <clinit>() -> <clinit>
com.mongodb.internal.connection.Cluster -> com.a.e.g.o:
    com.mongodb.connection.ClusterSettings getSettings() -> f
    com.mongodb.connection.ClusterDescription getDescription() -> h
    com.mongodb.connection.ClusterId getClusterId() -> g
    com.mongodb.internal.connection.ClusterableServer getServer(com.mongodb.ServerAddress) -> a
    com.mongodb.connection.ClusterDescription getCurrentDescription() -> c
    com.mongodb.internal.connection.ClusterClock getClock() -> i
    com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector) -> a
    void close() -> close
    void withLock(java.lang.Runnable) -> a
    void onChange(com.mongodb.event.ServerDescriptionChangedEvent) -> a
com.mongodb.internal.connection.ClusterClock -> com.a.e.g.p:
    java.util.concurrent.locks.ReentrantLock lock -> a
    org.bson.BsonDocument clusterTime -> b
    30:32:void <init>() -> <init>
    44:45:void advance(org.bson.BsonDocument) -> a
    48:48:org.bson.BsonDocument greaterOf(org.bson.BsonDocument) -> b
    49:54:org.bson.BsonDocument lambda$greaterOf$3(org.bson.BsonDocument) -> c
    44:44:org.bson.BsonDocument lambda$advance$2(org.bson.BsonDocument) -> d
com.mongodb.internal.connection.ClusterClockAdvancingSessionContext -> com.a.e.g.q:
    com.mongodb.internal.session.SessionContext wrapped -> a
    com.mongodb.internal.connection.ClusterClock clusterClock -> b
    33:36:void <init>(com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.ClusterClock) -> <init>
    40:40:boolean hasSession() -> e
    45:45:boolean isImplicitSession() -> a
    50:50:org.bson.BsonDocument getSessionId() -> f
    55:55:boolean isCausallyConsistent() -> g
    60:60:long getTransactionNumber() -> h
    65:65:long advanceTransactionNumber() -> i
    70:70:boolean notifyMessageSent() -> b
    75:75:org.bson.BsonTimestamp getOperationTime() -> j
    80:81:void advanceOperationTime(org.bson.BsonTimestamp) -> a
    85:85:org.bson.BsonDocument getClusterTime() -> k
    90:92:void advanceClusterTime(org.bson.BsonDocument) -> a
    96:96:boolean isSnapshot() -> l
    101:102:void setSnapshotTimestamp(org.bson.BsonTimestamp) -> b
    107:107:org.bson.BsonTimestamp getSnapshotTimestamp() -> m
    112:112:boolean hasActiveTransaction() -> c
    117:117:com.mongodb.ReadConcern getReadConcern() -> d
    122:123:void setRecoveryToken(org.bson.BsonDocument) -> b
    127:128:void clearTransactionContext() -> n
    132:133:void markSessionDirty() -> o
com.mongodb.internal.connection.ClusterDescriptionHelper -> com.a.e.g.r:
    72:72:java.util.List getPrimaries(com.mongodb.connection.ClusterDescription) -> a
    81:81:java.util.List getSecondaries(com.mongodb.connection.ClusterDescription) -> b
    91:91:java.util.List getSecondaries(com.mongodb.connection.ClusterDescription,com.mongodb.TagSet) -> a
    101:101:java.util.List getAny(com.mongodb.connection.ClusterDescription) -> c
    110:110:java.util.List getAnyPrimaryOrSecondary(com.mongodb.connection.ClusterDescription) -> d
    121:121:java.util.List getAnyPrimaryOrSecondary(com.mongodb.connection.ClusterDescription,com.mongodb.TagSet) -> b
    130:138:java.util.List getServersByPredicate(com.mongodb.connection.ClusterDescription,com.mongodb.internal.connection.ClusterDescriptionHelper$Predicate) -> a
    1231:1231:java.util.List com.mongodb.connection.ClusterDescription.getServerDescriptions():231:231 -> a
    1231:1231:java.util.List getServersByPredicate(com.mongodb.connection.ClusterDescription,com.mongodb.internal.connection.ClusterDescriptionHelper$Predicate):132 -> a
    122:122:boolean lambda$getAnyPrimaryOrSecondary$4(com.mongodb.TagSet,com.mongodb.connection.ServerDescription) -> a
    111:111:boolean lambda$getAnyPrimaryOrSecondary$3(com.mongodb.connection.ServerDescription) -> a
    92:92:boolean lambda$getSecondaries$2(com.mongodb.TagSet,com.mongodb.connection.ServerDescription) -> b
    2062:2071:boolean com.mongodb.ReadPreferenceHedgeOptions.equals(java.lang.Object):62:71 -> equals
    2076:2076:int com.mongodb.ReadPreferenceHedgeOptions.hashCode():76:76 -> hashCode
    2081:2081:java.lang.String com.mongodb.ReadPreferenceHedgeOptions.toString():81:81 -> toString
com.mongodb.internal.connection.ClusterDescriptionHelper$Predicate -> com.a.e.g.r$a:
    boolean apply(com.mongodb.connection.ServerDescription) -> apply
com.mongodb.internal.connection.ClusterableServer -> com.a.e.g.s:
    java.util.List SHUTDOWN_CODES -> a
    void resetToConnecting() -> a
    void invalidate() -> b
    void close() -> c
    void connect() -> d
    28:28:void <clinit>() -> <clinit>
com.mongodb.internal.connection.ClusterableServerFactory -> com.a.e.g.t:
    com.mongodb.internal.connection.ClusterableServer create(com.mongodb.internal.connection.Cluster,com.mongodb.ServerAddress) -> a
    com.mongodb.connection.ServerSettings getSettings() -> a
com.mongodb.internal.connection.CommandEventSender -> com.a.e.g.u:
    void sendStartedEvent() -> a
    void sendFailedEvent(java.lang.Throwable) -> a
    void sendSucceededEvent(com.mongodb.internal.connection.ResponseBuffers) -> a
    void sendSucceededEventForOneWayCommand() -> b
com.mongodb.internal.connection.CommandHelper -> com.a.e.g.v:
    java.lang.String LEGACY_HELLO_LOWER -> a
    49:49:org.bson.BsonDocument executeCommand$4e2aa6cc(java.lang.String,org.bson.BsonDocument,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.internal.connection.InternalConnection) -> a
    55:55:org.bson.BsonDocument executeCommand$5be76803(java.lang.String,org.bson.BsonDocument,com.mongodb.internal.connection.ClusterClock,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.internal.connection.InternalConnection) -> a
    62:64:org.bson.BsonDocument executeCommandWithoutCheckingForFailure$4e2aa6cc(java.lang.String,org.bson.BsonDocument,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.internal.connection.InternalConnection) -> b
    83:92:boolean isCommandOk(org.bson.BsonDocument) -> a
    1332:1332:boolean org.bson.BsonValue.isBoolean():332:332 -> a
    1332:1332:boolean isCommandOk(org.bson.BsonDocument):87 -> a
    2073:2073:boolean org.bson.BsonBoolean.getValue():73:73 -> a
    2073:2073:boolean isCommandOk(org.bson.BsonDocument):88 -> a
    100:102:org.bson.BsonDocument sendAndReceive$5be76803(java.lang.String,org.bson.BsonDocument,com.mongodb.internal.connection.ClusterClock,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.internal.connection.InternalConnection) -> b
    110:117:com.mongodb.internal.connection.CommandMessage getCommandMessage$3a8c93f1(java.lang.String,org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper) -> a
    3046:3046:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings.builder():46:46 -> a
    3046:3046:com.mongodb.internal.connection.CommandMessage getCommandMessage$3a8c93f1(java.lang.String,org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):112 -> a
    3192:3192:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> a
    3192:3192:com.mongodb.internal.connection.CommandMessage getCommandMessage$3a8c93f1(java.lang.String,org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):115 -> a
    4103:4104:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.maxWireVersion(int):103:104 -> a
    4103:4104:com.mongodb.internal.connection.CommandMessage getCommandMessage$3a8c93f1(java.lang.String,org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):115 -> a
    4201:4201:com.mongodb.connection.ServerType com.mongodb.connection.ConnectionDescription.getServerType():201:201 -> a
    4201:4201:com.mongodb.internal.connection.CommandMessage getCommandMessage$3a8c93f1(java.lang.String,org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):116 -> a
    5108:5109:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.serverType(com.mongodb.connection.ServerType):108:109 -> a
    5108:5109:com.mongodb.internal.connection.CommandMessage getCommandMessage$3a8c93f1(java.lang.String,org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):116 -> a
    45:45:void <clinit>() -> <clinit>
com.mongodb.internal.connection.CommandMessage -> com.a.e.g.w:
    com.mongodb.MongoNamespace namespace -> a
    org.bson.BsonDocument command -> b
    org.bson.FieldNameValidator commandFieldNameValidator -> c
    com.mongodb.ReadPreference readPreference -> d
    boolean exhaustAllowed -> e
    com.mongodb.internal.connection.SplittablePayload payload -> f
    org.bson.FieldNameValidator payloadFieldNameValidator -> g
    boolean responseExpected -> h
    com.mongodb.connection.ClusterConnectionMode clusterConnectionMode -> i
    com.mongodb.internal.connection.DescriptionHelper serverApi$10f7fbbb -> j
    74:76:void <init>(com.mongodb.MongoNamespace,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,com.mongodb.internal.connection.MessageSettings,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    81:83:void <init>(com.mongodb.MongoNamespace,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,com.mongodb.internal.connection.MessageSettings,boolean,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    89:91:void <init>(com.mongodb.MongoNamespace,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,com.mongodb.internal.connection.MessageSettings,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    98:109:void <init>(com.mongodb.MongoNamespace,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,com.mongodb.internal.connection.MessageSettings,boolean,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    1144:1144:java.lang.String com.mongodb.MongoNamespace.getFullName():144:144 -> <init>
    1144:1144:void <init>(com.mongodb.MongoNamespace,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,com.mongodb.internal.connection.MessageSettings,boolean,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):98 -> <init>
    1284:1286:com.mongodb.internal.connection.OpCode getOpCode$74a4e7fe(com.mongodb.internal.connection.MessageSettings,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):284:286 -> <init>
    1284:1286:void <init>(com.mongodb.MongoNamespace,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,com.mongodb.internal.connection.MessageSettings,boolean,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):98 -> <init>
    1290:1290:boolean isServerVersionAtLeastThreeDotSix(com.mongodb.internal.connection.MessageSettings):290:290 -> <init>
    1290:1290:com.mongodb.internal.connection.OpCode getOpCode$74a4e7fe(com.mongodb.internal.connection.MessageSettings,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):284 -> <init>
    1290:1290:void <init>(com.mongodb.MongoNamespace,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,com.mongodb.internal.connection.MessageSettings,boolean,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):98 -> <init>
    2141:2141:int com.mongodb.internal.connection.MessageSettings.getMaxWireVersion():141:141 -> <init>
    2141:2141:boolean isServerVersionAtLeastThreeDotSix(com.mongodb.internal.connection.MessageSettings):290 -> <init>
    2141:2141:com.mongodb.internal.connection.OpCode getOpCode$74a4e7fe(com.mongodb.internal.connection.MessageSettings,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):284 -> <init>
    2141:2141:void <init>(com.mongodb.MongoNamespace,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,com.mongodb.internal.connection.MessageSettings,boolean,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):98 -> <init>
    112:130:org.bson.BsonDocument getCommandDocument(com.mongodb.internal.connection.ByteBufferBsonOutput) -> a
    3059:3059:com.mongodb.internal.connection.RequestMessage$EncodingMetadata getEncodingMetadata():59:59 -> a
    3059:3059:org.bson.BsonDocument getCommandDocument(com.mongodb.internal.connection.ByteBufferBsonOutput):113 -> a
    3070:3070:int com.mongodb.internal.connection.RequestMessage$EncodingMetadata.getFirstDocumentPosition():70:70 -> a
    3070:3070:org.bson.BsonDocument getCommandDocument(com.mongodb.internal.connection.ByteBufferBsonOutput):113 -> a
    3134:3134:boolean containsPayload():134:134 -> a
    3134:3134:org.bson.BsonDocument getCommandDocument(com.mongodb.internal.connection.ByteBufferBsonOutput):116 -> a
    4059:4059:com.mongodb.internal.connection.RequestMessage$EncodingMetadata getEncodingMetadata():59:59 -> a
    4059:4059:org.bson.BsonDocument getCommandDocument(com.mongodb.internal.connection.ByteBufferBsonOutput):119 -> a
    4070:4070:int com.mongodb.internal.connection.RequestMessage$EncodingMetadata.getFirstDocumentPosition():70:70 -> a
    4070:4070:org.bson.BsonDocument getCommandDocument(com.mongodb.internal.connection.ByteBufferBsonOutput):119 -> a
    4148:4148:int com.mongodb.internal.connection.ByteBufBsonDocument.getSizeInBytes():148:148 -> a
    4148:4148:org.bson.BsonDocument getCommandDocument(com.mongodb.internal.connection.ByteBufferBsonOutput):120 -> a
    138:138:boolean isResponseExpected() -> a
    147:186:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext) -> a
    4219:4253:java.util.List getExtraElements(com.mongodb.internal.session.SessionContext):219:253 -> a
    4219:4253:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):155 -> a
    5125:5125:java.lang.String com.mongodb.MongoNamespace.getDatabaseName():125:125 -> a
    5125:5125:java.util.List getExtraElements(com.mongodb.internal.session.SessionContext):220 -> a
    5125:5125:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):155 -> a
    5267:5272:void checkServerVersionForTransactionSupport():267:272 -> a
    5267:5272:java.util.List getExtraElements(com.mongodb.internal.session.SessionContext):231 -> a
    5267:5272:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):155 -> a
    6059:6059:com.mongodb.internal.connection.MessageSettings getSettings():59:59 -> a
    6059:6059:void checkServerVersionForTransactionSupport():267 -> a
    6059:6059:java.util.List getExtraElements(com.mongodb.internal.session.SessionContext):231 -> a
    6059:6059:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):155 -> a
    6141:6141:int com.mongodb.internal.connection.MessageSettings.getMaxWireVersion():141:141 -> a
    6141:6141:void checkServerVersionForTransactionSupport():267 -> a
    6141:6141:java.util.List getExtraElements(com.mongodb.internal.session.SessionContext):231 -> a
    6141:6141:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):155 -> a
    7059:7059:com.mongodb.internal.connection.MessageSettings getSettings():59:59 -> a
    7059:7059:void checkServerVersionForTransactionSupport():269 -> a
    7059:7059:java.util.List getExtraElements(com.mongodb.internal.session.SessionContext):231 -> a
    7059:7059:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):155 -> a
    7145:7145:com.mongodb.connection.ServerType com.mongodb.internal.connection.MessageSettings.getServerType():145:145 -> a
    7145:7145:void checkServerVersionForTransactionSupport():269 -> a
    7145:7145:java.util.List getExtraElements(com.mongodb.internal.session.SessionContext):231 -> a
    7145:7145:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):155 -> a
    7209:7211:boolean isDirectConnectionToReplicaSetMember():209:211 -> a
    7209:7211:java.util.List getExtraElements(com.mongodb.internal.session.SessionContext):249 -> a
    7209:7211:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):155 -> a
    8059:8059:com.mongodb.internal.connection.MessageSettings getSettings():59:59 -> a
    8059:8059:boolean isDirectConnectionToReplicaSetMember():210 -> a
    8059:8059:java.util.List getExtraElements(com.mongodb.internal.session.SessionContext):249 -> a
    8059:8059:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):155 -> a
    8145:8145:com.mongodb.connection.ServerType com.mongodb.internal.connection.MessageSettings.getServerType():145:145 -> a
    8145:8145:boolean isDirectConnectionToReplicaSetMember():210 -> a
    8145:8145:java.util.List getExtraElements(com.mongodb.internal.session.SessionContext):249 -> a
    8145:8145:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):155 -> a
    9059:9059:com.mongodb.internal.connection.MessageSettings getSettings():59:59 -> a
    9059:9059:boolean isDirectConnectionToReplicaSetMember():211 -> a
    9059:9059:java.util.List getExtraElements(com.mongodb.internal.session.SessionContext):249 -> a
    9059:9059:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):155 -> a
    9145:9145:com.mongodb.connection.ServerType com.mongodb.internal.connection.MessageSettings.getServerType():145:145 -> a
    9145:9145:boolean isDirectConnectionToReplicaSetMember():211 -> a
    9145:9145:java.util.List getExtraElements(com.mongodb.internal.session.SessionContext):249 -> a
    9145:9145:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):155 -> a
    10059:10059:com.mongodb.internal.connection.MessageSettings getSettings():59:59 -> a
    10059:10059:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):162 -> a
    11059:11059:com.mongodb.internal.connection.MessageSettings getSettings():59:59 -> a
    11059:11059:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):163 -> a
    11119:11119:int com.mongodb.internal.connection.MessageSettings.getMaxDocumentSize():119:119 -> a
    11119:11119:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):163 -> a
    11190:11197:int getOpMsgFlagBits():190:197 -> a
    11190:11197:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):170 -> a
    12144:12144:java.lang.String com.mongodb.MongoNamespace.getFullName():144:144 -> a
    12144:12144:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):173 -> a
    201:204:boolean requireOpMsgResponse() -> g
    215:215:boolean useOpMsg() -> h
    13059:13059:com.mongodb.internal.connection.OpCode getOpCode():59:59 -> h
    13059:13059:boolean useOpMsg():215 -> h
    257:264:void addServerApiElements(java.util.List) -> a
    14042:14042:java.lang.String com.mongodb.ServerApiVersion.getValue():42:42 -> a
    14042:14042:void addServerApiElements(java.util.List):257 -> a
    276:280:void addReadConcernDocument(java.util.List,com.mongodb.internal.session.SessionContext) -> a
    14059:14059:com.mongodb.internal.connection.MessageSettings getSettings():59:59 -> a
    14059:14059:void addReadConcernDocument(java.util.List,com.mongodb.internal.session.SessionContext):276 -> a
    14141:14141:int com.mongodb.internal.connection.MessageSettings.getMaxWireVersion():141:141 -> a
    14141:14141:void addReadConcernDocument(java.util.List,com.mongodb.internal.session.SessionContext):276 -> a
    59:59:com.mongodb.internal.connection.RequestMessage$EncodingMetadata getEncodingMetadata() -> b
    59:59:void encode(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext) -> b
    59:59:com.mongodb.internal.connection.MessageSettings getSettings() -> c
    59:59:com.mongodb.internal.connection.OpCode getOpCode() -> d
    59:59:int getId() -> e
com.mongodb.internal.connection.CommandProtocol -> com.a.e.g.x:
    java.lang.Object execute(com.mongodb.internal.connection.InternalConnection) -> a
    com.mongodb.internal.connection.CommandProtocol sessionContext(com.mongodb.internal.session.SessionContext) -> a
com.mongodb.internal.connection.CommandProtocolImpl -> com.a.e.g.y:
    com.mongodb.MongoNamespace namespace -> a
    org.bson.BsonDocument command -> b
    com.mongodb.internal.connection.SplittablePayload payload -> c
    com.mongodb.ReadPreference readPreference -> d
    org.bson.FieldNameValidator commandFieldNameValidator -> e
    org.bson.FieldNameValidator payloadFieldNameValidator -> f
    org.bson.codecs.Decoder commandResultDecoder -> g
    boolean responseExpected -> h
    com.mongodb.connection.ClusterConnectionMode clusterConnectionMode -> i
    com.mongodb.RequestContext requestContext -> j
    com.mongodb.internal.session.SessionContext sessionContext -> k
    com.mongodb.internal.connection.DescriptionHelper serverApi$10f7fbbb -> l
    52:68:void <init>(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext) -> <init>
    73:73:java.lang.Object execute(com.mongodb.internal.connection.InternalConnection) -> a
    1099:1100:com.mongodb.internal.connection.CommandMessage getCommandMessage(com.mongodb.internal.connection.InternalConnection):99:100 -> a
    1099:1100:java.lang.Object execute(com.mongodb.internal.connection.InternalConnection):73 -> a
    35:35:com.mongodb.internal.connection.CommandProtocol sessionContext(com.mongodb.internal.session.SessionContext) -> a
    2094:2095:com.mongodb.internal.connection.CommandProtocolImpl sessionContext(com.mongodb.internal.session.SessionContext):94:95 -> a
    2094:2095:com.mongodb.internal.connection.CommandProtocol sessionContext(com.mongodb.internal.session.SessionContext):35 -> a
com.mongodb.internal.connection.CompositeByteBuf -> com.a.e.g.z:
    java.util.List components -> b
    java.util.concurrent.atomic.AtomicInteger referenceCount -> c
    int position -> a
    int limit -> d
    34:50:void <init>(java.util.List) -> <init>
    1331:1331:int com.mongodb.internal.connection.CompositeByteBuf$Component.access$000(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> <init>
    1331:1331:void <init>(java.util.List):47 -> <init>
    2331:2331:int com.mongodb.internal.connection.CompositeByteBuf$Component.access$000(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> <init>
    2331:2331:void <init>(java.util.List):49 -> <init>
    34:56:void <init>(com.mongodb.internal.connection.CompositeByteBuf) -> <init>
    3083:3083:int position():83:83 -> <init>
    3083:3083:void <init>(com.mongodb.internal.connection.CompositeByteBuf):54 -> <init>
    3104:3104:int limit():104:104 -> <init>
    3104:3104:void <init>(com.mongodb.internal.connection.CompositeByteBuf):55 -> <init>
    60:63:org.bson.ByteBuf order(java.nio.ByteOrder) -> a
    68:68:int capacity() -> a
    3331:3331:int com.mongodb.internal.connection.CompositeByteBuf$Component.access$000(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> a
    3331:3331:int capacity():68 -> a
    73:73:int remaining() -> b
    4104:4104:int limit():104:104 -> b
    4104:4104:int remaining():73 -> b
    5083:5083:int position():83:83 -> b
    5083:5083:int remaining():73 -> b
    78:78:boolean hasRemaining() -> c
    83:83:int position() -> d
    88:92:org.bson.ByteBuf position(int) -> a
    104:104:int limit() -> e
    109:111:byte get() -> f
    116:118:byte get(int) -> b
    5331:5331:org.bson.ByteBuf com.mongodb.internal.connection.CompositeByteBuf$Component.access$200(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> b
    5331:5331:byte get(int):118 -> b
    6331:6331:int com.mongodb.internal.connection.CompositeByteBuf$Component.access$100(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> b
    6331:6331:byte get(int):118 -> b
    123:125:org.bson.ByteBuf get(byte[]) -> a
    130:130:org.bson.ByteBuf get(int,byte[]) -> a
    135:137:org.bson.ByteBuf get(byte[],int,int) -> a
    142:158:org.bson.ByteBuf get(int,byte[],int,int) -> a
    7331:7331:org.bson.ByteBuf com.mongodb.internal.connection.CompositeByteBuf$Component.access$200(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> a
    7331:7331:org.bson.ByteBuf get(int,byte[],int,int):150 -> a
    8331:8331:int com.mongodb.internal.connection.CompositeByteBuf$Component.access$100(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> a
    8331:8331:org.bson.ByteBuf get(int,byte[],int,int):150 -> a
    9331:9331:org.bson.ByteBuf com.mongodb.internal.connection.CompositeByteBuf$Component.access$200(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> a
    9331:9331:org.bson.ByteBuf get(int,byte[],int,int):151 -> a
    10331:10331:int com.mongodb.internal.connection.CompositeByteBuf$Component.access$100(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> a
    10331:10331:org.bson.ByteBuf get(int,byte[],int,int):151 -> a
    163:164:long getLong() -> g
    169:174:long getLong(int) -> c
    11331:11331:int com.mongodb.internal.connection.CompositeByteBuf$Component.access$000(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> c
    11331:11331:long getLong(int):171 -> c
    12331:12331:org.bson.ByteBuf com.mongodb.internal.connection.CompositeByteBuf$Component.access$200(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> c
    12331:12331:long getLong(int):172 -> c
    13331:13331:int com.mongodb.internal.connection.CompositeByteBuf$Component.access$100(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> c
    13331:13331:long getLong(int):172 -> c
    180:181:double getDouble() -> h
    14186:14186:double getDouble(int):186:186 -> h
    14186:14186:double getDouble():181 -> h
    191:192:int getInt() -> i
    197:202:int getInt(int) -> d
    14331:14331:int com.mongodb.internal.connection.CompositeByteBuf$Component.access$000(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> d
    14331:14331:int getInt(int):199 -> d
    15331:15331:org.bson.ByteBuf com.mongodb.internal.connection.CompositeByteBuf$Component.access$200(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> d
    15331:15331:int getInt(int):200 -> d
    16331:16331:int com.mongodb.internal.connection.CompositeByteBuf$Component.access$100(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> d
    16331:16331:int getInt(int):200 -> d
    207:208:int getShort(int) -> f
    213:213:byte[] array() -> j
    218:222:org.bson.ByteBuf limit(int) -> e
    227:227:org.bson.ByteBuf put(int,byte) -> a
    232:232:org.bson.ByteBuf put(byte[],int,int) -> b
    237:237:org.bson.ByteBuf put(byte) -> a
    242:242:org.bson.ByteBuf flip() -> k
    247:247:org.bson.ByteBuf asReadOnly() -> l
    252:252:org.bson.ByteBuf duplicate() -> m
    257:264:java.nio.ByteBuffer asNIO() -> n
    17331:17331:org.bson.ByteBuf com.mongodb.internal.connection.CompositeByteBuf$Component.access$200(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> n
    17331:17331:java.nio.ByteBuffer asNIO():258 -> n
    284:288:void release() -> o
    291:291:com.mongodb.internal.connection.CompositeByteBuf$Component findComponent(int) -> g
    295:301:int findComponentIndex(int) -> h
    18331:18331:int com.mongodb.internal.connection.CompositeByteBuf$Component.access$100(com.mongodb.internal.connection.CompositeByteBuf$Component):331:331 -> h
    18331:18331:int findComponentIndex(int):297 -> h
    305:309:void checkIndex(int) -> i
    312:316:void checkIndex(int,int) -> a
    319:323:void checkDstIndex(int,int,int,int) -> a
    326:329:void ensureAccessible() -> p
com.mongodb.internal.connection.CompositeByteBuf$Component -> com.a.e.g.z$a:
    org.bson.ByteBuf buffer -> a
    int length -> d
    int offset -> b
    int endOffset -> c
    337:342:void <init>(org.bson.ByteBuf,int) -> <init>
com.mongodb.internal.connection.CompressedHeader -> com.a.e.g.A:
    int originalOpcode -> a
    int uncompressedSize -> b
    byte compressorId -> c
    com.mongodb.internal.connection.MessageHeader messageHeader -> d
    43:59:void <init>(org.bson.ByteBuf,com.mongodb.internal.connection.MessageHeader) -> <init>
    1080:1080:int com.mongodb.internal.connection.MessageHeader.getOpCode():80:80 -> <init>
    1080:1080:void <init>(org.bson.ByteBuf,com.mongodb.internal.connection.MessageHeader):46 -> <init>
    2037:2037:int com.mongodb.internal.connection.OpCode.getValue():37:37 -> <init>
    2037:2037:void <init>(org.bson.ByteBuf,com.mongodb.internal.connection.MessageHeader):46 -> <init>
    2080:2080:int com.mongodb.internal.connection.MessageHeader.getOpCode():80:80 -> <init>
    2080:2080:void <init>(org.bson.ByteBuf,com.mongodb.internal.connection.MessageHeader):48 -> <init>
    3037:3037:int com.mongodb.internal.connection.OpCode.getValue():37:37 -> <init>
    3037:3037:void <init>(org.bson.ByteBuf,com.mongodb.internal.connection.MessageHeader):48 -> <init>
    3052:3052:int com.mongodb.internal.connection.MessageHeader.getMessageLength():52:52 -> <init>
    3052:3052:void <init>(org.bson.ByteBuf,com.mongodb.internal.connection.MessageHeader):51 -> <init>
    4052:4052:int com.mongodb.internal.connection.MessageHeader.getMessageLength():52:52 -> <init>
    4052:4052:void <init>(org.bson.ByteBuf,com.mongodb.internal.connection.MessageHeader):53 -> <init>
com.mongodb.internal.connection.CompressedMessage -> com.a.e.g.B:
    com.mongodb.internal.connection.OpCode wrappedOpcode -> a
    java.util.List wrappedMessageBuffers -> b
    com.mongodb.internal.connection.Compressor compressor -> c
    34:38:void <init>(com.mongodb.internal.connection.OpCode,java.util.List,com.mongodb.internal.connection.Compressor,com.mongodb.internal.connection.MessageSettings) -> <init>
    1060:1061:int getWrappedMessageRequestId(java.util.List):60:61 -> <init>
    1060:1061:void <init>(com.mongodb.internal.connection.OpCode,java.util.List,com.mongodb.internal.connection.Compressor,com.mongodb.internal.connection.MessageSettings):34 -> <init>
    42:51:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext) -> a
    2037:2037:int com.mongodb.internal.connection.OpCode.getValue():37:37 -> a
    2037:2037:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):42 -> a
    2055:2056:int getWrappedMessageSize(java.util.List):55:56 -> a
    2055:2056:com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):43 -> a
    65:65:org.bson.ByteBuf getFirstWrappedMessageBuffer(java.util.List) -> a
com.mongodb.internal.connection.Compressor -> com.a.e.g.C:
    30:30:void <init>() -> <init>
    java.lang.String getName() -> a
    byte getId() -> b
    39:55:void compress(java.util.List,org.bson.io.BsonOutput) -> a
    59:70:void uncompress(org.bson.ByteBuf,org.bson.ByteBuf) -> a
    74:74:java.io.OutputStream getOutputStream(java.io.OutputStream) -> a
    79:79:java.io.InputStream getInputStream(java.io.InputStream) -> a
com.mongodb.internal.connection.Compressor$BufferExposingByteArrayOutputStream -> com.a.e.g.C$a:
    109:110:void <init>(int) -> <init>
    113:113:byte[] getInternalBytes() -> a
com.mongodb.internal.connection.Compressor$ByteBufInputStream -> com.a.e.g.C$b:
    org.bson.ByteBuf source -> a
    85:87:void <init>(org.bson.ByteBuf) -> <init>
    91:97:int read(byte[],int,int) -> read
    102:102:int read() -> read
com.mongodb.internal.connection.ConcurrentPool -> com.a.e.g.D:
    int maxSize -> a
    com.mongodb.internal.connection.ConcurrentPool$ItemFactory itemFactory -> b
    java.util.Deque available -> c
    com.mongodb.internal.connection.ConcurrentPool$StateAndPermits stateAndPermits -> d
    java.lang.String poolClosedMessage -> e
    59:92:void <init>(int,com.mongodb.internal.connection.ConcurrentPool$ItemFactory,java.lang.String) -> <init>
    114:129:void release(java.lang.Object,boolean) -> a
    1504:1504:boolean com.mongodb.internal.connection.ConcurrentPool$StateAndPermits.closed():504:504 -> a
    1504:1504:void release(java.lang.Object,boolean):117 -> a
    152:161:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> a
    171:178:java.lang.Object getImmediateUnfair() -> a
    217:224:java.lang.Object createNewAndReleasePermitIfFailure() -> b
    257:257:int getInUseCount() -> c
    2366:2366:int com.mongodb.internal.connection.ConcurrentPool$StateAndPermits.permits():366:366 -> c
    2366:2366:int getInUseCount():257 -> c
    261:261:int getAvailableCount() -> d
    269:271:java.lang.String toString() -> toString
    279:283:void close(java.lang.Object) -> a
    297:297:com.mongodb.MongoServerUnavailableException poolClosedException() -> e
    512:512:java.lang.String sizeToString(int) -> a
    517:521:void lockInterruptibly(java.util.concurrent.locks.Lock) -> a
    538:541:void lockUnfair(java.util.concurrent.locks.ReentrantLock) -> a
com.mongodb.internal.connection.ConcurrentPool$ItemFactory -> com.a.e.g.D$a:
    java.lang.Object create() -> a
    void close(java.lang.Object) -> a
    boolean shouldPrune(java.lang.Object) -> b
com.mongodb.internal.connection.ConcurrentPool$StateAndPermits -> com.a.e.g.D$b:
    java.util.function.Supplier poolClosedExceptionSupplier -> g
    java.util.concurrent.locks.ReentrantLock lock -> a
    java.util.concurrent.locks.Condition permitAvailableOrClosedOrPausedCondition -> b
    boolean paused -> c
    boolean closed -> d
    int maxPermits -> h
    int permits -> e
    java.util.concurrent.atomic.AtomicInteger waitersEstimate -> i
    java.util.function.Supplier causeSupplier -> f
    353:363:void <init>(int,java.util.function.Supplier) -> <init>
    370:382:boolean acquirePermitImmediateUnfair() -> a
    392:423:boolean acquirePermit(long,java.util.concurrent.TimeUnit) -> a
    1050:1050:void com.mongodb.internal.connection.ConcurrentPool.access$000(java.util.concurrent.locks.ReentrantLock):50:50 -> a
    1050:1050:boolean acquirePermit(long,java.util.concurrent.TimeUnit):394 -> a
    1524:1534:void com.mongodb.internal.connection.ConcurrentPool.lockInterruptiblyUnfair(java.util.concurrent.locks.ReentrantLock):524:534 -> a
    1524:1534:void com.mongodb.internal.connection.ConcurrentPool.access$000(java.util.concurrent.locks.ReentrantLock):50 -> a
    1524:1534:boolean acquirePermit(long,java.util.concurrent.TimeUnit):394 -> a
    1544:1547:void com.mongodb.internal.connection.ConcurrentPool.throwIfInterrupted():544:547 -> a
    1544:1547:void com.mongodb.internal.connection.ConcurrentPool.lockInterruptiblyUnfair(java.util.concurrent.locks.ReentrantLock):524 -> a
    1544:1547:void com.mongodb.internal.connection.ConcurrentPool.access$000(java.util.concurrent.locks.ReentrantLock):50 -> a
    1544:1547:boolean acquirePermit(long,java.util.concurrent.TimeUnit):394 -> a
    427:436:void releasePermit() -> b
    467:479:boolean close() -> c
    494:500:boolean throwIfClosedOrPaused() -> d
com.mongodb.internal.connection.Connection -> com.a.e.g.E:
    com.mongodb.internal.connection.Connection retain() -> b
    com.mongodb.connection.ConnectionDescription getDescription() -> a
    java.lang.Object command$4c71378a(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext) -> a
    java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator) -> a
    void markAsPinned(com.mongodb.internal.connection.Connection$PinningMode) -> a
    37:37:com.mongodb.internal.binding.ReferenceCounted retain() -> i
com.mongodb.internal.connection.Connection$PinningMode -> com.a.e.g.E$a:
    com.mongodb.internal.connection.Connection$PinningMode CURSOR -> a
    com.mongodb.internal.connection.Connection$PinningMode TRANSACTION -> b
    com.mongodb.internal.connection.Connection$PinningMode[] $VALUES -> c
    61:61:com.mongodb.internal.connection.Connection$PinningMode[] values() -> values
    61:61:com.mongodb.internal.connection.Connection$PinningMode valueOf(java.lang.String) -> valueOf
    61:61:void <init>(java.lang.String,int) -> <init>
    61:63:void <clinit>() -> <clinit>
    1061:1061:com.mongodb.internal.connection.Connection$PinningMode[] $values():61:61 -> <clinit>
    1061:1061:void <clinit>():61 -> <clinit>
com.mongodb.internal.connection.ConnectionFactory -> com.a.e.g.F:
    com.mongodb.internal.connection.Connection create(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.ProtocolExecutor,com.mongodb.connection.ClusterConnectionMode) -> a
com.mongodb.internal.connection.ConnectionGenerationSupplier -> com.a.e.g.G:
    int getGeneration() -> a
    int getGeneration(org.bson.types.ObjectId) -> a
com.mongodb.internal.connection.ConnectionPool -> com.a.e.g.H:
    com.mongodb.internal.connection.InternalConnection get() -> a
    void invalidate(java.lang.Throwable) -> a
    void invalidate(org.bson.types.ObjectId,int) -> a
    void ready() -> b
    void close() -> close
    int getGeneration() -> c
com.mongodb.internal.connection.DecimalFormatHelper -> com.a.e.g.I:
    java.text.DecimalFormatSymbols DECIMAL_FORMAT_SYMBOLS -> a
    38:38:java.lang.String format(java.lang.String,double) -> a
    26:26:void <clinit>() -> <clinit>
    1032:1034:java.text.DecimalFormatSymbols initializeDecimalFormatSymbols():32:34 -> <clinit>
    1032:1034:void <clinit>():26 -> <clinit>
com.mongodb.internal.connection.DefaultAuthenticator -> com.a.e.g.J:
    org.bson.BsonString DEFAULT_MECHANISM_NAME -> a
    com.mongodb.internal.connection.Authenticator delegate -> b
    45:47:void <init>(com.mongodb.internal.connection.MongoCredentialWithCache,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    1050:1050:com.mongodb.AuthenticationMechanism com.mongodb.internal.connection.MongoCredentialWithCache.getAuthenticationMechanism():50:50 -> <init>
    1050:1050:void <init>(com.mongodb.internal.connection.MongoCredentialWithCache,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):46 -> <init>
    1442:1442:com.mongodb.AuthenticationMechanism com.mongodb.MongoCredential.getAuthenticationMechanism():442:442 -> <init>
    1442:1442:com.mongodb.AuthenticationMechanism com.mongodb.internal.connection.MongoCredentialWithCache.getAuthenticationMechanism():50 -> <init>
    1442:1442:void <init>(com.mongodb.internal.connection.MongoCredentialWithCache,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):46 -> <init>
    51:62:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription) -> a
    2052:2052:boolean com.mongodb.internal.operation.ServerVersionHelper.serverIsLessThanVersionFourDotZero(com.mongodb.connection.ConnectionDescription):52:52 -> a
    2052:2052:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription):51 -> a
    2192:2192:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> a
    2192:2192:boolean com.mongodb.internal.operation.ServerVersionHelper.serverIsLessThanVersionFourDotZero(com.mongodb.connection.ConnectionDescription):52 -> a
    2192:2192:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription):51 -> a
    3102:3115:void setDelegate(com.mongodb.connection.ConnectionDescription):102:115 -> a
    3102:3115:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription):56 -> a
    3248:3248:org.bson.BsonArray com.mongodb.connection.ConnectionDescription.getSaslSupportedMechanisms():248:248 -> a
    3248:3248:void setDelegate(com.mongodb.connection.ConnectionDescription):106 -> a
    3248:3248:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription):56 -> a
    4248:4248:org.bson.BsonArray com.mongodb.connection.ConnectionDescription.getSaslSupportedMechanisms():248:248 -> a
    4248:4248:void setDelegate(com.mongodb.connection.ConnectionDescription):107 -> a
    4248:4248:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription):56 -> a
    5118:5123:com.mongodb.MongoException wrapException(java.lang.Throwable):118:123 -> a
    5118:5123:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription):59 -> a
    5145:5145:int com.mongodb.MongoException.getCode():145:145 -> a
    5145:5145:com.mongodb.MongoException wrapException(java.lang.Throwable):120 -> a
    5145:5145:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription):59 -> a
    78:79:org.bson.BsonDocument createSpeculativeAuthenticateCommand(com.mongodb.internal.connection.InternalConnection) -> a
    6097:6098:com.mongodb.internal.connection.Authenticator getAuthenticatorForHello():97:98 -> a
    6097:6098:org.bson.BsonDocument createSpeculativeAuthenticateCommand(com.mongodb.internal.connection.InternalConnection):78 -> a
    85:88:org.bson.BsonDocument getSpeculativeAuthenticateResponse() -> b_
    93:94:void setSpeculativeAuthenticateResponse(org.bson.BsonDocument) -> a
    40:40:void <clinit>() -> <clinit>
    7074:7074:java.lang.String com.mongodb.AuthenticationMechanism.getMechanismName():74:74 -> <clinit>
    7074:7074:void <clinit>():40 -> <clinit>
com.mongodb.internal.connection.DefaultClusterFactory -> com.a.e.g.K:
    51:51:void <init>() -> <init>
com.mongodb.internal.connection.DefaultClusterableServerFactory -> com.a.e.g.L:
    com.mongodb.connection.ServerSettings serverSettings -> a
    com.mongodb.connection.ConnectionPoolSettings connectionPoolSettings -> b
    com.mongodb.internal.connection.InternalConnectionPoolSettings internalConnectionPoolSettings -> c
    com.mongodb.connection.StreamFactory streamFactory -> d
    com.mongodb.internal.connection.MongoCredentialWithCache credential -> e
    com.mongodb.connection.StreamFactory heartbeatStreamFactory -> f
    com.mongodb.LoggerSettings loggerSettings -> g
    com.mongodb.RequestContext commandListener$6eedcc38 -> h
    java.lang.String applicationName -> i
    com.mongodb.MongoDriverInformation mongoDriverInformation -> j
    java.util.List compressorList -> k
    com.mongodb.internal.connection.DescriptionHelper serverApi$10f7fbbb -> l
    66:79:void <init>(com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    83:101:com.mongodb.internal.connection.ClusterableServer create(com.mongodb.internal.connection.Cluster,com.mongodb.ServerAddress) -> a
    1430:1430:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterSettings.getMode():430:430 -> a
    1430:1430:com.mongodb.internal.connection.ClusterableServer create(com.mongodb.internal.connection.Cluster,com.mongodb.ServerAddress):84 -> a
    106:106:com.mongodb.connection.ServerSettings getSettings() -> a
com.mongodb.internal.connection.DefaultConnectionFactory -> com.a.e.g.M:
    21:21:void <init>() -> <init>
    25:25:com.mongodb.internal.connection.Connection create(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.ProtocolExecutor,com.mongodb.connection.ClusterConnectionMode) -> a
com.mongodb.internal.connection.DefaultConnectionPool -> com.a.e.g.N:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> a
    com.mongodb.internal.connection.ConcurrentPool pool -> b
    com.mongodb.connection.ConnectionPoolSettings settings -> c
    com.mongodb.internal.connection.DefaultConnectionPool$BackgroundMaintenanceManager backgroundMaintenance -> d
    com.mongodb.internal.connection.DefaultConnectionPool$AsyncWorkManager asyncWorkManager -> e
    com.mongodb.event.ClusterListener connectionPoolListener$4609d73f -> f
    com.mongodb.connection.ServerId serverId -> g
    com.mongodb.internal.connection.DefaultConnectionPool$PinnedStatsManager pinnedStatsManager -> h
    com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager serviceStateManager -> i
    com.mongodb.internal.connection.ConnectionGenerationSupplier connectionGenerationSupplier -> j
    com.mongodb.internal.connection.DefaultConnectionPool$OpenConcurrencyLimiter openConcurrencyLimiter -> k
    com.mongodb.internal.connection.DefaultConnectionPool$StateAndGeneration stateAndGeneration -> l
    com.mongodb.internal.inject.OptionalProvider sdamProvider -> m
    114:162:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.InternalConnectionFactory,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.internal.inject.OptionalProvider) -> <init>
    2512:2512:int maxSize(com.mongodb.connection.ConnectionPoolSettings):512:512 -> <init>
    2512:2512:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.InternalConnectionFactory,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.internal.inject.OptionalProvider):142 -> <init>
    3303:3303:int com.mongodb.connection.ConnectionPoolSettings.getMaxSize():303:303 -> <init>
    3303:3303:int maxSize(com.mongodb.connection.ConnectionPoolSettings):512 -> <init>
    3303:3303:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.InternalConnectionFactory,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.internal.inject.OptionalProvider):142 -> <init>
    4303:4303:int com.mongodb.connection.ConnectionPoolSettings.getMaxSize():303:303 -> <init>
    4303:4303:int maxSize(com.mongodb.connection.ConnectionPoolSettings):512 -> <init>
    4303:4303:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.InternalConnectionFactory,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.internal.inject.OptionalProvider):142 -> <init>
    5059:5059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> <init>
    5059:5059:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.InternalConnectionFactory,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.internal.inject.OptionalProvider):143 -> <init>
    5453:5455:void connectionPoolCreated$1583e7e9(com.mongodb.event.ClusterListener,com.mongodb.connection.ServerId,com.mongodb.connection.ConnectionPoolSettings):453:455 -> <init>
    5453:5455:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.InternalConnectionFactory,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.internal.inject.OptionalProvider):147 -> <init>
    6394:6394:int com.mongodb.connection.ConnectionPoolSettings.getMaxConnecting():394:394 -> <init>
    6394:6394:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.InternalConnectionFactory,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.internal.inject.OptionalProvider):148 -> <init>
    7047:7047:boolean com.mongodb.internal.connection.InternalConnectionPoolSettings.isPrestartAsyncWorkManager():47:47 -> <init>
    7047:7047:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.InternalConnectionFactory,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.internal.inject.OptionalProvider):149 -> <init>
    166:166:com.mongodb.internal.connection.InternalConnection get() -> a
    7327:7327:long com.mongodb.connection.ConnectionPoolSettings.getMaxWaitTime(java.util.concurrent.TimeUnit):327:327 -> a
    7327:7327:com.mongodb.internal.connection.InternalConnection get():166 -> a
    171:182:com.mongodb.internal.connection.InternalConnection get(long,java.util.concurrent.TimeUnit) -> a
    7836:7837:com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection com.mongodb.internal.connection.DefaultConnectionPool$OpenConcurrencyLimiter.openOrGetAvailable(com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection,com.mongodb.internal.Timeout):836:837 -> a
    7836:7837:com.mongodb.internal.connection.InternalConnection get(long,java.util.concurrent.TimeUnit):177 -> a
    8242:8255:java.lang.Throwable checkOutFailed(java.lang.Throwable):242:255 -> a
    8242:8255:com.mongodb.internal.connection.InternalConnection get(long,java.util.concurrent.TimeUnit):182 -> a
    8304:8304:boolean com.mongodb.internal.connection.ConcurrentPool.isPoolClosedException(java.lang.Throwable):304:304 -> a
    8304:8304:java.lang.Throwable checkOutFailed(java.lang.Throwable):250 -> a
    8304:8304:com.mongodb.internal.connection.InternalConnection get(long,java.util.concurrent.TimeUnit):182 -> a
    260:266:void invalidate(java.lang.Throwable) -> a
    270:273:void ready() -> b
    276:284:void invalidate(org.bson.types.ObjectId,int) -> a
    9147:9148:boolean com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager.incrementGeneration(org.bson.types.ObjectId,int):1147:1148 -> a
    9147:9148:void invalidate(org.bson.types.ObjectId,int):280 -> a
    9169:9169:boolean com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager$ServiceState.incrementGeneration(int):1169:1169 -> a
    9169:9169:boolean com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager.incrementGeneration(org.bson.types.ObjectId,int):1148 -> a
    9169:9169:void invalidate(org.bson.types.ObjectId,int):280 -> a
    288:295:void close() -> close
    9517:9517:boolean com.mongodb.internal.connection.DefaultConnectionPool$StateAndGeneration.close():1517:1517 -> close
    9517:9517:void close():288 -> close
    10242:10250:void com.mongodb.internal.connection.ConcurrentPool.close():242:250 -> close
    10242:10250:void close():289 -> close
    299:299:int getGeneration() -> c
    10463:10463:int com.mongodb.internal.connection.DefaultConnectionPool$StateAndGeneration.generation():1463:1463 -> c
    10463:10463:int getGeneration():299 -> c
    304:311:com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection getPooledConnection(com.mongodb.internal.Timeout) -> a
    317:322:com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection getPooledConnectionImmediateUnfair() -> f
    326:364:com.mongodb.MongoTimeoutException createTimeoutException(com.mongodb.internal.Timeout) -> b
    11209:11209:int com.mongodb.internal.connection.DefaultConnectionPool$PinnedStatsManager.getNumPinnedToCursor():1209:1209 -> b
    11209:11209:com.mongodb.MongoTimeoutException createTimeoutException(com.mongodb.internal.Timeout):326 -> b
    11213:11213:int com.mongodb.internal.connection.DefaultConnectionPool$PinnedStatsManager.getNumPinnedToTransaction():1213:1213 -> b
    11213:11213:com.mongodb.MongoTimeoutException createTimeoutException(com.mongodb.internal.Timeout):327 -> b
    12059:12059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> b
    12059:12059:com.mongodb.MongoTimeoutException createTimeoutException(com.mongodb.internal.Timeout):330 -> b
    12253:12253:int com.mongodb.internal.connection.ConcurrentPool.getMaxSize():253:253 -> b
    12253:12253:com.mongodb.MongoTimeoutException createTimeoutException(com.mongodb.internal.Timeout):332 -> b
    13059:13059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> b
    13059:13059:com.mongodb.MongoTimeoutException createTimeoutException(com.mongodb.internal.Timeout):362 -> b
    378:412:void doMaintenance() -> d
    14059:14059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> d
    14059:14059:void doMaintenance():383 -> d
    14184:14195:void com.mongodb.internal.connection.ConcurrentPool.prune():184:195 -> d
    14184:14195:void doMaintenance():385 -> d
    14415:14415:boolean shouldEnsureMinSize():415:415 -> d
    14415:14415:void doMaintenance():386 -> d
    15315:15315:int com.mongodb.connection.ConnectionPoolSettings.getMinSize():315:315 -> d
    15315:15315:boolean shouldEnsureMinSize():415 -> d
    15315:15315:void doMaintenance():386 -> d
    16059:16059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> d
    16059:16059:void doMaintenance():388 -> d
    16315:16315:int com.mongodb.connection.ConnectionPoolSettings.getMinSize():315:315 -> d
    16315:16315:void doMaintenance():390 -> d
    17207:17213:void com.mongodb.internal.connection.ConcurrentPool.ensureMinSize(int,java.util.function.Consumer):207:213 -> d
    17207:17213:void doMaintenance():390 -> d
    17265:17265:int com.mongodb.internal.connection.ConcurrentPool.getCount():265:265 -> d
    17265:17265:void com.mongodb.internal.connection.ConcurrentPool.ensureMinSize(int,java.util.function.Consumer):207 -> d
    17265:17265:void doMaintenance():390 -> d
    419:419:boolean shouldPrune(com.mongodb.internal.connection.UsageTrackingInternalConnection) -> a
    423:423:boolean pastMaxIdleTime(com.mongodb.internal.connection.UsageTrackingInternalConnection) -> b
    18215:18215:long com.mongodb.internal.connection.UsageTrackingInternalConnection.getLastUsedAt():215:215 -> b
    18215:18215:boolean pastMaxIdleTime(com.mongodb.internal.connection.UsageTrackingInternalConnection):423 -> b
    427:427:boolean pastMaxLifeTime(com.mongodb.internal.connection.UsageTrackingInternalConnection) -> c
    19206:19206:long com.mongodb.internal.connection.UsageTrackingInternalConnection.getOpenedAt():206:206 -> c
    19206:19206:boolean pastMaxLifeTime(com.mongodb.internal.connection.UsageTrackingInternalConnection):427 -> c
    431:439:boolean fromPreviousGeneration(com.mongodb.internal.connection.UsageTrackingInternalConnection) -> d
    20182:20182:org.bson.types.ObjectId com.mongodb.connection.ConnectionDescription.getServiceId():182:182 -> d
    20182:20182:boolean fromPreviousGeneration(com.mongodb.internal.connection.UsageTrackingInternalConnection):435 -> d
    20463:20463:int com.mongodb.internal.connection.DefaultConnectionPool$StateAndGeneration.generation():1463:1463 -> d
    20463:20463:boolean fromPreviousGeneration(com.mongodb.internal.connection.UsageTrackingInternalConnection):439 -> d
    444:444:boolean expired(long,long,long) -> a
    501:501:com.mongodb.connection.ConnectionId getId(com.mongodb.internal.connection.InternalConnection) -> a
    21171:21171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> a
    21171:21171:com.mongodb.connection.ConnectionId getId(com.mongodb.internal.connection.InternalConnection):501 -> a
    505:505:boolean isLoadBalanced() -> g
    392:404:void lambda$doMaintenance$4(java.util.function.Predicate,com.mongodb.internal.connection.UsageTrackingInternalConnection) -> a
    21841:21842:void com.mongodb.internal.connection.DefaultConnectionPool$OpenConcurrencyLimiter.openImmediatelyAndTryHandOverOrRelease(com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection):841:842 -> a
    21841:21842:void lambda$doMaintenance$4(java.util.function.Predicate,com.mongodb.internal.connection.UsageTrackingInternalConnection):392 -> a
    398:401:void lambda$doMaintenance$3(java.util.function.Predicate,java.lang.RuntimeException,com.mongodb.internal.connection.UsageTrackingInternalConnection,com.mongodb.internal.connection.SdamServerDescriptionManager) -> a
    379:380:boolean lambda$doMaintenance$2(java.lang.Exception) -> a
    22304:22304:boolean com.mongodb.internal.connection.ConcurrentPool.isPoolClosedException(java.lang.Throwable):304:304 -> a
    22304:22304:boolean lambda$doMaintenance$2(java.lang.Exception):380 -> a
    105:105:com.mongodb.internal.connection.DefaultConnectionPool$StateAndGeneration access$200(com.mongodb.internal.connection.DefaultConnectionPool) -> a
    105:105:com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager access$300(com.mongodb.internal.connection.DefaultConnectionPool) -> b
    105:105:com.mongodb.event.ClusterListener access$400$3200a33c(com.mongodb.internal.connection.DefaultConnectionPool) -> c
    105:105:void access$500$40e0733a(com.mongodb.internal.connection.DefaultConnectionPool,com.mongodb.event.ClusterListener,com.mongodb.connection.ConnectionId) -> a
    22462:22464:void connectionCreated$2b8ede74(com.mongodb.event.ClusterListener,com.mongodb.connection.ConnectionId):462:464 -> a
    22462:22464:void access$500$40e0733a(com.mongodb.internal.connection.DefaultConnectionPool,com.mongodb.event.ClusterListener,com.mongodb.connection.ConnectionId):105 -> a
    105:105:com.mongodb.connection.ConnectionId access$600(com.mongodb.internal.connection.DefaultConnectionPool,com.mongodb.internal.connection.InternalConnection) -> a
    105:105:com.mongodb.RequestContext access$700$6d15dddc() -> e
    105:105:com.mongodb.connection.ServerId access$800(com.mongodb.internal.connection.DefaultConnectionPool) -> d
    105:105:boolean access$900(com.mongodb.internal.connection.DefaultConnectionPool,com.mongodb.internal.connection.UsageTrackingInternalConnection) -> a
    105:105:com.mongodb.internal.connection.ConcurrentPool access$1000(com.mongodb.internal.connection.DefaultConnectionPool) -> e
    105:105:com.mongodb.internal.connection.DefaultConnectionPool$OpenConcurrencyLimiter access$1100(com.mongodb.internal.connection.DefaultConnectionPool) -> f
    105:105:com.mongodb.internal.connection.DefaultConnectionPool$PinnedStatsManager access$1200(com.mongodb.internal.connection.DefaultConnectionPool) -> g
    105:105:com.mongodb.internal.connection.ConnectionGenerationSupplier access$1300(com.mongodb.internal.connection.DefaultConnectionPool) -> h
    105:105:void access$1400$256fb83d(com.mongodb.internal.connection.DefaultConnectionPool,com.mongodb.event.ClusterListener,com.mongodb.connection.ConnectionId,com.mongodb.event.ConnectionClosedEvent$Reason) -> a
    22472:22474:void connectionClosed$26366903(com.mongodb.event.ClusterListener,com.mongodb.connection.ConnectionId,com.mongodb.event.ConnectionClosedEvent$Reason):472:474 -> a
    22472:22474:void access$1400$256fb83d(com.mongodb.internal.connection.DefaultConnectionPool,com.mongodb.event.ClusterListener,com.mongodb.connection.ConnectionId,com.mongodb.event.ConnectionClosedEvent$Reason):105 -> a
    22477:22494:com.mongodb.event.ConnectionRemovedEvent$Reason getReasonForRemoved(com.mongodb.event.ConnectionClosedEvent$Reason):477:494 -> a
    22477:22494:void connectionClosed$26366903(com.mongodb.event.ClusterListener,com.mongodb.connection.ConnectionId,com.mongodb.event.ConnectionClosedEvent$Reason):472 -> a
    22477:22494:void access$1400$256fb83d(com.mongodb.internal.connection.DefaultConnectionPool,com.mongodb.event.ClusterListener,com.mongodb.connection.ConnectionId,com.mongodb.event.ConnectionClosedEvent$Reason):105 -> a
    105:105:boolean access$1500(com.mongodb.internal.connection.DefaultConnectionPool,com.mongodb.internal.connection.UsageTrackingInternalConnection) -> b
    105:105:boolean access$1600(com.mongodb.internal.connection.DefaultConnectionPool,com.mongodb.internal.connection.UsageTrackingInternalConnection) -> c
    105:105:boolean access$1700(com.mongodb.internal.connection.DefaultConnectionPool,com.mongodb.internal.connection.UsageTrackingInternalConnection) -> d
    105:105:com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection access$1900(com.mongodb.internal.connection.DefaultConnectionPool) -> i
    105:105:com.mongodb.MongoTimeoutException access$2000(com.mongodb.internal.connection.DefaultConnectionPool,com.mongodb.internal.Timeout) -> a
    105:105:com.mongodb.connection.ConnectionPoolSettings access$2400(com.mongodb.internal.connection.DefaultConnectionPool) -> j
    105:105:com.mongodb.internal.connection.DefaultConnectionPool$BackgroundMaintenanceManager access$2500(com.mongodb.internal.connection.DefaultConnectionPool) -> k
    106:106:void <clinit>() -> <clinit>
com.mongodb.internal.connection.DefaultConnectionPool$1 -> com.a.e.g.N$1:
    com.mongodb.internal.connection.DefaultConnectionPool this$0 -> a
    151:151:void <init>(com.mongodb.internal.connection.DefaultConnectionPool) -> <init>
    154:154:int getGeneration() -> a
    2463:2463:int com.mongodb.internal.connection.DefaultConnectionPool$StateAndGeneration.generation():1463:1463 -> a
    2463:2463:int getGeneration():154 -> a
    159:159:int getGeneration(org.bson.types.ObjectId) -> a
com.mongodb.internal.connection.DefaultConnectionPool$2 -> com.a.e.g.N$2:
    int[] $SwitchMap$com$mongodb$event$ConnectionClosedEvent$Reason -> a
    int[] $SwitchMap$com$mongodb$internal$connection$Connection$PinningMode -> b
    478:1183:void <clinit>() -> <clinit>
com.mongodb.internal.connection.DefaultConnectionPool$AsyncWorkManager -> com.a.e.g.N$a:
    com.mongodb.internal.connection.DefaultConnectionPool$AsyncWorkManager$State state -> a
    java.util.concurrent.BlockingQueue tasks -> b
    java.util.concurrent.locks.Lock lock -> c
    java.util.concurrent.ExecutorService worker -> d
    1228:1235:void <init>(boolean) -> <init>
    2256:2264:boolean initUnlessClosed():1256:1264 -> <init>
    2256:2264:void <init>(boolean):1233 -> <init>
    1274:1285:void close() -> close
    1288:1303:void workerRun() -> a
    2371:2371:com.mongodb.internal.Timeout com.mongodb.internal.connection.DefaultConnectionPool$Task.timeout():1371:1371 -> a
    2371:2371:void workerRun():1291 -> a
    3194:3194:boolean com.mongodb.internal.Timeout.expired():194:194 -> a
    3194:3194:void workerRun():1291 -> a
    3307:3320:void failAllTasksAfterClosing():1307:1320 -> a
    3307:3320:void workerRun():1302 -> a
    1259:1259:void lambda$initUnlessClosed$0() -> b
    3324:3329:void runAndLogUncaught(java.lang.Runnable):1324:1329 -> b
    3324:3329:void lambda$initUnlessClosed$0():1259 -> b
com.mongodb.internal.connection.DefaultConnectionPool$AsyncWorkManager$State -> com.a.e.g.N$a$a:
    com.mongodb.internal.connection.DefaultConnectionPool$AsyncWorkManager$State NEW -> a
    com.mongodb.internal.connection.DefaultConnectionPool$AsyncWorkManager$State INITIALIZED -> b
    com.mongodb.internal.connection.DefaultConnectionPool$AsyncWorkManager$State CLOSED -> c
    com.mongodb.internal.connection.DefaultConnectionPool$AsyncWorkManager$State[] $VALUES -> d
    1331:1331:com.mongodb.internal.connection.DefaultConnectionPool$AsyncWorkManager$State[] values() -> values
    1331:1331:com.mongodb.internal.connection.DefaultConnectionPool$AsyncWorkManager$State valueOf(java.lang.String) -> valueOf
    1331:1331:void <init>(java.lang.String,int) -> <init>
    1331:1334:void <clinit>() -> <clinit>
    2331:2331:com.mongodb.internal.connection.DefaultConnectionPool$AsyncWorkManager$State[] $values():1331:1331 -> <clinit>
    2331:2331:void <clinit>():1331 -> <clinit>
com.mongodb.internal.connection.DefaultConnectionPool$BackgroundMaintenanceManager -> com.a.e.g.N$b:
    java.util.concurrent.ScheduledExecutorService maintainer -> a
    java.util.concurrent.Future cancellationHandle -> b
    boolean initialStart -> c
    com.mongodb.internal.connection.DefaultConnectionPool this$0 -> d
    1391:1397:void <init>(com.mongodb.internal.connection.DefaultConnectionPool) -> <init>
    1400:1408:void start() -> a
    1411:1418:void runOnceAndStop() -> b
    2428:2432:void ignoreRejectedExectution(java.lang.Runnable):1428:1432 -> b
    2428:2432:void runOnceAndStop():1416 -> b
    1422:1425:void close() -> close
    1437:1440:java.lang.Object ignoreRejectedExectution(java.util.function.Supplier) -> a
    1429:1430:java.lang.Object lambda$ignoreRejectedExectution$2(java.lang.Runnable) -> a
    1416:1416:void lambda$runOnceAndStop$1() -> c
    1402:1405:java.util.concurrent.ScheduledFuture lambda$start$0() -> d
    3369:3369:long com.mongodb.connection.ConnectionPoolSettings.getMaintenanceFrequency(java.util.concurrent.TimeUnit):369:369 -> d
    3369:3369:java.util.concurrent.ScheduledFuture lambda$start$0():1405 -> d
    1384:1384:void <init>(com.mongodb.internal.connection.DefaultConnectionPool,byte) -> <init>
com.mongodb.internal.connection.DefaultConnectionPool$MongoOpenConnectionInternalException -> com.a.e.g.N$c:
    740:741:void <init>(java.lang.Throwable) -> <init>
    746:746:java.lang.Throwable getCause() -> getCause
com.mongodb.internal.connection.DefaultConnectionPool$MutableReference -> com.a.e.g.N$d:
    java.lang.Object reference -> a
    1110:1111:void <init>() -> <init>
    1106:1106:void <init>(byte) -> <init>
com.mongodb.internal.connection.DefaultConnectionPool$OpenConcurrencyLimiter -> com.a.e.g.N$e:
    java.util.concurrent.locks.ReentrantLock lock -> a
    java.util.concurrent.locks.Condition permitAvailableOrHandedOverOrClosedOrPausedCondition -> b
    int maxPermits -> c
    int permits -> d
    java.util.Deque desiredConnectionSlots -> e
    com.mongodb.internal.connection.DefaultConnectionPool this$0 -> f
    827:833:void <init>(com.mongodb.internal.connection.DefaultConnectionPool,int) -> <init>
    884:904:com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection openWithConcurrencyLimit(com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection,com.mongodb.internal.connection.DefaultConnectionPool$OpenWithConcurrencyLimitMode,com.mongodb.internal.Timeout) -> a
    1515:1515:com.mongodb.internal.connection.UsageTrackingInternalConnection com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.access$1800(com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection):515:515 -> a
    1515:1515:com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection openWithConcurrencyLimit(com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection,com.mongodb.internal.connection.DefaultConnectionPool$OpenWithConcurrencyLimitMode,com.mongodb.internal.Timeout):897 -> a
    957:1004:com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection acquirePermitOrGetAvailableOpenedConnection(boolean,com.mongodb.internal.Timeout) -> a
    2019:2020:void expressDesireToGetAvailableConnection():1019:1020 -> a
    2019:2020:com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection acquirePermitOrGetAvailableOpenedConnection(boolean,com.mongodb.internal.Timeout):978 -> a
    2024:2033:com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection tryGetAvailableConnection():1024:1033 -> a
    2024:2033:com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection acquirePermitOrGetAvailableOpenedConnection(boolean,com.mongodb.internal.Timeout):985 -> a
    2106:2106:java.lang.Object com.mongodb.internal.connection.DefaultConnectionPool$MutableReference.access$2200(com.mongodb.internal.connection.DefaultConnectionPool$MutableReference):1106:1106 -> a
    2106:2106:com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection tryGetAvailableConnection():1025 -> a
    2106:2106:com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection acquirePermitOrGetAvailableOpenedConnection(boolean,com.mongodb.internal.Timeout):985 -> a
    3059:3059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> a
    3059:3059:com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection tryGetAvailableConnection():1030 -> a
    3059:3059:com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection acquirePermitOrGetAvailableOpenedConnection(boolean,com.mongodb.internal.Timeout):985 -> a
    1008:1016:void releasePermit() -> b
    1037:1042:void giveUpOnTryingToGetAvailableConnection() -> c
    3106:3106:java.lang.Object com.mongodb.internal.connection.DefaultConnectionPool$MutableReference.access$2200(com.mongodb.internal.connection.DefaultConnectionPool$MutableReference):1106:1106 -> c
    3106:3106:void giveUpOnTryingToGetAvailableConnection():1038 -> c
    1049:1067:void tryHandOverOrRelease(com.mongodb.internal.connection.UsageTrackingInternalConnection) -> a
    4106:4106:java.lang.Object com.mongodb.internal.connection.DefaultConnectionPool$MutableReference.access$2200(com.mongodb.internal.connection.DefaultConnectionPool$MutableReference):1106:1106 -> a
    4106:4106:void tryHandOverOrRelease(com.mongodb.internal.connection.UsageTrackingInternalConnection):1053 -> a
    5106:5106:java.lang.Object com.mongodb.internal.connection.DefaultConnectionPool$MutableReference.access$2202(com.mongodb.internal.connection.DefaultConnectionPool$MutableReference,java.lang.Object):1106:1106 -> a
    5106:5106:void tryHandOverOrRelease(com.mongodb.internal.connection.UsageTrackingInternalConnection):1054 -> a
    6059:6059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> a
    6059:6059:void tryHandOverOrRelease(com.mongodb.internal.connection.UsageTrackingInternalConnection):1058 -> a
    6102:6103:void com.mongodb.internal.connection.ConcurrentPool.release(java.lang.Object):102:103 -> a
    6102:6103:void tryHandOverOrRelease(com.mongodb.internal.connection.UsageTrackingInternalConnection):1066 -> a
    1070:1076:void signalClosedOrPaused() -> a
    1085:1092:long awaitNanos(java.util.concurrent.locks.Condition,long) -> a
com.mongodb.internal.connection.DefaultConnectionPool$OpenWithConcurrencyLimitMode -> com.a.e.g.N$f:
    com.mongodb.internal.connection.DefaultConnectionPool$OpenWithConcurrencyLimitMode TRY_GET_AVAILABLE -> a
    com.mongodb.internal.connection.DefaultConnectionPool$OpenWithConcurrencyLimitMode TRY_HAND_OVER_OR_RELEASE -> b
    com.mongodb.internal.connection.DefaultConnectionPool$OpenWithConcurrencyLimitMode[] $VALUES -> c
    1100:1100:com.mongodb.internal.connection.DefaultConnectionPool$OpenWithConcurrencyLimitMode[] values() -> values
    1100:1100:com.mongodb.internal.connection.DefaultConnectionPool$OpenWithConcurrencyLimitMode valueOf(java.lang.String) -> valueOf
    1100:1100:void <init>(java.lang.String,int) -> <init>
    1100:1102:void <clinit>() -> <clinit>
    2100:2100:com.mongodb.internal.connection.DefaultConnectionPool$OpenWithConcurrencyLimitMode[] $values():1100:1100 -> <clinit>
    2100:2100:void <clinit>():1100 -> <clinit>
com.mongodb.internal.connection.DefaultConnectionPool$PinnedStatsManager -> com.a.e.g.N$g:
    java.util.concurrent.atomic.LongAdder numPinnedToCursor -> a
    java.util.concurrent.atomic.LongAdder numPinnedToTransaction -> b
    1178:1180:void <init>() -> <init>
    1178:1178:void <init>(byte) -> <init>
com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection -> com.a.e.g.N$h:
    com.mongodb.internal.connection.UsageTrackingInternalConnection wrapped -> a
    java.util.concurrent.atomic.AtomicBoolean isClosed -> b
    com.mongodb.internal.connection.Connection$PinningMode pinningMode -> c
    com.mongodb.internal.connection.DefaultConnectionPool this$0 -> d
    517:522:void <init>(com.mongodb.internal.connection.DefaultConnectionPool,com.mongodb.internal.connection.UsageTrackingInternalConnection) -> <init>
    526:526:int getGeneration() -> a
    531:540:void open() -> b
    2171:2171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> b
    2171:2171:void open():533 -> b
    560:572:void close() -> c
    2714:2717:void unmarkAsPinned():714:717 -> c
    2714:2717:void close():561 -> c
    3196:3206:void com.mongodb.internal.connection.DefaultConnectionPool$PinnedStatsManager.decrement(com.mongodb.internal.connection.Connection$PinningMode):1196:1206 -> c
    3196:3206:void unmarkAsPinned():715 -> c
    3196:3206:void close():561 -> c
    4059:4059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> c
    4059:4059:void close():564 -> c
    575:578:void release() -> d
    4102:4103:void com.mongodb.internal.connection.ConcurrentPool.release(java.lang.Object):102:103 -> d
    4102:4103:void release():576 -> d
    586:590:void closeSilently() -> e
    4225:4226:void com.mongodb.internal.connection.UsageTrackingInternalConnection.setCloseSilently():225:226 -> e
    4225:4226:void closeSilently():587 -> e
    596:605:void closeAndHandleOpenFailure() -> l
    5182:5182:org.bson.types.ObjectId com.mongodb.connection.ConnectionDescription.getServiceId():182:182 -> l
    5182:5182:void closeAndHandleOpenFailure():600 -> l
    6182:6182:org.bson.types.ObjectId com.mongodb.connection.ConnectionDescription.getServiceId():182:182 -> l
    6182:6182:void closeAndHandleOpenFailure():601 -> l
    611:615:void handleOpenSuccess() -> m
    619:620:boolean opened() -> f
    625:625:boolean isClosed() -> g
    630:630:org.bson.ByteBuf getBuffer(int) -> a
    642:643:java.lang.Object sendAndReceive(com.mongodb.internal.connection.CommandMessage,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.RequestContext) -> a
    648:650:void send(com.mongodb.internal.connection.CommandMessage,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext) -> a
    654:655:java.lang.Object receive(org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext) -> a
    660:661:boolean supportsAdditionalTimeout() -> h
    666:667:java.lang.Object receive(org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,int) -> a
    672:673:boolean hasMoreToCome() -> i
    703:711:void markAsPinned(com.mongodb.internal.connection.Connection$PinningMode) -> a
    6183:6193:void com.mongodb.internal.connection.DefaultConnectionPool$PinnedStatsManager.increment(com.mongodb.internal.connection.Connection$PinningMode):1183:1193 -> a
    6183:6193:void markAsPinned(com.mongodb.internal.connection.Connection$PinningMode):709 -> a
    721:721:com.mongodb.connection.ConnectionDescription getDescription() -> j
    726:727:com.mongodb.connection.ServerDescription getInitialServerDescription() -> k
com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager -> com.a.e.g.N$i:
    java.util.concurrent.ConcurrentHashMap stateByServiceId -> a
    1114:1115:void <init>() -> <init>
    1118:1125:void addConnection(org.bson.types.ObjectId) -> a
    1134:1138:void removeConnection(org.bson.types.ObjectId) -> b
    1152:1153:int getGeneration(org.bson.types.ObjectId) -> c
    2173:2173:int com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager$ServiceState.getGeneration():1173:1173 -> c
    2173:2173:int getGeneration(org.bson.types.ObjectId):1153 -> c
    1135:1136:com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager$ServiceState lambda$removeConnection$1(org.bson.types.ObjectId,com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager$ServiceState) -> a
    3165:3165:int com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager$ServiceState.decrementAndGetConnectionCount():1165:1165 -> a
    3165:3165:com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager$ServiceState lambda$removeConnection$1(org.bson.types.ObjectId,com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager$ServiceState):1136 -> a
    1119:1123:com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager$ServiceState lambda$addConnection$0(org.bson.types.ObjectId,com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager$ServiceState) -> b
    4161:4162:void com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager$ServiceState.incrementConnectionCount():1161:1162 -> b
    4161:4162:com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager$ServiceState lambda$addConnection$0(org.bson.types.ObjectId,com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager$ServiceState):1122 -> b
com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager$ServiceState -> com.a.e.g.N$i$a:
    java.util.concurrent.atomic.AtomicInteger generation -> a
    java.util.concurrent.atomic.AtomicInteger connectionCount -> b
    1156:1158:void <init>() -> <init>
    1156:1156:void <init>(byte) -> <init>
com.mongodb.internal.connection.DefaultConnectionPool$StateAndGeneration -> com.a.e.g.N$j:
    java.util.concurrent.locks.ReadWriteLock lock -> c
    boolean paused -> d
    java.util.concurrent.atomic.AtomicBoolean closed -> a
    int generation -> b
    java.lang.Throwable cause -> e
    com.mongodb.internal.connection.DefaultConnectionPool this$0 -> f
    1454:1460:void <init>(com.mongodb.internal.connection.DefaultConnectionPool) -> <init>
    1471:1490:boolean pauseAndIncrementGeneration(java.lang.Throwable) -> a
    2290:2291:void com.mongodb.internal.connection.ConcurrentPool.pause(java.util.function.Supplier):290:291 -> a
    2290:2291:boolean pauseAndIncrementGeneration(java.lang.Throwable):1476 -> a
    2439:2449:void com.mongodb.internal.connection.ConcurrentPool$StateAndPermits.pause(java.util.function.Supplier):439:449 -> a
    2439:2449:void com.mongodb.internal.connection.ConcurrentPool.pause(java.util.function.Supplier):290 -> a
    2439:2449:boolean pauseAndIncrementGeneration(java.lang.Throwable):1476 -> a
    1494:1510:boolean ready() -> a
    3286:3287:void com.mongodb.internal.connection.ConcurrentPool.ready():286:287 -> a
    3286:3287:boolean ready():1501 -> a
    3452:3461:void com.mongodb.internal.connection.ConcurrentPool$StateAndPermits.ready():452:461 -> a
    3452:3461:void com.mongodb.internal.connection.ConcurrentPool.ready():286 -> a
    3452:3461:boolean ready():1501 -> a
    1529:1542:boolean throwIfClosedOrPaused() -> b
    1476:1476:com.mongodb.MongoException lambda$pauseAndIncrementGeneration$0(java.lang.Throwable) -> b
com.mongodb.internal.connection.DefaultConnectionPool$Task -> com.a.e.g.N$k:
    1357:1358:void failAsClosed() -> a
    2226:2226:java.lang.String com.mongodb.client.model.ReplaceOptions.toString():226:226 -> toString
com.mongodb.internal.connection.DefaultConnectionPool$UsageTrackingInternalConnectionItemFactory -> com.a.e.g.N$l:
    com.mongodb.internal.connection.InternalConnectionFactory internalConnectionFactory -> a
    com.mongodb.internal.connection.DefaultConnectionPool this$0 -> b
    753:755:void <init>(com.mongodb.internal.connection.DefaultConnectionPool,com.mongodb.internal.connection.InternalConnectionFactory) -> <init>
    750:750:boolean shouldPrune(java.lang.Object) -> b
    1811:1811:boolean shouldPrune(com.mongodb.internal.connection.UsageTrackingInternalConnection):811:811 -> b
    1811:1811:boolean shouldPrune(java.lang.Object):750 -> b
    750:750:void close(java.lang.Object) -> a
    2765:2777:void close(com.mongodb.internal.connection.UsageTrackingInternalConnection):765:777 -> a
    2765:2777:void close(java.lang.Object):750 -> a
    3234:3234:boolean com.mongodb.internal.connection.UsageTrackingInternalConnection.isCloseSilently():234:234 -> a
    3234:3234:void close(com.mongodb.internal.connection.UsageTrackingInternalConnection):765 -> a
    3234:3234:void close(java.lang.Object):750 -> a
    4059:4059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> a
    4059:4059:void close(com.mongodb.internal.connection.UsageTrackingInternalConnection):767 -> a
    4059:4059:void close(java.lang.Object):750 -> a
    4797:4806:com.mongodb.event.ConnectionClosedEvent$Reason getReasonForClosing(com.mongodb.internal.connection.UsageTrackingInternalConnection):797:806 -> a
    4797:4806:void close(com.mongodb.internal.connection.UsageTrackingInternalConnection):770 -> a
    4797:4806:void close(java.lang.Object):750 -> a
    5059:5059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> a
    5059:5059:void close(com.mongodb.internal.connection.UsageTrackingInternalConnection):772 -> a
    5059:5059:void close(java.lang.Object):750 -> a
    5781:5792:java.lang.String getReasonStringForClosing(com.mongodb.internal.connection.UsageTrackingInternalConnection):781:792 -> a
    5781:5792:void close(com.mongodb.internal.connection.UsageTrackingInternalConnection):773 -> a
    5781:5792:void close(java.lang.Object):750 -> a
    750:750:java.lang.Object create() -> a
    6759:6760:com.mongodb.internal.connection.UsageTrackingInternalConnection create():759:760 -> a
    6759:6760:java.lang.Object create():750 -> a
com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor -> com.a.e.g.O:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> a
    java.lang.String hostName -> b
    java.lang.String srvServiceName -> c
    long rescanFrequencyMillis -> d
    long noRecordsRescanFrequencyMillis -> e
    com.mongodb.internal.connection.DnsSrvRecordInitializer dnsSrvRecordInitializer -> f
    com.mongodb.internal.dns.DnsResolver dnsResolver -> g
    java.lang.Thread monitorThread -> h
    boolean isClosed -> i
    50:59:void <init>(java.lang.String,java.lang.String,long,long,com.mongodb.internal.connection.DnsSrvRecordInitializer,com.mongodb.connection.ClusterId,com.mongodb.internal.dns.DnsResolver) -> <init>
    63:64:void start() -> a
    68:70:void close() -> b
    36:36:boolean access$100(com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor) -> a
    36:36:java.lang.String access$200(com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor) -> b
    36:36:java.lang.String access$300(com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor) -> c
    36:36:com.mongodb.internal.dns.DnsResolver access$400(com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor) -> d
    36:36:com.mongodb.internal.connection.DnsSrvRecordInitializer access$500(com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor) -> e
    36:36:com.mongodb.RequestContext access$600$6d15dddc() -> c
    36:36:long access$700(com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor) -> f
    36:36:long access$800(com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor) -> g
    37:37:void <clinit>() -> <clinit>
com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor$DnsSrvRecordMonitorRunnable -> com.a.e.g.O$a:
    java.util.Set currentHosts -> a
    com.mongodb.connection.ClusterType clusterType -> b
    com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor this$0 -> c
    72:74:void <init>(com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor) -> <init>
    78:114:void run() -> run
    1117:1117:boolean shouldContinueMonitoring():117:117 -> run
    1117:1117:void run():78 -> run
    1125:1129:java.util.Set createServerAddressSet(java.util.List):125:129 -> run
    1125:1129:void run():81 -> run
    2121:2121:long getRescanFrequencyMillis():121:121 -> run
    2121:2121:void run():108 -> run
    72:72:void <init>(com.mongodb.internal.connection.DefaultDnsSrvRecordMonitor,byte) -> <init>
com.mongodb.internal.connection.DefaultDnsSrvRecordMonitorFactory -> com.a.e.g.P:
    com.mongodb.connection.ClusterId clusterId -> a
    long noRecordsRescanFrequency -> b
    36:39:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ServerSettings) -> <init>
    43:43:com.mongodb.internal.connection.DnsSrvRecordMonitor create(java.lang.String,java.lang.String,com.mongodb.internal.connection.DnsSrvRecordInitializer) -> a
com.mongodb.internal.connection.DefaultSdamServerDescriptionManager -> com.a.e.g.Q:
    com.mongodb.internal.connection.Cluster cluster -> a
    com.mongodb.connection.ServerId serverId -> b
    com.mongodb.event.ClusterListener serverListener$24d157b8 -> c
    com.mongodb.internal.connection.ServerMonitor serverMonitor -> d
    com.mongodb.internal.connection.ConnectionPool connectionPool -> e
    com.mongodb.connection.ClusterConnectionMode connectionMode -> f
    com.mongodb.connection.ServerDescription description -> g
    48:56:void <init>(com.mongodb.internal.connection.Cluster,com.mongodb.connection.ServerId,com.mongodb.event.ClusterListener,com.mongodb.internal.connection.ServerMonitor,com.mongodb.internal.connection.ConnectionPool,com.mongodb.connection.ClusterConnectionMode) -> <init>
    60:83:void update(com.mongodb.connection.ServerDescription) -> a
    87:88:void handleExceptionBeforeHandshake(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue) -> a
    92:93:void handleExceptionAfterHandshake(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue) -> b
    97:97:com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context context() -> a
    1702:1702:int com.mongodb.connection.ServerDescription.getMaxWireVersion():702:702 -> a
    1702:1702:com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context context():97 -> a
    102:102:com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context context(com.mongodb.internal.connection.InternalConnection) -> a
    2192:2192:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> a
    2192:2192:com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context context(com.mongodb.internal.connection.InternalConnection):102 -> a
    106:114:void updateDescription(com.mongodb.connection.ServerDescription) -> b
    117:138:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean) -> a
    3125:3125:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.stale(com.mongodb.internal.connection.ConnectionPool,com.mongodb.connection.ServerDescription):125:125 -> a
    3125:3125:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):117 -> a
    3184:3184:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context.access$200(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context,com.mongodb.internal.connection.ConnectionPool):184:184 -> a
    3184:3184:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.stale(com.mongodb.internal.connection.ConnectionPool,com.mongodb.connection.ServerDescription):125 -> a
    3184:3184:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):117 -> a
    3200:3200:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context.stale(com.mongodb.internal.connection.ConnectionPool):200:200 -> a
    3200:3200:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context.access$200(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context,com.mongodb.internal.connection.ConnectionPool):184 -> a
    3200:3200:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.stale(com.mongodb.internal.connection.ConnectionPool,com.mongodb.connection.ServerDescription):125 -> a
    3200:3200:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):117 -> a
    4121:4121:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.serverIsLessThanVersionFourDotTwo():121:121 -> a
    4121:4121:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):122 -> a
    4184:4184:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context.access$100(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context):184:184 -> a
    4184:4184:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.serverIsLessThanVersionFourDotTwo():121 -> a
    4184:4184:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):122 -> a
    5141:5146:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.relatedToShutdown():141:146 -> a
    5141:5146:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):122 -> a
    6062:6062:int com.mongodb.MongoCommandException.getErrorCode():62:62 -> a
    6062:6062:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.relatedToShutdown():144 -> a
    6062:6062:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):122 -> a
    6145:6145:int com.mongodb.MongoException.getCode():145:145 -> a
    6145:6145:int com.mongodb.MongoCommandException.getErrorCode():62 -> a
    6145:6145:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.relatedToShutdown():144 -> a
    6145:6145:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):122 -> a
    7106:7106:java.util.Optional com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.exception():106:106 -> a
    7106:7106:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):123 -> a
    7162:7162:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.relatedToNetworkNotTimeout():162:162 -> a
    7162:7162:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):126 -> a
    8153:8153:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.relatedToNetworkTimeout():153:153 -> a
    8153:8153:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.relatedToNetworkNotTimeout():162 -> a
    8153:8153:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):126 -> a
    9153:9153:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.relatedToNetworkTimeout():153:153 -> a
    9153:9153:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):127 -> a
    9166:9166:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.relatedToAuth():166:166 -> a
    9166:9166:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):127 -> a
    10106:10106:java.util.Optional com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.exception():106:106 -> a
    10106:10106:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):129 -> a
    10170:10170:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.relatedToWriteConcern():170:170 -> a
    10170:10170:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):131 -> a
    11113:11113:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.specific():113:113 -> a
    11113:11113:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):131 -> a
    11121:11121:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.serverIsLessThanVersionFourDotTwo():121:121 -> a
    11121:11121:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):133 -> a
    11184:11184:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context.access$100(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context):184:184 -> a
    11184:11184:boolean com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.serverIsLessThanVersionFourDotTwo():121 -> a
    11184:11184:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):133 -> a
    12106:12106:java.util.Optional com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.exception():106:106 -> a
    12106:12106:void handleException(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue,boolean):134 -> a
    92:92:void lambda$handleExceptionAfterHandshake$2(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue) -> c
    87:87:void lambda$handleExceptionBeforeHandshake$1(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue) -> d
    61:82:void lambda$update$0(com.mongodb.connection.ServerDescription) -> c
    12734:12734:com.mongodb.connection.TopologyVersion com.mongodb.connection.ServerDescription.getTopologyVersion():734:734 -> c
    12734:12734:void lambda$update$0(com.mongodb.connection.ServerDescription):61 -> c
    13734:13734:com.mongodb.connection.TopologyVersion com.mongodb.connection.ServerDescription.getTopologyVersion():734:734 -> c
    13734:13734:void lambda$update$0(com.mongodb.connection.ServerDescription):61 -> c
    14053:14053:boolean com.mongodb.internal.connection.TopologyVersionHelper.newer(com.mongodb.connection.TopologyVersion,com.mongodb.connection.TopologyVersion):53:53 -> c
    14053:14053:void lambda$update$0(com.mongodb.connection.ServerDescription):61 -> c
    14814:14814:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.getType():814:814 -> c
    14814:14814:void lambda$update$0(com.mongodb.connection.ServerDescription):64 -> c
    15022:15037:boolean com.mongodb.internal.connection.ServerTypeHelper.isDataBearing(com.mongodb.connection.ServerType):22:37 -> c
    15022:15037:void lambda$update$0(com.mongodb.connection.ServerDescription):70 -> c
    15843:15843:java.lang.Throwable com.mongodb.connection.ServerDescription.getException():843:843 -> c
    15843:15843:void lambda$update$0(com.mongodb.connection.ServerDescription):76 -> c
com.mongodb.internal.connection.DefaultServer -> com.a.e.g.R:
    com.mongodb.connection.ServerId serverId -> b
    com.mongodb.internal.connection.ConnectionPool connectionPool -> c
    com.mongodb.connection.ClusterConnectionMode clusterConnectionMode -> d
    com.mongodb.internal.connection.ConnectionFactory connectionFactory -> e
    com.mongodb.internal.connection.ServerMonitor serverMonitor -> f
    com.mongodb.internal.connection.SdamServerDescriptionManager sdam -> g
    com.mongodb.event.ClusterListener serverListener$24d157b8 -> h
    com.mongodb.internal.connection.ClusterClock clusterClock -> i
    java.util.concurrent.atomic.AtomicInteger operationCount -> j
    boolean isClosed -> k
    70:86:void <init>(com.mongodb.connection.ServerId,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.ConnectionPool,com.mongodb.internal.connection.ConnectionFactory,com.mongodb.internal.connection.ServerMonitor,com.mongodb.internal.connection.SdamServerDescriptionManager,com.mongodb.event.ClusterListener,com.mongodb.RequestContext,com.mongodb.internal.connection.ClusterClock,boolean) -> <init>
    90:103:com.mongodb.internal.connection.Connection getConnection() -> e
    1059:1059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> e
    1059:1059:com.mongodb.internal.connection.Connection getConnection():91 -> e
    1138:1141:void operationBegin():138:141 -> e
    1138:1141:com.mongodb.internal.connection.Connection getConnection():94 -> e
    1249:1251:com.mongodb.internal.connection.Connection com.mongodb.internal.connection.DefaultServer$OperationCountTrackingConnection.decorate(com.mongodb.internal.connection.DefaultServer,com.mongodb.internal.connection.Connection):249:251 -> e
    1249:1251:com.mongodb.internal.connection.Connection getConnection():96 -> e
    134:134:int operationCount() -> f
    144:147:void operationEnd() -> g
    151:152:void resetToConnecting() -> a
    156:159:void invalidate() -> b
    2173:2173:boolean isClosed():173:173 -> b
    2173:2173:void invalidate():156 -> b
    3099:3099:com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue.unspecified(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context):99:99 -> b
    3099:3099:void invalidate():157 -> b
    163:169:void close() -> c
    3173:3173:boolean isClosed():173:173 -> c
    3173:3173:void close():163 -> c
    178:179:void connect() -> d
    52:52:com.mongodb.internal.connection.ClusterClock access$100(com.mongodb.internal.connection.DefaultServer) -> a
    52:52:com.mongodb.internal.connection.SdamServerDescriptionManager access$200(com.mongodb.internal.connection.DefaultServer) -> b
    52:52:void access$400(com.mongodb.internal.connection.DefaultServer) -> c
    53:53:void <clinit>() -> <clinit>
com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor -> com.a.e.g.R$a:
    com.mongodb.internal.connection.DefaultServer this$0 -> a
    196:196:void <init>(com.mongodb.internal.connection.DefaultServer) -> <init>
    203:213:java.lang.Object execute(com.mongodb.internal.connection.CommandProtocol,com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.session.SessionContext) -> a
    1041:1041:java.lang.Object com.mongodb.internal.connection.MongoWriteConcernWithResponseException.getResponse():41:41 -> a
    1041:1041:java.lang.Object execute(com.mongodb.internal.connection.CommandProtocol,com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.session.SessionContext):208 -> a
    196:196:void <init>(com.mongodb.internal.connection.DefaultServer,byte) -> <init>
com.mongodb.internal.connection.DefaultServer$OperationCountTrackingConnection -> com.a.e.g.R$b:
    com.mongodb.internal.connection.DefaultServer server -> a
    com.mongodb.internal.connection.Connection wrapped -> b
    254:257:void <init>(com.mongodb.internal.connection.DefaultServer,com.mongodb.internal.connection.Connection) -> <init>
    266:270:int release() -> c
    275:276:com.mongodb.internal.connection.Connection retain() -> b
    281:281:com.mongodb.connection.ConnectionDescription getDescription() -> a
    288:288:java.lang.Object command$4c71378a(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext) -> a
    297:297:java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator) -> a
    303:304:void markAsPinned(com.mongodb.internal.connection.Connection$PinningMode) -> a
    244:244:com.mongodb.internal.binding.ReferenceCounted retain() -> i
com.mongodb.internal.connection.DefaultServerConnection -> com.a.e.g.S:
    com.mongodb.internal.connection.InternalConnection wrapped -> a
    com.mongodb.internal.connection.ProtocolExecutor protocolExecutor -> b
    com.mongodb.connection.ClusterConnectionMode clusterConnectionMode -> c
    45:49:void <init>(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.ProtocolExecutor,com.mongodb.connection.ClusterConnectionMode) -> <init>
    59:63:int release() -> c
    68:68:com.mongodb.connection.ConnectionDescription getDescription() -> a
    76:76:java.lang.Object command$4c71378a(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext) -> a
    87:87:java.lang.Object command$157ee735(java.lang.String,org.bson.BsonDocument,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.RequestContext,boolean,com.mongodb.internal.connection.SplittablePayload,org.bson.FieldNameValidator) -> a
    117:118:void markAsPinned(com.mongodb.internal.connection.Connection$PinningMode) -> a
    122:122:java.lang.Object executeProtocol(com.mongodb.internal.connection.CommandProtocol,com.mongodb.internal.session.SessionContext) -> a
    38:38:com.mongodb.internal.binding.ReferenceCounted retain() -> i
    1053:1054:com.mongodb.internal.connection.DefaultServerConnection retain():53:54 -> i
    1053:1054:com.mongodb.internal.binding.ReferenceCounted retain():38 -> i
    38:38:com.mongodb.internal.connection.Connection retain() -> b
    2053:2054:com.mongodb.internal.connection.DefaultServerConnection retain():53:54 -> b
    2053:2054:com.mongodb.internal.connection.Connection retain():38 -> b
    38:38:com.mongodb.internal.connection.AsyncConnection retain() -> d
    3053:3054:com.mongodb.internal.connection.DefaultServerConnection retain():53:54 -> d
    3053:3054:com.mongodb.internal.connection.AsyncConnection retain():38 -> d
    39:39:void <clinit>() -> <clinit>
com.mongodb.internal.connection.DefaultServerMonitor -> com.a.e.g.T:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> a
    com.mongodb.connection.ServerId serverId -> b
    com.mongodb.event.ClusterListener serverMonitorListener$295e7afc -> c
    com.mongodb.internal.connection.ClusterClock clusterClock -> d
    com.mongodb.internal.inject.Provider sdamProvider -> e
    com.mongodb.internal.connection.InternalConnectionFactory internalConnectionFactory -> f
    com.mongodb.connection.ClusterConnectionMode clusterConnectionMode -> g
    com.mongodb.internal.connection.DescriptionHelper serverApi$10f7fbbb -> h
    com.mongodb.connection.ServerSettings serverSettings -> i
    com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable monitor -> j
    java.lang.Thread monitorThread -> k
    com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable roundTripTimeMonitor -> l
    com.mongodb.internal.connection.ExponentiallyWeightedMovingAverage averageRoundTripTime -> m
    java.lang.Thread roundTripTimeMonitorThread -> n
    java.util.concurrent.locks.Lock lock -> o
    java.util.concurrent.locks.Condition condition -> p
    boolean isClosed -> q
    82:110:void <init>(com.mongodb.connection.ServerId,com.mongodb.connection.ServerSettings,com.mongodb.internal.connection.ClusterClock,com.mongodb.internal.connection.InternalConnectionFactory,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.internal.inject.Provider) -> <init>
    1051:1051:com.mongodb.connection.ClusterId com.mongodb.connection.ServerId.getClusterId():51:51 -> <init>
    1051:1051:void <init>(com.mongodb.connection.ServerId,com.mongodb.connection.ServerSettings,com.mongodb.internal.connection.ClusterClock,com.mongodb.internal.connection.InternalConnectionFactory,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.internal.inject.Provider):103 -> <init>
    1059:1059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> <init>
    1059:1059:void <init>(com.mongodb.connection.ServerId,com.mongodb.connection.ServerSettings,com.mongodb.internal.connection.ClusterClock,com.mongodb.internal.connection.InternalConnectionFactory,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.internal.inject.Provider):103 -> <init>
    2051:2051:com.mongodb.connection.ClusterId com.mongodb.connection.ServerId.getClusterId():51:51 -> <init>
    2051:2051:void <init>(com.mongodb.connection.ServerId,com.mongodb.connection.ServerSettings,com.mongodb.internal.connection.ClusterClock,com.mongodb.internal.connection.InternalConnectionFactory,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.internal.inject.Provider):107 -> <init>
    2059:2059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> <init>
    2059:2059:void <init>(com.mongodb.connection.ServerId,com.mongodb.connection.ServerSettings,com.mongodb.internal.connection.ClusterClock,com.mongodb.internal.connection.InternalConnectionFactory,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.internal.inject.Provider):107 -> <init>
    114:116:void start() -> a
    120:126:void connect() -> b
    130:135:void close() -> c
    2147:2151:void com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.close():147:151 -> c
    2147:2151:void close():131 -> c
    2402:2406:void com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable.close():402:406 -> c
    2402:2406:void close():133 -> c
    139:140:void cancelCurrentCheck() -> d
    3313:3323:void com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.cancelCurrentCheck():313:323 -> d
    3313:3323:void cancelCurrentCheck():139 -> d
    328:394:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription) -> a
    3583:3583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> a
    3583:3583:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):331 -> a
    4583:4583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> a
    4583:4583:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):331 -> a
    5128:5128:java.lang.String com.mongodb.connection.ServerDescription.getCanonicalAddress():128:128 -> a
    5128:5128:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):334 -> a
    6128:6128:java.lang.String com.mongodb.connection.ServerDescription.getCanonicalAddress():128:128 -> a
    6128:6128:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):336 -> a
    7128:7128:java.lang.String com.mongodb.connection.ServerDescription.getCanonicalAddress():128:128 -> a
    7128:7128:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):336 -> a
    7638:7638:java.util.Set com.mongodb.connection.ServerDescription.getHosts():638:638 -> a
    7638:7638:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):339 -> a
    8638:8638:java.util.Set com.mongodb.connection.ServerDescription.getHosts():638:638 -> a
    8638:8638:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):339 -> a
    8656:8656:java.util.Set com.mongodb.connection.ServerDescription.getArbiters():656:656 -> a
    8656:8656:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):342 -> a
    9656:9656:java.util.Set com.mongodb.connection.ServerDescription.getArbiters():656:656 -> a
    9656:9656:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):342 -> a
    10647:10647:java.util.Set com.mongodb.connection.ServerDescription.getPassives():647:647 -> a
    10647:10647:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):345 -> a
    11647:11647:java.util.Set com.mongodb.connection.ServerDescription.getPassives():647:647 -> a
    11647:11647:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):345 -> a
    11666:11666:java.lang.String com.mongodb.connection.ServerDescription.getPrimary():666:666 -> a
    11666:11666:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):348 -> a
    12666:12666:java.lang.String com.mongodb.connection.ServerDescription.getPrimary():666:666 -> a
    12666:12666:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):349 -> a
    13666:13666:java.lang.String com.mongodb.connection.ServerDescription.getPrimary():666:666 -> a
    13666:13666:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):349 -> a
    13787:13787:java.lang.String com.mongodb.connection.ServerDescription.getSetName():787:787 -> a
    13787:13787:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):352 -> a
    14787:14787:java.lang.String com.mongodb.connection.ServerDescription.getSetName():787:787 -> a
    14787:14787:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):353 -> a
    15787:15787:java.lang.String com.mongodb.connection.ServerDescription.getSetName():787:787 -> a
    15787:15787:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):353 -> a
    15805:15805:com.mongodb.connection.ServerConnectionState com.mongodb.connection.ServerDescription.getState():805:805 -> a
    15805:15805:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):356 -> a
    16805:16805:com.mongodb.connection.ServerConnectionState com.mongodb.connection.ServerDescription.getState():805:805 -> a
    16805:16805:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):356 -> a
    17684:17684:com.mongodb.TagSet com.mongodb.connection.ServerDescription.getTagSet():684:684 -> a
    17684:17684:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):359 -> a
    18684:18684:com.mongodb.TagSet com.mongodb.connection.ServerDescription.getTagSet():684:684 -> a
    18684:18684:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):359 -> a
    18814:18814:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.getType():814:814 -> a
    18814:18814:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):362 -> a
    19814:19814:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.getType():814:814 -> a
    19814:19814:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):362 -> a
    20702:20702:int com.mongodb.connection.ServerDescription.getMaxWireVersion():702:702 -> a
    20702:20702:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):365 -> a
    21702:21702:int com.mongodb.connection.ServerDescription.getMaxWireVersion():702:702 -> a
    21702:21702:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):365 -> a
    21712:21712:org.bson.types.ObjectId com.mongodb.connection.ServerDescription.getElectionId():712:712 -> a
    21712:21712:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):368 -> a
    22712:22712:org.bson.types.ObjectId com.mongodb.connection.ServerDescription.getElectionId():712:712 -> a
    22712:22712:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):370 -> a
    23712:23712:org.bson.types.ObjectId com.mongodb.connection.ServerDescription.getElectionId():712:712 -> a
    23712:23712:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):370 -> a
    23722:23722:java.lang.Integer com.mongodb.connection.ServerDescription.getSetVersion():722:722 -> a
    23722:23722:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):373 -> a
    24722:24722:java.lang.Integer com.mongodb.connection.ServerDescription.getSetVersion():722:722 -> a
    24722:24722:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):375 -> a
    25722:25722:java.lang.Integer com.mongodb.connection.ServerDescription.getSetVersion():722:722 -> a
    25722:25722:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):375 -> a
    25843:25843:java.lang.Throwable com.mongodb.connection.ServerDescription.getException():843:843 -> a
    25843:25843:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):380 -> a
    26843:26843:java.lang.Throwable com.mongodb.connection.ServerDescription.getException():843:843 -> a
    26843:26843:boolean shouldLogStageChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):381 -> a
    66:66:com.mongodb.connection.ServerId access$100(com.mongodb.internal.connection.DefaultServerMonitor) -> a
    66:66:boolean access$200(com.mongodb.internal.connection.DefaultServerMonitor) -> b
    66:66:com.mongodb.internal.inject.Provider access$300(com.mongodb.internal.connection.DefaultServerMonitor) -> c
    66:66:com.mongodb.RequestContext access$400$6d15dddc() -> e
    66:66:com.mongodb.internal.connection.InternalConnectionFactory access$500(com.mongodb.internal.connection.DefaultServerMonitor) -> d
    66:66:com.mongodb.internal.connection.ExponentiallyWeightedMovingAverage access$600(com.mongodb.internal.connection.DefaultServerMonitor) -> e
    66:66:com.mongodb.event.ClusterListener access$700$48d24936(com.mongodb.internal.connection.DefaultServerMonitor) -> f
    66:66:com.mongodb.internal.connection.ClusterClock access$800(com.mongodb.internal.connection.DefaultServerMonitor) -> g
    66:66:java.lang.String access$900(com.mongodb.internal.connection.DefaultServerMonitor,com.mongodb.connection.ServerDescription) -> a
    27459:27459:java.lang.String getHandshakeCommandName(com.mongodb.connection.ServerDescription):459:459 -> a
    27459:27459:java.lang.String access$900(com.mongodb.internal.connection.DefaultServerMonitor,com.mongodb.connection.ServerDescription):66 -> a
    28152:28152:boolean com.mongodb.connection.ServerDescription.isHelloOk():152:152 -> a
    28152:28152:java.lang.String getHandshakeCommandName(com.mongodb.connection.ServerDescription):459 -> a
    28152:28152:java.lang.String access$900(com.mongodb.internal.connection.DefaultServerMonitor,com.mongodb.connection.ServerDescription):66 -> a
    66:66:com.mongodb.connection.ServerSettings access$1000(com.mongodb.internal.connection.DefaultServerMonitor) -> h
    66:66:com.mongodb.connection.ClusterConnectionMode access$1100(com.mongodb.internal.connection.DefaultServerMonitor) -> i
    66:66:com.mongodb.internal.connection.DescriptionHelper access$1200$6642f09(com.mongodb.internal.connection.DefaultServerMonitor) -> j
    66:66:java.util.concurrent.locks.Lock access$1300(com.mongodb.internal.connection.DefaultServerMonitor) -> k
    66:66:java.util.concurrent.locks.Condition access$1400(com.mongodb.internal.connection.DefaultServerMonitor) -> l
    66:66:void access$1500(com.mongodb.internal.connection.DefaultServerMonitor) -> m
    28452:28456:void waitForNext():452:456 -> m
    28452:28456:void access$1500(com.mongodb.internal.connection.DefaultServerMonitor):66 -> m
    68:68:void <clinit>() -> <clinit>
com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable -> com.a.e.g.T$a:
    com.mongodb.internal.connection.InternalConnection connection -> a
    com.mongodb.internal.connection.DefaultServerMonitor this$0 -> b
    398:399:void <init>(com.mongodb.internal.connection.DefaultServerMonitor) -> <init>
    411:431:void run() -> run
    1434:1438:void initialize():434:438 -> run
    1434:1438:void run():414 -> run
    1832:1832:long com.mongodb.connection.ServerDescription.getRoundTripTimeNanos():832:832 -> run
    1832:1832:void initialize():437 -> run
    1832:1832:void run():414 -> run
    2441:2447:void pingServer(com.mongodb.internal.connection.InternalConnection):441:447 -> run
    2441:2447:void run():416 -> run
    398:398:void <init>(com.mongodb.internal.connection.DefaultServerMonitor,byte) -> <init>
com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable -> com.a.e.g.T$b:
    com.mongodb.internal.connection.InternalConnection connection -> a
    boolean currentCheckCancelled -> b
    com.mongodb.internal.connection.DefaultServerMonitor this$0 -> c
    142:143:void <init>(com.mongodb.internal.connection.DefaultServerMonitor) -> <init>
    155:192:void run() -> run
    1275:1283:void logStateChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):275:283 -> run
    1275:1283:void run():171 -> run
    1843:1843:java.lang.Throwable com.mongodb.connection.ServerDescription.getException():843:843 -> run
    1843:1843:void logStateChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):276 -> run
    1843:1843:void run():171 -> run
    2059:2059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> run
    2059:2059:void logStateChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):277 -> run
    2059:2059:void run():171 -> run
    2843:2843:java.lang.Throwable com.mongodb.connection.ServerDescription.getException():843:843 -> run
    2843:2843:void logStateChange(com.mongodb.connection.ServerDescription,com.mongodb.connection.ServerDescription):278 -> run
    2843:2843:void run():171 -> run
    3734:3734:com.mongodb.connection.TopologyVersion com.mongodb.connection.ServerDescription.getTopologyVersion():734:734 -> run
    3734:3734:void run():175 -> run
    3814:3814:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.getType():814:814 -> run
    3814:3814:void run():175 -> run
    3843:3843:java.lang.Throwable com.mongodb.connection.ServerDescription.getException():843:843 -> run
    3843:3843:void run():177 -> run
    4814:4814:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.getType():814:814 -> run
    4814:4814:void run():178 -> run
    196:255:com.mongodb.connection.ServerDescription lookupServerDescription(com.mongodb.connection.ServerDescription) -> a
    4832:4832:long com.mongodb.connection.ServerDescription.getRoundTripTimeNanos():832:832 -> a
    4832:4832:com.mongodb.connection.ServerDescription lookupServerDescription(com.mongodb.connection.ServerDescription):201 -> a
    5059:5059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> a
    5059:5059:com.mongodb.connection.ServerDescription lookupServerDescription(com.mongodb.connection.ServerDescription):206 -> a
    5171:5171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> a
    5171:5171:com.mongodb.connection.ServerDescription lookupServerDescription(com.mongodb.connection.ServerDescription):208 -> a
    5734:5734:com.mongodb.connection.TopologyVersion com.mongodb.connection.ServerDescription.getTopologyVersion():734:734 -> a
    5734:5734:com.mongodb.connection.ServerDescription lookupServerDescription(com.mongodb.connection.ServerDescription):217 -> a
    6081:6082:org.bson.BsonDocument com.mongodb.connection.TopologyVersion.asDocument():81:82 -> a
    6081:6082:com.mongodb.connection.ServerDescription lookupServerDescription(com.mongodb.connection.ServerDescription):217 -> a
    6265:6270:com.mongodb.internal.connection.CommandMessage createCommandMessage(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ServerDescription):265:270 -> a
    6265:6270:com.mongodb.connection.ServerDescription lookupServerDescription(com.mongodb.connection.ServerDescription):221 -> a
    7046:7046:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings.builder():46:46 -> a
    7046:7046:com.mongodb.internal.connection.CommandMessage createCommandMessage(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ServerDescription):267 -> a
    7046:7046:com.mongodb.connection.ServerDescription lookupServerDescription(com.mongodb.connection.ServerDescription):221 -> a
    7192:7192:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> a
    7192:7192:com.mongodb.internal.connection.CommandMessage createCommandMessage(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ServerDescription):268 -> a
    7192:7192:com.mongodb.connection.ServerDescription lookupServerDescription(com.mongodb.connection.ServerDescription):221 -> a
    8103:8104:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.maxWireVersion(int):103:104 -> a
    8103:8104:com.mongodb.internal.connection.CommandMessage createCommandMessage(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ServerDescription):268 -> a
    8103:8104:com.mongodb.connection.ServerDescription lookupServerDescription(com.mongodb.connection.ServerDescription):221 -> a
    8171:8171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> a
    8171:8171:com.mongodb.connection.ServerDescription lookupServerDescription(com.mongodb.connection.ServerDescription):235 -> a
    8734:8734:com.mongodb.connection.TopologyVersion com.mongodb.connection.ServerDescription.getTopologyVersion():734:734 -> a
    8734:8734:com.mongodb.connection.ServerDescription lookupServerDescription(com.mongodb.connection.ServerDescription):236 -> a
    9059:9059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> a
    9059:9059:com.mongodb.connection.ServerDescription lookupServerDescription(com.mongodb.connection.ServerDescription):238 -> a
    9171:9171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> a
    9171:9171:com.mongodb.connection.ServerDescription lookupServerDescription(com.mongodb.connection.ServerDescription):241 -> a
    9734:9734:com.mongodb.connection.TopologyVersion com.mongodb.connection.ServerDescription.getTopologyVersion():734:734 -> a
    9734:9734:com.mongodb.connection.ServerDescription lookupServerDescription(com.mongodb.connection.ServerDescription):242 -> a
    260:260:boolean shouldStreamResponses(com.mongodb.connection.ServerDescription) -> b
    10734:10734:com.mongodb.connection.TopologyVersion com.mongodb.connection.ServerDescription.getTopologyVersion():734:734 -> b
    10734:10734:boolean shouldStreamResponses(com.mongodb.connection.ServerDescription):260 -> b
    287:301:void waitForNext() -> a
    304:309:long waitForSignalOrTimeout() -> b
com.mongodb.internal.connection.DescriptionHelper -> com.a.e.g.U:
    91:112:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long) -> a
    1106:1106:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription.builder():106:106 -> a
    1106:1106:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):91 -> a
    1358:1359:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.state(com.mongodb.connection.ServerConnectionState):358:359 -> a
    1358:1359:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):92 -> a
    2220:2221:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.address(com.mongodb.ServerAddress):220:221 -> a
    2220:2221:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):93 -> a
    3056:3056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    3056:3056:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):95 -> a
    3233:3234:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.canonicalAddress(java.lang.String):233:234 -> a
    3233:3234:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):95 -> a
    3291:3292:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.primary(java.lang.String):291:292 -> a
    3291:3292:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):99 -> a
    3302:3303:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.maxDocumentSize(int):302:303 -> a
    3302:3303:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):100 -> a
    3336:3337:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.setName(java.lang.String):336:337 -> a
    3336:3337:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):102 -> a
    3369:3370:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.minWireVersion(int):369:370 -> a
    3369:3370:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):103 -> a
    3380:3381:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.maxWireVersion(int):380:381 -> a
    3380:3381:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):104 -> a
    3391:3392:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.electionId(org.bson.types.ObjectId):391:392 -> a
    3391:3392:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):105 -> a
    3402:3403:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.setVersion(java.lang.Integer):402:403 -> a
    3402:3403:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):106 -> a
    3429:3430:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.lastWriteDate(java.util.Date):429:430 -> a
    3429:3430:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):108 -> a
    3456:3457:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.logicalSessionTimeoutMinutes(java.lang.Integer):456:457 -> a
    3456:3457:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):110 -> a
    4073:4073:boolean org.bson.BsonBoolean.getValue():73:73 -> a
    4073:4073:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):111 -> a
    4469:4470:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.helloOk(boolean):469:470 -> a
    4469:4470:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):111 -> a
    5347:5348:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.ok(boolean):347:348 -> a
    5347:5348:com.mongodb.connection.ServerDescription createServerDescription(com.mongodb.ServerAddress,org.bson.BsonDocument,long):112 -> a
    116:116:int getMinWireVersion(org.bson.BsonDocument) -> e
    6055:6055:int org.bson.BsonInt32.getValue():55:55 -> e
    6055:6055:int getMinWireVersion(org.bson.BsonDocument):116 -> e
    120:120:int getMaxWireVersion(org.bson.BsonDocument) -> a
    7055:7055:int org.bson.BsonInt32.getValue():55:55 -> a
    7055:7055:int getMaxWireVersion(org.bson.BsonDocument):120 -> a
    125:128:java.util.Date getLastWriteDate(org.bson.BsonDocument) -> f
    8053:8053:long org.bson.BsonDateTime.getValue():53:53 -> f
    8053:8053:java.util.Date getLastWriteDate(org.bson.BsonDocument):128 -> f
    133:133:org.bson.types.ObjectId getElectionId(org.bson.BsonDocument) -> g
    8054:8054:org.bson.types.ObjectId org.bson.BsonObjectId.getValue():54:54 -> g
    8054:8054:org.bson.types.ObjectId getElectionId(org.bson.BsonDocument):133 -> g
    138:138:java.lang.Integer getSetVersion(org.bson.BsonDocument) -> h
    143:144:com.mongodb.connection.TopologyVersion getTopologyVersion(org.bson.BsonDocument) -> i
    8258:8258:boolean org.bson.BsonValue.isDocument():258:258 -> i
    8258:8258:com.mongodb.connection.TopologyVersion getTopologyVersion(org.bson.BsonDocument):143 -> i
    158:158:int getMaxBsonObjectSize(org.bson.BsonDocument) -> b
    9055:9055:int org.bson.BsonInt32.getValue():55:55 -> b
    9055:9055:int getMaxBsonObjectSize(org.bson.BsonDocument):158 -> b
    167:168:java.lang.Integer getLogicalSessionTimeoutMinutes(org.bson.BsonDocument) -> j
    173:176:java.lang.String getString(org.bson.BsonDocument,java.lang.String) -> a
    9056:9056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    9056:9056:java.lang.String getString(org.bson.BsonDocument,java.lang.String):174 -> a
    181:188:java.util.Set listToSet(org.bson.BsonArray) -> a
    10056:10056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    10056:10056:java.util.Set listToSet(org.bson.BsonArray):186 -> a
    194:231:com.mongodb.connection.ServerType getServerType(org.bson.BsonDocument) -> c
    10073:10073:boolean org.bson.BsonBoolean.getValue():73:73 -> c
    10073:10073:com.mongodb.connection.ServerType getServerType(org.bson.BsonDocument):200 -> c
    11073:11073:boolean org.bson.BsonBoolean.getValue():73:73 -> c
    11073:11073:com.mongodb.connection.ServerType getServerType(org.bson.BsonDocument):204 -> c
    12073:12073:boolean org.bson.BsonBoolean.getValue():73:73 -> c
    12073:12073:com.mongodb.connection.ServerType getServerType(org.bson.BsonDocument):208 -> c
    13073:13073:boolean org.bson.BsonBoolean.getValue():73:73 -> c
    13073:13073:com.mongodb.connection.ServerType getServerType(org.bson.BsonDocument):212 -> c
    14073:14073:boolean org.bson.BsonBoolean.getValue():73:73 -> c
    14073:14073:com.mongodb.connection.ServerType getServerType(org.bson.BsonDocument):216 -> c
    235:235:boolean isReplicaSetMember(org.bson.BsonDocument) -> k
    15073:15073:boolean org.bson.BsonBoolean.getValue():73:73 -> k
    15073:15073:boolean isReplicaSetMember(org.bson.BsonDocument):235 -> k
    239:243:com.mongodb.TagSet getTagSetFromDocument(org.bson.BsonDocument) -> l
    16056:16056:java.lang.String org.bson.BsonString.getValue():56:56 -> l
    16056:16056:com.mongodb.TagSet getTagSetFromDocument(org.bson.BsonDocument):241 -> l
    247:251:java.util.List getCompressors(org.bson.BsonDocument) -> d
    17056:17056:java.lang.String org.bson.BsonString.getValue():56:56 -> d
    17056:17056:java.util.List getCompressors(org.bson.BsonDocument):249 -> d
    17090:17090:java.lang.String com.mongodb.ServerApi.toString():90:90 -> toString
    17099:17118:boolean com.mongodb.ServerApi.equals(java.lang.Object):99:118 -> equals
    17123:17126:int com.mongodb.ServerApi.hashCode():123:126 -> hashCode
com.mongodb.internal.connection.DnsMultiServerCluster -> com.a.e.g.V:
    com.mongodb.internal.connection.DnsSrvRecordMonitor dnsSrvRecordMonitor -> b
    com.mongodb.MongoException srvResolutionException -> c
    44:87:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.internal.connection.DnsSrvRecordMonitorFactory) -> <init>
    1381:1381:java.lang.String com.mongodb.connection.ClusterSettings.getSrvHost():381:381 -> <init>
    1381:1381:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.internal.connection.DnsSrvRecordMonitorFactory):45 -> <init>
    1412:1412:java.lang.String com.mongodb.connection.ClusterSettings.getSrvServiceName():412:412 -> <init>
    1412:1412:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.internal.connection.DnsSrvRecordMonitorFactory):45 -> <init>
    92:92:com.mongodb.MongoException getSrvResolutionException() -> a
    97:101:void close() -> close
    37:37:com.mongodb.MongoException access$002(com.mongodb.internal.connection.DnsMultiServerCluster,com.mongodb.MongoException) -> a
com.mongodb.internal.connection.DnsMultiServerCluster$1 -> com.a.e.g.V$1:
    boolean initialized -> a
    com.mongodb.internal.connection.DnsMultiServerCluster this$0 -> b
    46:46:void <init>(com.mongodb.internal.connection.DnsMultiServerCluster) -> <init>
    51:58:void initialize(java.util.Collection) -> a
    61:70:java.util.Collection applySrvMaxHosts(java.util.Collection) -> b
    1392:1392:java.lang.Integer com.mongodb.connection.ClusterSettings.getSrvMaxHosts():392:392 -> b
    1392:1392:java.util.Collection applySrvMaxHosts(java.util.Collection):62 -> b
    75:79:void initialize(com.mongodb.MongoException) -> a
    83:83:com.mongodb.connection.ClusterType getClusterType() -> a
    2083:2083:com.mongodb.connection.ClusterType com.mongodb.internal.connection.AbstractMultiServerCluster.getClusterType():83:83 -> a
    2083:2083:com.mongodb.connection.ClusterType getClusterType():83 -> a
com.mongodb.internal.connection.DnsSrvRecordInitializer -> com.a.e.g.W:
    void initialize(java.util.Collection) -> a
    void initialize(com.mongodb.MongoException) -> a
    com.mongodb.connection.ClusterType getClusterType() -> a
com.mongodb.internal.connection.DnsSrvRecordMonitor -> com.a.e.g.X:
    void start() -> a
    void close() -> b
com.mongodb.internal.connection.DnsSrvRecordMonitorFactory -> com.a.e.g.Y:
    com.mongodb.internal.connection.DnsSrvRecordMonitor create(java.lang.String,java.lang.String,com.mongodb.internal.connection.DnsSrvRecordInitializer) -> a
com.mongodb.internal.connection.ElementExtendingBsonWriter -> com.a.e.g.Z:
    org.bson.BsonBinaryWriter writer -> a
    java.util.List extraElements -> b
    36:39:void <init>(org.bson.BsonBinaryWriter,java.util.List) -> <init>
    43:47:void writeEndDocument() -> b
    51:56:void pipe(org.bson.BsonReader) -> a
    30:30:void writeEndArray() -> d
    30:30:void writeStartArray(java.lang.String) -> b
    30:30:void writeStartArray() -> c
    30:30:void writeStartDocument() -> a
    30:30:void writeStartDocument(java.lang.String) -> a
com.mongodb.internal.connection.ExponentiallyWeightedMovingAverage -> com.a.e.g.aa:
    double alpha -> a
    long average -> b
    23:28:void <init>(double) -> <init>
    31:32:void reset() -> a
    35:41:long addSample(long) -> a
    45:45:long getAverage() -> b
com.mongodb.internal.connection.FieldTrackingBsonWriter -> com.a.e.g.ab:
    boolean hasWrittenField -> a
    boolean topLevelDocumentWritten -> b
    42:43:void <init>(org.bson.BsonWriter) -> <init>
    51:55:void writeStartDocument(java.lang.String) -> a
    59:64:void writeStartDocument() -> a
    68:70:void writeStartArray(java.lang.String) -> b
    74:76:void writeStartArray() -> c
    86:88:void writeBinaryData(org.bson.BsonBinary) -> a
    92:94:void writeBoolean(java.lang.String,boolean) -> a
    98:100:void writeBoolean(boolean) -> a
    110:112:void writeDateTime(long) -> a
    122:124:void writeDBPointer(org.bson.BsonDbPointer) -> a
    134:136:void writeDouble(double) -> a
    140:142:void writeInt32(java.lang.String,int) -> a
    146:148:void writeInt32(int) -> a
    158:160:void writeInt64(long) -> b
    164:166:void writeDecimal128(org.bson.types.Decimal128) -> a
    182:184:void writeJavaScript(java.lang.String) -> c
    194:196:void writeJavaScriptWithScope(java.lang.String) -> d
    206:208:void writeMaxKey() -> e
    218:220:void writeMinKey() -> f
    230:232:void writeNull() -> g
    236:238:void writeObjectId(java.lang.String,org.bson.types.ObjectId) -> a
    242:244:void writeObjectId(org.bson.types.ObjectId) -> a
    254:256:void writeRegularExpression(org.bson.BsonRegularExpression) -> a
    260:262:void writeString(java.lang.String,java.lang.String) -> a
    266:268:void writeString(java.lang.String) -> f
    278:280:void writeSymbol(java.lang.String) -> g
    290:292:void writeTimestamp(org.bson.BsonTimestamp) -> a
    302:304:void writeUndefined() -> h
    310:312:void pipe(org.bson.BsonReader) -> a
com.mongodb.internal.connection.GSSAPIAuthenticator -> com.a.e.g.ac:
    java.lang.Boolean CANONICALIZE_HOST_NAME_DEFAULT_VALUE -> a
    57:62:void <init>(com.mongodb.internal.connection.MongoCredentialWithCache,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    1442:1442:com.mongodb.AuthenticationMechanism com.mongodb.MongoCredential.getAuthenticationMechanism():442:442 -> <init>
    1442:1442:void <init>(com.mongodb.internal.connection.MongoCredentialWithCache,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):59 -> <init>
    66:66:java.lang.String getMechanismName() -> e
    71:93:javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress) -> a
    1452:1452:java.lang.String com.mongodb.MongoCredential.getUserName():452:452 -> a
    1452:1452:javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress):77 -> a
    2098:2101:org.ietf.jgss.GSSCredential getGSSCredential(java.lang.String):98:101 -> a
    2098:2101:javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress):77 -> a
    3074:3074:java.lang.String com.mongodb.AuthenticationMechanism.getMechanismName():74:74 -> a
    3074:3074:javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress):80 -> a
    3452:3452:java.lang.String com.mongodb.MongoCredential.getUserName():452:452 -> a
    3452:3452:javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress):80 -> a
    4105:4107:java.lang.String getHostName(com.mongodb.ServerAddress):105:107 -> a
    4105:4107:javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress):82 -> a
    4175:4175:java.lang.String com.mongodb.ServerAddress.getHost():175:175 -> a
    4175:4175:java.lang.String getHostName(com.mongodb.ServerAddress):106 -> a
    4175:4175:javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress):82 -> a
    5175:5175:java.lang.String com.mongodb.ServerAddress.getHost():175:175 -> a
    5175:5175:java.lang.String getHostName(com.mongodb.ServerAddress):107 -> a
    5175:5175:javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress):82 -> a
    112:112:com.mongodb.SubjectProvider getDefaultSubjectProvider() -> f
    53:53:void <clinit>() -> <clinit>
com.mongodb.internal.connection.IdHoldingBsonWriter -> com.a.e.g.ad:
    com.mongodb.internal.connection.LevelCountingBsonWriter idBsonBinaryWriter -> b
    org.bson.io.BasicOutputBuffer outputBuffer -> c
    java.lang.String currentFieldName -> d
    org.bson.BsonValue id -> a
    boolean idFieldIsAnArray -> e
    61:65:void <init>(org.bson.BsonWriter) -> <init>
    69:75:void writeStartDocument(java.lang.String) -> a
    1416:1417:void setCurrentFieldName(java.lang.String):416:417 -> a
    1416:1417:void writeStartDocument(java.lang.String):69 -> a
    79:83:void writeStartDocument() -> a
    87:106:void writeEndDocument() -> b
    2414:2414:boolean org.bson.BsonValue.isJavaScriptWithScope():414:414 -> b
    2414:2414:void writeEndDocument():93 -> b
    3057:3057:java.lang.String org.bson.BsonJavaScriptWithScope.getCode():57:57 -> b
    3057:3057:void writeEndDocument():94 -> b
    3447:3447:byte[] getBytes():447:447 -> b
    3447:3447:void writeEndDocument():94 -> b
    4061:4061:byte[] org.bson.io.BasicOutputBuffer.getInternalBuffer():61:61 -> b
    4061:4061:byte[] getBytes():447 -> b
    4061:4061:void writeEndDocument():94 -> b
    4447:4447:byte[] getBytes():447:447 -> b
    4447:4447:void writeEndDocument():96 -> b
    5061:5061:byte[] org.bson.io.BasicOutputBuffer.getInternalBuffer():61:61 -> b
    5061:5061:byte[] getBytes():447 -> b
    5061:5061:void writeEndDocument():96 -> b
    6054:6054:org.bson.types.ObjectId org.bson.BsonObjectId.getValue():54:54 -> b
    6054:6054:void writeEndDocument():103 -> b
    110:119:void writeStartArray() -> c
    123:131:void writeStartArray(java.lang.String) -> b
    6416:6417:void setCurrentFieldName(java.lang.String):416:417 -> b
    6416:6417:void writeStartArray(java.lang.String):123 -> b
    135:143:void writeEndArray() -> d
    6447:6447:byte[] getBytes():447:447 -> d
    6447:6447:void writeEndArray():139 -> d
    7061:7061:byte[] org.bson.io.BasicOutputBuffer.getInternalBuffer():61:61 -> d
    7061:7061:byte[] getBytes():447 -> d
    7061:7061:void writeEndArray():139 -> d
    154:156:void writeBinaryData(org.bson.BsonBinary) -> a
    160:163:void writeBoolean(java.lang.String,boolean) -> a
    7416:7417:void setCurrentFieldName(java.lang.String):416:417 -> a
    7416:7417:void writeBoolean(java.lang.String,boolean):160 -> a
    167:169:void writeBoolean(boolean) -> a
    180:182:void writeDateTime(long) -> a
    193:195:void writeDBPointer(org.bson.BsonDbPointer) -> a
    206:208:void writeDouble(double) -> a
    212:215:void writeInt32(java.lang.String,int) -> a
    8416:8417:void setCurrentFieldName(java.lang.String):416:417 -> a
    8416:8417:void writeInt32(java.lang.String,int):212 -> a
    219:221:void writeInt32(int) -> a
    232:234:void writeInt64(long) -> b
    245:247:void writeDecimal128(org.bson.types.Decimal128) -> a
    258:260:void writeJavaScript(java.lang.String) -> c
    271:273:void writeJavaScriptWithScope(java.lang.String) -> d
    284:286:void writeMaxKey() -> e
    297:299:void writeMinKey() -> f
    303:308:void writeName(java.lang.String) -> e
    9416:9417:void setCurrentFieldName(java.lang.String):416:417 -> e
    9416:9417:void writeName(java.lang.String):303 -> e
    319:321:void writeNull() -> g
    325:328:void writeObjectId(java.lang.String,org.bson.types.ObjectId) -> a
    10416:10417:void setCurrentFieldName(java.lang.String):416:417 -> a
    10416:10417:void writeObjectId(java.lang.String,org.bson.types.ObjectId):325 -> a
    332:334:void writeObjectId(org.bson.types.ObjectId) -> a
    345:347:void writeRegularExpression(org.bson.BsonRegularExpression) -> a
    351:354:void writeString(java.lang.String,java.lang.String) -> a
    11416:11417:void setCurrentFieldName(java.lang.String):416:417 -> a
    11416:11417:void writeString(java.lang.String,java.lang.String):351 -> a
    358:360:void writeString(java.lang.String) -> f
    371:373:void writeSymbol(java.lang.String) -> g
    384:386:void writeTimestamp(org.bson.BsonTimestamp) -> a
    397:399:void writeUndefined() -> h
    403:404:void pipe(org.bson.BsonReader) -> a
    420:421:boolean isWritingId() -> j
    425:432:void addBsonValue(java.util.function.Supplier,java.lang.Runnable) -> a
    435:435:int getIdBsonWriterCurrentLevel() -> k
    439:443:com.mongodb.internal.connection.LevelCountingBsonWriter getIdBsonWriter() -> l
    384:384:void lambda$writeTimestamp$62(org.bson.BsonTimestamp) -> b
    384:384:org.bson.BsonValue lambda$writeTimestamp$61(org.bson.BsonTimestamp) -> c
    371:371:void lambda$writeSymbol$58(java.lang.String) -> h
    371:371:org.bson.BsonValue lambda$writeSymbol$57(java.lang.String) -> i
    358:358:void lambda$writeString$54(java.lang.String) -> j
    358:358:org.bson.BsonValue lambda$writeString$53(java.lang.String) -> k
    352:352:void lambda$writeString$52(java.lang.String,java.lang.String) -> b
    352:352:org.bson.BsonValue lambda$writeString$51(java.lang.String) -> l
    345:345:void lambda$writeRegularExpression$50(org.bson.BsonRegularExpression) -> b
    345:345:org.bson.BsonValue lambda$writeRegularExpression$49(org.bson.BsonRegularExpression) -> c
    332:332:void lambda$writeObjectId$46(org.bson.types.ObjectId) -> b
    332:332:org.bson.BsonValue lambda$writeObjectId$45(org.bson.types.ObjectId) -> c
    326:326:void lambda$writeObjectId$44(java.lang.String,org.bson.types.ObjectId) -> b
    326:326:org.bson.BsonValue lambda$writeObjectId$43(org.bson.types.ObjectId) -> d
    271:271:void lambda$writeJavaScriptWithScope$39(java.lang.String) -> m
    271:271:org.bson.BsonValue lambda$writeJavaScriptWithScope$38(java.lang.String) -> n
    258:258:void lambda$writeJavaScript$35(java.lang.String) -> o
    258:258:org.bson.BsonValue lambda$writeJavaScript$34(java.lang.String) -> p
    245:245:void lambda$writeDecimal128$31(org.bson.types.Decimal128) -> b
    245:245:org.bson.BsonValue lambda$writeDecimal128$30(org.bson.types.Decimal128) -> c
    232:232:void lambda$writeInt64$27(long) -> c
    232:232:org.bson.BsonValue lambda$writeInt64$26(long) -> d
    219:219:void lambda$writeInt32$23(int) -> b
    219:219:org.bson.BsonValue lambda$writeInt32$22(int) -> c
    213:213:void lambda$writeInt32$21(java.lang.String,int) -> b
    213:213:org.bson.BsonValue lambda$writeInt32$20(int) -> d
    206:206:void lambda$writeDouble$19(double) -> b
    206:206:org.bson.BsonValue lambda$writeDouble$18(double) -> c
    193:193:void lambda$writeDBPointer$15(org.bson.BsonDbPointer) -> b
    193:193:org.bson.BsonValue lambda$writeDBPointer$14(org.bson.BsonDbPointer) -> c
    180:180:void lambda$writeDateTime$11(long) -> e
    180:180:org.bson.BsonValue lambda$writeDateTime$10(long) -> f
    167:167:void lambda$writeBoolean$7(boolean) -> b
    167:167:org.bson.BsonValue lambda$writeBoolean$6(boolean) -> c
    161:161:void lambda$writeBoolean$5(java.lang.String,boolean) -> b
    161:161:org.bson.BsonValue lambda$writeBoolean$4(boolean) -> d
    154:154:void lambda$writeBinaryData$3(org.bson.BsonBinary) -> b
    154:154:org.bson.BsonValue lambda$writeBinaryData$2(org.bson.BsonBinary) -> c
com.mongodb.internal.connection.IdHoldingBsonWriter$1 -> com.a.e.g.ad$1:
    441:441:void <init>(com.mongodb.internal.connection.IdHoldingBsonWriter,org.bson.BsonWriter) -> <init>
com.mongodb.internal.connection.IndexMap -> com.a.e.g.ae:
    33:33:void <init>() -> <init>
    com.mongodb.internal.connection.IndexMap add(int,int) -> a
    int map(int) -> a
com.mongodb.internal.connection.IndexMap$HashBased -> com.a.e.g.ae$a:
    java.util.Map indexMap -> a
    73:79:void <init>(int,int) -> <init>
    83:84:com.mongodb.internal.connection.IndexMap add(int,int) -> a
    89:93:int map(int) -> a
com.mongodb.internal.connection.IndexMap$RangeBased -> com.a.e.g.ae$b:
    int startIndex -> a
    int count -> b
    101:102:void <init>() -> <init>
    113:123:com.mongodb.internal.connection.IndexMap add(int,int) -> a
    129:134:int map(int) -> a
com.mongodb.internal.connection.InternalConnection -> com.a.e.g.af:
    com.mongodb.connection.ConnectionDescription getDescription() -> j
    com.mongodb.connection.ServerDescription getInitialServerDescription() -> k
    void open() -> b
    void close() -> c
    boolean opened() -> f
    boolean isClosed() -> g
    int getGeneration() -> a
    java.lang.Object sendAndReceive(com.mongodb.internal.connection.CommandMessage,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.RequestContext) -> a
    void send(com.mongodb.internal.connection.CommandMessage,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext) -> a
    java.lang.Object receive(org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext) -> a
    105:105:boolean supportsAdditionalTimeout() -> h
    109:109:java.lang.Object receive(org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,int) -> a
    boolean hasMoreToCome() -> i
    158:158:void markAsPinned(com.mongodb.internal.connection.Connection$PinningMode) -> a
com.mongodb.internal.connection.InternalConnectionFactory -> com.a.e.g.ag:
    25:25:com.mongodb.internal.connection.InternalConnection create(com.mongodb.connection.ServerId) -> a
    com.mongodb.internal.connection.InternalConnection create(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionGenerationSupplier) -> a
com.mongodb.internal.connection.InternalConnectionFactory$1 -> com.a.e.g.ag$1:
    25:25:void <init>(com.mongodb.internal.connection.InternalConnectionFactory) -> <init>
    28:28:int getGeneration() -> a
    33:33:int getGeneration(org.bson.types.ObjectId) -> a
com.mongodb.internal.connection.InternalConnectionInitializationDescription -> com.a.e.g.ah:
    com.mongodb.connection.ConnectionDescription connectionDescription -> a
    com.mongodb.connection.ServerDescription serverDescription -> b
    30:33:void <init>(com.mongodb.connection.ConnectionDescription,com.mongodb.connection.ServerDescription) -> <init>
com.mongodb.internal.connection.InternalConnectionInitializer -> com.a.e.g.ai:
    com.mongodb.internal.connection.InternalConnectionInitializationDescription startHandshake(com.mongodb.internal.connection.InternalConnection) -> a
    com.mongodb.internal.connection.InternalConnectionInitializationDescription finishHandshake(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription) -> a
com.mongodb.internal.connection.InternalConnectionPoolSettings -> com.a.e.g.aj:
    boolean prestartAsyncWorkManager -> a
    30:32:void <init>(com.mongodb.internal.connection.InternalConnectionPoolSettings$Builder) -> <init>
    1075:1075:boolean com.mongodb.internal.connection.InternalConnectionPoolSettings$Builder.access$000(com.mongodb.internal.connection.InternalConnectionPoolSettings$Builder):75:75 -> <init>
    1075:1075:void <init>(com.mongodb.internal.connection.InternalConnectionPoolSettings$Builder):31 -> <init>
    52:59:boolean equals(java.lang.Object) -> equals
    64:64:int hashCode() -> hashCode
    69:69:java.lang.String toString() -> toString
    27:27:void <init>(com.mongodb.internal.connection.InternalConnectionPoolSettings$Builder,byte) -> <init>
com.mongodb.internal.connection.InternalConnectionPoolSettings$Builder -> com.a.e.g.aj$a:
    boolean prestartAsyncWorkManager -> a
    76:79:void <init>() -> <init>
    75:75:void <init>(byte) -> <init>
com.mongodb.internal.connection.InternalStreamConnection -> com.a.e.g.ak:
    java.util.Set SECURITY_SENSITIVE_COMMANDS -> a
    java.util.Set SECURITY_SENSITIVE_HELLO_COMMANDS -> b
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> c
    com.mongodb.connection.ClusterConnectionMode clusterConnectionMode -> d
    boolean isMonitoringConnection -> e
    com.mongodb.connection.ServerId serverId -> f
    com.mongodb.internal.connection.ConnectionGenerationSupplier connectionGenerationSupplier -> g
    com.mongodb.connection.StreamFactory streamFactory -> h
    com.mongodb.internal.connection.InternalConnectionInitializer connectionInitializer -> i
    com.mongodb.connection.ConnectionDescription description -> j
    com.mongodb.connection.ServerDescription initialServerDescription -> k
    net.kyori.adventure.sound.Sound$Type stream$709cfbc1 -> l
    java.util.concurrent.atomic.AtomicBoolean isClosed -> m
    java.util.concurrent.atomic.AtomicBoolean opened -> n
    java.util.List compressorList -> o
    com.mongodb.LoggerSettings loggerSettings -> p
    com.mongodb.RequestContext commandListener$6eedcc38 -> q
    com.mongodb.internal.connection.Compressor sendCompressor -> r
    java.util.Map compressorMap -> s
    boolean hasMoreToCome -> t
    int responseTo -> u
    int generation -> v
    com.mongodb.internal.logging.StructuredLogger COMMAND_PROTOCOL_LOGGER -> w
    126:182:void <init>(com.mongodb.connection.ClusterConnectionMode,boolean,com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionGenerationSupplier,com.mongodb.connection.StreamFactory,java.util.List,com.mongodb.LoggerSettings,com.mongodb.RequestContext,com.mongodb.internal.connection.InternalConnectionInitializer) -> <init>
    1106:1106:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription.builder():106:106 -> <init>
    1106:1106:void <init>(com.mongodb.connection.ClusterConnectionMode,boolean,com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionGenerationSupplier,com.mongodb.connection.StreamFactory,java.util.List,com.mongodb.LoggerSettings,com.mongodb.RequestContext,com.mongodb.internal.connection.InternalConnectionInitializer):174 -> <init>
    2059:2059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> <init>
    2059:2059:void <init>(com.mongodb.connection.ClusterConnectionMode,boolean,com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionGenerationSupplier,com.mongodb.connection.StreamFactory,java.util.List,com.mongodb.LoggerSettings,com.mongodb.RequestContext,com.mongodb.internal.connection.InternalConnectionInitializer):175 -> <init>
    2220:2221:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.address(com.mongodb.ServerAddress):220:221 -> <init>
    2220:2221:void <init>(com.mongodb.connection.ClusterConnectionMode,boolean,com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionGenerationSupplier,com.mongodb.connection.StreamFactory,java.util.List,com.mongodb.LoggerSettings,com.mongodb.RequestContext,com.mongodb.internal.connection.InternalConnectionInitializer):175 -> <init>
    2358:2359:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.state(com.mongodb.connection.ServerConnectionState):358:359 -> <init>
    2358:2359:void <init>(com.mongodb.connection.ClusterConnectionMode,boolean,com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionGenerationSupplier,com.mongodb.connection.StreamFactory,java.util.List,com.mongodb.LoggerSettings,com.mongodb.RequestContext,com.mongodb.internal.connection.InternalConnectionInitializer):177 -> <init>
    186:186:com.mongodb.connection.ConnectionDescription getDescription() -> j
    191:191:com.mongodb.connection.ServerDescription getInitialServerDescription() -> k
    196:196:int getGeneration() -> a
    201:219:void open() -> b
    3059:3059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> b
    3059:3059:void open():202 -> b
    3266:3272:void initAfterHandshakeStart(com.mongodb.internal.connection.InternalConnectionInitializationDescription):266:272 -> b
    3266:3272:void open():207 -> b
    4036:4036:com.mongodb.connection.ConnectionDescription com.mongodb.internal.connection.InternalConnectionInitializationDescription.getConnectionDescription():36:36 -> b
    4036:4036:void initAfterHandshakeStart(com.mongodb.internal.connection.InternalConnectionInitializationDescription):266 -> b
    4036:4036:void open():207 -> b
    4040:4040:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.InternalConnectionInitializationDescription.getServerDescription():40:40 -> b
    4040:4040:void initAfterHandshakeStart(com.mongodb.internal.connection.InternalConnectionInitializationDescription):267 -> b
    4040:4040:void open():207 -> b
    4182:4182:org.bson.types.ObjectId com.mongodb.connection.ConnectionDescription.getServiceId():182:182 -> b
    4182:4182:void initAfterHandshakeStart(com.mongodb.internal.connection.InternalConnectionInitializationDescription):270 -> b
    4182:4182:void open():207 -> b
    4275:4282:void initAfterHandshakeFinish(com.mongodb.internal.connection.InternalConnectionInitializationDescription):275:282 -> b
    4275:4282:void open():210 -> b
    5036:5036:com.mongodb.connection.ConnectionDescription com.mongodb.internal.connection.InternalConnectionInitializationDescription.getConnectionDescription():36:36 -> b
    5036:5036:void initAfterHandshakeFinish(com.mongodb.internal.connection.InternalConnectionInitializationDescription):275 -> b
    5036:5036:void open():210 -> b
    5040:5040:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.InternalConnectionInitializationDescription.getServerDescription():40:40 -> b
    5040:5040:void initAfterHandshakeFinish(com.mongodb.internal.connection.InternalConnectionInitializationDescription):276 -> b
    5040:5040:void open():210 -> b
    5296:5308:com.mongodb.internal.connection.Compressor findSendCompressor(com.mongodb.connection.ConnectionDescription):296:308 -> b
    5296:5308:void initAfterHandshakeFinish(com.mongodb.internal.connection.InternalConnectionInitializationDescription):278 -> b
    5296:5308:void open():210 -> b
    6237:6237:java.util.List com.mongodb.connection.ConnectionDescription.getCompressors():237:237 -> b
    6237:6237:com.mongodb.internal.connection.Compressor findSendCompressor(com.mongodb.connection.ConnectionDescription):296 -> b
    6237:6237:void initAfterHandshakeFinish(com.mongodb.internal.connection.InternalConnectionInitializationDescription):278 -> b
    6237:6237:void open():210 -> b
    7237:7237:java.util.List com.mongodb.connection.ConnectionDescription.getCompressors():237:237 -> b
    7237:7237:com.mongodb.internal.connection.Compressor findSendCompressor(com.mongodb.connection.ConnectionDescription):300 -> b
    7237:7237:void initAfterHandshakeFinish(com.mongodb.internal.connection.InternalConnectionInitializationDescription):278 -> b
    7237:7237:void open():210 -> b
    7683:7683:com.mongodb.connection.ConnectionId getId():683:683 -> b
    7683:7683:void initAfterHandshakeFinish(com.mongodb.internal.connection.InternalConnectionInitializationDescription):280 -> b
    7683:7683:void open():210 -> b
    8171:8171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> b
    8171:8171:com.mongodb.connection.ConnectionId getId():683 -> b
    8171:8171:void initAfterHandshakeFinish(com.mongodb.internal.connection.InternalConnectionInitializationDescription):280 -> b
    8171:8171:void open():210 -> b
    9059:9059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> b
    9059:9059:void initAfterHandshakeFinish(com.mongodb.internal.connection.InternalConnectionInitializationDescription):280 -> b
    9059:9059:void open():210 -> b
    285:291:java.util.Map createCompressorMap(java.util.List) -> a
    9312:9319:com.mongodb.internal.connection.Compressor createCompressor$fe45198(com.mongodb.internal.capi.MongoCryptHelper):312:319 -> a
    9312:9319:java.util.Map createCompressorMap(java.util.List):288 -> a
    326:334:void close() -> c
    9683:9683:com.mongodb.connection.ConnectionId getId():683:683 -> c
    9683:9683:void close():328 -> c
    10171:10171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> c
    10171:10171:com.mongodb.connection.ConnectionId getId():683 -> c
    10171:10171:void close():328 -> c
    338:338:boolean opened() -> f
    343:343:boolean isClosed() -> g
    352:368:java.lang.Object sendAndReceive(com.mongodb.internal.connection.CommandMessage,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.RequestContext) -> a
    10861:10865:com.mongodb.internal.connection.CommandEventSender createCommandEventSender(com.mongodb.internal.connection.CommandMessage,com.mongodb.internal.connection.ByteBufferBsonOutput,com.mongodb.RequestContext):861:865 -> a
    10861:10865:java.lang.Object sendAndReceive(com.mongodb.internal.connection.CommandMessage,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.RequestContext):354 -> a
    11338:11338:boolean opened():338:338 -> a
    11338:11338:com.mongodb.internal.connection.CommandEventSender createCommandEventSender(com.mongodb.internal.connection.CommandMessage,com.mongodb.internal.connection.ByteBufferBsonOutput,com.mongodb.RequestContext):861 -> a
    11338:11338:java.lang.Object sendAndReceive(com.mongodb.internal.connection.CommandMessage,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.RequestContext):354 -> a
    11870:11870:com.mongodb.connection.ClusterId getClusterId():870:870 -> a
    11870:11870:com.mongodb.internal.connection.CommandEventSender createCommandEventSender(com.mongodb.internal.connection.CommandMessage,com.mongodb.internal.connection.ByteBufferBsonOutput,com.mongodb.RequestContext):861 -> a
    11870:11870:java.lang.Object sendAndReceive(com.mongodb.internal.connection.CommandMessage,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.RequestContext):354 -> a
    12171:12171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> a
    12171:12171:com.mongodb.connection.ClusterId getClusterId():870 -> a
    12171:12171:com.mongodb.internal.connection.CommandEventSender createCommandEventSender(com.mongodb.internal.connection.CommandMessage,com.mongodb.internal.connection.ByteBufferBsonOutput,com.mongodb.RequestContext):861 -> a
    12171:12171:java.lang.Object sendAndReceive(com.mongodb.internal.connection.CommandMessage,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.RequestContext):354 -> a
    13097:13097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> a
    13097:13097:com.mongodb.connection.ClusterId getClusterId():870 -> a
    13097:13097:com.mongodb.internal.connection.CommandEventSender createCommandEventSender(com.mongodb.internal.connection.CommandMessage,com.mongodb.internal.connection.ByteBufferBsonOutput,com.mongodb.RequestContext):861 -> a
    13097:13097:java.lang.Object sendAndReceive(com.mongodb.internal.connection.CommandMessage,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.RequestContext):354 -> a
    14051:14051:com.mongodb.connection.ClusterId com.mongodb.connection.ServerId.getClusterId():51:51 -> a
    14051:14051:com.mongodb.connection.ClusterId getClusterId():870 -> a
    14051:14051:com.mongodb.internal.connection.CommandEventSender createCommandEventSender(com.mongodb.internal.connection.CommandMessage,com.mongodb.internal.connection.ByteBufferBsonOutput,com.mongodb.RequestContext):861 -> a
    14051:14051:java.lang.Object sendAndReceive(com.mongodb.internal.connection.CommandMessage,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.RequestContext):354 -> a
    374:381:void send(com.mongodb.internal.connection.CommandMessage,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext) -> a
    385:386:java.lang.Object receive(org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext) -> a
    391:391:boolean supportsAdditionalTimeout() -> h
    396:397:java.lang.Object receive(org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,int) -> a
    402:402:boolean hasMoreToCome() -> i
    408:434:void sendCommandMessage(com.mongodb.internal.connection.CommandMessage,com.mongodb.internal.connection.ByteBufferBsonOutput,com.mongodb.internal.session.SessionContext) -> a
    439:463:java.lang.Object receiveCommandMessageResponse(org.bson.codecs.Decoder,com.mongodb.internal.connection.CommandEventSender,com.mongodb.internal.session.SessionContext,int) -> a
    14691:14700:void updateSessionContext(com.mongodb.internal.session.SessionContext,com.mongodb.internal.connection.ResponseBuffers):691:700 -> a
    14691:14700:java.lang.Object receiveCommandMessageResponse(org.bson.codecs.Decoder,com.mongodb.internal.connection.CommandEventSender,com.mongodb.internal.session.SessionContext,int):441 -> a
    15560:15565:java.lang.Object getCommandResult(org.bson.codecs.Decoder,com.mongodb.internal.connection.ResponseBuffers,int):560:565 -> a
    15560:15565:java.lang.Object receiveCommandMessageResponse(org.bson.codecs.Decoder,com.mongodb.internal.connection.CommandEventSender,com.mongodb.internal.session.SessionContext,int):450 -> a
    16082:16082:java.util.List com.mongodb.internal.connection.ReplyMessage.getDocuments():82:82 -> a
    16082:16082:java.lang.Object getCommandResult(org.bson.codecs.Decoder,com.mongodb.internal.connection.ResponseBuffers,int):560 -> a
    16082:16082:java.lang.Object receiveCommandMessageResponse(org.bson.codecs.Decoder,com.mongodb.internal.connection.CommandEventSender,com.mongodb.internal.session.SessionContext,int):450 -> a
    17046:17046:com.mongodb.internal.connection.ReplyHeader com.mongodb.internal.connection.ResponseBuffers.getReplyHeader():46:46 -> a
    17046:17046:java.lang.Object receiveCommandMessageResponse(org.bson.codecs.Decoder,com.mongodb.internal.connection.CommandEventSender,com.mongodb.internal.session.SessionContext,int):451 -> a
    17198:17198:boolean com.mongodb.internal.connection.ReplyHeader.hasMoreToCome():198:198 -> a
    17198:17198:java.lang.Object receiveCommandMessageResponse(org.bson.codecs.Decoder,com.mongodb.internal.connection.CommandEventSender,com.mongodb.internal.session.SessionContext,int):451 -> a
    18046:18046:com.mongodb.internal.connection.ReplyHeader com.mongodb.internal.connection.ResponseBuffers.getReplyHeader():46:46 -> a
    18046:18046:java.lang.Object receiveCommandMessageResponse(org.bson.codecs.Decoder,com.mongodb.internal.connection.CommandEventSender,com.mongodb.internal.session.SessionContext,int):453 -> a
    18114:18114:int com.mongodb.internal.connection.ReplyHeader.getRequestId():114:114 -> a
    18114:18114:java.lang.Object receiveCommandMessageResponse(org.bson.codecs.Decoder,com.mongodb.internal.connection.CommandEventSender,com.mongodb.internal.session.SessionContext,int):453 -> a
    509:512:void releaseAllBuffers(java.util.List) -> b
    570:582:void sendMessage$22875ea3(java.util.List) -> c
    18343:18343:boolean isClosed():343:343 -> c
    18343:18343:void sendMessage$22875ea3(java.util.List):572 -> c
    18687:18687:com.mongodb.ServerAddress getServerAddress():687:687 -> c
    18687:18687:void sendMessage$22875ea3(java.util.List):573 -> c
    596:599:com.mongodb.internal.connection.ResponseBuffers receiveMessageWithAdditionalTimeout(int) -> b
    18715:18730:com.mongodb.MongoException translateReadException(java.lang.Throwable):715:730 -> b
    18715:18730:com.mongodb.internal.connection.ResponseBuffers receiveMessageWithAdditionalTimeout(int):599 -> b
    19687:19687:com.mongodb.ServerAddress getServerAddress():687:687 -> b
    19687:19687:com.mongodb.MongoException translateReadException(java.lang.Throwable):718 -> b
    19687:19687:com.mongodb.internal.connection.ResponseBuffers receiveMessageWithAdditionalTimeout(int):599 -> b
    20687:20687:com.mongodb.ServerAddress getServerAddress():687:687 -> b
    20687:20687:com.mongodb.MongoException translateReadException(java.lang.Throwable):724 -> b
    20687:20687:com.mongodb.internal.connection.ResponseBuffers receiveMessageWithAdditionalTimeout(int):599 -> b
    703:710:com.mongodb.MongoException translateWriteException(java.lang.Throwable) -> a
    21687:21687:com.mongodb.ServerAddress getServerAddress():687:687 -> a
    21687:21687:com.mongodb.MongoException translateWriteException(java.lang.Throwable):706 -> a
    735:765:com.mongodb.internal.connection.ResponseBuffers receiveResponseBuffers(int) -> c
    22228:22228:int com.mongodb.connection.ConnectionDescription.getMaxMessageSize():228:228 -> c
    22228:22228:com.mongodb.internal.connection.ResponseBuffers receiveResponseBuffers(int):738 -> c
    23052:23052:int com.mongodb.internal.connection.MessageHeader.getMessageLength():52:52 -> c
    23052:23052:com.mongodb.internal.connection.ResponseBuffers receiveResponseBuffers(int):743 -> c
    23080:23080:int com.mongodb.internal.connection.MessageHeader.getOpCode():80:80 -> c
    23080:23080:com.mongodb.internal.connection.ResponseBuffers receiveResponseBuffers(int):746 -> c
    24037:24037:int com.mongodb.internal.connection.OpCode.getValue():37:37 -> c
    24037:24037:com.mongodb.internal.connection.ResponseBuffers receiveResponseBuffers(int):746 -> c
    24769:24773:com.mongodb.internal.connection.Compressor getCompressor(com.mongodb.internal.connection.CompressedHeader):769:773 -> c
    24769:24773:com.mongodb.internal.connection.ResponseBuffers receiveResponseBuffers(int):749 -> c
    25082:25082:byte com.mongodb.internal.connection.CompressedHeader.getCompressorId():82:82 -> c
    25082:25082:com.mongodb.internal.connection.Compressor getCompressor(com.mongodb.internal.connection.CompressedHeader):769 -> c
    25082:25082:com.mongodb.internal.connection.ResponseBuffers receiveResponseBuffers(int):749 -> c
    26082:26082:byte com.mongodb.internal.connection.CompressedHeader.getCompressorId():82:82 -> c
    26082:26082:com.mongodb.internal.connection.Compressor getCompressor(com.mongodb.internal.connection.CompressedHeader):771 -> c
    26082:26082:com.mongodb.internal.connection.ResponseBuffers receiveResponseBuffers(int):749 -> c
    27074:27074:int com.mongodb.internal.connection.CompressedHeader.getUncompressedSize():74:74 -> c
    27074:27074:com.mongodb.internal.connection.ResponseBuffers receiveResponseBuffers(int):751 -> c
    778:779:org.bson.ByteBuf getBuffer(int) -> a
    97:857:void <clinit>() -> <clinit>
com.mongodb.internal.connection.InternalStreamConnectionFactory -> com.a.e.g.al:
    com.mongodb.connection.ClusterConnectionMode clusterConnectionMode -> a
    boolean isMonitoringConnection -> b
    com.mongodb.connection.StreamFactory streamFactory -> c
    org.bson.BsonDocument clientMetadataDocument -> d
    java.util.List compressorList -> e
    com.mongodb.LoggerSettings loggerSettings -> f
    com.mongodb.RequestContext commandListener$6eedcc38 -> g
    com.mongodb.internal.connection.DescriptionHelper serverApi$10f7fbbb -> h
    com.mongodb.internal.connection.MongoCredentialWithCache credential -> i
    54:56:void <init>(com.mongodb.connection.ClusterConnectionMode,com.mongodb.connection.StreamFactory,com.mongodb.internal.connection.MongoCredentialWithCache,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.LoggerSettings,com.mongodb.RequestContext,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    63:73:void <init>(com.mongodb.connection.ClusterConnectionMode,boolean,com.mongodb.connection.StreamFactory,com.mongodb.internal.connection.MongoCredentialWithCache,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.LoggerSettings,com.mongodb.RequestContext,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    77:78:com.mongodb.internal.connection.InternalConnection create(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionGenerationSupplier) -> a
    1085:1102:com.mongodb.internal.connection.Authenticator createAuthenticator(com.mongodb.internal.connection.MongoCredentialWithCache):85:102 -> a
    1085:1102:com.mongodb.internal.connection.InternalConnection create(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionGenerationSupplier):77 -> a
    2050:2050:com.mongodb.AuthenticationMechanism com.mongodb.internal.connection.MongoCredentialWithCache.getAuthenticationMechanism():50:50 -> a
    2050:2050:com.mongodb.internal.connection.Authenticator createAuthenticator(com.mongodb.internal.connection.MongoCredentialWithCache):85 -> a
    2050:2050:com.mongodb.internal.connection.InternalConnection create(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionGenerationSupplier):77 -> a
    2442:2442:com.mongodb.AuthenticationMechanism com.mongodb.MongoCredential.getAuthenticationMechanism():442:442 -> a
    2442:2442:com.mongodb.AuthenticationMechanism com.mongodb.internal.connection.MongoCredentialWithCache.getAuthenticationMechanism():50 -> a
    2442:2442:com.mongodb.internal.connection.Authenticator createAuthenticator(com.mongodb.internal.connection.MongoCredentialWithCache):85 -> a
    2442:2442:com.mongodb.internal.connection.InternalConnection create(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionGenerationSupplier):77 -> a
    3050:3050:com.mongodb.AuthenticationMechanism com.mongodb.internal.connection.MongoCredentialWithCache.getAuthenticationMechanism():50:50 -> a
    3050:3050:com.mongodb.internal.connection.Authenticator createAuthenticator(com.mongodb.internal.connection.MongoCredentialWithCache):89 -> a
    3050:3050:com.mongodb.internal.connection.InternalConnection create(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionGenerationSupplier):77 -> a
    3442:3442:com.mongodb.AuthenticationMechanism com.mongodb.MongoCredential.getAuthenticationMechanism():442:442 -> a
    3442:3442:com.mongodb.AuthenticationMechanism com.mongodb.internal.connection.MongoCredentialWithCache.getAuthenticationMechanism():50 -> a
    3442:3442:com.mongodb.internal.connection.Authenticator createAuthenticator(com.mongodb.internal.connection.MongoCredentialWithCache):89 -> a
    3442:3442:com.mongodb.internal.connection.InternalConnection create(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionGenerationSupplier):77 -> a
    4050:4050:com.mongodb.AuthenticationMechanism com.mongodb.internal.connection.MongoCredentialWithCache.getAuthenticationMechanism():50:50 -> a
    4050:4050:com.mongodb.internal.connection.Authenticator createAuthenticator(com.mongodb.internal.connection.MongoCredentialWithCache):102 -> a
    4050:4050:com.mongodb.internal.connection.InternalConnection create(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionGenerationSupplier):77 -> a
    4442:4442:com.mongodb.AuthenticationMechanism com.mongodb.MongoCredential.getAuthenticationMechanism():442:442 -> a
    4442:4442:com.mongodb.AuthenticationMechanism com.mongodb.internal.connection.MongoCredentialWithCache.getAuthenticationMechanism():50 -> a
    4442:4442:com.mongodb.internal.connection.Authenticator createAuthenticator(com.mongodb.internal.connection.MongoCredentialWithCache):102 -> a
    4442:4442:com.mongodb.internal.connection.InternalConnection create(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionGenerationSupplier):77 -> a
com.mongodb.internal.connection.InternalStreamConnectionFactory$1 -> com.a.e.g.al$1:
    int[] $SwitchMap$com$mongodb$AuthenticationMechanism -> a
    89:89:void <clinit>() -> <clinit>
com.mongodb.internal.connection.InternalStreamConnectionInitializer -> com.a.e.g.am:
    com.mongodb.connection.ClusterConnectionMode clusterConnectionMode -> a
    com.mongodb.internal.connection.Authenticator authenticator -> b
    org.bson.BsonDocument clientMetadataDocument -> c
    java.util.List requestedCompressors -> d
    boolean checkSaslSupportedMechs -> e
    com.mongodb.internal.connection.DescriptionHelper serverApi$10f7fbbb -> f
    64:71:void <init>(com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.Authenticator,org.bson.BsonDocument,java.util.List,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    75:77:com.mongodb.internal.connection.InternalConnectionInitializationDescription startHandshake(com.mongodb.internal.connection.InternalConnection) -> a
    82:86:com.mongodb.internal.connection.InternalConnectionInitializationDescription finishHandshake(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription) -> a
    1036:1036:com.mongodb.connection.ConnectionDescription com.mongodb.internal.connection.InternalConnectionInitializationDescription.getConnectionDescription():36:36 -> a
    1036:1036:com.mongodb.internal.connection.InternalConnectionInitializationDescription finishHandshake(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):85 -> a
    1204:1207:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription):204:207 -> a
    1204:1207:com.mongodb.internal.connection.InternalConnectionInitializationDescription finishHandshake(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):85 -> a
    2201:2201:com.mongodb.connection.ServerType com.mongodb.connection.ConnectionDescription.getServerType():201:201 -> a
    2201:2201:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription):204 -> a
    2201:2201:com.mongodb.internal.connection.InternalConnectionInitializationDescription finishHandshake(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):85 -> a
    3193:3197:com.mongodb.internal.connection.InternalConnectionInitializationDescription completeConnectionDescriptionInitialization(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):193:197 -> a
    3193:3197:com.mongodb.internal.connection.InternalConnectionInitializationDescription finishHandshake(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):86 -> a
    4036:4036:com.mongodb.connection.ConnectionDescription com.mongodb.internal.connection.InternalConnectionInitializationDescription.getConnectionDescription():36:36 -> a
    4036:4036:com.mongodb.internal.connection.InternalConnectionInitializationDescription completeConnectionDescriptionInitialization(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):193 -> a
    4036:4036:com.mongodb.internal.connection.InternalConnectionInitializationDescription finishHandshake(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):86 -> a
    4171:4171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> a
    4171:4171:com.mongodb.internal.connection.InternalConnectionInitializationDescription completeConnectionDescriptionInitialization(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):193 -> a
    4171:4171:com.mongodb.internal.connection.InternalConnectionInitializationDescription finishHandshake(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):86 -> a
    5116:5116:java.lang.Integer com.mongodb.connection.ConnectionId.getServerValue():116:116 -> a
    5116:5116:com.mongodb.internal.connection.InternalConnectionInitializationDescription completeConnectionDescriptionInitialization(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):193 -> a
    5116:5116:com.mongodb.internal.connection.InternalConnectionInitializationDescription finishHandshake(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):86 -> a
    5241:5251:com.mongodb.internal.connection.InternalConnectionInitializationDescription applyGetLastErrorResult(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnectionInitializationDescription):241:251 -> a
    5241:5251:com.mongodb.internal.connection.InternalConnectionInitializationDescription completeConnectionDescriptionInitialization(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):197 -> a
    5241:5251:com.mongodb.internal.connection.InternalConnectionInitializationDescription finishHandshake(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):86 -> a
    6036:6036:com.mongodb.connection.ConnectionDescription com.mongodb.internal.connection.InternalConnectionInitializationDescription.getConnectionDescription():36:36 -> a
    6036:6036:com.mongodb.internal.connection.InternalConnectionInitializationDescription applyGetLastErrorResult(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnectionInitializationDescription):241 -> a
    6036:6036:com.mongodb.internal.connection.InternalConnectionInitializationDescription completeConnectionDescriptionInitialization(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):197 -> a
    6036:6036:com.mongodb.internal.connection.InternalConnectionInitializationDescription finishHandshake(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):86 -> a
    6171:6171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> a
    6171:6171:com.mongodb.internal.connection.InternalConnectionInitializationDescription applyGetLastErrorResult(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnectionInitializationDescription):245 -> a
    6171:6171:com.mongodb.internal.connection.InternalConnectionInitializationDescription completeConnectionDescriptionInitialization(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):197 -> a
    6171:6171:com.mongodb.internal.connection.InternalConnectionInitializationDescription finishHandshake(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):86 -> a
    7171:7171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> a
    7171:7171:com.mongodb.internal.connection.InternalConnectionInitializationDescription applyGetLastErrorResult(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnectionInitializationDescription):248 -> a
    7171:7171:com.mongodb.internal.connection.InternalConnectionInitializationDescription completeConnectionDescriptionInitialization(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):197 -> a
    7171:7171:com.mongodb.internal.connection.InternalConnectionInitializationDescription finishHandshake(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):86 -> a
    8044:8044:com.mongodb.internal.connection.InternalConnectionInitializationDescription com.mongodb.internal.connection.InternalConnectionInitializationDescription.withConnectionDescription(com.mongodb.connection.ConnectionDescription):44:44 -> a
    8044:8044:com.mongodb.internal.connection.InternalConnectionInitializationDescription applyGetLastErrorResult(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnectionInitializationDescription):251 -> a
    8044:8044:com.mongodb.internal.connection.InternalConnectionInitializationDescription completeConnectionDescriptionInitialization(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):197 -> a
    8044:8044:com.mongodb.internal.connection.InternalConnectionInitializationDescription finishHandshake(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.InternalConnectionInitializationDescription):86 -> a
    125:134:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection) -> b
    8159:8186:org.bson.BsonDocument createHelloCommand(com.mongodb.internal.connection.Authenticator,com.mongodb.internal.connection.InternalConnection):159:186 -> b
    8159:8186:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):125 -> b
    8255:8255:java.lang.String getHandshakeCommandName():255:255 -> b
    8255:8255:org.bson.BsonDocument createHelloCommand(com.mongodb.internal.connection.Authenticator,com.mongodb.internal.connection.InternalConnection):159 -> b
    8255:8255:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):125 -> b
    8461:8461:java.lang.String com.mongodb.MongoCredential.getSource():461:461 -> b
    8461:8461:org.bson.BsonDocument createHelloCommand(com.mongodb.internal.connection.Authenticator,com.mongodb.internal.connection.InternalConnection):177 -> b
    8461:8461:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):125 -> b
    9452:9452:java.lang.String com.mongodb.MongoCredential.getUserName():452:452 -> b
    9452:9452:org.bson.BsonDocument createHelloCommand(com.mongodb.internal.connection.Authenticator,com.mongodb.internal.connection.InternalConnection):177 -> b
    9452:9452:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):125 -> b
    10138:10142:com.mongodb.MongoException mapHelloException(com.mongodb.MongoException):138:142 -> b
    10138:10142:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):131 -> b
    10145:10145:int com.mongodb.MongoException.getCode():145:145 -> b
    10145:10145:com.mongodb.MongoException mapHelloException(com.mongodb.MongoException):138 -> b
    10145:10145:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):131 -> b
    10210:10214:void setSpeculativeAuthenticateResponse(org.bson.BsonDocument):210:214 -> b
    10210:10214:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):133 -> b
    11149:11155:com.mongodb.internal.connection.InternalConnectionInitializationDescription createInitializationDescription(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,long):149:155 -> b
    11149:11155:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):134 -> b
    11171:11171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> b
    11171:11171:com.mongodb.internal.connection.InternalConnectionInitializationDescription createInitializationDescription(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,long):149 -> b
    11171:11171:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):134 -> b
    12068:12086:com.mongodb.connection.ConnectionDescription com.mongodb.internal.connection.DescriptionHelper.createConnectionDescription(com.mongodb.connection.ClusterConnectionMode,com.mongodb.connection.ConnectionId,org.bson.BsonDocument):68:86 -> b
    12068:12086:com.mongodb.internal.connection.InternalConnectionInitializationDescription createInitializationDescription(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,long):150 -> b
    12068:12086:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):134 -> b
    12162:12162:int com.mongodb.internal.connection.DescriptionHelper.getMaxWriteBatchSize(org.bson.BsonDocument):162:162 -> b
    12162:12162:com.mongodb.connection.ConnectionDescription com.mongodb.internal.connection.DescriptionHelper.createConnectionDescription(com.mongodb.connection.ClusterConnectionMode,com.mongodb.connection.ConnectionId,org.bson.BsonDocument):69 -> b
    12162:12162:com.mongodb.internal.connection.InternalConnectionInitializationDescription createInitializationDescription(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,long):150 -> b
    12162:12162:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):134 -> b
    13055:13055:int org.bson.BsonInt32.getValue():55:55 -> b
    13055:13055:int com.mongodb.internal.connection.DescriptionHelper.getMaxWriteBatchSize(org.bson.BsonDocument):162 -> b
    13055:13055:com.mongodb.connection.ConnectionDescription com.mongodb.internal.connection.DescriptionHelper.createConnectionDescription(com.mongodb.connection.ClusterConnectionMode,com.mongodb.connection.ConnectionId,org.bson.BsonDocument):69 -> b
    13055:13055:com.mongodb.internal.connection.InternalConnectionInitializationDescription createInitializationDescription(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,long):150 -> b
    13055:13055:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):134 -> b
    13154:13154:int com.mongodb.internal.connection.DescriptionHelper.getMaxMessageSizeBytes(org.bson.BsonDocument):154:154 -> b
    13154:13154:com.mongodb.connection.ConnectionDescription com.mongodb.internal.connection.DescriptionHelper.createConnectionDescription(com.mongodb.connection.ClusterConnectionMode,com.mongodb.connection.ConnectionId,org.bson.BsonDocument):70 -> b
    13154:13154:com.mongodb.internal.connection.InternalConnectionInitializationDescription createInitializationDescription(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,long):150 -> b
    13154:13154:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):134 -> b
    14055:14055:int org.bson.BsonInt32.getValue():55:55 -> b
    14055:14055:int com.mongodb.internal.connection.DescriptionHelper.getMaxMessageSizeBytes(org.bson.BsonDocument):154 -> b
    14055:14055:com.mongodb.connection.ConnectionDescription com.mongodb.internal.connection.DescriptionHelper.createConnectionDescription(com.mongodb.connection.ClusterConnectionMode,com.mongodb.connection.ConnectionId,org.bson.BsonDocument):70 -> b
    14055:14055:com.mongodb.internal.connection.InternalConnectionInitializationDescription createInitializationDescription(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,long):150 -> b
    14055:14055:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):134 -> b
    14171:14171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> b
    14171:14171:com.mongodb.connection.ConnectionDescription com.mongodb.internal.connection.DescriptionHelper.createConnectionDescription(com.mongodb.connection.ClusterConnectionMode,com.mongodb.connection.ConnectionId,org.bson.BsonDocument):74 -> b
    14171:14171:com.mongodb.internal.connection.InternalConnectionInitializationDescription createInitializationDescription(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,long):150 -> b
    14171:14171:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):134 -> b
    15149:15150:org.bson.types.ObjectId com.mongodb.internal.connection.DescriptionHelper.getServiceId(org.bson.BsonDocument):149:150 -> b
    15149:15150:com.mongodb.connection.ConnectionDescription com.mongodb.internal.connection.DescriptionHelper.createConnectionDescription(com.mongodb.connection.ClusterConnectionMode,com.mongodb.connection.ConnectionId,org.bson.BsonDocument):78 -> b
    15149:15150:com.mongodb.internal.connection.InternalConnectionInitializationDescription createInitializationDescription(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,long):150 -> b
    15149:15150:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):134 -> b
    15342:15342:boolean org.bson.BsonValue.isObjectId():342:342 -> b
    15342:15342:org.bson.types.ObjectId com.mongodb.internal.connection.DescriptionHelper.getServiceId(org.bson.BsonDocument):149 -> b
    15342:15342:com.mongodb.connection.ConnectionDescription com.mongodb.internal.connection.DescriptionHelper.createConnectionDescription(com.mongodb.connection.ClusterConnectionMode,com.mongodb.connection.ConnectionId,org.bson.BsonDocument):78 -> b
    15342:15342:com.mongodb.internal.connection.InternalConnectionInitializationDescription createInitializationDescription(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,long):150 -> b
    15342:15342:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):134 -> b
    16054:16054:org.bson.types.ObjectId org.bson.BsonObjectId.getValue():54:54 -> b
    16054:16054:org.bson.types.ObjectId com.mongodb.internal.connection.DescriptionHelper.getServiceId(org.bson.BsonDocument):150 -> b
    16054:16054:com.mongodb.connection.ConnectionDescription com.mongodb.internal.connection.DescriptionHelper.createConnectionDescription(com.mongodb.connection.ClusterConnectionMode,com.mongodb.connection.ConnectionId,org.bson.BsonDocument):78 -> b
    16054:16054:com.mongodb.internal.connection.InternalConnectionInitializationDescription createInitializationDescription(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,long):150 -> b
    16054:16054:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):134 -> b
    16151:16152:com.mongodb.connection.ConnectionDescription com.mongodb.connection.ConnectionDescription.withServiceId(org.bson.types.ObjectId):151:152 -> b
    16151:16152:com.mongodb.connection.ConnectionDescription com.mongodb.internal.connection.DescriptionHelper.createConnectionDescription(com.mongodb.connection.ClusterConnectionMode,com.mongodb.connection.ConnectionId,org.bson.BsonDocument):80 -> b
    16151:16152:com.mongodb.internal.connection.InternalConnectionInitializationDescription createInitializationDescription(org.bson.BsonDocument,com.mongodb.internal.connection.InternalConnection,long):150 -> b
    16151:16152:com.mongodb.internal.connection.InternalConnectionInitializationDescription initializeConnectionDescription(com.mongodb.internal.connection.InternalConnection):134 -> b
com.mongodb.internal.connection.LevelCountingBsonWriter -> com.a.e.g.an:
    int level -> a
    23:27:void <init>(org.bson.BsonWriter) -> <init>
    30:30:int getCurrentLevel() -> i
    35:37:void writeStartDocument(java.lang.String) -> a
    41:43:void writeStartDocument() -> a
    47:49:void writeEndDocument() -> b
    53:55:void writeStartArray() -> c
    59:61:void writeStartArray(java.lang.String) -> b
    65:67:void writeEndArray() -> d
com.mongodb.internal.connection.LoadBalancedCluster -> com.a.e.g.ao:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> b
    com.mongodb.connection.ClusterId clusterId -> c
    com.mongodb.connection.ClusterSettings settings -> d
    com.mongodb.internal.connection.ClusterClock clusterClock -> e
    com.mongodb.event.ClusterListener clusterListener -> f
    com.mongodb.connection.ClusterDescription description -> g
    com.mongodb.internal.connection.ClusterableServer server -> h
    java.util.concurrent.atomic.AtomicBoolean closed -> a
    com.mongodb.internal.connection.DnsSrvRecordMonitor dnsSrvRecordMonitor -> i
    com.mongodb.MongoException srvResolutionException -> j
    boolean srvRecordResolvedToMultipleHosts -> k
    boolean initializationCompleted -> l
    java.util.List waitQueue -> m
    java.util.concurrent.locks.Lock lock -> n
    java.util.concurrent.locks.Condition condition -> o
    73:146:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.internal.connection.DnsSrvRecordMonitorFactory) -> <init>
    1430:1430:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterSettings.getMode():430:430 -> <init>
    1430:1430:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.internal.connection.DnsSrvRecordMonitorFactory):90 -> <init>
    1577:1583:java.lang.String com.mongodb.connection.ClusterSettings.getShortDescription():577:583 -> <init>
    1577:1583:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.internal.connection.DnsSrvRecordMonitorFactory):91 -> <init>
    2430:2430:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterSettings.getMode():430:430 -> <init>
    2430:2430:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.internal.connection.DnsSrvRecordMonitorFactory):96 -> <init>
    3381:3381:java.lang.String com.mongodb.connection.ClusterSettings.getSrvHost():381:381 -> <init>
    3381:3381:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.internal.connection.DnsSrvRecordMonitorFactory):99 -> <init>
    3421:3421:java.util.List com.mongodb.connection.ClusterSettings.getHosts():421:421 -> <init>
    3421:3421:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.internal.connection.DnsSrvRecordMonitorFactory):101 -> <init>
    4381:4381:java.lang.String com.mongodb.connection.ClusterSettings.getSrvHost():381:381 -> <init>
    4381:4381:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.internal.connection.DnsSrvRecordMonitorFactory):105 -> <init>
    4412:4412:java.lang.String com.mongodb.connection.ClusterSettings.getSrvServiceName():412:412 -> <init>
    4412:4412:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.internal.connection.DnsSrvRecordMonitorFactory):105 -> <init>
    149:167:void init(com.mongodb.connection.ClusterId,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.ServerAddress) -> a
    4430:4430:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterSettings.getMode():430:430 -> a
    4430:4430:void init(com.mongodb.connection.ClusterId,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.ServerAddress):151 -> a
    5106:5106:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription.builder():106:106 -> a
    5106:5106:void init(com.mongodb.connection.ClusterId,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.ServerAddress):152 -> a
    5421:5421:java.util.List com.mongodb.connection.ClusterSettings.getHosts():421:421 -> a
    5421:5421:void init(com.mongodb.connection.ClusterId,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.ServerAddress):152 -> a
    6220:6221:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.address(com.mongodb.ServerAddress):220:221 -> a
    6220:6221:void init(com.mongodb.connection.ClusterId,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.ServerAddress):152 -> a
    6358:6359:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.state(com.mongodb.connection.ServerConnectionState):358:359 -> a
    6358:6359:void init(com.mongodb.connection.ClusterId,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.ServerAddress):152 -> a
    7106:7106:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription.builder():106:106 -> a
    7106:7106:void init(com.mongodb.connection.ClusterId,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.ServerAddress):157 -> a
    7347:7348:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.ok(boolean):347:348 -> a
    7347:7348:void init(com.mongodb.connection.ClusterId,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.ServerAddress):158 -> a
    7358:7359:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.state(com.mongodb.connection.ServerConnectionState):358:359 -> a
    7358:7359:void init(com.mongodb.connection.ClusterId,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.ServerAddress):159 -> a
    8220:8221:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.address(com.mongodb.ServerAddress):220:221 -> a
    8220:8221:void init(com.mongodb.connection.ClusterId,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.ServerAddress):161 -> a
    171:172:com.mongodb.connection.ClusterSettings getSettings() -> f
    8284:8284:boolean isClosed():284:284 -> f
    8284:8284:com.mongodb.connection.ClusterSettings getSettings():171 -> f
    177:179:com.mongodb.connection.ClusterDescription getDescription() -> h
    9284:9284:boolean isClosed():284:284 -> h
    9284:9284:com.mongodb.connection.ClusterDescription getDescription():177 -> h
    184:184:com.mongodb.connection.ClusterId getClusterId() -> g
    189:191:com.mongodb.internal.connection.ClusterableServer getServer(com.mongodb.ServerAddress) -> a
    10284:10284:boolean isClosed():284:284 -> a
    10284:10284:com.mongodb.internal.connection.ClusterableServer getServer(com.mongodb.ServerAddress):189 -> a
    196:197:com.mongodb.connection.ClusterDescription getCurrentDescription() -> c
    11284:11284:boolean isClosed():284:284 -> c
    11284:11284:com.mongodb.connection.ClusterDescription getCurrentDescription():196 -> c
    202:203:com.mongodb.internal.connection.ClusterClock getClock() -> i
    12284:12284:boolean isClosed():284:284 -> i
    12284:12284:com.mongodb.internal.connection.ClusterClock getClock():202 -> i
    208:213:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector) -> a
    13284:13284:boolean isClosed():284:284 -> a
    13284:13284:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):208 -> a
    14231:14231:java.util.List com.mongodb.connection.ClusterDescription.getServerDescriptions():231:231 -> a
    14231:14231:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector):213 -> a
    218:239:void waitForSrv() -> b
    14284:14284:boolean isClosed():284:284 -> b
    14284:14284:void waitForSrv():225 -> b
    14381:14381:java.lang.String com.mongodb.connection.ClusterSettings.getSrvHost():381:381 -> b
    14381:14381:void waitForSrv():235 -> b
    257:257:com.mongodb.MongoClientException createShutdownException() -> d
    262:280:void close() -> close
    289:290:void withLock(java.lang.Runnable) -> a
    294:295:void onChange(com.mongodb.event.ServerDescriptionChangedEvent) -> a
    307:307:com.mongodb.MongoClientException createResolvedToMultipleHostsException() -> e
    312:319:com.mongodb.MongoTimeoutException createTimeoutException() -> j
    15381:15381:java.lang.String com.mongodb.connection.ClusterSettings.getSrvHost():381:381 -> j
    15381:15381:com.mongodb.MongoTimeoutException createTimeoutException():315 -> j
    16381:16381:java.lang.String com.mongodb.connection.ClusterSettings.getSrvHost():381:381 -> j
    16381:16381:com.mongodb.MongoTimeoutException createTimeoutException():319 -> j
    324:327:long getMaxWaitTimeNanos() -> k
    68:68:com.mongodb.RequestContext access$000$6d15dddc() -> a
    68:68:java.util.concurrent.locks.Lock access$100(com.mongodb.internal.connection.LoadBalancedCluster) -> a
    68:68:com.mongodb.MongoException access$202(com.mongodb.internal.connection.LoadBalancedCluster,com.mongodb.MongoException) -> a
    68:68:boolean access$302(com.mongodb.internal.connection.LoadBalancedCluster,boolean) -> a
    68:68:void access$400(com.mongodb.internal.connection.LoadBalancedCluster,com.mongodb.connection.ClusterId,com.mongodb.internal.connection.ClusterableServerFactory,com.mongodb.ServerAddress) -> a
    68:68:boolean access$502(com.mongodb.internal.connection.LoadBalancedCluster,boolean) -> b
    68:68:java.util.List access$600(com.mongodb.internal.connection.LoadBalancedCluster) -> b
    68:68:java.util.List access$602(com.mongodb.internal.connection.LoadBalancedCluster,java.util.List) -> a
    68:68:java.util.concurrent.locks.Condition access$700(com.mongodb.internal.connection.LoadBalancedCluster) -> c
    68:68:boolean access$500(com.mongodb.internal.connection.LoadBalancedCluster) -> d
    68:68:void access$800(com.mongodb.internal.connection.LoadBalancedCluster,com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest) -> a
    17298:17304:void handleServerSelectionRequest(com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest):298:304 -> a
    17298:17304:void access$800(com.mongodb.internal.connection.LoadBalancedCluster,com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest):68 -> a
    17434:17438:void com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest.onError(java.lang.Throwable):434:438 -> a
    17434:17438:void handleServerSelectionRequest(com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest):300 -> a
    17434:17438:void access$800(com.mongodb.internal.connection.LoadBalancedCluster,com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest):68 -> a
    18068:18068:com.mongodb.RequestContext access$000$6d15dddc():68:68 -> a
    18068:18068:void com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest.onError(java.lang.Throwable):436 -> a
    18068:18068:void handleServerSelectionRequest(com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest):300 -> a
    18068:18068:void access$800(com.mongodb.internal.connection.LoadBalancedCluster,com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest):68 -> a
    18231:18231:java.util.List com.mongodb.connection.ClusterDescription.getServerDescriptions():231:231 -> a
    18231:18231:void handleServerSelectionRequest(com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest):302 -> a
    18231:18231:void access$800(com.mongodb.internal.connection.LoadBalancedCluster,com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest):68 -> a
    18426:18430:void com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest.onSuccess(com.mongodb.internal.connection.ServerTuple):426:430 -> a
    18426:18430:void handleServerSelectionRequest(com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest):302 -> a
    18426:18430:void access$800(com.mongodb.internal.connection.LoadBalancedCluster,com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest):68 -> a
    19068:19068:com.mongodb.RequestContext access$000$6d15dddc():68:68 -> a
    19068:19068:void com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest.onSuccess(com.mongodb.internal.connection.ServerTuple):428 -> a
    19068:19068:void handleServerSelectionRequest(com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest):302 -> a
    19068:19068:void access$800(com.mongodb.internal.connection.LoadBalancedCluster,com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest):68 -> a
    69:69:void <clinit>() -> <clinit>
com.mongodb.internal.connection.LoadBalancedCluster$1 -> com.a.e.g.ao$1:
    com.mongodb.connection.ClusterId val$clusterId -> a
    com.mongodb.internal.connection.ClusterableServerFactory val$serverFactory -> b
    com.mongodb.internal.connection.LoadBalancedCluster this$0 -> c
    106:106:void <init>(com.mongodb.internal.connection.LoadBalancedCluster,com.mongodb.connection.ClusterId,com.mongodb.internal.connection.ClusterableServerFactory) -> <init>
    110:132:void initialize(java.util.Collection) -> a
    1284:1284:boolean com.mongodb.internal.connection.LoadBalancedCluster.isClosed():284:284 -> a
    1284:1284:void initialize(java.util.Collection):115 -> a
    136:137:void initialize(com.mongodb.MongoException) -> a
    141:141:com.mongodb.connection.ClusterType getClusterType() -> a
    131:131:void lambda$initialize$0(com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest) -> a
com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest -> com.a.e.g.ao$a:
    1109:1109:java.lang.String com.mongodb.client.model.TimeSeriesOptions.toString():109:109 -> toString
com.mongodb.internal.connection.LoadBalancedClusterableServerFactory -> com.a.e.g.ap:
    com.mongodb.connection.ServerSettings serverSettings -> a
    com.mongodb.connection.ConnectionPoolSettings connectionPoolSettings -> b
    com.mongodb.internal.connection.InternalConnectionPoolSettings internalConnectionPoolSettings -> c
    com.mongodb.connection.StreamFactory streamFactory -> d
    com.mongodb.internal.connection.MongoCredentialWithCache credential -> e
    com.mongodb.LoggerSettings loggerSettings -> f
    com.mongodb.RequestContext commandListener$6eedcc38 -> g
    java.lang.String applicationName -> h
    com.mongodb.MongoDriverInformation mongoDriverInformation -> i
    java.util.List compressorList -> j
    com.mongodb.internal.connection.DescriptionHelper serverApi$10f7fbbb -> k
    63:75:void <init>(com.mongodb.connection.ServerSettings,com.mongodb.connection.ConnectionPoolSettings,com.mongodb.internal.connection.InternalConnectionPoolSettings,com.mongodb.connection.StreamFactory,com.mongodb.MongoCredential,com.mongodb.LoggerSettings,com.mongodb.RequestContext,java.lang.String,com.mongodb.MongoDriverInformation,java.util.List,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    79:86:com.mongodb.internal.connection.ClusterableServer create(com.mongodb.internal.connection.Cluster,com.mongodb.ServerAddress) -> a
    91:91:com.mongodb.connection.ServerSettings getSettings() -> a
com.mongodb.internal.connection.LoadBalancedServer -> com.a.e.g.aq:
    java.util.concurrent.atomic.AtomicBoolean closed -> b
    com.mongodb.connection.ServerId serverId -> c
    com.mongodb.internal.connection.ConnectionPool connectionPool -> d
    com.mongodb.internal.connection.ConnectionFactory connectionFactory -> e
    com.mongodb.event.ClusterListener serverListener$24d157b8 -> f
    com.mongodb.internal.connection.ClusterClock clusterClock -> g
    56:80:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionPool,com.mongodb.internal.connection.ConnectionFactory,com.mongodb.event.ClusterListener,com.mongodb.internal.connection.ClusterClock) -> <init>
    1106:1106:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription.builder():106:106 -> <init>
    1106:1106:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionPool,com.mongodb.internal.connection.ConnectionFactory,com.mongodb.event.ClusterListener,com.mongodb.internal.connection.ClusterClock):73 -> <init>
    1347:1348:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.ok(boolean):347:348 -> <init>
    1347:1348:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionPool,com.mongodb.internal.connection.ConnectionFactory,com.mongodb.event.ClusterListener,com.mongodb.internal.connection.ClusterClock):74 -> <init>
    1358:1359:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.state(com.mongodb.connection.ServerConnectionState):358:359 -> <init>
    1358:1359:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionPool,com.mongodb.internal.connection.ConnectionFactory,com.mongodb.event.ClusterListener,com.mongodb.internal.connection.ClusterClock):75 -> <init>
    2059:2059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> <init>
    2059:2059:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionPool,com.mongodb.internal.connection.ConnectionFactory,com.mongodb.event.ClusterListener,com.mongodb.internal.connection.ClusterClock):77 -> <init>
    2220:2221:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.address(com.mongodb.ServerAddress):220:221 -> <init>
    2220:2221:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionPool,com.mongodb.internal.connection.ConnectionFactory,com.mongodb.event.ClusterListener,com.mongodb.internal.connection.ClusterClock):77 -> <init>
    3106:3106:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription.builder():106:106 -> <init>
    3106:3106:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionPool,com.mongodb.internal.connection.ConnectionFactory,com.mongodb.event.ClusterListener,com.mongodb.internal.connection.ClusterClock):79 -> <init>
    4059:4059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> <init>
    4059:4059:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionPool,com.mongodb.internal.connection.ConnectionFactory,com.mongodb.event.ClusterListener,com.mongodb.internal.connection.ClusterClock):79 -> <init>
    4220:4221:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.address(com.mongodb.ServerAddress):220:221 -> <init>
    4220:4221:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionPool,com.mongodb.internal.connection.ConnectionFactory,com.mongodb.event.ClusterListener,com.mongodb.internal.connection.ClusterClock):79 -> <init>
    4358:4359:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.state(com.mongodb.connection.ServerConnectionState):358:359 -> <init>
    4358:4359:void <init>(com.mongodb.connection.ServerId,com.mongodb.internal.connection.ConnectionPool,com.mongodb.internal.connection.ConnectionFactory,com.mongodb.event.ClusterListener,com.mongodb.internal.connection.ClusterClock):79 -> <init>
    85:85:void resetToConnecting() -> a
    90:90:void invalidate() -> b
    111:115:void close() -> c
    125:125:void connect() -> d
    129:130:com.mongodb.internal.connection.Connection getConnection() -> e
    5119:5119:boolean isClosed():119:119 -> e
    5119:5119:com.mongodb.internal.connection.Connection getConnection():129 -> e
    149:149:int operationCount() -> f
    54:54:com.mongodb.internal.connection.ClusterClock access$100(com.mongodb.internal.connection.LoadBalancedServer) -> a
    54:54:void access$300(com.mongodb.internal.connection.LoadBalancedServer,java.lang.Throwable,org.bson.types.ObjectId,int) -> a
    6094:6107:void invalidate(java.lang.Throwable,org.bson.types.ObjectId,int):94:107 -> a
    6094:6107:void access$300(com.mongodb.internal.connection.LoadBalancedServer,java.lang.Throwable,org.bson.types.ObjectId,int):54 -> a
    6119:6119:boolean isClosed():119:119 -> a
    6119:6119:void invalidate(java.lang.Throwable,org.bson.types.ObjectId,int):94 -> a
    6119:6119:void access$300(com.mongodb.internal.connection.LoadBalancedServer,java.lang.Throwable,org.bson.types.ObjectId,int):54 -> a
    7062:7062:int com.mongodb.MongoCommandException.getErrorCode():62:62 -> a
    7062:7062:void invalidate(java.lang.Throwable,org.bson.types.ObjectId,int):100 -> a
    7062:7062:void access$300(com.mongodb.internal.connection.LoadBalancedServer,java.lang.Throwable,org.bson.types.ObjectId,int):54 -> a
    7145:7145:int com.mongodb.MongoException.getCode():145:145 -> a
    7145:7145:int com.mongodb.MongoCommandException.getErrorCode():62 -> a
    7145:7145:void invalidate(java.lang.Throwable,org.bson.types.ObjectId,int):100 -> a
    7145:7145:void access$300(com.mongodb.internal.connection.LoadBalancedServer,java.lang.Throwable,org.bson.types.ObjectId,int):54 -> a
    55:55:void <clinit>() -> <clinit>
com.mongodb.internal.connection.LoadBalancedServer$LoadBalancedServerProtocolExecutor -> com.a.e.g.aq$a:
    com.mongodb.internal.connection.LoadBalancedServer this$0 -> a
    157:157:void <init>(com.mongodb.internal.connection.LoadBalancedServer) -> <init>
    162:168:java.lang.Object execute(com.mongodb.internal.connection.CommandProtocol,com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.session.SessionContext) -> a
    1041:1041:java.lang.Object com.mongodb.internal.connection.MongoWriteConcernWithResponseException.getResponse():41:41 -> a
    1041:1041:java.lang.Object execute(com.mongodb.internal.connection.CommandProtocol,com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.session.SessionContext):165 -> a
    1193:1197:void handleExecutionException(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.session.SessionContext,java.lang.Throwable):193:197 -> a
    1193:1197:java.lang.Object execute(com.mongodb.internal.connection.CommandProtocol,com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.session.SessionContext):167 -> a
    2182:2182:org.bson.types.ObjectId com.mongodb.connection.ConnectionDescription.getServiceId():182:182 -> a
    2182:2182:void handleExecutionException(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.session.SessionContext,java.lang.Throwable):193 -> a
    2182:2182:java.lang.Object execute(com.mongodb.internal.connection.CommandProtocol,com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.session.SessionContext):167 -> a
    157:157:void <init>(com.mongodb.internal.connection.LoadBalancedServer,byte) -> <init>
com.mongodb.internal.connection.LoggingCommandEventSender -> com.a.e.g.ar:
    com.mongodb.connection.ConnectionDescription description -> a
    com.mongodb.RequestContext commandListener$6eedcc38 -> b
    com.mongodb.RequestContext requestContext -> c
    com.mongodb.internal.logging.StructuredLogger logger -> d
    com.mongodb.LoggerSettings loggerSettings -> e
    long startTimeNanos -> f
    com.mongodb.internal.connection.CommandMessage message -> g
    java.lang.String commandName -> h
    org.bson.BsonDocument commandDocument -> i
    boolean redactionRequired -> j
    67:79:void <init>(java.util.Set,java.util.Set,com.mongodb.connection.ConnectionDescription,com.mongodb.RequestContext,com.mongodb.RequestContext,com.mongodb.internal.connection.CommandMessage,com.mongodb.internal.connection.ByteBufferBsonOutput,com.mongodb.internal.logging.StructuredLogger,com.mongodb.LoggerSettings) -> <init>
    83:107:void sendStartedEvent() -> a
    1142:1142:com.mongodb.MongoNamespace com.mongodb.internal.connection.CommandMessage.getNamespace():142:142 -> a
    1142:1142:void sendStartedEvent():87 -> a
    2125:2125:java.lang.String com.mongodb.MongoNamespace.getDatabaseName():125:125 -> a
    2125:2125:void sendStartedEvent():87 -> a
    2142:2142:com.mongodb.MongoNamespace com.mongodb.internal.connection.CommandMessage.getNamespace():142:142 -> a
    2142:2142:void sendStartedEvent():101 -> a
    3125:3125:java.lang.String com.mongodb.MongoNamespace.getDatabaseName():125:125 -> a
    3125:3125:void sendStartedEvent():101 -> a
    112:136:void sendFailedEvent(java.lang.Throwable) -> a
    140:141:void sendSucceededEvent(com.mongodb.internal.connection.ResponseBuffers) -> a
    145:146:void sendSucceededEventForOneWayCommand() -> b
    149:173:void sendSucceededEvent(org.bson.BsonDocument) -> a
    176:176:boolean loggingRequired() -> c
    181:181:com.mongodb.connection.ClusterId getClusterId() -> d
    3171:3171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> d
    3171:3171:com.mongodb.connection.ClusterId getClusterId():181 -> d
    4097:4097:com.mongodb.connection.ServerId com.mongodb.connection.ConnectionId.getServerId():97:97 -> d
    4097:4097:com.mongodb.connection.ClusterId getClusterId():181 -> d
    5051:5051:com.mongodb.connection.ClusterId com.mongodb.connection.ServerId.getClusterId():51:51 -> d
    5051:5051:com.mongodb.connection.ClusterId getClusterId():181 -> d
    185:185:boolean eventRequired() -> e
    189:210:void appendCommonLogFragment(java.util.List,java.lang.StringBuilder) -> a
    5171:5171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> a
    5171:5171:void appendCommonLogFragment(java.util.List,java.lang.StringBuilder):190 -> a
    6106:6106:int com.mongodb.connection.ConnectionId.getLocalValue():106:106 -> a
    6106:6106:void appendCommonLogFragment(java.util.List,java.lang.StringBuilder):190 -> a
    6171:6171:com.mongodb.connection.ConnectionId com.mongodb.connection.ConnectionDescription.getConnectionId():171:171 -> a
    6171:6171:void appendCommonLogFragment(java.util.List,java.lang.StringBuilder):192 -> a
    7116:7116:java.lang.Integer com.mongodb.connection.ConnectionId.getServerValue():116:116 -> a
    7116:7116:void appendCommonLogFragment(java.util.List,java.lang.StringBuilder):192 -> a
    7175:7175:java.lang.String com.mongodb.ServerAddress.getHost():175:175 -> a
    7175:7175:void appendCommonLogFragment(java.util.List,java.lang.StringBuilder):199 -> a
    7184:7184:int com.mongodb.ServerAddress.getPort():184:184 -> a
    7184:7184:void appendCommonLogFragment(java.util.List,java.lang.StringBuilder):200 -> a
    8182:8182:org.bson.types.ObjectId com.mongodb.connection.ConnectionDescription.getServiceId():182:182 -> a
    8182:8182:void appendCommonLogFragment(java.util.List,java.lang.StringBuilder):202 -> a
    213:228:java.lang.String getTruncatedJsonCommand(org.bson.BsonDocument) -> b
    9115:9115:int com.mongodb.LoggerSettings.getMaxDocumentLength():115:115 -> b
    9115:9115:java.lang.String getTruncatedJsonCommand(org.bson.BsonDocument):218 -> b
    9576:9578:org.bson.json.JsonWriterSettings$Builder org.bson.json.JsonWriterSettings$Builder.maxLength(int):576:578 -> b
    9576:9578:java.lang.String getTruncatedJsonCommand(org.bson.BsonDocument):218 -> b
    10241:10241:boolean org.bson.json.JsonWriter.isTruncated():241:241 -> b
    10241:10241:java.lang.String getTruncatedJsonCommand(org.bson.BsonDocument):223 -> b
    10264:10264:boolean org.bson.json.StrictCharacterStreamJsonWriter.isTruncated():264:264 -> b
    10264:10264:boolean org.bson.json.JsonWriter.isTruncated():241 -> b
    10264:10264:java.lang.String getTruncatedJsonCommand(org.bson.BsonDocument):223 -> b
com.mongodb.internal.connection.MessageHeader -> com.a.e.g.as:
    int messageLength -> a
    int requestId -> b
    int responseTo -> c
    int opCode -> d
    34:44:void <init>(org.bson.ByteBuf,int) -> <init>
com.mongodb.internal.connection.MessageSettings -> com.a.e.g.at:
    int maxDocumentSize -> a
    int maxMessageSize -> b
    int maxBatchCount -> c
    int maxWireVersion -> d
    com.mongodb.connection.ServerType serverType -> e
    148:154:void <init>(com.mongodb.internal.connection.MessageSettings$Builder) -> <init>
    1053:1053:int com.mongodb.internal.connection.MessageSettings$Builder.access$100(com.mongodb.internal.connection.MessageSettings$Builder):53:53 -> <init>
    1053:1053:void <init>(com.mongodb.internal.connection.MessageSettings$Builder):149 -> <init>
    2053:2053:int com.mongodb.internal.connection.MessageSettings$Builder.access$200(com.mongodb.internal.connection.MessageSettings$Builder):53:53 -> <init>
    2053:2053:void <init>(com.mongodb.internal.connection.MessageSettings$Builder):150 -> <init>
    3053:3053:int com.mongodb.internal.connection.MessageSettings$Builder.access$300(com.mongodb.internal.connection.MessageSettings$Builder):53:53 -> <init>
    3053:3053:void <init>(com.mongodb.internal.connection.MessageSettings$Builder):151 -> <init>
    4053:4053:int com.mongodb.internal.connection.MessageSettings$Builder.access$400(com.mongodb.internal.connection.MessageSettings$Builder):53:53 -> <init>
    4053:4053:void <init>(com.mongodb.internal.connection.MessageSettings$Builder):152 -> <init>
    5053:5053:com.mongodb.connection.ServerType com.mongodb.internal.connection.MessageSettings$Builder.access$500(com.mongodb.internal.connection.MessageSettings$Builder):53:53 -> <init>
    5053:5053:void <init>(com.mongodb.internal.connection.MessageSettings$Builder):153 -> <init>
    29:29:void <init>(com.mongodb.internal.connection.MessageSettings$Builder,byte) -> <init>
com.mongodb.internal.connection.MessageSettings$Builder -> com.a.e.g.at$a:
    int maxDocumentSize -> a
    int maxMessageSize -> b
    int maxBatchCount -> c
    int maxWireVersion -> d
    com.mongodb.connection.ServerType serverType -> e
    53:56:void <init>() -> <init>
    66:66:com.mongodb.internal.connection.MessageSettings build() -> a
com.mongodb.internal.connection.MongoCredentialWithCache -> com.a.e.g.au:
    com.mongodb.MongoCredential credential -> a
    com.mongodb.internal.connection.MongoCredentialWithCache$Cache cache -> b
    36:37:void <init>(com.mongodb.MongoCredential) -> <init>
    39:42:void <init>(com.mongodb.MongoCredential,com.mongodb.internal.connection.MongoCredentialWithCache$Cache) -> <init>
    45:45:com.mongodb.internal.connection.MongoCredentialWithCache withMechanism(com.mongodb.AuthenticationMechanism) -> a
    50:50:com.mongodb.AuthenticationMechanism getAuthenticationMechanism() -> a
    1442:1442:com.mongodb.AuthenticationMechanism com.mongodb.MongoCredential.getAuthenticationMechanism():442:442 -> a
    1442:1442:com.mongodb.AuthenticationMechanism getAuthenticationMechanism():50 -> a
com.mongodb.internal.connection.MongoCredentialWithCache$Cache -> com.a.e.g.au$a:
    java.util.concurrent.locks.ReentrantLock lock -> a
    java.lang.Object cacheKey -> b
    java.lang.Object cacheValue -> c
    70:71:void <init>() -> <init>
    76:76:java.lang.Object get(java.lang.Object) -> a
    85:89:void set(java.lang.Object,java.lang.Object) -> a
    86:88:void lambda$set$1(java.lang.Object,java.lang.Object) -> b
    77:80:java.lang.Object lambda$get$0(java.lang.Object) -> b
com.mongodb.internal.connection.MongoWriteConcernWithResponseException -> com.a.e.g.av:
    com.mongodb.MongoException cause -> b
    java.lang.Object response -> a
    30:33:void <init>(com.mongodb.MongoException,java.lang.Object) -> <init>
    24:24:java.lang.Throwable getCause() -> getCause
    1037:1037:com.mongodb.MongoException getCause():37:37 -> getCause
    1037:1037:java.lang.Throwable getCause():24 -> getCause
com.mongodb.internal.connection.MultiServerCluster -> com.a.e.g.aw:
    30:33:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory) -> <init>
    1381:1381:java.lang.String com.mongodb.connection.ClusterSettings.getSrvHost():381:381 -> <init>
    1381:1381:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory):31 -> <init>
    1421:1421:java.util.List com.mongodb.connection.ClusterSettings.getHosts():421:421 -> <init>
    1421:1421:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory):32 -> <init>
com.mongodb.internal.connection.NoOpCommandEventSender -> com.a.e.g.ax:
    19:19:void <init>() -> <init>
    22:22:void sendStartedEvent() -> a
    26:26:void sendFailedEvent(java.lang.Throwable) -> a
    30:30:void sendSucceededEvent(com.mongodb.internal.connection.ResponseBuffers) -> a
    34:34:void sendSucceededEventForOneWayCommand() -> b
com.mongodb.internal.connection.NoOpSessionContext -> com.a.e.g.ay:
    com.mongodb.internal.connection.NoOpSessionContext INSTANCE -> a
    30:30:void <init>() -> <init>
    39:39:boolean hasSession() -> e
    44:44:boolean isImplicitSession() -> a
    49:49:org.bson.BsonDocument getSessionId() -> f
    54:54:boolean isCausallyConsistent() -> g
    59:59:long getTransactionNumber() -> h
    64:64:long advanceTransactionNumber() -> i
    69:69:boolean notifyMessageSent() -> b
    75:75:org.bson.BsonTimestamp getOperationTime() -> j
    80:80:void advanceOperationTime(org.bson.BsonTimestamp) -> a
    85:85:org.bson.BsonDocument getClusterTime() -> k
    90:90:void advanceClusterTime(org.bson.BsonDocument) -> a
    94:94:boolean isSnapshot() -> l
    99:99:void setSnapshotTimestamp(org.bson.BsonTimestamp) -> b
    104:104:org.bson.BsonTimestamp getSnapshotTimestamp() -> m
    109:109:boolean hasActiveTransaction() -> c
    114:114:com.mongodb.ReadConcern getReadConcern() -> d
    119:119:void setRecoveryToken(org.bson.BsonDocument) -> b
    124:124:void clearTransactionContext() -> n
    129:129:void markSessionDirty() -> o
    35:35:void <clinit>() -> <clinit>
com.mongodb.internal.connection.OpCode -> com.a.e.g.az:
    com.mongodb.internal.connection.OpCode OP_REPLY -> a
    com.mongodb.internal.connection.OpCode OP_UPDATE -> f
    com.mongodb.internal.connection.OpCode OP_INSERT -> g
    com.mongodb.internal.connection.OpCode OP_QUERY -> b
    com.mongodb.internal.connection.OpCode OP_GETMORE -> h
    com.mongodb.internal.connection.OpCode OP_DELETE -> i
    com.mongodb.internal.connection.OpCode OP_KILL_CURSORS -> j
    com.mongodb.internal.connection.OpCode OP_COMPRESSED -> c
    com.mongodb.internal.connection.OpCode OP_MSG -> d
    int value -> e
    com.mongodb.internal.connection.OpCode[] $VALUES -> k
    19:19:com.mongodb.internal.connection.OpCode[] values() -> values
    19:19:com.mongodb.internal.connection.OpCode valueOf(java.lang.String) -> valueOf
    30:32:void <init>(java.lang.String,int,int) -> <init>
    19:28:void <clinit>() -> <clinit>
    1019:1019:com.mongodb.internal.connection.OpCode[] $values():19:19 -> <clinit>
    1019:1019:void <clinit>():19 -> <clinit>
com.mongodb.internal.connection.PlainAuthenticator -> com.a.e.g.aA:
    41:42:void <init>(com.mongodb.internal.connection.MongoCredentialWithCache,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    46:46:java.lang.String getMechanismName() -> e
    1074:1074:java.lang.String com.mongodb.AuthenticationMechanism.getMechanismName():74:74 -> e
    1074:1074:java.lang.String getMechanismName():46 -> e
    51:69:javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress) -> a
    1442:1442:com.mongodb.AuthenticationMechanism com.mongodb.MongoCredential.getAuthenticationMechanism():442:442 -> a
    1442:1442:javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress):52 -> a
    2074:2074:java.lang.String com.mongodb.AuthenticationMechanism.getMechanismName():74:74 -> a
    2074:2074:javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress):54 -> a
    2452:2452:java.lang.String com.mongodb.MongoCredential.getUserName():452:452 -> a
    2452:2452:javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress):55 -> a
    3175:3175:java.lang.String com.mongodb.ServerAddress.getHost():175:175 -> a
    3175:3175:javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress):57 -> a
    60:67:void lambda$createSaslClient$0(com.mongodb.MongoCredential,javax.security.auth.callback.Callback[]) -> a
    3452:3452:java.lang.String com.mongodb.MongoCredential.getUserName():452:452 -> a
    3452:3452:void lambda$createSaslClient$0(com.mongodb.MongoCredential,javax.security.auth.callback.Callback[]):64 -> a
com.mongodb.internal.connection.PowerOfTwoBufferPool -> com.a.e.g.aB:
    com.mongodb.internal.connection.PowerOfTwoBufferPool DEFAULT -> a
    java.util.Map powerOfTwoToPoolMap -> b
    long maxIdleTimeNanos -> c
    java.util.concurrent.ScheduledExecutorService pruner -> d
    70:71:void <init>() -> <init>
    79:80:void <init>(int) -> <init>
    62:98:void <init>(int,long,java.util.concurrent.TimeUnit) -> <init>
    114:114:org.bson.ByteBuf getBuffer(int) -> a
    1118:1123:java.nio.ByteBuffer getByteBuffer(int):118:123 -> a
    1118:1123:org.bson.ByteBuf getBuffer(int):114 -> a
    1145:1145:int log2(int):145:145 -> a
    1145:1145:java.nio.ByteBuffer getByteBuffer(int):118 -> a
    1145:1145:org.bson.ByteBuf getBuffer(int):114 -> a
    1185:1189:com.mongodb.internal.connection.PowerOfTwoBufferPool$IdleTrackingByteBuffer com.mongodb.internal.connection.PowerOfTwoBufferPool$BufferPool.get():185:189 -> a
    1185:1189:java.nio.ByteBuffer getByteBuffer(int):119 -> a
    1185:1189:org.bson.ByteBuf getBuffer(int):114 -> a
    2037:2037:java.nio.ByteBuffer access$100(com.mongodb.internal.connection.PowerOfTwoBufferPool,int):37:37 -> a
    2037:2037:com.mongodb.internal.connection.PowerOfTwoBufferPool$IdleTrackingByteBuffer com.mongodb.internal.connection.PowerOfTwoBufferPool$BufferPool.get():189 -> a
    2037:2037:java.nio.ByteBuffer getByteBuffer(int):119 -> a
    2037:2037:org.bson.ByteBuf getBuffer(int):114 -> a
    2058:2058:java.nio.ByteBuffer com.mongodb.internal.connection.PowerOfTwoBufferPool$IdleTrackingByteBuffer.getBuffer():58:58 -> a
    2058:2058:java.nio.ByteBuffer getByteBuffer(int):119 -> a
    2058:2058:org.bson.ByteBuf getBuffer(int):114 -> a
    127:129:java.nio.ByteBuffer createNew(int) -> d
    141:142:void prune() -> a
    145:145:int log2(int) -> b
    149:157:int roundUpToNextHighestPowerOfTwo(int) -> c
    37:37:long access$200(com.mongodb.internal.connection.PowerOfTwoBufferPool) -> a
    42:42:void <clinit>() -> <clinit>
    2104:2105:com.mongodb.internal.connection.PowerOfTwoBufferPool enablePruning():104:105 -> <clinit>
    2104:2105:void <clinit>():42 -> <clinit>
com.mongodb.internal.connection.PowerOfTwoBufferPool$BufferPool -> com.a.e.g.aB$a:
    int bufferSize -> a
    java.util.concurrent.ConcurrentLinkedDeque available -> b
    com.mongodb.internal.connection.PowerOfTwoBufferPool this$0 -> c
    178:182:void <init>(com.mongodb.internal.connection.PowerOfTwoBufferPool,int) -> <init>
    197:199:void prune() -> a
    198:198:boolean lambda$prune$0(long,com.mongodb.internal.connection.PowerOfTwoBufferPool$IdleTrackingByteBuffer) -> a
    1054:1054:long com.mongodb.internal.connection.PowerOfTwoBufferPool$IdleTrackingByteBuffer.getLastUsedNanos():54:54 -> a
    1054:1054:boolean lambda$prune$0(long,com.mongodb.internal.connection.PowerOfTwoBufferPool$IdleTrackingByteBuffer):198 -> a
com.mongodb.internal.connection.PowerOfTwoBufferPool$IdleTrackingByteBuffer -> com.a.e.g.aB$b:
    long lastUsedNanos -> a
    java.nio.ByteBuffer buffer -> b
    48:51:void <init>(java.nio.ByteBuffer) -> <init>
    44:44:void <init>(java.nio.ByteBuffer,byte) -> <init>
com.mongodb.internal.connection.PowerOfTwoBufferPool$PooledByteBufNIO -> com.a.e.g.aB$c:
    com.mongodb.internal.connection.PowerOfTwoBufferPool this$0 -> a
    162:164:void <init>(com.mongodb.internal.connection.PowerOfTwoBufferPool,java.nio.ByteBuffer) -> <init>
    168:173:void release() -> o
    1133:1138:void com.mongodb.internal.connection.PowerOfTwoBufferPool.release(java.nio.ByteBuffer):133:138 -> o
    1133:1138:void release():171 -> o
    1193:1194:void com.mongodb.internal.connection.PowerOfTwoBufferPool$BufferPool.release(com.mongodb.internal.connection.PowerOfTwoBufferPool$IdleTrackingByteBuffer):193:194 -> o
    1193:1194:void com.mongodb.internal.connection.PowerOfTwoBufferPool.release(java.nio.ByteBuffer):136 -> o
    1193:1194:void release():171 -> o
com.mongodb.internal.connection.ProtocolExecutor -> com.a.e.g.aC:
    java.lang.Object execute(com.mongodb.internal.connection.CommandProtocol,com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.session.SessionContext) -> a
com.mongodb.internal.connection.ProtocolHelper -> com.a.e.g.aD:
    com.mongodb.RequestContext PROTOCOL_EVENT_LOGGER$2b2d9cbd -> a
    org.bson.codecs.configuration.CodecRegistry REGISTRY -> b
    java.util.List NOT_PRIMARY_CODES -> c
    java.util.List NOT_PRIMARY_MESSAGES -> d
    java.util.List RECOVERING_CODES -> e
    java.util.List RECOVERING_MESSAGES -> f
    79:82:boolean isCommandOk(com.mongodb.internal.connection.ResponseBuffers) -> a
    1074:1074:boolean isCommandOk(org.bson.BsonReader):74:74 -> a
    1074:1074:boolean isCommandOk(com.mongodb.internal.connection.ResponseBuffers):79 -> a
    1189:1196:boolean isCommandOk(org.bson.BsonValue):189:196 -> a
    1189:1196:boolean isCommandOk(org.bson.BsonReader):74 -> a
    1189:1196:boolean isCommandOk(com.mongodb.internal.connection.ResponseBuffers):79 -> a
    1332:1332:boolean org.bson.BsonValue.isBoolean():332:332 -> a
    1332:1332:boolean isCommandOk(org.bson.BsonValue):191 -> a
    1332:1332:boolean isCommandOk(org.bson.BsonReader):74 -> a
    1332:1332:boolean isCommandOk(com.mongodb.internal.connection.ResponseBuffers):79 -> a
    2073:2073:boolean org.bson.BsonBoolean.getValue():73:73 -> a
    2073:2073:boolean isCommandOk(org.bson.BsonValue):192 -> a
    2073:2073:boolean isCommandOk(org.bson.BsonReader):74 -> a
    2073:2073:boolean isCommandOk(com.mongodb.internal.connection.ResponseBuffers):79 -> a
    87:91:com.mongodb.MongoException createSpecialWriteConcernException(com.mongodb.internal.connection.ResponseBuffers,com.mongodb.ServerAddress) -> a
    97:97:org.bson.BsonTimestamp getOperationTime(com.mongodb.internal.connection.ResponseBuffers) -> b
    2125:2129:org.bson.BsonTimestamp getFieldValueAsTimestamp(com.mongodb.internal.connection.ResponseBuffers,java.lang.String):125:129 -> b
    2125:2129:org.bson.BsonTimestamp getOperationTime(com.mongodb.internal.connection.ResponseBuffers):97 -> b
    102:102:org.bson.BsonDocument getClusterTime(com.mongodb.internal.connection.ResponseBuffers) -> c
    107:114:org.bson.BsonTimestamp getSnapshotTimestamp(com.mongodb.internal.connection.ResponseBuffers) -> d
    2360:2360:boolean org.bson.BsonValue.isTimestamp():360:360 -> d
    2360:2360:org.bson.BsonTimestamp getSnapshotTimestamp(com.mongodb.internal.connection.ResponseBuffers):111 -> d
    119:119:org.bson.BsonDocument getRecoveryToken(com.mongodb.internal.connection.ResponseBuffers) -> e
    134:138:org.bson.BsonDocument getFieldValueAsDocument(com.mongodb.internal.connection.ResponseBuffers,java.lang.String) -> a
    144:147:org.bson.BsonValue getFieldValue(com.mongodb.internal.connection.ResponseBuffers,java.lang.String) -> b
    151:151:org.bson.BsonBinaryReader createBsonReader(com.mongodb.internal.connection.ResponseBuffers) -> f
    156:165:org.bson.BsonValue getField(org.bson.BsonReader,java.lang.String) -> a
    173:185:org.bson.BsonValue getNestedFieldValue(com.mongodb.internal.connection.ResponseBuffers,java.lang.String,java.lang.String) -> a
    201:205:com.mongodb.MongoException getCommandFailureException(org.bson.BsonDocument,com.mongodb.ServerAddress) -> a
    209:209:int getErrorCode(org.bson.BsonDocument) -> a
    213:213:java.lang.String getErrorMessage(org.bson.BsonDocument,java.lang.String) -> a
    3056:3056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    3056:3056:java.lang.String getErrorMessage(org.bson.BsonDocument,java.lang.String):213 -> a
    225:231:com.mongodb.internal.connection.MessageSettings getMessageSettings(com.mongodb.connection.ConnectionDescription) -> a
    4046:4046:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings.builder():46:46 -> a
    4046:4046:com.mongodb.internal.connection.MessageSettings getMessageSettings(com.mongodb.connection.ConnectionDescription):225 -> a
    4219:4219:int com.mongodb.connection.ConnectionDescription.getMaxDocumentSize():219:219 -> a
    4219:4219:com.mongodb.internal.connection.MessageSettings getMessageSettings(com.mongodb.connection.ConnectionDescription):226 -> a
    5076:5077:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.maxDocumentSize(int):76:77 -> a
    5076:5077:com.mongodb.internal.connection.MessageSettings getMessageSettings(com.mongodb.connection.ConnectionDescription):226 -> a
    5228:5228:int com.mongodb.connection.ConnectionDescription.getMaxMessageSize():228:228 -> a
    5228:5228:com.mongodb.internal.connection.MessageSettings getMessageSettings(com.mongodb.connection.ConnectionDescription):227 -> a
    6087:6088:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.maxMessageSize(int):87:88 -> a
    6087:6088:com.mongodb.internal.connection.MessageSettings getMessageSettings(com.mongodb.connection.ConnectionDescription):227 -> a
    6210:6210:int com.mongodb.connection.ConnectionDescription.getMaxBatchCount():210:210 -> a
    6210:6210:com.mongodb.internal.connection.MessageSettings getMessageSettings(com.mongodb.connection.ConnectionDescription):228 -> a
    7098:7099:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.maxBatchCount(int):98:99 -> a
    7098:7099:com.mongodb.internal.connection.MessageSettings getMessageSettings(com.mongodb.connection.ConnectionDescription):228 -> a
    7192:7192:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> a
    7192:7192:com.mongodb.internal.connection.MessageSettings getMessageSettings(com.mongodb.connection.ConnectionDescription):229 -> a
    8103:8104:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.maxWireVersion(int):103:104 -> a
    8103:8104:com.mongodb.internal.connection.MessageSettings getMessageSettings(com.mongodb.connection.ConnectionDescription):229 -> a
    8201:8201:com.mongodb.connection.ServerType com.mongodb.connection.ConnectionDescription.getServerType():201:201 -> a
    8201:8201:com.mongodb.internal.connection.MessageSettings getMessageSettings(com.mongodb.connection.ConnectionDescription):230 -> a
    9108:9109:com.mongodb.internal.connection.MessageSettings$Builder com.mongodb.internal.connection.MessageSettings$Builder.serverType(com.mongodb.connection.ServerType):108:109 -> a
    9108:9109:com.mongodb.internal.connection.MessageSettings getMessageSettings(com.mongodb.connection.ConnectionDescription):230 -> a
    242:263:com.mongodb.MongoException createSpecialException(org.bson.BsonDocument,com.mongodb.ServerAddress,java.lang.String) -> a
    10056:10056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    10056:10056:com.mongodb.MongoException createSpecialException(org.bson.BsonDocument,com.mongodb.ServerAddress,java.lang.String):258 -> a
    268:269:boolean isNotPrimaryError(int,java.lang.String) -> a
    273:274:boolean isNodeIsRecoveringError(int,java.lang.String) -> b
    280:289:void sendCommandStartedEvent$7bb23743(com.mongodb.internal.connection.RequestMessage,java.lang.String,java.lang.String,org.bson.BsonDocument,com.mongodb.connection.ConnectionDescription,com.mongodb.RequestContext,com.mongodb.RequestContext) -> a
    294:303:void sendCommandSucceededEvent$5cc26faf(com.mongodb.internal.connection.RequestMessage,java.lang.String,org.bson.BsonDocument,com.mongodb.connection.ConnectionDescription,long,com.mongodb.RequestContext,com.mongodb.RequestContext) -> a
    308:317:void sendCommandFailedEvent$75185fee(com.mongodb.internal.connection.RequestMessage,java.lang.String,com.mongodb.connection.ConnectionDescription,long,java.lang.Throwable,com.mongodb.RequestContext,com.mongodb.RequestContext) -> a
    321:321:com.mongodb.RequestContext getRequestContextForEvent(com.mongodb.RequestContext) -> a
    63:237:void <clinit>() -> <clinit>
    10085:10085:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.fromProviders(org.bson.codecs.configuration.CodecProvider[]):85:85 -> <clinit>
    10085:10085:void <clinit>():64 -> <clinit>
com.mongodb.internal.connection.QueryResult -> com.a.e.g.aE:
    com.mongodb.MongoNamespace namespace -> a
    java.util.List results -> b
    long cursorId -> c
    com.mongodb.ServerAddress serverAddress -> d
    46:51:void <init>(com.mongodb.MongoNamespace,java.util.List,long,com.mongodb.ServerAddress) -> <init>
    70:70:com.mongodb.ServerCursor getCursor() -> a
com.mongodb.internal.connection.ReadConcernAwareNoOpSessionContext -> com.a.e.g.aF:
    com.mongodb.ReadConcern readConcern -> b
    32:34:void <init>(com.mongodb.ReadConcern) -> <init>
    38:38:com.mongodb.ReadConcern getReadConcern() -> d
com.mongodb.internal.connection.ReplyHeader -> com.a.e.g.aG:
    int requestId -> a
    int responseTo -> b
    int numberReturned -> c
    int opMsgFlagBits -> d
    56:57:void <init>(org.bson.ByteBuf,com.mongodb.internal.connection.MessageHeader) -> <init>
    1052:1052:int com.mongodb.internal.connection.MessageHeader.getMessageLength():52:52 -> <init>
    1052:1052:void <init>(org.bson.ByteBuf,com.mongodb.internal.connection.MessageHeader):56 -> <init>
    1080:1080:int com.mongodb.internal.connection.MessageHeader.getOpCode():80:80 -> <init>
    1080:1080:void <init>(org.bson.ByteBuf,com.mongodb.internal.connection.MessageHeader):56 -> <init>
    60:62:void <init>(org.bson.ByteBuf,com.mongodb.internal.connection.CompressedHeader) -> <init>
    2074:2074:int com.mongodb.internal.connection.CompressedHeader.getUncompressedSize():74:74 -> <init>
    2074:2074:void <init>(org.bson.ByteBuf,com.mongodb.internal.connection.CompressedHeader):60 -> <init>
    3066:3066:int com.mongodb.internal.connection.CompressedHeader.getOriginalOpcode():66:66 -> <init>
    3066:3066:void <init>(org.bson.ByteBuf,com.mongodb.internal.connection.CompressedHeader):60 -> <init>
    3093:3093:com.mongodb.internal.connection.MessageHeader com.mongodb.internal.connection.CompressedHeader.getMessageHeader():93:93 -> <init>
    3093:3093:void <init>(org.bson.ByteBuf,com.mongodb.internal.connection.CompressedHeader):61 -> <init>
    64:95:void <init>(int,int,com.mongodb.internal.connection.MessageHeader,org.bson.ByteBuf) -> <init>
    4062:4062:int com.mongodb.internal.connection.MessageHeader.getRequestId():62:62 -> <init>
    4062:4062:void <init>(int,int,com.mongodb.internal.connection.MessageHeader,org.bson.ByteBuf):66 -> <init>
    4071:4071:int com.mongodb.internal.connection.MessageHeader.getResponseTo():71:71 -> <init>
    4071:4071:void <init>(int,int,com.mongodb.internal.connection.MessageHeader,org.bson.ByteBuf):67 -> <init>
    5037:5037:int com.mongodb.internal.connection.OpCode.getValue():37:37 -> <init>
    5037:5037:void <init>(int,int,com.mongodb.internal.connection.MessageHeader,org.bson.ByteBuf):68 -> <init>
    6037:6037:int com.mongodb.internal.connection.OpCode.getValue():37:37 -> <init>
    6037:6037:void <init>(int,int,com.mongodb.internal.connection.MessageHeader,org.bson.ByteBuf):76 -> <init>
com.mongodb.internal.connection.ReplyMessage -> com.a.e.g.aH:
    com.mongodb.internal.connection.ReplyHeader replyHeader -> b
    java.util.List documents -> a
    42:55:void <init>(com.mongodb.internal.connection.ResponseBuffers,org.bson.codecs.Decoder,long) -> <init>
    1046:1046:com.mongodb.internal.connection.ReplyHeader com.mongodb.internal.connection.ResponseBuffers.getReplyHeader():46:46 -> <init>
    1046:1046:void <init>(com.mongodb.internal.connection.ResponseBuffers,org.bson.codecs.Decoder,long):42 -> <init>
    1172:1172:int com.mongodb.internal.connection.ReplyHeader.getNumberReturned():172:172 -> <init>
    1172:1172:void <init>(com.mongodb.internal.connection.ResponseBuffers,org.bson.codecs.Decoder,long):44 -> <init>
    2172:2172:int com.mongodb.internal.connection.ReplyHeader.getNumberReturned():172:172 -> <init>
    2172:2172:void <init>(com.mongodb.internal.connection.ResponseBuffers,org.bson.codecs.Decoder,long):46 -> <init>
    57:65:void <init>(com.mongodb.internal.connection.ReplyHeader,long) -> <init>
    3123:3123:int com.mongodb.internal.connection.ReplyHeader.getResponseTo():123:123 -> <init>
    3123:3123:void <init>(com.mongodb.internal.connection.ReplyHeader,long):58 -> <init>
    4123:4123:int com.mongodb.internal.connection.ReplyHeader.getResponseTo():123:123 -> <init>
    4123:4123:void <init>(com.mongodb.internal.connection.ReplyHeader,long):60 -> <init>
    4172:4172:int com.mongodb.internal.connection.ReplyHeader.getNumberReturned():172:172 -> <init>
    4172:4172:void <init>(com.mongodb.internal.connection.ReplyHeader,long):64 -> <init>
com.mongodb.internal.connection.RequestMessage -> com.a.e.g.aI:
    java.util.concurrent.atomic.AtomicInteger REQUEST_ID -> a
    org.bson.codecs.configuration.CodecRegistry REGISTRY -> b
    java.lang.String collectionName -> c
    com.mongodb.internal.connection.MessageSettings settings -> d
    int id -> e
    com.mongodb.internal.connection.OpCode opCode -> f
    com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodingMetadata -> g
    83:84:void <init>(com.mongodb.internal.connection.OpCode,int,com.mongodb.internal.connection.MessageSettings) -> <init>
    88:89:void <init>(java.lang.String,com.mongodb.internal.connection.OpCode,com.mongodb.internal.connection.MessageSettings) -> <init>
    92:97:void <init>(java.lang.String,com.mongodb.internal.connection.OpCode,int,com.mongodb.internal.connection.MessageSettings) -> <init>
    105:105:int getId() -> e
    114:114:com.mongodb.internal.connection.OpCode getOpCode() -> d
    123:123:com.mongodb.internal.connection.MessageSettings getSettings() -> c
    133:139:void encode(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext) -> b
    1156:1160:void writeMessagePrologue(org.bson.io.BsonOutput):156:160 -> b
    1156:1160:void encode(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):135 -> b
    2037:2037:int com.mongodb.internal.connection.OpCode.getValue():37:37 -> b
    2037:2037:void writeMessagePrologue(org.bson.io.BsonOutput):159 -> b
    2037:2037:void encode(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):135 -> b
    2184:2186:void backpatchMessageLength(int,org.bson.io.BsonOutput):184:186 -> b
    2184:2186:void encode(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext):137 -> b
    147:147:com.mongodb.internal.connection.RequestMessage$EncodingMetadata getEncodingMetadata() -> b
    com.mongodb.internal.connection.RequestMessage$EncodingMetadata encodeMessageBodyWithMetadata(org.bson.io.BsonOutput,com.mongodb.internal.session.SessionContext) -> a
    173:175:void addDocument(org.bson.BsonDocument,org.bson.io.BsonOutput,org.bson.FieldNameValidator,java.util.List) -> a
    2199:2199:org.bson.codecs.Codec getCodec(org.bson.BsonDocument):199:199 -> a
    2199:2199:void addDocument(org.bson.BsonDocument,org.bson.io.BsonOutput,org.bson.FieldNameValidator,java.util.List):173 -> a
    3119:3119:int com.mongodb.internal.connection.MessageSettings.getMaxDocumentSize():119:119 -> a
    3119:3119:void addDocument(org.bson.BsonDocument,org.bson.io.BsonOutput,org.bson.FieldNameValidator,java.util.List):174 -> a
    3205:3211:void addDocument(java.lang.Object,org.bson.codecs.Encoder,org.bson.codecs.EncoderContext,org.bson.io.BsonOutput,org.bson.FieldNameValidator,int,java.util.List):205:211 -> a
    3205:3211:void addDocument(org.bson.BsonDocument,org.bson.io.BsonOutput,org.bson.FieldNameValidator,java.util.List):173 -> a
    194:194:java.lang.String getCollectionName() -> f
    46:54:void <clinit>() -> <clinit>
    4085:4085:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.fromProviders(org.bson.codecs.configuration.CodecProvider[]):85:85 -> <clinit>
    4085:4085:void <clinit>():54 -> <clinit>
com.mongodb.internal.connection.RequestMessage$EncodingMetadata -> com.a.e.g.aI$a:
    int firstDocumentPosition -> a
    65:67:void <init>(int) -> <init>
com.mongodb.internal.connection.ResponseBuffers -> com.a.e.g.aJ:
    com.mongodb.internal.connection.ReplyHeader replyHeader -> a
    org.bson.ByteBuf bodyByteBuffer -> b
    int bodyByteBufferStartPosition -> c
    boolean isClosed -> d
    34:38:void <init>(com.mongodb.internal.connection.ReplyHeader,org.bson.ByteBuf) -> <init>
    50:52:org.bson.BsonDocument getResponseDocument(int,org.bson.codecs.Decoder) -> a
    1082:1082:java.util.List com.mongodb.internal.connection.ReplyMessage.getDocuments():82:82 -> a
    1082:1082:org.bson.BsonDocument getResponseDocument(int,org.bson.codecs.Decoder):52 -> a
    62:62:org.bson.ByteBuf getBodyByteBuffer() -> a
    66:67:void reset() -> b
    71:77:void close() -> close
com.mongodb.internal.connection.SaslAuthenticator -> com.a.e.g.aK:
    55:56:void <init>(com.mongodb.internal.connection.MongoCredentialWithCache,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    59:92:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription) -> a
    1275:1281:void doAsSubject(java.security.PrivilegedAction):275:281 -> a
    1275:1281:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription):59 -> a
    java.lang.String getMechanismName() -> e
    javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress) -> a
    114:114:void appendSaslStartOptions(org.bson.BsonDocument) -> b
    124:133:org.bson.BsonDocument getNextSaslResponse(javax.security.sasl.SaslClient,com.mongodb.internal.connection.InternalConnection) -> a
    2222:2224:org.bson.BsonDocument sendSaslStart(byte[],com.mongodb.internal.connection.InternalConnection):222:224 -> a
    2222:2224:org.bson.BsonDocument getNextSaslResponse(javax.security.sasl.SaslClient,com.mongodb.internal.connection.InternalConnection):131 -> a
    2461:2461:java.lang.String com.mongodb.MongoCredential.getSource():461:461 -> a
    2461:2461:org.bson.BsonDocument sendSaslStart(byte[],com.mongodb.internal.connection.InternalConnection):224 -> a
    2461:2461:org.bson.BsonDocument getNextSaslResponse(javax.security.sasl.SaslClient,com.mongodb.internal.connection.InternalConnection):131 -> a
    188:196:javax.security.auth.Subject getSubject() -> g
    3202:3202:com.mongodb.SubjectProvider getSubjectProvider():202:202 -> g
    3202:3202:javax.security.auth.Subject getSubject():194 -> g
    4067:4067:java.util.concurrent.locks.Lock com.mongodb.internal.connection.MongoCredentialWithCache.getLock():67:67 -> g
    4067:4067:com.mongodb.SubjectProvider getSubjectProvider():202 -> g
    4067:4067:javax.security.auth.Subject getSubject():194 -> g
    4070:4070:java.util.concurrent.locks.ReentrantLock com.mongodb.internal.connection.MongoCredentialWithCache$Cache.access$000(com.mongodb.internal.connection.MongoCredentialWithCache$Cache):70:70 -> g
    4070:4070:java.util.concurrent.locks.Lock com.mongodb.internal.connection.MongoCredentialWithCache.getLock():67 -> g
    4070:4070:com.mongodb.SubjectProvider getSubjectProvider():202 -> g
    4070:4070:javax.security.auth.Subject getSubject():194 -> g
    218:218:com.mongodb.SubjectProvider getDefaultSubjectProvider() -> f
    247:248:org.bson.BsonDocument createSaslStartCommandDocument(byte[]) -> a
    258:262:void disposeOfSaslClient(javax.security.sasl.SaslClient) -> a
    265:270:com.mongodb.MongoException wrapException(java.lang.Throwable) -> a
    218:218:javax.security.auth.Subject lambda$getDefaultSubjectProvider$4() -> h
    203:212:com.mongodb.SubjectProvider lambda$getSubjectProvider$3() -> i
    5059:5059:java.lang.Object com.mongodb.internal.connection.MongoCredentialWithCache.getFromCache(java.lang.Object,java.lang.Class):59:59 -> i
    5059:5059:com.mongodb.SubjectProvider lambda$getSubjectProvider$3():204 -> i
    5063:5064:void com.mongodb.internal.connection.MongoCredentialWithCache.putInCache(java.lang.Object,java.lang.Object):63:64 -> i
    5063:5064:com.mongodb.SubjectProvider lambda$getSubjectProvider$3():210 -> i
    60:90:java.lang.Void lambda$authenticate$0(com.mongodb.internal.connection.InternalConnection) -> b
    5117:5121:void throwIfSaslClientIsNull(javax.security.sasl.SaslClient):117:121 -> b
    5117:5121:java.lang.Void lambda$authenticate$0(com.mongodb.internal.connection.InternalConnection):61 -> b
    5190:5191:org.bson.BsonInt32 org.bson.BsonDocument.getInt32(java.lang.Object):190:191 -> b
    5190:5191:java.lang.Void lambda$authenticate$0(com.mongodb.internal.connection.InternalConnection):64 -> b
    5239:5240:org.bson.BsonBoolean org.bson.BsonDocument.getBoolean(java.lang.Object):239:240 -> b
    5239:5240:java.lang.Void lambda$authenticate$0(com.mongodb.internal.connection.InternalConnection):66 -> b
    6073:6073:boolean org.bson.BsonBoolean.getValue():73:73 -> b
    6073:6073:java.lang.Void lambda$authenticate$0(com.mongodb.internal.connection.InternalConnection):66 -> b
    6174:6174:byte[] org.bson.BsonBinary.getData():174:174 -> b
    6174:6174:java.lang.Void lambda$authenticate$0(com.mongodb.internal.connection.InternalConnection):67 -> b
    6228:6229:org.bson.BsonDocument sendSaslContinue(org.bson.BsonInt32,byte[],com.mongodb.internal.connection.InternalConnection):228:229 -> b
    6228:6229:java.lang.Void lambda$authenticate$0(com.mongodb.internal.connection.InternalConnection):75 -> b
    6461:6461:java.lang.String com.mongodb.MongoCredential.getSource():461:461 -> b
    6461:6461:org.bson.BsonDocument sendSaslContinue(org.bson.BsonInt32,byte[],com.mongodb.internal.connection.InternalConnection):228 -> b
    6461:6461:java.lang.Void lambda$authenticate$0(com.mongodb.internal.connection.InternalConnection):75 -> b
    7252:7253:org.bson.BsonDocument createSaslContinueDocument(org.bson.BsonInt32,byte[]):252:253 -> b
    7252:7253:org.bson.BsonDocument sendSaslContinue(org.bson.BsonInt32,byte[],com.mongodb.internal.connection.InternalConnection):228 -> b
    7252:7253:java.lang.Void lambda$authenticate$0(com.mongodb.internal.connection.InternalConnection):75 -> b
    8174:8174:byte[] org.bson.BsonBinary.getData():174:174 -> b
    8174:8174:java.lang.Void lambda$authenticate$0(com.mongodb.internal.connection.InternalConnection):78 -> b
    51:51:void <clinit>() -> <clinit>
com.mongodb.internal.connection.ScramShaAuthenticator -> com.a.e.g.aL:
    com.mongodb.internal.connection.ScramShaAuthenticator$RandomStringGenerator randomStringGenerator -> a
    com.mongodb.internal.connection.ScramShaAuthenticator$AuthenticationHashGenerator authenticationHashGenerator -> b
    javax.security.sasl.SaslClient speculativeSaslClient -> c
    org.bson.BsonDocument speculativeAuthenticateResponse -> d
    com.mongodb.internal.connection.ScramShaAuthenticator$AuthenticationHashGenerator DEFAULT_AUTHENTICATION_HASH_GENERATOR -> e
    com.mongodb.internal.connection.ScramShaAuthenticator$AuthenticationHashGenerator LEGACY_AUTHENTICATION_HASH_GENERATOR -> f
    62:65:void <init>(com.mongodb.internal.connection.MongoCredentialWithCache,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    1400:1400:com.mongodb.internal.connection.ScramShaAuthenticator$AuthenticationHashGenerator getAuthenicationHashGenerator(com.mongodb.AuthenticationMechanism):400:400 -> <init>
    1400:1400:void <init>(com.mongodb.internal.connection.MongoCredentialWithCache,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper):63 -> <init>
    70:73:void <init>(com.mongodb.internal.connection.MongoCredentialWithCache,com.mongodb.internal.connection.ScramShaAuthenticator$RandomStringGenerator,com.mongodb.internal.connection.ScramShaAuthenticator$AuthenticationHashGenerator,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    77:81:java.lang.String getMechanismName() -> e
    1442:1442:com.mongodb.AuthenticationMechanism com.mongodb.MongoCredential.getAuthenticationMechanism():442:442 -> e
    1442:1442:java.lang.String getMechanismName():77 -> e
    2074:2074:java.lang.String com.mongodb.AuthenticationMechanism.getMechanismName():74:74 -> e
    2074:2074:java.lang.String getMechanismName():81 -> e
    86:87:void appendSaslStartOptions(org.bson.BsonDocument) -> b
    92:95:javax.security.sasl.SaslClient createSaslClient(com.mongodb.ServerAddress) -> a
    101:107:org.bson.BsonDocument createSpeculativeAuthenticateCommand(com.mongodb.internal.connection.InternalConnection) -> a
    2461:2461:java.lang.String com.mongodb.MongoCredential.getSource():461:461 -> a
    2461:2461:org.bson.BsonDocument createSpeculativeAuthenticateCommand(com.mongodb.internal.connection.InternalConnection):103 -> a
    113:113:org.bson.BsonDocument getSpeculativeAuthenticateResponse() -> b_
    118:123:void setSpeculativeAuthenticateResponse(org.bson.BsonDocument) -> a
    391:396:java.lang.String lambda$static$1(com.mongodb.MongoCredential) -> a
    3452:3452:java.lang.String com.mongodb.MongoCredential.getUserName():452:452 -> a
    3452:3452:java.lang.String lambda$static$1(com.mongodb.MongoCredential):391 -> a
    382:386:java.lang.String lambda$static$0(com.mongodb.MongoCredential) -> b
    58:389:void <clinit>() -> <clinit>
com.mongodb.internal.connection.ScramShaAuthenticator$AuthenticationHashGenerator -> com.a.e.g.aL$a:
    com.mongodb.DBObject getInstance$23a3c337() -> a
    com.mongodb.connection.StreamFactory create$2284366b() -> b
com.mongodb.internal.connection.ScramShaAuthenticator$DefaultRandomStringGenerator -> com.a.e.g.aL$b:
    361:361:void <init>() -> <init>
    361:361:void <init>(byte) -> <init>
com.mongodb.internal.connection.ScramShaAuthenticator$RandomStringGenerator -> com.a.e.g.aL$c:
    1038:1038:boolean org.bson.diagnostics.Logger.isTraceEnabled():38:38 -> a
    1048:1048:void org.bson.diagnostics.Logger.trace(java.lang.String):48:48 -> a
com.mongodb.internal.connection.ScramShaAuthenticator$ScramShaSaslClient -> com.a.e.g.aL$d:
    137:151:void <init>(com.mongodb.internal.connection.ScramShaAuthenticator,com.mongodb.internal.connection.MongoCredentialWithCache,com.mongodb.internal.connection.ScramShaAuthenticator$RandomStringGenerator,com.mongodb.internal.connection.ScramShaAuthenticator$AuthenticationHashGenerator) -> <init>
com.mongodb.internal.connection.SdamServerDescriptionManager -> com.a.e.g.aM:
    void update(com.mongodb.connection.ServerDescription) -> a
    void handleExceptionBeforeHandshake(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue) -> a
    void handleExceptionAfterHandshake(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue) -> b
    com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context context() -> a
    com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context context(com.mongodb.internal.connection.InternalConnection) -> a
com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue -> com.a.e.g.aM$a:
    java.lang.Throwable exception -> a
    com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context context -> b
    83:86:void <init>(java.lang.Throwable,com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context) -> <init>
    92:92:com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue specific(java.lang.Throwable,com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context) -> a
    117:117:com.mongodb.connection.ServerDescription serverDescription() -> a
    1184:1184:com.mongodb.connection.ServerId com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context.access$000(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context):184:184 -> a
    1184:1184:com.mongodb.connection.ServerDescription serverDescription():117 -> a
    1204:1204:com.mongodb.connection.ServerId com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context.serverId():204:204 -> a
    1204:1204:com.mongodb.connection.ServerId com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context.access$000(com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context):184 -> a
    1204:1204:com.mongodb.connection.ServerDescription serverDescription():117 -> a
    132:132:boolean relatedToStateChange() -> b
    174:177:boolean stale(java.lang.Throwable,com.mongodb.connection.ServerDescription) -> a
    175:176:java.lang.Boolean lambda$stale$0(com.mongodb.connection.ServerDescription,com.mongodb.connection.TopologyVersion) -> a
    1734:1734:com.mongodb.connection.TopologyVersion com.mongodb.connection.ServerDescription.getTopologyVersion():734:734 -> a
    1734:1734:java.lang.Boolean lambda$stale$0(com.mongodb.connection.ServerDescription,com.mongodb.connection.TopologyVersion):176 -> a
    2072:2072:boolean com.mongodb.internal.connection.TopologyVersionHelper.newerOrEqual(com.mongodb.connection.TopologyVersion,com.mongodb.connection.TopologyVersion):72:72 -> a
    2072:2072:java.lang.Boolean lambda$stale$0(com.mongodb.connection.ServerDescription,com.mongodb.connection.TopologyVersion):175 -> a
com.mongodb.internal.connection.SdamServerDescriptionManager$SdamIssue$Context -> com.a.e.g.aM$a$a:
    com.mongodb.connection.ServerId serverId -> a
    int connectionPoolGeneration -> b
    int serverMaxWireVersion -> c
    189:193:void <init>(com.mongodb.connection.ServerId,int,int) -> <init>
    196:196:boolean serverIsLessThanVersionFourDotTwo() -> a
com.mongodb.internal.connection.Server -> com.a.e.g.aN:
    com.mongodb.internal.connection.Connection getConnection() -> e
    int operationCount() -> f
com.mongodb.internal.connection.ServerDescriptionHelper -> com.a.e.g.aO:
    java.lang.String name -> a
    java.lang.String value -> b
    27:36:com.mongodb.connection.ServerDescription unknownConnectingServerDescription(com.mongodb.connection.ServerId,java.lang.Throwable) -> a
    1106:1106:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription.builder():106:106 -> a
    1106:1106:com.mongodb.connection.ServerDescription unknownConnectingServerDescription(com.mongodb.connection.ServerId,java.lang.Throwable):27 -> a
    1358:1359:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.state(com.mongodb.connection.ServerConnectionState):358:359 -> a
    1358:1359:com.mongodb.connection.ServerDescription unknownConnectingServerDescription(com.mongodb.connection.ServerId,java.lang.Throwable):29 -> a
    2059:2059:com.mongodb.ServerAddress com.mongodb.connection.ServerId.getAddress():59:59 -> a
    2059:2059:com.mongodb.connection.ServerDescription unknownConnectingServerDescription(com.mongodb.connection.ServerId,java.lang.Throwable):30 -> a
    2220:2221:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.address(com.mongodb.ServerAddress):220:221 -> a
    2220:2221:com.mongodb.connection.ServerDescription unknownConnectingServerDescription(com.mongodb.connection.ServerId,java.lang.Throwable):30 -> a
    2480:2481:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.exception(java.lang.Throwable):480:481 -> a
    2480:2481:com.mongodb.connection.ServerDescription unknownConnectingServerDescription(com.mongodb.connection.ServerId,java.lang.Throwable):34 -> a
    3040:3043:void com.mongodb.Tag.<init>(java.lang.String,java.lang.String):40:43 -> <init>
    3050:3050:java.lang.String com.mongodb.Tag.getName():50:50 -> a
    3058:3058:java.lang.String com.mongodb.Tag.getValue():58:58 -> b
    3063:3079:boolean com.mongodb.Tag.equals(java.lang.Object):63:79 -> equals
    3084:3086:int com.mongodb.Tag.hashCode():84:86 -> hashCode
    3091:3091:java.lang.String com.mongodb.Tag.toString():91:91 -> toString
com.mongodb.internal.connection.ServerMonitor -> com.a.e.g.aP:
    void start() -> a
    void connect() -> b
    void close() -> c
    void cancelCurrentCheck() -> d
com.mongodb.internal.connection.ServerTuple -> com.a.e.g.aQ:
    com.mongodb.internal.connection.Server server -> a
    com.mongodb.connection.ServerDescription serverDescription -> b
    28:31:void <init>(com.mongodb.internal.connection.Server,com.mongodb.connection.ServerDescription) -> <init>
com.mongodb.internal.connection.ServerTypeHelper -> com.a.e.g.aR:
    int code -> a
    java.lang.String message -> b
    org.bson.BsonDocument details -> c
    1040:1044:void com.mongodb.WriteError.<init>(int,java.lang.String,org.bson.BsonDocument):40:44 -> <init>
    1051:1055:void com.mongodb.WriteError.<init>(com.mongodb.WriteError):51:55 -> <init>
    1072:1072:int com.mongodb.WriteError.getCode():72:72 -> b
    1081:1081:java.lang.String com.mongodb.WriteError.getMessage():81:81 -> c
    1090:1090:org.bson.BsonDocument com.mongodb.WriteError.getDetails():90:90 -> d
    1095:1114:boolean com.mongodb.WriteError.equals(java.lang.Object):95:114 -> equals
    1119:1122:int com.mongodb.WriteError.hashCode():119:122 -> hashCode
    1127:1127:java.lang.String com.mongodb.WriteError.toString():127:127 -> toString
com.mongodb.internal.connection.ServerTypeHelper$1 -> com.a.e.g.aR$1:
    int[] $SwitchMap$com$mongodb$connection$ServerType -> a
    22:22:void <clinit>() -> <clinit>
com.mongodb.internal.connection.SingleServerCluster -> com.a.e.g.aS:
    java.util.concurrent.atomic.AtomicReference server -> a
    52:64:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory) -> <init>
    1421:1421:java.util.List com.mongodb.connection.ClusterSettings.getHosts():421:421 -> <init>
    1421:1421:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory):53 -> <init>
    1430:1430:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterSettings.getMode():430:430 -> <init>
    1430:1430:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory):54 -> <init>
    2046:2046:void withLock(java.lang.Runnable):46:46 -> <init>
    2046:2046:void <init>(com.mongodb.connection.ClusterId,com.mongodb.connection.ClusterSettings,com.mongodb.internal.connection.ClusterableServerFactory):59 -> <init>
    68:69:void connect() -> b
    73:74:com.mongodb.internal.connection.ClusterableServer getServer(com.mongodb.ServerAddress) -> a
    3046:3046:boolean isClosed():46:46 -> a
    3046:3046:com.mongodb.internal.connection.ClusterableServer getServer(com.mongodb.ServerAddress):73 -> a
    79:83:void close() -> close
    4046:4046:boolean isClosed():46:46 -> close
    4046:4046:void close():79 -> close
    87:111:void onChange(com.mongodb.event.ServerDescriptionChangedEvent) -> a
    5046:5046:void withLock(java.lang.Runnable):46:46 -> a
    5046:5046:void onChange(com.mongodb.event.ServerDescriptionChangedEvent):87 -> a
    114:119:void publishDescription(com.mongodb.connection.ServerDescription) -> a
    6046:6046:com.mongodb.connection.ClusterSettings getSettings():46:46 -> a
    6046:6046:void publishDescription(com.mongodb.connection.ServerDescription):114 -> a
    6439:6439:com.mongodb.connection.ClusterType com.mongodb.connection.ClusterSettings.getRequiredClusterType():439:439 -> a
    6439:6439:void publishDescription(com.mongodb.connection.ServerDescription):114 -> a
    6823:6823:com.mongodb.connection.ClusterType com.mongodb.connection.ServerDescription.getClusterType():823:823 -> a
    6823:6823:void publishDescription(com.mongodb.connection.ServerDescription):116 -> a
    122:129:void publishDescription(com.mongodb.connection.ClusterType,com.mongodb.connection.ServerDescription) -> a
    7046:7046:com.mongodb.connection.ClusterDescription getCurrentDescription():46:46 -> a
    7046:7046:void publishDescription(com.mongodb.connection.ClusterType,com.mongodb.connection.ServerDescription):122 -> a
    8046:8046:com.mongodb.connection.ClusterSettings getSettings():46:46 -> a
    8046:8046:void publishDescription(com.mongodb.connection.ClusterType,com.mongodb.connection.ServerDescription):124 -> a
    9046:9046:com.mongodb.internal.connection.ClusterableServerFactory getServerFactory():46:46 -> a
    9046:9046:void publishDescription(com.mongodb.connection.ClusterType,com.mongodb.connection.ServerDescription):125 -> a
    46:46:void withLock(java.lang.Runnable) -> a
    46:46:com.mongodb.connection.ClusterDescription getCurrentDescription() -> c
    46:46:boolean isClosed() -> d
    46:46:com.mongodb.internal.connection.ClusterableServerFactory getServerFactory() -> e
    46:46:com.mongodb.connection.ClusterSettings getSettings() -> f
    46:46:com.mongodb.connection.ClusterId getClusterId() -> g
    46:46:com.mongodb.connection.ClusterDescription getDescription() -> h
    46:46:com.mongodb.internal.connection.ServerTuple selectServer(com.mongodb.selector.ServerSelector) -> a
    46:46:com.mongodb.internal.connection.ClusterClock getClock() -> i
    88:110:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent) -> b
    9065:9065:com.mongodb.connection.ServerDescription com.mongodb.event.ServerDescriptionChangedEvent.getNewDescription():65:65 -> b
    9065:9065:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):88 -> b
    10046:10046:com.mongodb.connection.ClusterSettings getSettings():46:46 -> b
    10046:10046:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):90 -> b
    10439:10439:com.mongodb.connection.ClusterType com.mongodb.connection.ClusterSettings.getRequiredClusterType():439:439 -> b
    10439:10439:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):90 -> b
    11046:11046:com.mongodb.connection.ClusterSettings getSettings():46:46 -> b
    11046:11046:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):91 -> b
    11439:11439:com.mongodb.connection.ClusterType com.mongodb.connection.ClusterSettings.getRequiredClusterType():439:439 -> b
    11439:11439:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):91 -> b
    11823:11823:com.mongodb.connection.ClusterType com.mongodb.connection.ServerDescription.getClusterType():823:823 -> b
    11823:11823:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):91 -> b
    12046:12046:com.mongodb.connection.ClusterSettings getSettings():46:46 -> b
    12046:12046:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):93 -> b
    12439:12439:com.mongodb.connection.ClusterType com.mongodb.connection.ClusterSettings.getRequiredClusterType():439:439 -> b
    12439:12439:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):93 -> b
    13046:13046:com.mongodb.connection.ClusterSettings getSettings():46:46 -> b
    13046:13046:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):94 -> b
    13448:13448:java.lang.String com.mongodb.connection.ClusterSettings.getRequiredReplicaSetName():448:448 -> b
    13448:13448:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):94 -> b
    14046:14046:com.mongodb.connection.ClusterSettings getSettings():46:46 -> b
    14046:14046:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):95 -> b
    14448:14448:java.lang.String com.mongodb.connection.ClusterSettings.getRequiredReplicaSetName():448:448 -> b
    14448:14448:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):95 -> b
    14787:14787:java.lang.String com.mongodb.connection.ServerDescription.getSetName():787:787 -> b
    14787:14787:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):95 -> b
    15117:15117:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription.builder(com.mongodb.connection.ServerDescription):117:117 -> b
    15117:15117:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):96 -> b
    15787:15787:java.lang.String com.mongodb.connection.ServerDescription.getSetName():787:787 -> b
    15787:15787:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):99 -> b
    16046:16046:com.mongodb.connection.ClusterSettings getSettings():46:46 -> b
    16046:16046:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):99 -> b
    16448:16448:java.lang.String com.mongodb.connection.ClusterSettings.getRequiredReplicaSetName():448:448 -> b
    16448:16448:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):99 -> b
    16480:16481:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.exception(java.lang.Throwable):480:481 -> b
    16480:16481:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):97 -> b
    17336:17337:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.setName(java.lang.String):336:337 -> b
    17336:17337:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):101 -> b
    17347:17348:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.ok(boolean):347:348 -> b
    17347:17348:void lambda$onChange$1(com.mongodb.event.ServerDescriptionChangedEvent):102 -> b
    60:63:void lambda$new$0(com.mongodb.connection.ClusterSettings) -> a
    17421:17421:java.util.List com.mongodb.connection.ClusterSettings.getHosts():421:421 -> a
    17421:17421:void lambda$new$0(com.mongodb.connection.ClusterSettings):60 -> a
    18106:18106:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription.builder():106:106 -> a
    18106:18106:void lambda$new$0(com.mongodb.connection.ClusterSettings):61 -> a
    18358:18359:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.state(com.mongodb.connection.ServerConnectionState):358:359 -> a
    18358:18359:void lambda$new$0(com.mongodb.connection.ClusterSettings):61 -> a
    18421:18421:java.util.List com.mongodb.connection.ClusterSettings.getHosts():421:421 -> a
    18421:18421:void lambda$new$0(com.mongodb.connection.ClusterSettings):61 -> a
    19220:19221:com.mongodb.connection.ServerDescription$Builder com.mongodb.connection.ServerDescription$Builder.address(com.mongodb.ServerAddress):220:221 -> a
    19220:19221:void lambda$new$0(com.mongodb.connection.ClusterSettings):61 -> a
    47:47:void <clinit>() -> <clinit>
com.mongodb.internal.connection.SnappyCompressor -> com.a.e.g.aT:
    29:29:void <init>() -> <init>
    32:32:java.lang.String getName() -> a
    37:37:byte getId() -> b
    44:56:void compress(java.util.List,org.bson.io.BsonOutput) -> a
    1059:1063:int getUncompressedSize(java.util.List):59:63 -> a
    1059:1063:void compress(java.util.List,org.bson.io.BsonOutput):44 -> a
    1067:1073:void copy(java.util.List,byte[]):67:73 -> a
    1067:1073:void compress(java.util.List,org.bson.io.BsonOutput):47 -> a
    77:77:java.io.InputStream getInputStream(java.io.InputStream) -> a
com.mongodb.internal.connection.SocketStream -> com.a.e.g.aU:
    com.mongodb.ServerAddress address -> a
    com.mongodb.connection.SocketSettings settings -> b
    com.mongodb.connection.SslSettings sslSettings -> c
    javax.net.SocketFactory socketFactory -> d
    com.mongodb.connection.BufferProvider bufferProvider -> e
    java.net.Socket socket -> f
    java.io.OutputStream outputStream -> g
    java.io.InputStream inputStream -> h
    boolean isClosed -> i
    57:63:void <init>(com.mongodb.ServerAddress,com.mongodb.connection.SocketSettings,com.mongodb.connection.SslSettings,javax.net.SocketFactory,com.mongodb.connection.BufferProvider) -> <init>
    68:75:void open() -> a
    1161:1161:com.mongodb.ServerAddress getAddress():161:161 -> a
    1161:1161:void open():73 -> a
    78:91:java.net.Socket initializeSocket() -> b
    2161:2161:com.mongodb.ServerAddress getAddress():161:161 -> b
    2161:2161:java.net.Socket initializeSocket():91 -> b
    96:96:org.bson.ByteBuf getBuffer(int) -> a
    101:104:void write(java.util.List) -> a
    108:122:org.bson.ByteBuf read(int) -> b
    3161:3161:com.mongodb.ServerAddress getAddress():161:161 -> b
    3161:3161:org.bson.ByteBuf read(int):115 -> b
    128:128:boolean supportsAdditionalTimeout() -> c
    133:141:org.bson.ByteBuf read(int,int) -> a
    176:183:void close() -> d
com.mongodb.internal.connection.SocketStreamHelper -> com.a.e.g.aV:
    java.net.SocketOption KEEP_COUNT_OPTION -> a
    java.net.SocketOption KEEP_IDLE_OPTION -> b
    java.net.SocketOption KEEP_INTERVAL_OPTION -> c
    java.lang.reflect.Method SET_OPTION_METHOD -> d
    77:108:void initialize(java.net.Socket,java.net.InetSocketAddress,com.mongodb.connection.SocketSettings,com.mongodb.connection.SslSettings) -> a
    1112:1126:void setExtendedSocketOptions(java.net.Socket):112:126 -> a
    1112:1126:void initialize(java.net.Socket,java.net.InetSocketAddress,com.mongodb.connection.SocketSettings,com.mongodb.connection.SslSettings):82 -> a
    1190:1190:int com.mongodb.connection.SocketSettings.getReceiveBufferSize():190:190 -> a
    1190:1190:void initialize(java.net.Socket,java.net.InetSocketAddress,com.mongodb.connection.SocketSettings,com.mongodb.connection.SslSettings):84 -> a
    2190:2190:int com.mongodb.connection.SocketSettings.getReceiveBufferSize():190:190 -> a
    2190:2190:void initialize(java.net.Socket,java.net.InetSocketAddress,com.mongodb.connection.SocketSettings,com.mongodb.connection.SslSettings):85 -> a
    2199:2199:int com.mongodb.connection.SocketSettings.getSendBufferSize():199:199 -> a
    2199:2199:void initialize(java.net.Socket,java.net.InetSocketAddress,com.mongodb.connection.SocketSettings,com.mongodb.connection.SslSettings):87 -> a
    3199:3199:int com.mongodb.connection.SocketSettings.getSendBufferSize():199:199 -> a
    3199:3199:void initialize(java.net.Socket,java.net.InetSocketAddress,com.mongodb.connection.SocketSettings,com.mongodb.connection.SslSettings):88 -> a
    4163:4163:boolean com.mongodb.connection.SslSettings.isEnabled():163:163 -> a
    4163:4163:void initialize(java.net.Socket,java.net.InetSocketAddress,com.mongodb.connection.SocketSettings,com.mongodb.connection.SslSettings):90 -> a
    5047:5052:void com.mongodb.internal.connection.SslHelper.enableSni(java.lang.String,javax.net.ssl.SSLParameters):47:52 -> a
    5047:5052:void initialize(java.net.Socket,java.net.InetSocketAddress,com.mongodb.connection.SocketSettings,com.mongodb.connection.SslSettings):100 -> a
    5173:5173:boolean com.mongodb.connection.SslSettings.isInvalidHostNameAllowed():173:173 -> a
    5173:5173:void initialize(java.net.Socket,java.net.InetSocketAddress,com.mongodb.connection.SocketSettings,com.mongodb.connection.SslSettings):102 -> a
    6036:6037:void com.mongodb.internal.connection.SslHelper.enableHostNameVerification(javax.net.ssl.SSLParameters):36:37 -> a
    6036:6037:void initialize(java.net.Socket,java.net.InetSocketAddress,com.mongodb.connection.SocketSettings,com.mongodb.connection.SslSettings):103 -> a
    53:73:void <clinit>() -> <clinit>
com.mongodb.internal.connection.SpeculativeAuthenticator -> com.a.e.g.aW:
    26:26:org.bson.BsonDocument createSpeculativeAuthenticateCommand(com.mongodb.internal.connection.InternalConnection) -> a
    31:31:org.bson.BsonDocument getSpeculativeAuthenticateResponse() -> b_
    34:34:void setSpeculativeAuthenticateResponse(org.bson.BsonDocument) -> a
com.mongodb.internal.connection.SplittablePayload -> com.a.e.g.aX:
    org.bson.codecs.configuration.CodecRegistry REGISTRY -> e
    com.mongodb.internal.connection.SplittablePayload$WriteRequestEncoder writeRequestEncoder -> f
    com.mongodb.internal.connection.SplittablePayload$Type payloadType -> a
    java.util.List writeRequestWithIndexes -> b
    java.util.Map insertedIds -> c
    int position -> d
    57:97:void <init>(com.mongodb.internal.connection.SplittablePayload$Type,java.util.List) -> <init>
    110:115:java.lang.String getPayloadName() -> a
    135:137:java.util.List getPayload() -> b
    163:163:boolean hasAnotherSplit() -> c
    136:136:org.bson.BsonDocumentWrapper lambda$getPayload$0(com.mongodb.internal.bulk.WriteRequestWithIndex) -> a
    55:55:org.bson.codecs.Codec access$000(org.bson.BsonDocument) -> a
    1285:1285:org.bson.codecs.Codec getCodec(org.bson.BsonDocument):285:285 -> a
    1285:1285:org.bson.codecs.Codec access$000(org.bson.BsonDocument):55 -> a
    55:55:java.util.Map access$100(com.mongodb.internal.connection.SplittablePayload) -> a
    56:56:void <clinit>() -> <clinit>
    2085:2085:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.fromProviders(org.bson.codecs.configuration.CodecProvider[]):85:85 -> <clinit>
    2085:2085:void <clinit>():56 -> <clinit>
com.mongodb.internal.connection.SplittablePayload$Type -> com.a.e.g.aX$a:
    com.mongodb.internal.connection.SplittablePayload$Type INSERT -> a
    com.mongodb.internal.connection.SplittablePayload$Type UPDATE -> b
    com.mongodb.internal.connection.SplittablePayload$Type REPLACE -> c
    com.mongodb.internal.connection.SplittablePayload$Type DELETE -> d
    com.mongodb.internal.connection.SplittablePayload$Type[] $VALUES -> e
    66:66:com.mongodb.internal.connection.SplittablePayload$Type[] values() -> values
    66:66:com.mongodb.internal.connection.SplittablePayload$Type valueOf(java.lang.String) -> valueOf
    66:66:void <init>(java.lang.String,int) -> <init>
    66:85:void <clinit>() -> <clinit>
    1066:1066:com.mongodb.internal.connection.SplittablePayload$Type[] $values():66:66 -> <clinit>
    1066:1066:void <clinit>():66 -> <clinit>
com.mongodb.internal.connection.SplittablePayload$WriteRequestEncoder -> com.a.e.g.aX$b:
    com.mongodb.internal.connection.SplittablePayload this$0 -> a
    184:185:void <init>(com.mongodb.internal.connection.SplittablePayload) -> <init>
    279:279:java.lang.Class getEncoderClass() -> a
    182:182:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1190:1275:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):190:275 -> a
    1190:1275:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    2040:2040:com.mongodb.internal.bulk.WriteRequest$Type com.mongodb.internal.bulk.WriteRequestWithIndex.getType():40:40 -> a
    2040:2040:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):190 -> a
    2040:2040:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    3036:3036:com.mongodb.internal.bulk.WriteRequest com.mongodb.internal.bulk.WriteRequestWithIndex.getWriteRequest():36:36 -> a
    3036:3036:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):191 -> a
    3036:3036:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    4036:4036:org.bson.BsonDocument com.mongodb.internal.bulk.InsertRequest.getDocument():36:36 -> a
    4036:4036:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):192 -> a
    4036:4036:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    4058:4059:org.bson.codecs.EncoderContext$Builder org.bson.codecs.EncoderContext$Builder.isEncodingCollectibleDocument(boolean):58:59 -> a
    4058:4059:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):196 -> a
    4058:4059:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    5032:5032:int com.mongodb.internal.bulk.WriteRequestWithIndex.getIndex():32:32 -> a
    5032:5032:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):197 -> a
    5032:5032:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    5412:5412:org.bson.BsonValue com.mongodb.internal.connection.IdHoldingBsonWriter.getId():412:412 -> a
    5412:5412:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):197 -> a
    5412:5412:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    6040:6040:com.mongodb.internal.bulk.WriteRequest$Type com.mongodb.internal.bulk.WriteRequestWithIndex.getType():40:40 -> a
    6040:6040:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):198 -> a
    6040:6040:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    7040:7040:com.mongodb.internal.bulk.WriteRequest$Type com.mongodb.internal.bulk.WriteRequestWithIndex.getType():40:40 -> a
    7040:7040:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):199 -> a
    7040:7040:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    8036:8036:com.mongodb.internal.bulk.WriteRequest com.mongodb.internal.bulk.WriteRequestWithIndex.getWriteRequest():36:36 -> a
    8036:8036:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):200 -> a
    8036:8036:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    8065:8065:org.bson.BsonDocument com.mongodb.internal.bulk.UpdateRequest.getFilter():65:65 -> a
    8065:8065:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):203 -> a
    8065:8065:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    9065:9065:org.bson.BsonDocument com.mongodb.internal.bulk.UpdateRequest.getFilter():65:65 -> a
    9065:9065:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):203 -> a
    9065:9065:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    9069:9069:org.bson.BsonValue com.mongodb.internal.bulk.UpdateRequest.getUpdateValue():69:69 -> a
    9069:9069:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):205 -> a
    9069:9069:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    9258:9258:boolean org.bson.BsonValue.isDocument():258:258 -> a
    9258:9258:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):206 -> a
    9258:9258:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    9267:9267:boolean org.bson.BsonValue.isArray():267:267 -> a
    9267:9267:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):206 -> a
    9267:9267:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    10267:10267:boolean org.bson.BsonValue.isArray():267:267 -> a
    10267:10267:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):209 -> a
    10267:10267:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    11258:11258:boolean org.bson.BsonValue.isDocument():258:258 -> a
    11258:11258:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):214 -> a
    11258:11258:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    12040:12040:com.mongodb.internal.bulk.WriteRequest$Type com.mongodb.internal.bulk.WriteRequestWithIndex.getType():40:40 -> a
    12040:12040:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):218 -> a
    12040:12040:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    12046:12046:boolean com.mongodb.internal.connection.FieldTrackingBsonWriter.hasWrittenField():46:46 -> a
    12046:12046:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):218 -> a
    12046:12046:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    12061:12061:com.mongodb.internal.bulk.WriteRequest$Type com.mongodb.internal.bulk.UpdateRequest.getType():61:61 -> a
    12061:12061:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):221 -> a
    12061:12061:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    12267:12267:boolean org.bson.BsonValue.isArray():267:267 -> a
    12267:12267:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):221 -> a
    12267:12267:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    13073:13073:boolean com.mongodb.internal.bulk.UpdateRequest.isMulti():73:73 -> a
    13073:13073:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):229 -> a
    13073:13073:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    13085:13085:boolean com.mongodb.internal.bulk.UpdateRequest.isUpsert():85:85 -> a
    13085:13085:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):232 -> a
    13085:13085:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    13095:13095:com.mongodb.client.model.mql.MqlExpression$AstPlaceholder com.mongodb.internal.bulk.UpdateRequest.getCollation$35680fe6():95:95 -> a
    13095:13095:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):235 -> a
    13095:13095:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    14095:14095:com.mongodb.client.model.mql.MqlExpression$AstPlaceholder com.mongodb.internal.bulk.UpdateRequest.getCollation$35680fe6():95:95 -> a
    14095:14095:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):237 -> a
    14095:14095:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    14110:14110:java.util.List com.mongodb.internal.bulk.UpdateRequest.getArrayFilters():110:110 -> a
    14110:14110:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):240 -> a
    14110:14110:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    15110:15110:java.util.List com.mongodb.internal.bulk.UpdateRequest.getArrayFilters():110:110 -> a
    15110:15110:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):242 -> a
    15110:15110:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    15115:15115:org.bson.conversions.Bson com.mongodb.internal.bulk.UpdateRequest.getHint():115:115 -> a
    15115:15115:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):247 -> a
    15115:15115:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    16115:16115:org.bson.conversions.Bson com.mongodb.internal.bulk.UpdateRequest.getHint():115:115 -> a
    16115:16115:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):249 -> a
    16115:16115:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    16125:16125:java.lang.String com.mongodb.internal.bulk.UpdateRequest.getHintString():125:125 -> a
    16125:16125:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):251 -> a
    16125:16125:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    17125:17125:java.lang.String com.mongodb.internal.bulk.UpdateRequest.getHintString():125:125 -> a
    17125:17125:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):252 -> a
    17125:17125:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    18036:18036:com.mongodb.internal.bulk.WriteRequest com.mongodb.internal.bulk.WriteRequestWithIndex.getWriteRequest():36:36 -> a
    18036:18036:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):256 -> a
    18036:18036:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    18043:18043:org.bson.BsonDocument com.mongodb.internal.bulk.DeleteRequest.getFilter():43:43 -> a
    18043:18043:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):259 -> a
    18043:18043:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    19043:19043:org.bson.BsonDocument com.mongodb.internal.bulk.DeleteRequest.getFilter():43:43 -> a
    19043:19043:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):259 -> a
    19043:19043:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    19052:19052:boolean com.mongodb.internal.bulk.DeleteRequest.isMulti():52:52 -> a
    19052:19052:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):260 -> a
    19052:19052:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    19057:19057:com.mongodb.client.model.mql.MqlExpression$AstPlaceholder com.mongodb.internal.bulk.DeleteRequest.getCollation$35680fe6():57:57 -> a
    19057:19057:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):261 -> a
    19057:19057:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    20057:20057:com.mongodb.client.model.mql.MqlExpression$AstPlaceholder com.mongodb.internal.bulk.DeleteRequest.getCollation$35680fe6():57:57 -> a
    20057:20057:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):263 -> a
    20057:20057:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    20067:20067:org.bson.conversions.Bson com.mongodb.internal.bulk.DeleteRequest.getHint():67:67 -> a
    20067:20067:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):266 -> a
    20067:20067:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    21067:21067:org.bson.conversions.Bson com.mongodb.internal.bulk.DeleteRequest.getHint():67:67 -> a
    21067:21067:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):268 -> a
    21067:21067:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    21077:21077:java.lang.String com.mongodb.internal.bulk.DeleteRequest.getHintString():77:77 -> a
    21077:21077:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):270 -> a
    21077:21077:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
    22077:22077:java.lang.String com.mongodb.internal.bulk.DeleteRequest.getHintString():77:77 -> a
    22077:22077:void encode$5e38a344(org.bson.BsonWriter,com.mongodb.internal.bulk.WriteRequestWithIndex):271 -> a
    22077:22077:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):182 -> a
com.mongodb.internal.connection.SplittablePayloadBsonWriter -> com.a.e.g.aY:
    org.bson.BsonWriter writer -> a
    org.bson.io.BsonOutput bsonOutput -> b
    com.mongodb.internal.connection.SplittablePayload payload -> c
    int maxSplittableDocumentSize -> d
    com.mongodb.internal.connection.MessageSettings settings -> e
    int messageStartPosition -> f
    39:40:void <init>(org.bson.BsonBinaryWriter,org.bson.io.BsonOutput,com.mongodb.internal.connection.MessageSettings,com.mongodb.internal.connection.SplittablePayload,int) -> <init>
    50:57:void <init>(org.bson.BsonBinaryWriter,org.bson.io.BsonOutput,int,com.mongodb.internal.connection.MessageSettings,com.mongodb.internal.connection.SplittablePayload,int) -> <init>
    61:62:void writeStartDocument() -> a
    66:70:void writeEndDocument() -> b
    1120:1120:boolean com.mongodb.internal.connection.SplittablePayload.hasPayload():120:120 -> b
    1120:1120:void writeEndDocument():66 -> b
    28:28:void writeEndArray() -> d
    28:28:void writeStartArray(java.lang.String) -> b
    28:28:void writeStartArray() -> c
    28:28:void writeStartDocument(java.lang.String) -> a
com.mongodb.internal.connection.UnixSocketChannelStream -> com.a.e.g.aZ:
    com.mongodb.UnixServerAddress address -> a
    38:40:void <init>(com.mongodb.UnixServerAddress,com.mongodb.connection.SocketSettings,com.mongodb.connection.SslSettings,com.mongodb.connection.BufferProvider) -> <init>
    44:44:java.net.Socket initializeSocket() -> b
    1056:1056:java.net.SocketAddress com.mongodb.UnixServerAddress.getUnixSocketAddress():56:56 -> b
    1056:1056:java.net.Socket initializeSocket():44 -> b
    1175:1175:java.lang.String com.mongodb.ServerAddress.getHost():175:175 -> b
    1175:1175:java.net.SocketAddress com.mongodb.UnixServerAddress.getUnixSocketAddress():56 -> b
    1175:1175:java.net.Socket initializeSocket():44 -> b
com.mongodb.internal.connection.UsageTrackingInternalConnection -> com.a.e.g.ba:
    long openedAt -> a
    long lastUsedAt -> b
    boolean closeSilently -> c
    com.mongodb.internal.connection.InternalConnection wrapped -> d
    com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager serviceStateManager -> e
    46:51:void <init>(com.mongodb.internal.connection.InternalConnection,com.mongodb.internal.connection.DefaultConnectionPool$ServiceStateManager) -> <init>
    55:61:void open() -> b
    1182:1182:org.bson.types.ObjectId com.mongodb.connection.ConnectionDescription.getServiceId():182:182 -> b
    1182:1182:void open():58 -> b
    2182:2182:org.bson.types.ObjectId com.mongodb.connection.ConnectionDescription.getServiceId():182:182 -> b
    2182:2182:void open():59 -> b
    82:88:void close() -> c
    3182:3182:org.bson.types.ObjectId com.mongodb.connection.ConnectionDescription.getServiceId():182:182 -> c
    3182:3182:void close():84 -> c
    4182:4182:org.bson.types.ObjectId com.mongodb.connection.ConnectionDescription.getServiceId():182:182 -> c
    4182:4182:void close():85 -> c
    5182:5182:org.bson.types.ObjectId com.mongodb.connection.ConnectionDescription.getServiceId():182:182 -> c
    5182:5182:void close():84 -> c
    6182:6182:org.bson.types.ObjectId com.mongodb.connection.ConnectionDescription.getServiceId():182:182 -> c
    6182:6182:void close():85 -> c
    92:92:boolean opened() -> f
    97:97:boolean isClosed() -> g
    102:102:org.bson.ByteBuf getBuffer(int) -> a
    114:116:java.lang.Object sendAndReceive(com.mongodb.internal.connection.CommandMessage,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,com.mongodb.RequestContext) -> a
    121:123:void send(com.mongodb.internal.connection.CommandMessage,org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext) -> a
    127:129:java.lang.Object receive(org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext) -> a
    134:134:boolean supportsAdditionalTimeout() -> h
    139:141:java.lang.Object receive(org.bson.codecs.Decoder,com.mongodb.internal.session.SessionContext,int) -> a
    146:146:boolean hasMoreToCome() -> i
    187:187:com.mongodb.connection.ConnectionDescription getDescription() -> j
    192:192:com.mongodb.connection.ServerDescription getInitialServerDescription() -> k
    197:197:int getGeneration() -> a
    39:39:void <clinit>() -> <clinit>
com.mongodb.internal.connection.X509Authenticator -> com.a.e.g.bb:
    org.bson.BsonDocument speculativeAuthenticateResponse -> a
    43:44:void <init>(com.mongodb.internal.connection.MongoCredentialWithCache,com.mongodb.connection.ClusterConnectionMode,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    48:57:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription) -> a
    1452:1452:java.lang.String com.mongodb.MongoCredential.getUserName():452:452 -> a
    1452:1452:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription):52 -> a
    1461:1461:java.lang.String com.mongodb.MongoCredential.getSource():461:461 -> a
    1461:1461:void authenticate(com.mongodb.internal.connection.InternalConnection,com.mongodb.connection.ConnectionDescription):53 -> a
    84:84:org.bson.BsonDocument createSpeculativeAuthenticateCommand(com.mongodb.internal.connection.InternalConnection) -> a
    2452:2452:java.lang.String com.mongodb.MongoCredential.getUserName():452:452 -> a
    2452:2452:org.bson.BsonDocument createSpeculativeAuthenticateCommand(com.mongodb.internal.connection.InternalConnection):84 -> a
    89:90:void setSpeculativeAuthenticateResponse(org.bson.BsonDocument) -> a
    94:94:org.bson.BsonDocument getSpeculativeAuthenticateResponse() -> b_
    98:106:org.bson.BsonDocument getAuthCommand(java.lang.String) -> a
    3074:3074:java.lang.String com.mongodb.AuthenticationMechanism.getMechanismName():74:74 -> a
    3074:3074:org.bson.BsonDocument getAuthCommand(java.lang.String):104 -> a
    38:38:void <clinit>() -> <clinit>
com.mongodb.internal.connection.ZlibCompressor -> com.a.e.g.bc:
    int level -> a
    30:32:void <init>(com.mongodb.internal.capi.MongoCryptHelper) -> <init>
    36:36:java.lang.String getName() -> a
    41:41:byte getId() -> b
    46:46:java.io.InputStream getInputStream(java.io.InputStream) -> a
    51:51:java.io.OutputStream getOutputStream(java.io.OutputStream) -> a
com.mongodb.internal.connection.ZstdCompressor -> com.a.e.g.bd:
    29:29:void <init>() -> <init>
    32:32:java.lang.String getName() -> a
    37:37:byte getId() -> b
    42:54:void compress(java.util.List,org.bson.io.BsonOutput) -> a
    1057:1061:int getUncompressedSize(java.util.List):57:61 -> a
    1057:1061:void compress(java.util.List,org.bson.io.BsonOutput):42 -> a
    1065:1071:void copy(java.util.List,byte[]):65:71 -> a
    1065:1071:void compress(java.util.List,org.bson.io.BsonOutput):45 -> a
    75:75:java.io.InputStream getInputStream(java.io.InputStream) -> a
com.mongodb.internal.diagnostics.logging.Loggers -> com.a.e.h.a.a:
    boolean USE_SLF4J -> a
    42:52:com.mongodb.RequestContext getLogger$66ae079a(java.lang.String) -> a
    61:66:boolean shouldUseSLF4J() -> a
    32:32:void <clinit>() -> <clinit>
com.mongodb.internal.diagnostics.logging.NoOpLogger -> com.a.e.h.a.b:
    25:27:void <init>(java.lang.String) -> <init>
com.mongodb.internal.diagnostics.logging.SLF4JLogger -> com.a.e.h.a.c:
    org.slf4j.Logger delegate -> a
    25:27:void <init>(java.lang.String) -> <init>
    36:36:boolean isTraceEnabled() -> a
    41:42:void trace(java.lang.String) -> a
    51:51:boolean isDebugEnabled() -> d_
    56:57:void debug(java.lang.String) -> b
    61:62:void debug(java.lang.String,java.lang.Throwable) -> a
    66:66:boolean isInfoEnabled() -> e_
    71:72:void info(java.lang.String) -> c
    76:77:void info(java.lang.String,java.lang.Throwable) -> b
    81:81:boolean isWarnEnabled() -> f_
    86:87:void warn(java.lang.String) -> d
    91:92:void warn(java.lang.String,java.lang.Throwable) -> c
    101:102:void error(java.lang.String) -> e
    106:107:void error(java.lang.String,java.lang.Throwable) -> d
com.mongodb.internal.dns.DefaultDnsResolver -> com.a.e.i.a:
    com.mongodb.spi.dns.DnsClient dnsClient -> a
    40:53:void <init>() -> <init>
    69:94:java.util.List resolveHostFromSrvRecords(java.lang.String,java.lang.String) -> a
    1098:1103:boolean sameParentDomain(java.util.List,java.lang.String):98:103 -> a
    1098:1103:java.util.List resolveHostFromSrvRecords(java.lang.String,java.lang.String):83 -> a
    114:133:java.lang.String resolveAdditionalQueryParametersFromTxtRecords(java.lang.String) -> a
    2048:2048:int com.mongodb.spi.dns.DnsWithResponseCodeException.getResponseCode():48:48 -> a
    2048:2048:java.lang.String resolveAdditionalQueryParametersFromTxtRecords(java.lang.String):128 -> a
com.mongodb.internal.dns.DnsResolver -> com.a.e.i.b:
    java.util.List resolveHostFromSrvRecords(java.lang.String,java.lang.String) -> a
com.mongodb.internal.dns.JndiDnsClient -> com.a.e.i.c:
    35:35:void <init>() -> <init>
    39:61:java.util.List getResourceRecordData(java.lang.String,java.lang.String) -> a
    69:80:javax.naming.directory.InitialDirContext createDnsDirContext() -> a
com.mongodb.internal.event.ClusterListenerMulticaster -> com.a.e.j.a:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> a
    java.util.List clusterListeners -> b
    38:41:void <init>(java.util.List) -> <init>
    45:54:void clusterOpening(com.mongodb.event.ClusterOpeningEvent) -> a
    58:68:void clusterClosed(com.mongodb.event.ClusterClosedEvent) -> a
    72:81:void clusterDescriptionChanged(com.mongodb.event.ClusterDescriptionChangedEvent) -> a
    34:34:void <clinit>() -> <clinit>
com.mongodb.internal.event.CommandListenerMulticaster -> com.a.e.j.b:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> a
    java.util.List commandListeners -> b
    38:41:void <init>(java.util.List) -> <init>
    45:54:void commandStarted(com.mongodb.event.CommandStartedEvent) -> a
    58:67:void commandSucceeded(com.mongodb.event.CommandSucceededEvent) -> a
    71:80:void commandFailed(com.mongodb.event.CommandFailedEvent) -> a
    34:34:void <clinit>() -> <clinit>
com.mongodb.internal.event.ConnectionPoolListenerMulticaster -> com.a.e.j.c:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> a
    java.util.List connectionPoolListeners -> b
    46:49:void <init>(java.util.List) -> <init>
    53:62:void connectionPoolOpened(com.mongodb.event.ConnectionPoolOpenedEvent) -> a
    66:75:void connectionPoolCreated(com.mongodb.event.ConnectionPoolCreatedEvent) -> a
    79:88:void connectionPoolCleared(com.mongodb.event.ConnectionPoolClearedEvent) -> a
    92:101:void connectionPoolReady(com.mongodb.event.ConnectionPoolReadyEvent) -> a
    105:114:void connectionPoolClosed(com.mongodb.event.ConnectionPoolClosedEvent) -> a
    118:127:void connectionCheckOutStarted(com.mongodb.event.ConnectionCheckOutStartedEvent) -> a
    131:140:void connectionCheckedOut(com.mongodb.event.ConnectionCheckedOutEvent) -> a
    144:153:void connectionCheckOutFailed(com.mongodb.event.ConnectionCheckOutFailedEvent) -> a
    157:166:void connectionCheckedIn(com.mongodb.event.ConnectionCheckedInEvent) -> a
    170:179:void connectionRemoved(com.mongodb.event.ConnectionRemovedEvent) -> a
    183:192:void connectionAdded(com.mongodb.event.ConnectionAddedEvent) -> a
    196:205:void connectionCreated(com.mongodb.event.ConnectionCreatedEvent) -> a
    209:218:void connectionReady(com.mongodb.event.ConnectionReadyEvent) -> a
    222:231:void connectionClosed(com.mongodb.event.ConnectionClosedEvent) -> a
    42:42:void <clinit>() -> <clinit>
com.mongodb.internal.event.EventListenerHelper -> com.a.e.j.d:
    com.mongodb.event.ClusterListener NO_OP_SERVER_LISTENER$24d157b8 -> a
    com.mongodb.event.ClusterListener NO_OP_SERVER_MONITOR_LISTENER$295e7afc -> b
    com.mongodb.event.ClusterListener NO_OP_CLUSTER_LISTENER -> c
    com.mongodb.event.ClusterListener NO_OP_CONNECTION_POOL_LISTENER$4609d73f -> d
    43:46:com.mongodb.event.ClusterListener singleClusterListener(com.mongodb.connection.ClusterSettings) -> a
    1523:1523:java.util.List com.mongodb.connection.ClusterSettings.getClusterListeners():523:523 -> a
    1523:1523:com.mongodb.event.ClusterListener singleClusterListener(com.mongodb.connection.ClusterSettings):43 -> a
    2523:2523:java.util.List com.mongodb.connection.ClusterSettings.getClusterListeners():523:523 -> a
    2523:2523:com.mongodb.event.ClusterListener singleClusterListener(com.mongodb.connection.ClusterSettings):44 -> a
    3523:3523:java.util.List com.mongodb.connection.ClusterSettings.getClusterListeners():523:523 -> a
    3523:3523:com.mongodb.event.ClusterListener singleClusterListener(com.mongodb.connection.ClusterSettings):46 -> a
    54:57:com.mongodb.event.ClusterListener singleServerListener$5e73f792(com.mongodb.connection.ServerSettings) -> a
    4225:4225:java.util.List com.mongodb.connection.ServerSettings.getServerListeners():225:225 -> a
    4225:4225:com.mongodb.event.ClusterListener singleServerListener$5e73f792(com.mongodb.connection.ServerSettings):54 -> a
    5225:5225:java.util.List com.mongodb.connection.ServerSettings.getServerListeners():225:225 -> a
    5225:5225:com.mongodb.event.ClusterListener singleServerListener$5e73f792(com.mongodb.connection.ServerSettings):55 -> a
    6225:6225:java.util.List com.mongodb.connection.ServerSettings.getServerListeners():225:225 -> a
    6225:6225:com.mongodb.event.ClusterListener singleServerListener$5e73f792(com.mongodb.connection.ServerSettings):57 -> a
    65:68:com.mongodb.event.ClusterListener singleServerMonitorListener$7053b186(com.mongodb.connection.ServerSettings) -> b
    6235:6235:java.util.List com.mongodb.connection.ServerSettings.getServerMonitorListeners():235:235 -> b
    6235:6235:com.mongodb.event.ClusterListener singleServerMonitorListener$7053b186(com.mongodb.connection.ServerSettings):65 -> b
    7235:7235:java.util.List com.mongodb.connection.ServerSettings.getServerMonitorListeners():235:235 -> b
    7235:7235:com.mongodb.event.ClusterListener singleServerMonitorListener$7053b186(com.mongodb.connection.ServerSettings):66 -> b
    8235:8235:java.util.List com.mongodb.connection.ServerSettings.getServerMonitorListeners():235:235 -> b
    8235:8235:com.mongodb.event.ClusterListener singleServerMonitorListener$7053b186(com.mongodb.connection.ServerSettings):68 -> b
    72:72:com.mongodb.event.ClusterListener clusterListenerMulticaster(java.util.List) -> a
    76:76:com.mongodb.event.ClusterListener serverListenerMulticaster$64c24458(java.util.List) -> b
    80:80:com.mongodb.event.ClusterListener serverMonitorListenerMulticaster$58e6c90c(java.util.List) -> c
    85:91:com.mongodb.RequestContext getCommandListener$17cdb228(java.util.List) -> d
    96:102:com.mongodb.event.ClusterListener getConnectionPoolListener$423810ce(com.mongodb.connection.ConnectionPoolSettings) -> a
    8379:8379:java.util.List com.mongodb.connection.ConnectionPoolSettings.getConnectionPoolListeners():379:379 -> a
    8379:8379:com.mongodb.event.ClusterListener getConnectionPoolListener$423810ce(com.mongodb.connection.ConnectionPoolSettings):96 -> a
    9379:9379:java.util.List com.mongodb.connection.ConnectionPoolSettings.getConnectionPoolListeners():379:379 -> a
    9379:9379:com.mongodb.event.ClusterListener getConnectionPoolListener$423810ce(com.mongodb.connection.ConnectionPoolSettings):100 -> a
    10379:10379:java.util.List com.mongodb.connection.ConnectionPoolSettings.getConnectionPoolListeners():379:379 -> a
    10379:10379:com.mongodb.event.ClusterListener getConnectionPoolListener$423810ce(com.mongodb.connection.ConnectionPoolSettings):102 -> a
    106:115:void <clinit>() -> <clinit>
com.mongodb.internal.event.EventListenerHelper$1 -> com.a.e.j.d$1:
    106:106:void <init>() -> <init>
com.mongodb.internal.event.EventListenerHelper$2 -> com.a.e.j.d$2:
    109:109:void <init>() -> <init>
com.mongodb.internal.event.EventListenerHelper$3 -> com.a.e.j.d$3:
    112:112:void <init>() -> <init>
com.mongodb.internal.event.EventListenerHelper$4 -> com.a.e.j.d$4:
    115:115:void <init>() -> <init>
com.mongodb.internal.event.ServerListenerMulticaster -> com.a.e.j.e:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> a
    java.util.List serverListeners -> b
    39:42:void <init>(java.util.List) -> <init>
    46:55:void serverOpening(com.mongodb.event.ServerOpeningEvent) -> a
    59:68:void serverClosed(com.mongodb.event.ServerClosedEvent) -> a
    72:81:void serverDescriptionChanged(com.mongodb.event.ServerDescriptionChangedEvent) -> a
    35:35:void <clinit>() -> <clinit>
com.mongodb.internal.event.ServerMonitorListenerMulticaster -> com.a.e.j.f:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> a
    java.util.List serverMonitorListeners -> b
    37:40:void <init>(java.util.List) -> <init>
    44:53:void serverHearbeatStarted(com.mongodb.event.ServerHeartbeatStartedEvent) -> a
    57:66:void serverHeartbeatSucceeded(com.mongodb.event.ServerHeartbeatSucceededEvent) -> a
    70:79:void serverHeartbeatFailed(com.mongodb.event.ServerHeartbeatFailedEvent) -> a
    33:33:void <clinit>() -> <clinit>
com.mongodb.internal.inject.EmptyProvider -> com.a.e.k.a:
    com.mongodb.internal.inject.EmptyProvider INSTANCE -> a
    29:30:void <init>() -> <init>
    37:37:java.util.Optional optional() -> a
    42:42:com.mongodb.internal.inject.EmptyProvider instance() -> b
    27:27:void <clinit>() -> <clinit>
com.mongodb.internal.inject.OptionalProvider -> com.a.e.k.b:
    java.util.Optional optional() -> a
com.mongodb.internal.inject.Provider -> com.a.e.k.c:
    java.lang.Object get() -> get
com.mongodb.internal.inject.SameObjectProvider -> com.a.e.k.d:
    java.util.concurrent.atomic.AtomicReference object -> a
    34:39:void <init>(java.lang.Object) -> <init>
    43:43:java.lang.Object get() -> get
    48:48:java.util.Optional optional() -> a
    52:53:void initialize(java.lang.Object) -> a
    60:60:com.mongodb.internal.inject.SameObjectProvider uninitialized() -> b
com.mongodb.internal.logging.StructuredLogMessage -> com.a.e.l.a:
    com.mongodb.internal.logging.StructuredLogMessage$Level level -> a
    com.mongodb.connection.ClusterId clusterId -> b
    java.lang.Throwable exception -> c
    java.util.List entries -> d
    64:65:void <init>(com.mongodb.internal.logging.StructuredLogMessage$Component,com.mongodb.internal.logging.StructuredLogMessage$Level,java.lang.String,com.mongodb.connection.ClusterId,java.util.List) -> <init>
    68:75:void <init>(com.mongodb.internal.logging.StructuredLogMessage$Component,com.mongodb.internal.logging.StructuredLogMessage$Level,java.lang.String,com.mongodb.connection.ClusterId,java.lang.Throwable,java.util.List) -> <init>
com.mongodb.internal.logging.StructuredLogMessage$Component -> com.a.e.l.a$a:
    com.mongodb.internal.logging.StructuredLogMessage$Component COMMAND -> a
    com.mongodb.internal.logging.StructuredLogMessage$Component[] $VALUES -> b
    36:36:com.mongodb.internal.logging.StructuredLogMessage$Component[] values() -> values
    36:36:com.mongodb.internal.logging.StructuredLogMessage$Component valueOf(java.lang.String) -> valueOf
    36:36:void <init>(java.lang.String,int) -> <init>
    36:37:void <clinit>() -> <clinit>
    1036:1036:com.mongodb.internal.logging.StructuredLogMessage$Component[] $values():36:36 -> <clinit>
    1036:1036:void <clinit>():36 -> <clinit>
com.mongodb.internal.logging.StructuredLogMessage$Entry -> com.a.e.l.a$b:
    java.lang.Object value -> a
    48:51:void <init>(java.lang.String,java.lang.Object) -> <init>
    58:58:java.lang.Object getValue() -> a
com.mongodb.internal.logging.StructuredLogMessage$Level -> com.a.e.l.a$c:
    com.mongodb.internal.logging.StructuredLogMessage$Level DEBUG -> a
    com.mongodb.internal.logging.StructuredLogMessage$Level[] $VALUES -> b
    40:40:com.mongodb.internal.logging.StructuredLogMessage$Level[] values() -> values
    40:40:com.mongodb.internal.logging.StructuredLogMessage$Level valueOf(java.lang.String) -> valueOf
    40:40:void <init>(java.lang.String,int) -> <init>
    40:41:void <clinit>() -> <clinit>
    1040:1040:com.mongodb.internal.logging.StructuredLogMessage$Level[] $values():40:40 -> <clinit>
    1040:1040:void <clinit>():40 -> <clinit>
com.mongodb.internal.logging.StructuredLogger -> com.a.e.l.b:
    java.util.concurrent.ConcurrentHashMap INTERCEPTORS -> a
    com.mongodb.RequestContext logger$2b2d9cbd -> b
    53:56:com.mongodb.internal.connection.ScramShaAuthenticator$AuthenticationHashGenerator getInterceptor$5867d4be(java.lang.String) -> a
    60:61:void <init>(java.lang.String) -> <init>
    64:66:void <init>(com.mongodb.RequestContext) -> <init>
    69:78:boolean isRequired(com.mongodb.internal.logging.StructuredLogMessage$Level,com.mongodb.connection.ClusterId) -> a
    1078:1078:java.lang.String com.mongodb.connection.ClusterId.getDescription():78:78 -> a
    1078:1078:boolean isRequired(com.mongodb.internal.logging.StructuredLogMessage$Level,com.mongodb.connection.ClusterId):69 -> a
    83:102:void log(com.mongodb.internal.logging.StructuredLogMessage,java.lang.String) -> a
    1090:1090:com.mongodb.connection.ClusterId com.mongodb.internal.logging.StructuredLogMessage.getClusterId():90:90 -> a
    1090:1090:void log(com.mongodb.internal.logging.StructuredLogMessage,java.lang.String):83 -> a
    2078:2078:java.lang.String com.mongodb.connection.ClusterId.getDescription():78:78 -> a
    2078:2078:void log(com.mongodb.internal.logging.StructuredLogMessage,java.lang.String):83 -> a
    2082:2082:com.mongodb.internal.logging.StructuredLogMessage$Level com.mongodb.internal.logging.StructuredLogMessage.getLevel():82:82 -> a
    2082:2082:void log(com.mongodb.internal.logging.StructuredLogMessage,java.lang.String):88 -> a
    2095:2095:java.lang.Throwable com.mongodb.internal.logging.StructuredLogMessage.getException():95:95 -> a
    2095:2095:void log(com.mongodb.internal.logging.StructuredLogMessage,java.lang.String):91 -> a
    2099:2099:java.util.List com.mongodb.internal.logging.StructuredLogMessage.getEntries():99:99 -> a
    2099:2099:void log(com.mongodb.internal.logging.StructuredLogMessage,java.lang.String):93 -> a
    3099:3099:java.util.List com.mongodb.internal.logging.StructuredLogMessage.getEntries():99:99 -> a
    3099:3099:void log(com.mongodb.internal.logging.StructuredLogMessage,java.lang.String):95 -> a
    37:37:void <clinit>() -> <clinit>
com.mongodb.internal.logging.StructuredLogger$1 -> com.a.e.l.b$1:
    int[] $SwitchMap$com$mongodb$internal$logging$StructuredLogMessage$Level -> a
    74:74:void <clinit>() -> <clinit>
com.mongodb.internal.operation.AbortTransactionOperation -> com.a.e.m.a:
    org.bson.BsonDocument recoveryToken -> a
    33:34:void <init>(com.mongodb.WriteConcern) -> <init>
    43:43:java.lang.String getCommandName() -> a
    48:52:com.mongodb.internal.operation.CommandOperationHelper$CommandCreator getCommandCreator() -> b
    57:57:com.mongodb.Function getRetryCommandModifier() -> c
    57:57:org.bson.BsonDocument lambda$getRetryCommandModifier$1(org.bson.BsonDocument) -> a
    50:50:org.bson.BsonDocument lambda$getCommandCreator$0(com.mongodb.internal.operation.CommandOperationHelper$CommandCreator,com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription) -> a
com.mongodb.internal.operation.AggregateResponseBatchCursor -> com.a.e.m.b:
com.mongodb.internal.operation.BatchCursor -> com.a.e.m.c:
    void close() -> close
    boolean hasNext() -> hasNext
    java.util.List next() -> a
    35:35:java.lang.Object next() -> next
com.mongodb.internal.operation.BsonArrayWrapper -> com.a.e.m.d:
    java.util.List wrappedArray -> a
    34:36:void <init>(java.util.List) -> <init>
    44:44:java.util.List getValues() -> a
    49:49:int size() -> size
    54:54:boolean isEmpty() -> isEmpty
    59:59:boolean contains(java.lang.Object) -> contains
    64:64:java.util.Iterator iterator() -> iterator
    69:69:java.lang.Object[] toArray() -> toArray
    74:74:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    79:79:boolean add(org.bson.BsonValue) -> a
    84:84:boolean remove(java.lang.Object) -> remove
    89:89:boolean containsAll(java.util.Collection) -> containsAll
    94:94:boolean addAll(java.util.Collection) -> addAll
    99:99:boolean addAll(int,java.util.Collection) -> addAll
    104:104:boolean removeAll(java.util.Collection) -> removeAll
    109:109:boolean retainAll(java.util.Collection) -> retainAll
    114:114:void clear() -> clear
    119:119:org.bson.BsonValue get(int) -> a
    124:124:org.bson.BsonValue set(int,org.bson.BsonValue) -> a
    129:129:void add(int,org.bson.BsonValue) -> b
    134:134:org.bson.BsonValue remove(int) -> b
    139:139:int indexOf(java.lang.Object) -> indexOf
    144:144:int lastIndexOf(java.lang.Object) -> lastIndexOf
    149:149:java.util.ListIterator listIterator() -> listIterator
    154:154:java.util.ListIterator listIterator(int) -> listIterator
    159:159:java.util.List subList(int,int) -> subList
    164:176:boolean equals(java.lang.Object) -> equals
    181:183:int hashCode() -> hashCode
    188:188:java.lang.String toString() -> toString
    195:195:org.bson.BsonArray clone() -> b
    30:30:java.lang.Object remove(int) -> remove
    1134:1134:org.bson.BsonValue remove(int):134:134 -> remove
    1134:1134:java.lang.Object remove(int):30 -> remove
    30:30:void add(int,java.lang.Object) -> add
    2129:2129:void add(int,org.bson.BsonValue):129:129 -> add
    2129:2129:void add(int,java.lang.Object):30 -> add
    30:30:java.lang.Object set(int,java.lang.Object) -> set
    3124:3124:org.bson.BsonValue set(int,org.bson.BsonValue):124:124 -> set
    3124:3124:java.lang.Object set(int,java.lang.Object):30 -> set
    30:30:java.lang.Object get(int) -> get
    4119:4119:org.bson.BsonValue get(int):119:119 -> get
    4119:4119:java.lang.Object get(int):30 -> get
    30:30:boolean add(java.lang.Object) -> add
    5079:5079:boolean add(org.bson.BsonValue):79:79 -> add
    5079:5079:boolean add(java.lang.Object):30 -> add
    30:30:java.lang.Object clone() -> clone
com.mongodb.internal.operation.BulkWriteBatch -> com.a.e.m.e:
    org.bson.codecs.configuration.CodecRegistry REGISTRY -> g
    org.bson.codecs.Decoder DECODER -> h
    org.bson.FieldNameValidator NO_OP_FIELD_NAME_VALIDATOR -> a
    com.mongodb.MongoNamespace namespace -> i
    com.mongodb.connection.ConnectionDescription connectionDescription -> j
    boolean ordered -> k
    com.mongodb.WriteConcern writeConcern -> l
    java.lang.Boolean bypassDocumentValidation -> m
    boolean retryWrites -> b
    com.mongodb.internal.connection.BulkWriteBatchCombiner bulkWriteBatchCombiner -> n
    com.mongodb.internal.connection.IndexMap indexMap -> o
    com.mongodb.internal.bulk.WriteRequest$Type batchType -> c
    org.bson.BsonDocument command -> d
    com.mongodb.internal.connection.SplittablePayload payload -> e
    java.util.List unprocessed -> f
    com.mongodb.internal.session.SessionContext sessionContext -> p
    org.bson.BsonValue comment -> q
    org.bson.BsonDocument variables -> r
    106:123:com.mongodb.internal.operation.BulkWriteBatch createBulkWriteBatch(com.mongodb.MongoNamespace,com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription,boolean,com.mongodb.WriteConcern,java.lang.Boolean,boolean,java.util.List,com.mongodb.internal.session.SessionContext,org.bson.BsonValue,org.bson.BsonDocument) -> a
    1387:1392:boolean isRetryable(com.mongodb.internal.bulk.WriteRequest):387:392 -> a
    1387:1392:com.mongodb.internal.operation.BulkWriteBatch createBulkWriteBatch(com.mongodb.MongoNamespace,com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription,boolean,com.mongodb.WriteConcern,java.lang.Boolean,boolean,java.util.List,com.mongodb.internal.session.SessionContext,org.bson.BsonValue,org.bson.BsonDocument):115 -> a
    2073:2073:boolean com.mongodb.internal.bulk.UpdateRequest.isMulti():73:73 -> a
    2073:2073:boolean isRetryable(com.mongodb.internal.bulk.WriteRequest):388 -> a
    2073:2073:com.mongodb.internal.operation.BulkWriteBatch createBulkWriteBatch(com.mongodb.MongoNamespace,com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription,boolean,com.mongodb.WriteConcern,java.lang.Boolean,boolean,java.util.List,com.mongodb.internal.session.SessionContext,org.bson.BsonValue,org.bson.BsonDocument):115 -> a
    3052:3052:boolean com.mongodb.internal.bulk.DeleteRequest.isMulti():52:52 -> a
    3052:3052:boolean isRetryable(com.mongodb.internal.bulk.WriteRequest):390 -> a
    3052:3052:com.mongodb.internal.operation.BulkWriteBatch createBulkWriteBatch(com.mongodb.MongoNamespace,com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription,boolean,com.mongodb.WriteConcern,java.lang.Boolean,boolean,java.util.List,com.mongodb.internal.session.SessionContext,org.bson.BsonValue,org.bson.BsonDocument):115 -> a
    131:184:void <init>(com.mongodb.MongoNamespace,com.mongodb.connection.ConnectionDescription,boolean,com.mongodb.WriteConcern,java.lang.Boolean,boolean,com.mongodb.internal.connection.BulkWriteBatchCombiner,java.util.List,com.mongodb.internal.session.SessionContext,org.bson.BsonValue,org.bson.BsonDocument) -> <init>
    4040:4040:com.mongodb.internal.bulk.WriteRequest$Type com.mongodb.internal.bulk.WriteRequestWithIndex.getType():40:40 -> <init>
    4040:4040:void <init>(com.mongodb.MongoNamespace,com.mongodb.connection.ConnectionDescription,boolean,com.mongodb.WriteConcern,java.lang.Boolean,boolean,com.mongodb.internal.connection.BulkWriteBatchCombiner,java.util.List,com.mongodb.internal.session.SessionContext,org.bson.BsonValue,org.bson.BsonDocument):138 -> <init>
    4041:4041:com.mongodb.internal.connection.IndexMap com.mongodb.internal.connection.IndexMap.create():41:41 -> <init>
    4041:4041:void <init>(com.mongodb.MongoNamespace,com.mongodb.connection.ConnectionDescription,boolean,com.mongodb.WriteConcern,java.lang.Boolean,boolean,com.mongodb.internal.connection.BulkWriteBatchCombiner,java.util.List,com.mongodb.internal.session.SessionContext,org.bson.BsonValue,org.bson.BsonDocument):144 -> <init>
    5040:5040:com.mongodb.internal.bulk.WriteRequest$Type com.mongodb.internal.bulk.WriteRequestWithIndex.getType():40:40 -> <init>
    5040:5040:void <init>(com.mongodb.MongoNamespace,com.mongodb.connection.ConnectionDescription,boolean,com.mongodb.WriteConcern,java.lang.Boolean,boolean,com.mongodb.internal.connection.BulkWriteBatchCombiner,java.util.List,com.mongodb.internal.session.SessionContext,org.bson.BsonValue,org.bson.BsonDocument):147 -> <init>
    6032:6032:int com.mongodb.internal.bulk.WriteRequestWithIndex.getIndex():32:32 -> <init>
    6032:6032:void <init>(com.mongodb.MongoNamespace,com.mongodb.connection.ConnectionDescription,boolean,com.mongodb.WriteConcern,java.lang.Boolean,boolean,com.mongodb.internal.connection.BulkWriteBatchCombiner,java.util.List,com.mongodb.internal.session.SessionContext,org.bson.BsonValue,org.bson.BsonDocument):157 -> <init>
    6375:6382:com.mongodb.internal.connection.SplittablePayload$Type getPayloadType(com.mongodb.internal.bulk.WriteRequest$Type):375:382 -> <init>
    6375:6382:void <init>(com.mongodb.MongoNamespace,com.mongodb.connection.ConnectionDescription,boolean,com.mongodb.WriteConcern,java.lang.Boolean,boolean,com.mongodb.internal.connection.BulkWriteBatchCombiner,java.util.List,com.mongodb.internal.session.SessionContext,org.bson.BsonValue,org.bson.BsonDocument):163 -> <init>
    7365:7370:java.lang.String getCommandName(com.mongodb.internal.bulk.WriteRequest$Type):365:370 -> <init>
    7365:7370:void <init>(com.mongodb.MongoNamespace,com.mongodb.connection.ConnectionDescription,boolean,com.mongodb.WriteConcern,java.lang.Boolean,boolean,com.mongodb.internal.connection.BulkWriteBatchCombiner,java.util.List,com.mongodb.internal.session.SessionContext,org.bson.BsonValue,org.bson.BsonDocument):170 -> <init>
    8135:8135:java.lang.String com.mongodb.MongoNamespace.getCollectionName():135:135 -> <init>
    8135:8135:void <init>(com.mongodb.MongoNamespace,com.mongodb.connection.ConnectionDescription,boolean,com.mongodb.WriteConcern,java.lang.Boolean,boolean,com.mongodb.internal.connection.BulkWriteBatchCombiner,java.util.List,com.mongodb.internal.session.SessionContext,org.bson.BsonValue,org.bson.BsonDocument):170 -> <init>
    8260:8260:boolean com.mongodb.WriteConcern.isServerDefault():260:260 -> <init>
    8260:8260:void <init>(com.mongodb.MongoNamespace,com.mongodb.connection.ConnectionDescription,boolean,com.mongodb.WriteConcern,java.lang.Boolean,boolean,com.mongodb.internal.connection.BulkWriteBatchCombiner,java.util.List,com.mongodb.internal.session.SessionContext,org.bson.BsonValue,org.bson.BsonDocument):172 -> <init>
    191:210:void <init>(com.mongodb.MongoNamespace,com.mongodb.connection.ConnectionDescription,boolean,com.mongodb.WriteConcern,java.lang.Boolean,boolean,com.mongodb.internal.connection.BulkWriteBatchCombiner,com.mongodb.internal.connection.IndexMap,com.mongodb.internal.bulk.WriteRequest$Type,org.bson.BsonDocument,com.mongodb.internal.connection.SplittablePayload,java.util.List,com.mongodb.internal.session.SessionContext,org.bson.BsonValue,org.bson.BsonDocument) -> <init>
    213:221:void addResult(org.bson.BsonDocument) -> a
    8330:8336:com.mongodb.MongoBulkWriteException getBulkWriteException(org.bson.BsonDocument):330:336 -> a
    8330:8336:void addResult(org.bson.BsonDocument):215 -> a
    8356:8360:net.kyori.adventure.text.ComponentCompaction getWriteConcernError$5b684e5d(org.bson.BsonDocument):356:360 -> a
    8356:8360:com.mongodb.MongoBulkWriteException getBulkWriteException(org.bson.BsonDocument):335 -> a
    8356:8360:void addResult(org.bson.BsonDocument):215 -> a
    9091:9095:void com.mongodb.internal.connection.BulkWriteBatchCombiner.addErrorResult(com.mongodb.MongoBulkWriteException,com.mongodb.internal.connection.IndexMap):91:95 -> a
    9091:9095:void addResult(org.bson.BsonDocument):216 -> a
    9096:9096:com.mongodb.bulk.BulkWriteResult com.mongodb.MongoBulkWriteException.getWriteResult():96:96 -> a
    9096:9096:void com.mongodb.internal.connection.BulkWriteBatchCombiner.addErrorResult(com.mongodb.MongoBulkWriteException,com.mongodb.internal.connection.IndexMap):91 -> a
    9096:9096:void addResult(org.bson.BsonDocument):216 -> a
    9179:9179:java.util.Set com.mongodb.MongoException.getErrorLabels():179:179 -> a
    9179:9179:void com.mongodb.internal.connection.BulkWriteBatchCombiner.addErrorResult(com.mongodb.MongoBulkWriteException,com.mongodb.internal.connection.IndexMap):92 -> a
    9179:9179:void addResult(org.bson.BsonDocument):216 -> a
    10105:10105:java.util.List com.mongodb.MongoBulkWriteException.getWriteErrors():105:105 -> a
    10105:10105:void com.mongodb.internal.connection.BulkWriteBatchCombiner.addErrorResult(com.mongodb.MongoBulkWriteException,com.mongodb.internal.connection.IndexMap):93 -> a
    10105:10105:void addResult(org.bson.BsonDocument):216 -> a
    10191:10194:void com.mongodb.internal.connection.BulkWriteBatchCombiner.mergeWriteErrors(java.util.List,com.mongodb.internal.connection.IndexMap):191:194 -> a
    10191:10194:void com.mongodb.internal.connection.BulkWriteBatchCombiner.addErrorResult(com.mongodb.MongoBulkWriteException,com.mongodb.internal.connection.IndexMap):93 -> a
    10191:10194:void addResult(org.bson.BsonDocument):216 -> a
    11116:11116:net.kyori.adventure.text.ComponentCompaction com.mongodb.MongoBulkWriteException.getWriteConcernError$70b5a1b():116:116 -> a
    11116:11116:void com.mongodb.internal.connection.BulkWriteBatchCombiner.addErrorResult(com.mongodb.MongoBulkWriteException,com.mongodb.internal.connection.IndexMap):94 -> a
    11116:11116:void addResult(org.bson.BsonDocument):216 -> a
    11179:11188:void com.mongodb.internal.connection.BulkWriteBatchCombiner.mergeWriteConcernError$beeaa8f(net.kyori.adventure.text.ComponentCompaction):179:188 -> a
    11179:11188:void com.mongodb.internal.connection.BulkWriteBatchCombiner.addErrorResult(com.mongodb.MongoBulkWriteException,com.mongodb.internal.connection.IndexMap):94 -> a
    11179:11188:void addResult(org.bson.BsonDocument):216 -> a
    236:236:org.bson.codecs.Decoder getDecoder() -> a
    240:240:com.mongodb.bulk.BulkWriteResult getResult() -> b
    12137:12138:com.mongodb.bulk.BulkWriteResult com.mongodb.internal.connection.BulkWriteBatchCombiner.getResult():137:138 -> b
    12137:12138:com.mongodb.bulk.BulkWriteResult getResult():240 -> b
    12197:12200:void com.mongodb.internal.connection.BulkWriteBatchCombiner.throwOnError():197:200 -> b
    12197:12200:com.mongodb.bulk.BulkWriteResult com.mongodb.internal.connection.BulkWriteBatchCombiner.getResult():137 -> b
    12197:12200:com.mongodb.bulk.BulkWriteResult getResult():240 -> b
    13156:13156:boolean com.mongodb.internal.connection.BulkWriteBatchCombiner.hasErrors():156:156 -> b
    13156:13156:void com.mongodb.internal.connection.BulkWriteBatchCombiner.throwOnError():197 -> b
    13156:13156:com.mongodb.bulk.BulkWriteResult com.mongodb.internal.connection.BulkWriteBatchCombiner.getResult():137 -> b
    13156:13156:com.mongodb.bulk.BulkWriteResult getResult():240 -> b
    13214:13214:boolean com.mongodb.internal.connection.BulkWriteBatchCombiner.hasWriteConcernErrors():214:214 -> b
    13214:13214:boolean com.mongodb.internal.connection.BulkWriteBatchCombiner.hasErrors():156 -> b
    13214:13214:void com.mongodb.internal.connection.BulkWriteBatchCombiner.throwOnError():197 -> b
    13214:13214:com.mongodb.bulk.BulkWriteResult com.mongodb.internal.connection.BulkWriteBatchCombiner.getResult():137 -> b
    13214:13214:com.mongodb.bulk.BulkWriteResult getResult():240 -> b
    14172:14173:com.mongodb.MongoBulkWriteException com.mongodb.internal.connection.BulkWriteBatchCombiner.getErrorNonNullable():172:173 -> b
    14172:14173:void com.mongodb.internal.connection.BulkWriteBatchCombiner.throwOnError():198 -> b
    14172:14173:com.mongodb.bulk.BulkWriteResult com.mongodb.internal.connection.BulkWriteBatchCombiner.getResult():137 -> b
    14172:14173:com.mongodb.bulk.BulkWriteResult getResult():240 -> b
    253:253:boolean shouldProcessBatch() -> c
    15147:15147:boolean com.mongodb.internal.connection.BulkWriteBatchCombiner.shouldStopSendingMoreBatches():147:147 -> c
    15147:15147:boolean shouldProcessBatch():253 -> c
    15179:15179:boolean com.mongodb.internal.connection.SplittablePayload.isEmpty():179:179 -> c
    15179:15179:boolean shouldProcessBatch():253 -> c
    261:274:com.mongodb.internal.operation.BulkWriteBatch getNextBatch() -> d
    16041:16041:com.mongodb.internal.connection.IndexMap com.mongodb.internal.connection.IndexMap.create():41:41 -> d
    16041:16041:com.mongodb.internal.operation.BulkWriteBatch getNextBatch():262 -> d
    16148:16148:int com.mongodb.internal.connection.SplittablePayload.getPosition():148:148 -> d
    16148:16148:com.mongodb.internal.operation.BulkWriteBatch getNextBatch():264 -> d
    17124:17124:int com.mongodb.internal.connection.SplittablePayload.size():124:124 -> d
    17124:17124:com.mongodb.internal.operation.BulkWriteBatch getNextBatch():264 -> d
    17170:17172:com.mongodb.internal.connection.SplittablePayload com.mongodb.internal.connection.SplittablePayload.getNextSplit():170:172 -> d
    17170:17172:com.mongodb.internal.operation.BulkWriteBatch getNextBatch():271 -> d
    294:297:com.mongodb.bulk.BulkWriteResult getBulkWriteResult(org.bson.BsonDocument) -> b
    302:306:java.util.List getInsertedItems(org.bson.BsonDocument) -> c
    18128:18128:java.util.Map com.mongodb.internal.connection.SplittablePayload.getInsertedIds():128:128 -> c
    18128:18128:java.util.List getInsertedItems(org.bson.BsonDocument):303 -> c
    311:318:java.util.List getUpsertedItems(org.bson.BsonDocument) -> d
    322:322:int getModifiedCount(org.bson.BsonDocument) -> e
    326:326:boolean hasError(org.bson.BsonDocument) -> f
    340:351:java.util.List getWriteErrors(org.bson.BsonDocument) -> g
    19056:19056:java.lang.String org.bson.BsonString.getValue():56:56 -> g
    19056:19056:java.util.List getWriteErrors(org.bson.BsonDocument):346 -> g
    336:336:java.lang.String lambda$getBulkWriteException$2(org.bson.BsonValue) -> a
    20056:20056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    20056:20056:java.lang.String lambda$getBulkWriteException$2(org.bson.BsonValue):336 -> a
    305:305:com.mongodb.internal.operation.WriteConcernHelper lambda$getInsertedItems$1$7527c571(java.util.Map$Entry) -> a
    304:304:boolean lambda$getInsertedItems$0(java.util.Set,java.util.Map$Entry) -> a
    78:80:void <clinit>() -> <clinit>
    20085:20085:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.fromProviders(org.bson.codecs.configuration.CodecProvider[]):85:85 -> <clinit>
    20085:20085:void <clinit>():78 -> <clinit>
com.mongodb.internal.operation.CommandOperationHelper -> com.a.e.m.f:
    java.util.List RETRYABLE_ERROR_CODES -> a
    125:125:com.mongodb.internal.operation.CommandOperationHelper$CommandWriteTransformer writeConcernErrorTransformer() -> a
    154:160:java.lang.Throwable chooseRetryableReadException(java.lang.Throwable,java.lang.Throwable) -> b
    166:176:java.lang.Throwable chooseRetryableWriteException(java.lang.Throwable,java.lang.Throwable) -> a
    183:183:com.mongodb.internal.async.function.RetryState initialRetryState(boolean) -> a
    187:187:java.util.function.Supplier decorateReadWithRetries(com.mongodb.internal.async.function.RetryState,java.util.function.Supplier) -> a
    204:204:java.lang.Object executeRetryableRead(com.mongodb.internal.binding.ReadBinding,java.lang.String,com.mongodb.internal.operation.CommandOperationHelper$CommandCreator,org.bson.codecs.Decoder,com.mongodb.internal.operation.CommandOperationHelper$CommandReadTransformer,boolean) -> a
    1215:1223:java.lang.Object executeRetryableRead(com.mongodb.internal.binding.ReadBinding,java.util.function.Supplier,java.lang.String,com.mongodb.internal.operation.CommandOperationHelper$CommandCreator,org.bson.codecs.Decoder,com.mongodb.internal.operation.CommandOperationHelper$CommandReadTransformer,boolean):215:223 -> a
    1215:1223:java.lang.Object executeRetryableRead(com.mongodb.internal.binding.ReadBinding,java.lang.String,com.mongodb.internal.operation.CommandOperationHelper$CommandCreator,org.bson.codecs.Decoder,com.mongodb.internal.operation.CommandOperationHelper$CommandReadTransformer,boolean):204 -> a
    236:240:java.lang.Object createReadCommandAndExecute(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.ReadBinding,com.mongodb.internal.binding.ConnectionSource,java.lang.String,com.mongodb.internal.operation.CommandOperationHelper$CommandCreator,org.bson.codecs.Decoder,com.mongodb.internal.operation.CommandOperationHelper$CommandReadTransformer,com.mongodb.internal.connection.Connection) -> a
    258:261:java.lang.Object executeCommand(com.mongodb.internal.binding.WriteBinding,java.lang.String,org.bson.BsonDocument,com.mongodb.internal.connection.Connection,com.mongodb.internal.operation.CommandOperationHelper$CommandWriteTransformer) -> a
    400:437:java.lang.Object executeRetryableWrite(com.mongodb.internal.binding.WriteBinding,java.lang.String,com.mongodb.ReadPreference,org.bson.FieldNameValidator,org.bson.codecs.Decoder,com.mongodb.internal.operation.CommandOperationHelper$CommandCreator,com.mongodb.internal.operation.CommandOperationHelper$CommandWriteTransformer,com.mongodb.Function) -> a
    1381:1381:java.util.function.Supplier decorateWriteWithRetries(com.mongodb.internal.async.function.RetryState,java.util.function.Supplier):381:381 -> a
    1381:1381:java.lang.Object executeRetryableWrite(com.mongodb.internal.binding.WriteBinding,java.lang.String,com.mongodb.ReadPreference,org.bson.FieldNameValidator,org.bson.codecs.Decoder,com.mongodb.internal.operation.CommandOperationHelper$CommandCreator,com.mongodb.internal.operation.CommandOperationHelper$CommandWriteTransformer,com.mongodb.Function):401 -> a
    511:519:boolean isRetryableException(java.lang.Throwable) -> a
    2145:2145:int com.mongodb.MongoException.getCode():145:145 -> a
    2145:2145:boolean isRetryableException(java.lang.Throwable):519 -> a
    530:533:java.lang.Object rethrowIfNotNamespaceError(com.mongodb.MongoCommandException,java.lang.Object) -> a
    2537:2541:boolean isNamespaceError(java.lang.Throwable):537:541 -> a
    2537:2541:java.lang.Object rethrowIfNotNamespaceError(com.mongodb.MongoCommandException,java.lang.Object):530 -> a
    3082:3082:java.lang.String com.mongodb.MongoCommandException.getErrorMessage():82:82 -> a
    3082:3082:boolean isNamespaceError(java.lang.Throwable):539 -> a
    3082:3082:java.lang.Object rethrowIfNotNamespaceError(com.mongodb.MongoCommandException,java.lang.Object):530 -> a
    4062:4062:int com.mongodb.MongoCommandException.getErrorCode():62:62 -> a
    4062:4062:boolean isNamespaceError(java.lang.Throwable):539 -> a
    4062:4062:java.lang.Object rethrowIfNotNamespaceError(com.mongodb.MongoCommandException,java.lang.Object):530 -> a
    4145:4145:int com.mongodb.MongoException.getCode():145:145 -> a
    4145:4145:int com.mongodb.MongoCommandException.getErrorCode():62 -> a
    4145:4145:boolean isNamespaceError(java.lang.Throwable):539 -> a
    4145:4145:java.lang.Object rethrowIfNotNamespaceError(com.mongodb.MongoCommandException,java.lang.Object):530 -> a
    546:553:boolean shouldAttemptToRetryRead(com.mongodb.internal.async.function.RetryState,java.lang.Throwable) -> b
    557:577:boolean shouldAttemptToRetryWrite(com.mongodb.internal.async.function.RetryState,java.lang.Throwable) -> a
    4589:4596:boolean decideRetryableAndAddRetryableWriteErrorLabel(java.lang.Throwable,java.lang.Integer):589:596 -> a
    4589:4596:boolean shouldAttemptToRetryWrite(com.mongodb.internal.async.function.RetryState,java.lang.Throwable):570 -> a
    600:605:void addRetryableWriteErrorLabel(com.mongodb.MongoException,int) -> a
    608:617:void logRetryExecute(com.mongodb.internal.async.function.RetryState) -> a
    5302:5302:boolean com.mongodb.internal.async.function.RetryState.isFirstAttempt():302:302 -> a
    5302:5302:void logRetryExecute(com.mongodb.internal.async.function.RetryState):608 -> a
    620:626:void logUnableToRetry(java.util.function.Supplier,java.lang.Throwable) -> a
    629:637:com.mongodb.MongoException transformWriteException(com.mongodb.MongoException) -> a
    6145:6145:int com.mongodb.MongoException.getCode():145:145 -> a
    6145:6145:com.mongodb.MongoException transformWriteException(com.mongodb.MongoException):629 -> a
    6179:6179:java.util.Set com.mongodb.MongoException.getErrorLabels():179:179 -> a
    6179:6179:com.mongodb.MongoException transformWriteException(com.mongodb.MongoException):632 -> a
    402:407:java.lang.Object lambda$executeRetryableWrite$16(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.Function,com.mongodb.internal.operation.CommandOperationHelper$CommandCreator,com.mongodb.internal.operation.CommandOperationHelper$CommandWriteTransformer,java.lang.String,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder) -> a
    6302:6302:boolean com.mongodb.internal.async.function.RetryState.isFirstAttempt():302:302 -> a
    6302:6302:java.lang.Object lambda$executeRetryableWrite$16(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.Function,com.mongodb.internal.operation.CommandOperationHelper$CommandCreator,com.mongodb.internal.operation.CommandOperationHelper$CommandWriteTransformer,java.lang.String,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder):403 -> a
    408:430:java.lang.Object lambda$executeRetryableWrite$15(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,boolean,com.mongodb.Function,com.mongodb.internal.operation.CommandOperationHelper$CommandCreator,com.mongodb.internal.operation.CommandOperationHelper$CommandWriteTransformer,java.lang.String,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection) -> a
    7192:7192:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> a
    7192:7192:java.lang.Object lambda$executeRetryableWrite$15(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,boolean,com.mongodb.Function,com.mongodb.internal.operation.CommandOperationHelper$CommandCreator,com.mongodb.internal.operation.CommandOperationHelper$CommandWriteTransformer,java.lang.String,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):408 -> a
    7581:7582:boolean isRetryWritesEnabled(org.bson.BsonDocument):581:582 -> a
    7581:7582:java.lang.Object lambda$executeRetryableWrite$15(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,boolean,com.mongodb.Function,com.mongodb.internal.operation.CommandOperationHelper$CommandCreator,com.mongodb.internal.operation.CommandOperationHelper$CommandWriteTransformer,java.lang.String,org.bson.FieldNameValidator,com.mongodb.ReadPreference,org.bson.codecs.Decoder,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):419 -> a
    416:416:org.bson.BsonDocument lambda$executeRetryableWrite$14(com.mongodb.internal.operation.CommandOperationHelper$CommandCreator,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection) -> a
    414:415:org.bson.BsonDocument lambda$executeRetryableWrite$13(boolean,com.mongodb.Function,org.bson.BsonDocument) -> a
    410:411:java.lang.Boolean lambda$executeRetryableWrite$12(com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection,com.mongodb.internal.binding.WriteBinding) -> a
    217:218:java.lang.Object lambda$executeRetryableRead$5(com.mongodb.internal.async.function.RetryState,java.util.function.Supplier,com.mongodb.internal.binding.ReadBinding,java.lang.String,com.mongodb.internal.operation.CommandOperationHelper$CommandCreator,org.bson.codecs.Decoder,com.mongodb.internal.operation.CommandOperationHelper$CommandReadTransformer) -> a
    219:220:java.lang.Object lambda$executeRetryableRead$4(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.ReadBinding,java.lang.String,com.mongodb.internal.operation.CommandOperationHelper$CommandCreator,org.bson.codecs.Decoder,com.mongodb.internal.operation.CommandOperationHelper$CommandReadTransformer,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection) -> a
    219:219:java.lang.Boolean lambda$executeRetryableRead$3(com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.binding.ReadBinding) -> a
    126:128:java.lang.Void lambda$writeConcernErrorTransformer$0(org.bson.BsonDocument,com.mongodb.internal.connection.Connection) -> a
    8192:8192:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> a
    8192:8192:java.lang.Void lambda$writeConcernErrorTransformer$0(org.bson.BsonDocument,com.mongodb.internal.connection.Connection):127 -> a
    9046:9054:void com.mongodb.internal.operation.WriteConcernHelper.throwOnWriteConcernError(org.bson.BsonDocument,com.mongodb.ServerAddress,int):46:54 -> a
    9046:9054:java.lang.Void lambda$writeConcernErrorTransformer$0(org.bson.BsonDocument,com.mongodb.internal.connection.Connection):126 -> a
    9057:9057:boolean com.mongodb.internal.operation.WriteConcernHelper.hasWriteConcernError(org.bson.BsonDocument):57:57 -> a
    9057:9057:void com.mongodb.internal.operation.WriteConcernHelper.throwOnWriteConcernError(org.bson.BsonDocument,com.mongodb.ServerAddress,int):46 -> a
    9057:9057:java.lang.Void lambda$writeConcernErrorTransformer$0(org.bson.BsonDocument,com.mongodb.internal.connection.Connection):126 -> a
    509:509:void <clinit>() -> <clinit>
com.mongodb.internal.operation.CommandOperationHelper$CommandCreator -> com.a.e.m.f$a:
    org.bson.BsonDocument create(com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription) -> create
com.mongodb.internal.operation.CommandOperationHelper$CommandReadTransformer -> com.a.e.m.f$b:
    java.lang.Object apply(java.lang.Object,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection) -> apply
com.mongodb.internal.operation.CommandOperationHelper$CommandWriteTransformer -> com.a.e.m.f$c:
    java.lang.Object apply(java.lang.Object,com.mongodb.internal.connection.Connection) -> apply
com.mongodb.internal.operation.CommandReadOperation -> com.a.e.m.g:
    java.lang.String databaseName -> a
    org.bson.BsonDocument command -> b
    org.bson.codecs.Decoder decoder -> c
    40:44:void <init>(java.lang.String,org.bson.BsonDocument,org.bson.codecs.Decoder) -> <init>
    48:48:java.lang.Object execute(com.mongodb.internal.binding.ReadBinding) -> a
    1058:1058:com.mongodb.internal.operation.CommandOperationHelper$CommandCreator getCommandCreator():58:58 -> a
    1058:1058:java.lang.Object execute(com.mongodb.internal.binding.ReadBinding):48 -> a
    58:58:org.bson.BsonDocument lambda$getCommandCreator$2(com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription) -> a
    48:48:java.lang.Object lambda$execute$0(java.lang.Object,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection) -> a
com.mongodb.internal.operation.CommandResultArrayCodec -> com.a.e.m.h:
    org.bson.codecs.Decoder decoder -> a
    38:40:void <init>(org.bson.codecs.configuration.CodecRegistry,org.bson.codecs.Decoder) -> <init>
    44:57:org.bson.BsonArray decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    62:65:org.bson.BsonValue readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> c
    34:34:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
com.mongodb.internal.operation.CommandResultCodecProvider -> com.a.e.m.i:
    java.util.Map codecs -> a
    org.bson.codecs.Decoder payloadDecoder -> b
    java.util.List fieldsContainingPayload -> c
    53:61:void <init>(org.bson.codecs.Decoder,java.util.List) -> <init>
    1082:1101:void addCodecs():82:101 -> <init>
    1082:1101:void <init>(org.bson.codecs.Decoder,java.util.List):60 -> <init>
    66:78:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    104:105:void addCodec(org.bson.codecs.Codec) -> a
    109:125:boolean equals(java.lang.Object) -> equals
    130:132:int hashCode() -> hashCode
com.mongodb.internal.operation.CommandResultDocumentCodec -> com.a.e.m.j:
    org.bson.codecs.Decoder payloadDecoder -> a
    java.util.List fieldsContainingPayload -> b
    40:43:void <init>(org.bson.codecs.configuration.CodecRegistry,org.bson.codecs.Decoder,java.util.List) -> <init>
    46:46:org.bson.codecs.Codec create(org.bson.codecs.Decoder,java.lang.String) -> a
    1050:1051:org.bson.codecs.Codec create(org.bson.codecs.Decoder,java.util.List):50:51 -> a
    1050:1051:org.bson.codecs.Codec create(org.bson.codecs.Decoder,java.lang.String):46 -> a
    1085:1085:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.fromProviders(org.bson.codecs.configuration.CodecProvider[]):85:85 -> a
    1085:1085:org.bson.codecs.Codec create(org.bson.codecs.Decoder,java.util.List):50 -> a
    1085:1085:org.bson.codecs.Codec create(org.bson.codecs.Decoder,java.lang.String):46 -> a
    56:63:org.bson.BsonValue readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
com.mongodb.internal.operation.CommitTransactionOperation -> com.a.e.m.k:
    java.util.List NON_RETRYABLE_WRITE_CONCERN_ERROR_CODES -> a
    94:97:java.lang.Void execute(com.mongodb.internal.binding.WriteBinding) -> a
    1112:1115:void addErrorLabels(com.mongodb.MongoException):112:115 -> a
    1112:1115:java.lang.Void execute(com.mongodb.internal.binding.WriteBinding):96 -> a
    1121:1135:boolean shouldAddUnknownTransactionCommitResultLabel(com.mongodb.MongoException):121:135 -> a
    1121:1135:void addErrorLabels(com.mongodb.MongoException):112 -> a
    1121:1135:java.lang.Void execute(com.mongodb.internal.binding.WriteBinding):96 -> a
    1145:1145:int com.mongodb.MongoException.getCode():145:145 -> a
    1145:1145:boolean shouldAddUnknownTransactionCommitResultLabel(com.mongodb.MongoException):132 -> a
    1145:1145:void addErrorLabels(com.mongodb.MongoException):112 -> a
    1145:1145:java.lang.Void execute(com.mongodb.internal.binding.WriteBinding):96 -> a
    141:141:java.lang.String getCommandName() -> a
    146:161:com.mongodb.internal.operation.CommandOperationHelper$CommandCreator getCommandCreator() -> b
    166:166:com.mongodb.Function getRetryCommandModifier() -> c
    52:52:java.lang.Object execute(com.mongodb.internal.binding.WriteBinding) -> b
    167:175:org.bson.BsonDocument lambda$getRetryCommandModifier$4(org.bson.BsonDocument) -> a
    1361:1362:com.mongodb.WriteConcern com.mongodb.WriteConcern.withW(java.lang.String):361:362 -> a
    1361:1362:org.bson.BsonDocument lambda$getRetryCommandModifier$4(org.bson.BsonDocument):167 -> a
    2237:2238:java.lang.Integer com.mongodb.WriteConcern.getWTimeout(java.util.concurrent.TimeUnit):237:238 -> a
    2237:2238:org.bson.BsonDocument lambda$getRetryCommandModifier$4(org.bson.BsonDocument):168 -> a
    147:154:org.bson.BsonDocument lambda$getCommandCreator$1(com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription) -> a
    3052:3052:com.mongodb.internal.operation.CommandOperationHelper$CommandCreator access$001(com.mongodb.internal.operation.CommitTransactionOperation):52:52 -> a
    3052:3052:org.bson.BsonDocument lambda$getCommandCreator$1(com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription):147 -> a
    117:117:void <clinit>() -> <clinit>
com.mongodb.internal.operation.CreateCollectionOperation -> com.a.e.m.l:
    org.bson.BsonDocument ENCRYPT_CLUSTERED_INDEX -> q
    org.bson.BsonArray SAFE_CONTENT_ARRAY -> r
    java.lang.String databaseName -> s
    java.lang.String collectionName -> t
    com.mongodb.WriteConcern writeConcern -> u
    boolean capped -> a
    long sizeInBytes -> b
    boolean autoIndex -> v
    long maxDocuments -> c
    org.bson.BsonDocument storageEngineOptions -> d
    org.bson.BsonDocument indexOptionDefaults -> e
    org.bson.BsonDocument validator -> f
    com.mongodb.client.model.ValidationLevel validationLevel -> g
    com.mongodb.client.model.ValidationAction validationAction -> h
    com.mongodb.client.model.mql.MqlExpression$AstPlaceholder collation$2561489b -> i
    long expireAfterSeconds -> j
    com.mongodb.internal.connection.LoadBalancedCluster$ServerSelectionRequest timeSeriesOptions$5725804c -> k
    org.bson.internal.UuidHelper changeStreamPreAndPostImagesOptions$312a14b4 -> l
    org.bson.BsonDocument clusteredIndexKey -> m
    boolean clusteredIndexUnique -> n
    java.lang.String clusteredIndexName -> o
    org.bson.BsonDocument encryptedFields -> p
    71:97:void <init>(java.lang.String,java.lang.String,com.mongodb.WriteConcern) -> <init>
    306:310:org.bson.BsonDocument getCreateEncryptedFieldsCollectionCommand(java.lang.String) -> a
    314:361:org.bson.BsonDocument getCreateCollectionCommand() -> a
    1039:1042:void com.mongodb.internal.operation.DocumentHelper.putIfFalse(org.bson.BsonDocument,java.lang.String,boolean):39:42 -> a
    1039:1042:org.bson.BsonDocument getCreateCollectionCommand():315 -> a
    1057:1057:java.lang.String com.mongodb.client.model.ValidationLevel.getValue():57:57 -> a
    1057:1057:org.bson.BsonDocument getCreateCollectionCommand():325 -> a
    2052:2052:java.lang.String com.mongodb.client.model.ValidationAction.getValue():52:52 -> a
    2052:2052:org.bson.BsonDocument getCreateCollectionCommand():328 -> a
    3040:3043:void com.mongodb.internal.operation.WriteConcernHelper.appendWriteConcernToCommand(com.mongodb.WriteConcern,org.bson.BsonDocument):40:43 -> a
    3040:3043:org.bson.BsonDocument getCreateCollectionCommand():330 -> a
    3260:3260:boolean com.mongodb.WriteConcern.isServerDefault():260:260 -> a
    3260:3260:void com.mongodb.internal.operation.WriteConcernHelper.appendWriteConcernToCommand(com.mongodb.WriteConcern,org.bson.BsonDocument):40 -> a
    3260:3260:org.bson.BsonDocument getCreateCollectionCommand():330 -> a
    4257:4265:java.lang.String getGranularityAsString(com.mongodb.client.model.TimeSeriesGranularity):257:265 -> a
    4257:4265:org.bson.BsonDocument getCreateCollectionCommand():343 -> a
    63:63:java.lang.Object execute(com.mongodb.internal.binding.WriteBinding) -> b
    5234:5234:java.lang.Void execute(com.mongodb.internal.binding.WriteBinding):234:234 -> b
    5234:5234:java.lang.Object execute(com.mongodb.internal.binding.WriteBinding):63 -> b
    300:301:org.bson.BsonDocument lambda$getCommandFunctions$6() -> b
    298:298:org.bson.BsonDocument lambda$getCommandFunctions$5() -> c
    297:297:org.bson.BsonDocument lambda$getCommandFunctions$4() -> d
    296:296:org.bson.BsonDocument lambda$getCommandFunctions$3() -> e
    235:239:java.lang.Void lambda$execute$1(com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection) -> a
    5292:5295:java.util.List getCommandFunctions():292:295 -> a
    5292:5295:java.lang.Void lambda$execute$1(com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):235 -> a
    236:237:void lambda$execute$0(com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection,java.util.function.Supplier) -> a
    65:67:void <clinit>() -> <clinit>
com.mongodb.internal.operation.ExplainableReadOperation -> com.a.e.m.m:
com.mongodb.internal.operation.FindOperation -> com.a.e.m.n:
    com.mongodb.MongoNamespace namespace -> t
    org.bson.codecs.Decoder decoder -> u
    boolean retryReads -> a
    org.bson.BsonDocument filter -> b
    int batchSize -> c
    int limit -> d
    org.bson.BsonDocument projection -> e
    long maxTimeMS -> v
    long maxAwaitTimeMS -> w
    int skip -> f
    org.bson.BsonDocument sort -> g
    com.mongodb.CursorType cursorType -> x
    boolean oplogReplay -> h
    boolean noCursorTimeout -> i
    boolean partial -> j
    com.mongodb.client.model.mql.MqlExpression$AstPlaceholder collation$2561489b -> k
    org.bson.BsonValue comment -> l
    org.bson.BsonValue hint -> m
    org.bson.BsonDocument variables -> n
    org.bson.BsonDocument max -> o
    org.bson.BsonDocument min -> p
    boolean returnKey -> q
    boolean showRecordId -> r
    java.lang.Boolean allowDiskUse -> s
    87:104:void <init>(com.mongodb.MongoNamespace,org.bson.codecs.Decoder) -> <init>
    156:159:com.mongodb.internal.operation.FindOperation maxTime(long,java.util.concurrent.TimeUnit) -> a
    168:171:com.mongodb.internal.operation.FindOperation maxAwaitTime(long,java.util.concurrent.TimeUnit) -> b
    197:198:com.mongodb.internal.operation.FindOperation cursorType(com.mongodb.CursorType) -> a
    73:73:java.lang.Object execute(com.mongodb.internal.binding.ReadBinding) -> a
    1320:1334:com.mongodb.internal.operation.BatchCursor execute(com.mongodb.internal.binding.ReadBinding):320:334 -> a
    1320:1334:java.lang.Object execute(com.mongodb.internal.binding.ReadBinding):73 -> a
    478:480:com.mongodb.internal.operation.AggregateResponseBatchCursor lambda$transformer$8(org.bson.BsonDocument,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection) -> a
    1486:1486:long getMaxTimeForCursor():486:486 -> a
    1486:1486:com.mongodb.internal.operation.AggregateResponseBatchCursor lambda$transformer$8(org.bson.BsonDocument,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):480 -> a
    465:465:org.bson.BsonDocument lambda$getCommandCreator$7(com.mongodb.internal.session.SessionContext,com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription) -> a
    2192:2192:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> a
    2192:2192:org.bson.BsonDocument lambda$getCommandCreator$7(com.mongodb.internal.session.SessionContext,com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription):465 -> a
    2393:2461:org.bson.BsonDocument getCommand(com.mongodb.internal.session.SessionContext,int):393:461 -> a
    2393:2461:org.bson.BsonDocument lambda$getCommandCreator$7(com.mongodb.internal.session.SessionContext,com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription):465 -> a
    3135:3135:java.lang.String com.mongodb.MongoNamespace.getCollectionName():135:135 -> a
    3135:3135:org.bson.BsonDocument getCommand(com.mongodb.internal.session.SessionContext,int):393 -> a
    3135:3135:org.bson.BsonDocument lambda$getCommandCreator$7(com.mongodb.internal.session.SessionContext,com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription):465 -> a
    4028:4043:void com.mongodb.internal.operation.OperationReadConcernHelper.appendReadConcernToCommand(com.mongodb.internal.session.SessionContext,int,org.bson.BsonDocument):28:43 -> a
    4028:4043:org.bson.BsonDocument getCommand(com.mongodb.internal.session.SessionContext,int):395 -> a
    4028:4043:org.bson.BsonDocument lambda$getCommandCreator$7(com.mongodb.internal.session.SessionContext,com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription):465 -> a
    4469:4469:boolean isTailableCursor():469:469 -> a
    4469:4469:org.bson.BsonDocument getCommand(com.mongodb.internal.session.SessionContext,int):419 -> a
    4469:4469:org.bson.BsonDocument lambda$getCommandCreator$7(com.mongodb.internal.session.SessionContext,com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription):465 -> a
    4473:4473:boolean isAwaitData():473:473 -> a
    4473:4473:org.bson.BsonDocument getCommand(com.mongodb.internal.session.SessionContext,int):422 -> a
    4473:4473:org.bson.BsonDocument lambda$getCommandCreator$7(com.mongodb.internal.session.SessionContext,com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription):465 -> a
    322:323:com.mongodb.internal.operation.BatchCursor lambda$execute$2(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.ReadBinding) -> a
    324:330:com.mongodb.internal.operation.AggregateResponseBatchCursor lambda$execute$1(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.ReadBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection) -> a
    5125:5125:java.lang.String com.mongodb.MongoNamespace.getDatabaseName():125:125 -> a
    5125:5125:com.mongodb.internal.operation.AggregateResponseBatchCursor lambda$execute$1(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.ReadBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):326 -> a
    5465:5465:com.mongodb.internal.operation.CommandOperationHelper$CommandCreator getCommandCreator(com.mongodb.internal.session.SessionContext):465:465 -> a
    5465:5465:com.mongodb.internal.operation.AggregateResponseBatchCursor lambda$execute$1(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.ReadBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):327 -> a
    5477:5477:com.mongodb.internal.operation.CommandOperationHelper$CommandReadTransformer transformer():477:477 -> a
    5477:5477:com.mongodb.internal.operation.AggregateResponseBatchCursor lambda$execute$1(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.ReadBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):328 -> a
    6092:6092:org.bson.BsonDocument com.mongodb.MongoCommandException.getResponse():92:92 -> a
    6092:6092:com.mongodb.internal.operation.AggregateResponseBatchCursor lambda$execute$1(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.ReadBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):330 -> a
    324:324:java.lang.Boolean lambda$execute$0(com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.binding.ReadBinding) -> a
com.mongodb.internal.operation.ListCollectionsOperation -> com.a.e.m.o:
    java.lang.String databaseName -> g
    org.bson.codecs.Decoder decoder -> h
    boolean retryReads -> a
    org.bson.BsonDocument filter -> b
    int batchSize -> c
    long maxTimeMS -> d
    boolean nameOnly -> e
    org.bson.BsonValue comment -> f
    80:83:void <init>(java.lang.String,org.bson.codecs.Decoder) -> <init>
    70:70:java.lang.Object execute(com.mongodb.internal.binding.ReadBinding) -> a
    1144:1158:com.mongodb.internal.operation.BatchCursor execute(com.mongodb.internal.binding.ReadBinding):144:158 -> a
    1144:1158:java.lang.Object execute(com.mongodb.internal.binding.ReadBinding):70 -> a
    204:204:org.bson.BsonDocument lambda$getCommandCreator$9(com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription) -> a
    1208:1220:org.bson.BsonDocument getCommand():208:220 -> a
    1208:1220:org.bson.BsonDocument lambda$getCommandCreator$9(com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription):204 -> a
    2054:2054:org.bson.BsonDocument com.mongodb.internal.operation.CursorHelper.getCursorDocumentFromBatchSize(java.lang.Integer):54:54 -> a
    2054:2054:org.bson.BsonDocument getCommand():209 -> a
    2054:2054:org.bson.BsonDocument lambda$getCommandCreator$9(com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription):204 -> a
    200:200:com.mongodb.internal.operation.BatchCursor lambda$commandTransformer$8(org.bson.BsonDocument,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection) -> a
    146:147:com.mongodb.internal.operation.BatchCursor lambda$execute$2(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.ReadBinding) -> a
    148:154:com.mongodb.internal.operation.BatchCursor lambda$execute$1(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.ReadBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection) -> a
    2204:2204:com.mongodb.internal.operation.CommandOperationHelper$CommandCreator getCommandCreator():204:204 -> a
    2204:2204:com.mongodb.internal.operation.BatchCursor lambda$execute$1(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.ReadBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):150 -> a
    2224:2224:org.bson.codecs.Codec createCommandDecoder():224:224 -> a
    2224:2224:com.mongodb.internal.operation.BatchCursor lambda$execute$1(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.ReadBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):151 -> a
    3200:3200:com.mongodb.internal.operation.CommandOperationHelper$CommandReadTransformer commandTransformer():200:200 -> a
    3200:3200:com.mongodb.internal.operation.BatchCursor lambda$execute$1(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.ReadBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):151 -> a
    4192:4192:com.mongodb.MongoNamespace createNamespace():192:192 -> a
    4192:4192:com.mongodb.internal.operation.BatchCursor lambda$execute$1(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.ReadBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):153 -> a
    4583:4583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> a
    4583:4583:com.mongodb.internal.operation.BatchCursor lambda$execute$1(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.ReadBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):154 -> a
    148:148:java.lang.Boolean lambda$execute$0(com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.binding.ReadBinding) -> a
com.mongodb.internal.operation.MixedBulkWriteOperation -> com.a.e.m.p:
    org.bson.FieldNameValidator NO_OP_FIELD_NAME_VALIDATOR -> d
    com.mongodb.MongoNamespace namespace -> e
    java.util.List writeRequests -> f
    boolean ordered -> g
    boolean retryWrites -> h
    com.mongodb.WriteConcern writeConcern -> i
    java.lang.Boolean bypassDocumentValidation -> a
    org.bson.BsonValue comment -> b
    org.bson.BsonDocument variables -> c
    88:95:void <init>(com.mongodb.MongoNamespace,java.util.List,boolean,com.mongodb.WriteConcern,boolean) -> <init>
    152:165:boolean shouldAttemptToRetryWrite(com.mongodb.internal.async.function.RetryState,java.lang.Throwable) -> a
    1469:1471:void com.mongodb.internal.operation.MixedBulkWriteOperation$BulkWriteTracker.advance():469:471 -> a
    1469:1471:boolean shouldAttemptToRetryWrite(com.mongodb.internal.async.function.RetryState,java.lang.Throwable):163 -> a
    177:204:com.mongodb.bulk.BulkWriteResult execute(com.mongodb.internal.binding.WriteBinding) -> a
    2433:2434:void com.mongodb.internal.operation.MixedBulkWriteOperation$BulkWriteTracker.attachNew(com.mongodb.internal.async.function.RetryState,boolean):433:434 -> a
    2433:2434:com.mongodb.bulk.BulkWriteResult execute(com.mongodb.internal.binding.WriteBinding):178 -> a
    3141:3141:java.util.function.Supplier decorateWriteWithRetries(com.mongodb.internal.async.function.RetryState,java.util.function.Supplier):141:141 -> a
    3141:3141:com.mongodb.bulk.BulkWriteResult execute(com.mongodb.internal.binding.WriteBinding):179 -> a
    251:285:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection) -> a
    3474:3474:java.util.Optional com.mongodb.internal.operation.MixedBulkWriteOperation$BulkWriteTracker.batch():474:474 -> a
    3474:3474:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):253 -> a
    4192:4192:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> a
    4192:4192:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):254 -> a
    4393:4395:org.bson.BsonDocument executeCommand(com.mongodb.internal.connection.Connection,com.mongodb.internal.operation.BulkWriteBatch,com.mongodb.internal.binding.WriteBinding):393:395 -> a
    4393:4395:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):257 -> a
    5125:5125:java.lang.String com.mongodb.MongoNamespace.getDatabaseName():125:125 -> a
    5125:5125:org.bson.BsonDocument executeCommand(com.mongodb.internal.connection.Connection,com.mongodb.internal.operation.BulkWriteBatch,com.mongodb.internal.binding.WriteBinding):393 -> a
    5125:5125:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):257 -> a
    5228:5228:org.bson.BsonDocument com.mongodb.internal.operation.BulkWriteBatch.getCommand():228:228 -> a
    5228:5228:org.bson.BsonDocument executeCommand(com.mongodb.internal.connection.Connection,com.mongodb.internal.operation.BulkWriteBatch,com.mongodb.internal.binding.WriteBinding):393 -> a
    5228:5228:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):257 -> a
    5415:5417:boolean shouldAcknowledge(com.mongodb.internal.operation.BulkWriteBatch,com.mongodb.internal.session.SessionContext):415:417 -> a
    5415:5417:org.bson.BsonDocument executeCommand(com.mongodb.internal.connection.Connection,com.mongodb.internal.operation.BulkWriteBatch,com.mongodb.internal.binding.WriteBinding):395 -> a
    5415:5417:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):257 -> a
    6257:6257:boolean com.mongodb.internal.operation.BulkWriteBatch.hasAnotherBatch():257:257 -> a
    6257:6257:boolean shouldAcknowledge(com.mongodb.internal.operation.BulkWriteBatch,com.mongodb.internal.session.SessionContext):416 -> a
    6257:6257:org.bson.BsonDocument executeCommand(com.mongodb.internal.connection.Connection,com.mongodb.internal.operation.BulkWriteBatch,com.mongodb.internal.binding.WriteBinding):395 -> a
    6257:6257:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):257 -> a
    7232:7232:com.mongodb.internal.connection.SplittablePayload com.mongodb.internal.operation.BulkWriteBatch.getPayload():232:232 -> a
    7232:7232:org.bson.BsonDocument executeCommand(com.mongodb.internal.connection.Connection,com.mongodb.internal.operation.BulkWriteBatch,com.mongodb.internal.binding.WriteBinding):395 -> a
    7232:7232:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):257 -> a
    7280:7289:org.bson.FieldNameValidator com.mongodb.internal.operation.BulkWriteBatch.getFieldNameValidator():280:289 -> a
    7280:7289:org.bson.BsonDocument executeCommand(com.mongodb.internal.connection.Connection,com.mongodb.internal.operation.BulkWriteBatch,com.mongodb.internal.binding.WriteBinding):395 -> a
    7280:7289:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):257 -> a
    8224:8224:boolean com.mongodb.internal.operation.BulkWriteBatch.getRetryWrites():224:224 -> a
    8224:8224:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):258 -> a
    9179:9179:java.util.Set com.mongodb.MongoException.getErrorLabels():179:179 -> a
    9179:9179:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):264 -> a
    9421:9424:void addErrorLabelsToWriteConcern(org.bson.BsonDocument,java.util.Set):421:424 -> a
    9421:9424:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):264 -> a
    9474:9474:java.util.Optional com.mongodb.internal.operation.MixedBulkWriteOperation$BulkWriteTracker.batch():474:474 -> a
    9474:9474:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):272 -> a
    10302:10302:boolean com.mongodb.internal.async.function.RetryState.isFirstAttempt():302:302 -> a
    10302:10302:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):274 -> a
    11293:11294:void com.mongodb.internal.async.function.RetryState.markAsLastAttempt():293:294 -> a
    11293:11294:com.mongodb.bulk.BulkWriteResult executeBulkWriteBatch(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.connection.Connection):284 -> a
    356:369:void handleMongoWriteConcernWithResponseException(com.mongodb.internal.async.function.RetryState,boolean) -> a
    11302:11302:boolean com.mongodb.internal.async.function.RetryState.isFirstAttempt():302:302 -> a
    11302:11302:void handleMongoWriteConcernWithResponseException(com.mongodb.internal.async.function.RetryState,boolean):356 -> a
    11474:11474:java.util.Optional com.mongodb.internal.operation.MixedBulkWriteOperation$BulkWriteTracker.batch():474:474 -> a
    11474:11474:void handleMongoWriteConcernWithResponseException(com.mongodb.internal.async.function.RetryState,boolean):362 -> a
    407:410:com.mongodb.WriteConcern getAppliedWriteConcern(com.mongodb.internal.session.SessionContext) -> a
    76:76:java.lang.Object execute(com.mongodb.internal.binding.WriteBinding) -> b
    363:366:void lambda$handleMongoWriteConcernWithResponseException$9(java.lang.RuntimeException,com.mongodb.internal.async.function.RetryState,com.mongodb.internal.operation.BulkWriteBatch) -> a
    12041:12041:java.lang.Object com.mongodb.internal.connection.MongoWriteConcernWithResponseException.getResponse():41:41 -> a
    12041:12041:void lambda$handleMongoWriteConcernWithResponseException$9(java.lang.RuntimeException,com.mongodb.internal.async.function.RetryState,com.mongodb.internal.operation.BulkWriteBatch):364 -> a
    359:359:java.lang.Boolean lambda$handleMongoWriteConcernWithResponseException$8(boolean,boolean) -> a
    180:181:com.mongodb.bulk.BulkWriteResult lambda$execute$1(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding) -> a
    182:198:com.mongodb.bulk.BulkWriteResult lambda$execute$0(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection) -> a
    12192:12192:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> a
    12192:12192:com.mongodb.bulk.BulkWriteResult lambda$execute$0(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):184 -> a
    12474:12474:java.util.Optional com.mongodb.internal.operation.MixedBulkWriteOperation$BulkWriteTracker.batch():474:474 -> a
    12474:12474:com.mongodb.bulk.BulkWriteResult lambda$execute$0(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):192 -> a
    13437:13439:com.mongodb.internal.operation.MixedBulkWriteOperation$BulkWriteTracker com.mongodb.internal.operation.MixedBulkWriteOperation$BulkWriteTracker.attachNew(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.operation.BulkWriteBatch):437:439 -> a
    13437:13439:com.mongodb.bulk.BulkWriteResult lambda$execute$0(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):193 -> a
    14224:14224:boolean com.mongodb.internal.operation.BulkWriteBatch.getRetryWrites():224:224 -> a
    14224:14224:com.mongodb.internal.operation.MixedBulkWriteOperation$BulkWriteTracker com.mongodb.internal.operation.MixedBulkWriteOperation$BulkWriteTracker.attachNew(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.operation.BulkWriteBatch):437 -> a
    14224:14224:com.mongodb.bulk.BulkWriteResult lambda$execute$0(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection):193 -> a
    77:77:void <clinit>() -> <clinit>
com.mongodb.internal.operation.MixedBulkWriteOperation$BulkWriteTracker -> com.a.e.m.p$a:
    int attempt -> a
    int attempts -> c
    com.mongodb.internal.operation.BulkWriteBatch batch -> b
    443:446:com.mongodb.internal.operation.MixedBulkWriteOperation$BulkWriteTracker attachNext(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.operation.BulkWriteBatch) -> a
    1224:1224:boolean com.mongodb.internal.operation.BulkWriteBatch.getRetryWrites():224:224 -> a
    1224:1224:com.mongodb.internal.operation.MixedBulkWriteOperation$BulkWriteTracker attachNext(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.operation.BulkWriteBatch):444 -> a
    450:456:void attach(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.operation.MixedBulkWriteOperation$BulkWriteTracker) -> a
    2224:2224:boolean com.mongodb.internal.operation.BulkWriteBatch.getRetryWrites():224:224 -> a
    2224:2224:void attach(com.mongodb.internal.async.function.RetryState,com.mongodb.internal.operation.MixedBulkWriteOperation$BulkWriteTracker):453 -> a
    458:462:void <init>(boolean,com.mongodb.internal.operation.BulkWriteBatch) -> <init>
    465:465:boolean lastAttempt() -> a
    454:454:java.lang.String lambda$attach$0(com.mongodb.internal.operation.BulkWriteBatch) -> a
    2232:2232:com.mongodb.internal.connection.SplittablePayload com.mongodb.internal.operation.BulkWriteBatch.getPayload():232:232 -> a
    2232:2232:java.lang.String lambda$attach$0(com.mongodb.internal.operation.BulkWriteBatch):454 -> a
    3103:3103:com.mongodb.internal.connection.SplittablePayload$Type com.mongodb.internal.connection.SplittablePayload.getPayloadType():103:103 -> a
    3103:3103:java.lang.String lambda$attach$0(com.mongodb.internal.operation.BulkWriteBatch):454 -> a
com.mongodb.internal.operation.OperationHelper -> com.a.e.m.q:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> a
    179:183:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern) -> a
    1199:1202:void checkBypassDocumentValidationIsSupported(java.lang.Boolean,com.mongodb.WriteConcern):199:202 -> a
    1199:1202:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):179 -> a
    2131:2143:void validateWriteRequestCollations(java.util.List,com.mongodb.WriteConcern):131:143 -> a
    2131:2143:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):180 -> a
    3095:3095:com.mongodb.client.model.mql.MqlExpression$AstPlaceholder com.mongodb.internal.bulk.UpdateRequest.getCollation$35680fe6():95:95 -> a
    3095:3095:void validateWriteRequestCollations(java.util.List,com.mongodb.WriteConcern):134 -> a
    3095:3095:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):180 -> a
    4057:4057:com.mongodb.client.model.mql.MqlExpression$AstPlaceholder com.mongodb.internal.bulk.DeleteRequest.getCollation$35680fe6():57:57 -> a
    4057:4057:void validateWriteRequestCollations(java.util.List,com.mongodb.WriteConcern):136 -> a
    4057:4057:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):180 -> a
    4094:4097:void validateCollationAndWriteConcern$6accf55d(com.mongodb.client.model.mql.MqlExpression$AstPlaceholder,com.mongodb.WriteConcern):94:97 -> a
    4094:4097:void validateWriteRequestCollations(java.util.List,com.mongodb.WriteConcern):142 -> a
    4094:4097:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):180 -> a
    4146:4156:void validateUpdateRequestArrayFilters(java.util.List,com.mongodb.WriteConcern):146:156 -> a
    4146:4156:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):181 -> a
    5110:5110:java.util.List com.mongodb.internal.bulk.UpdateRequest.getArrayFilters():110:110 -> a
    5110:5110:void validateUpdateRequestArrayFilters(java.util.List,com.mongodb.WriteConcern):149 -> a
    5110:5110:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):181 -> a
    6100:6103:void validateArrayFilters(com.mongodb.WriteConcern):100:103 -> a
    6100:6103:void validateUpdateRequestArrayFilters(java.util.List,com.mongodb.WriteConcern):152 -> a
    6100:6103:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):181 -> a
    6160:6175:void validateWriteRequestHints(com.mongodb.connection.ConnectionDescription,java.util.List,com.mongodb.WriteConcern):160:175 -> a
    6160:6175:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):182 -> a
    7115:7115:org.bson.conversions.Bson com.mongodb.internal.bulk.UpdateRequest.getHint():115:115 -> a
    7115:7115:void validateWriteRequestHints(com.mongodb.connection.ConnectionDescription,java.util.List,com.mongodb.WriteConcern):164 -> a
    7115:7115:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):182 -> a
    7125:7125:java.lang.String com.mongodb.internal.bulk.UpdateRequest.getHintString():125:125 -> a
    7125:7125:void validateWriteRequestHints(com.mongodb.connection.ConnectionDescription,java.util.List,com.mongodb.WriteConcern):165 -> a
    7125:7125:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):182 -> a
    8067:8067:org.bson.conversions.Bson com.mongodb.internal.bulk.DeleteRequest.getHint():67:67 -> a
    8067:8067:void validateWriteRequestHints(com.mongodb.connection.ConnectionDescription,java.util.List,com.mongodb.WriteConcern):167 -> a
    8067:8067:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):182 -> a
    8077:8077:java.lang.String com.mongodb.internal.bulk.DeleteRequest.getHintString():77:77 -> a
    8077:8077:void validateWriteRequestHints(com.mongodb.connection.ConnectionDescription,java.util.List,com.mongodb.WriteConcern):168 -> a
    8077:8077:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):182 -> a
    8107:8117:void validateWriteRequestHint(com.mongodb.connection.ConnectionDescription,com.mongodb.WriteConcern,com.mongodb.internal.bulk.WriteRequest):107:117 -> a
    8107:8117:void validateWriteRequestHints(com.mongodb.connection.ConnectionDescription,java.util.List,com.mongodb.WriteConcern):171 -> a
    8107:8117:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):182 -> a
    8192:8192:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> a
    8192:8192:void validateWriteRequestHint(com.mongodb.connection.ConnectionDescription,com.mongodb.WriteConcern,com.mongodb.internal.bulk.WriteRequest):110 -> a
    8192:8192:void validateWriteRequestHints(com.mongodb.connection.ConnectionDescription,java.util.List,com.mongodb.WriteConcern):171 -> a
    8192:8192:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):182 -> a
    9060:9060:boolean com.mongodb.internal.operation.ServerVersionHelper.serverIsLessThanVersionFourDotFour(com.mongodb.connection.ConnectionDescription):60:60 -> a
    9060:9060:void validateWriteRequestHint(com.mongodb.connection.ConnectionDescription,com.mongodb.WriteConcern,com.mongodb.internal.bulk.WriteRequest):112 -> a
    9060:9060:void validateWriteRequestHints(com.mongodb.connection.ConnectionDescription,java.util.List,com.mongodb.WriteConcern):171 -> a
    9060:9060:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):182 -> a
    9192:9192:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> a
    9192:9192:boolean com.mongodb.internal.operation.ServerVersionHelper.serverIsLessThanVersionFourDotFour(com.mongodb.connection.ConnectionDescription):60 -> a
    9192:9192:void validateWriteRequestHint(com.mongodb.connection.ConnectionDescription,com.mongodb.WriteConcern,com.mongodb.internal.bulk.WriteRequest):112 -> a
    9192:9192:void validateWriteRequestHints(com.mongodb.connection.ConnectionDescription,java.util.List,com.mongodb.WriteConcern):171 -> a
    9192:9192:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):182 -> a
    10192:10192:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> a
    10192:10192:void validateWriteRequestHint(com.mongodb.connection.ConnectionDescription,com.mongodb.WriteConcern,com.mongodb.internal.bulk.WriteRequest):114 -> a
    10192:10192:void validateWriteRequestHints(com.mongodb.connection.ConnectionDescription,java.util.List,com.mongodb.WriteConcern):171 -> a
    10192:10192:void validateWriteRequests(com.mongodb.connection.ConnectionDescription,java.lang.Boolean,java.util.List,com.mongodb.WriteConcern):182 -> a
    207:216:boolean isRetryableWrite(boolean,com.mongodb.WriteConcern,com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription,com.mongodb.internal.session.SessionContext) -> a
    222:233:boolean canRetryWrite(com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription,com.mongodb.internal.session.SessionContext) -> a
    11140:11140:java.lang.Integer com.mongodb.connection.ServerDescription.getLogicalSessionTimeoutMinutes():140:140 -> a
    11140:11140:boolean canRetryWrite(com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription,com.mongodb.internal.session.SessionContext):222 -> a
    11814:11814:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.getType():814:814 -> a
    11814:11814:boolean canRetryWrite(com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription,com.mongodb.internal.session.SessionContext):222 -> a
    12201:12201:com.mongodb.connection.ServerType com.mongodb.connection.ConnectionDescription.getServerType():201:201 -> a
    12201:12201:boolean canRetryWrite(com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription,com.mongodb.internal.session.SessionContext):225 -> a
    237:248:boolean canRetryRead(com.mongodb.connection.ServerDescription,com.mongodb.internal.session.SessionContext) -> a
    13140:13140:java.lang.Integer com.mongodb.connection.ServerDescription.getLogicalSessionTimeoutMinutes():140:140 -> a
    13140:13140:boolean canRetryRead(com.mongodb.connection.ServerDescription,com.mongodb.internal.session.SessionContext):240 -> a
    13814:13814:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.getType():814:814 -> a
    13814:13814:boolean canRetryRead(com.mongodb.connection.ServerDescription,com.mongodb.internal.session.SessionContext):240 -> a
    14814:14814:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.getType():814:814 -> a
    14814:14814:boolean canRetryRead(com.mongodb.connection.ServerDescription,com.mongodb.internal.session.SessionContext):243 -> a
    253:253:com.mongodb.internal.operation.QueryBatchCursor createEmptyBatchCursor(com.mongodb.MongoNamespace,org.bson.codecs.Decoder,com.mongodb.ServerAddress,int) -> a
    264:265:com.mongodb.internal.operation.BatchCursor cursorDocumentToBatchCursor(org.bson.BsonDocument,org.bson.codecs.Decoder,org.bson.BsonValue,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection,int) -> a
    15583:15583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> a
    15583:15583:com.mongodb.internal.operation.BatchCursor cursorDocumentToBatchCursor(org.bson.BsonDocument,org.bson.codecs.Decoder,org.bson.BsonValue,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection,int):265 -> a
    16278:16278:com.mongodb.internal.connection.QueryResult cursorDocumentToQueryResult(org.bson.BsonDocument,com.mongodb.ServerAddress):278:278 -> a
    16278:16278:com.mongodb.internal.operation.BatchCursor cursorDocumentToBatchCursor(org.bson.BsonDocument,org.bson.codecs.Decoder,org.bson.BsonValue,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection,int):264 -> a
    278:278:com.mongodb.internal.connection.QueryResult cursorDocumentToQueryResult(org.bson.BsonDocument,com.mongodb.ServerAddress) -> a
    282:282:com.mongodb.internal.connection.QueryResult getMoreCursorDocumentToQueryResult(org.bson.BsonDocument,com.mongodb.ServerAddress) -> b
    287:289:com.mongodb.internal.connection.QueryResult cursorDocumentToQueryResult(org.bson.BsonDocument,com.mongodb.ServerAddress,java.lang.String) -> a
    17054:17054:long org.bson.BsonInt64.getValue():54:54 -> a
    17054:17054:com.mongodb.internal.connection.QueryResult cursorDocumentToQueryResult(org.bson.BsonDocument,com.mongodb.ServerAddress,java.lang.String):287 -> a
    17056:17056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    17056:17056:com.mongodb.internal.connection.QueryResult cursorDocumentToQueryResult(org.bson.BsonDocument,com.mongodb.ServerAddress,java.lang.String):288 -> a
    328:333:java.lang.Object withConnection(com.mongodb.internal.binding.WriteBinding,com.mongodb.internal.operation.OperationHelper$CallableWithConnection) -> a
    337:342:java.lang.Object withConnectionSource(com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.operation.OperationHelper$CallableWithConnection) -> a
    356:356:java.lang.Object withSourceAndConnection(java.util.function.Supplier,boolean,java.util.function.BiFunction) -> a
    372:388:java.lang.Object withSuppliedResource(java.util.function.Supplier,boolean,java.util.function.Function) -> a
    357:357:java.lang.Object lambda$withSourceAndConnection$1(boolean,java.util.function.BiFunction,com.mongodb.internal.binding.ConnectionSource) -> a
    358:358:java.lang.Object lambda$withSourceAndConnection$0(java.util.function.BiFunction,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection) -> a
    71:71:void <clinit>() -> <clinit>
com.mongodb.internal.operation.OperationHelper$CallableWithConnection -> com.a.e.m.q$a:
    java.lang.Object call(com.mongodb.internal.connection.Connection) -> call
com.mongodb.internal.operation.OperationHelper$ResourceSupplierInternalException -> com.a.e.m.q$b:
    529:530:void <init>(java.lang.Throwable) -> <init>
    535:535:java.lang.Throwable getCause() -> getCause
    525:525:void <init>(java.lang.Throwable,byte) -> <init>
com.mongodb.internal.operation.Operations -> com.a.e.m.r:
    com.mongodb.MongoNamespace namespace -> a
    java.lang.Class documentClass -> e
    org.bson.codecs.configuration.CodecRegistry codecRegistry -> b
    com.mongodb.WriteConcern writeConcern -> c
    boolean retryWrites -> f
    boolean retryReads -> d
    101:110:void <init>(com.mongodb.MongoNamespace,java.lang.Class,com.mongodb.ReadPreference,org.bson.codecs.configuration.CodecRegistry,com.mongodb.ReadConcern,com.mongodb.WriteConcern,boolean,boolean) -> <init>
    186:214:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions) -> a
    1301:1302:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.retryReads(boolean):301:302 -> a
    1301:1302:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):187 -> a
    2119:2120:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.filter(org.bson.BsonDocument):119:120 -> a
    2119:2120:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):188 -> a
    2214:2214:int com.mongodb.internal.client.model.FindOptions.getBatchSize():214:214 -> a
    2214:2214:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):189 -> a
    3128:3129:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.batchSize(int):128:129 -> a
    3128:3129:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):189 -> a
    4129:4129:int com.mongodb.internal.client.model.FindOptions.getSkip():129:129 -> a
    4129:4129:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):190 -> a
    4179:4180:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.skip(int):179:180 -> a
    4179:4180:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):190 -> a
    5107:5107:int com.mongodb.internal.client.model.FindOptions.getLimit():107:107 -> a
    5107:5107:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):191 -> a
    5137:5138:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.limit(int):137:138 -> a
    5137:5138:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):191 -> a
    5237:5237:org.bson.conversions.Bson com.mongodb.internal.client.model.FindOptions.getProjection():237:237 -> a
    5237:5237:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):194 -> a
    6146:6147:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.projection(org.bson.BsonDocument):146:147 -> a
    6146:6147:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):194 -> a
    6261:6261:org.bson.conversions.Bson com.mongodb.internal.client.model.FindOptions.getSort():261:261 -> a
    6261:6261:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):195 -> a
    7188:7189:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.sort(org.bson.BsonDocument):188:189 -> a
    7188:7189:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):195 -> a
    7344:7344:com.mongodb.CursorType com.mongodb.internal.client.model.FindOptions.getCursorType():344:344 -> a
    7344:7344:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):196 -> a
    8283:8283:boolean com.mongodb.internal.client.model.FindOptions.isNoCursorTimeout():283:283 -> a
    8283:8283:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):197 -> a
    9215:9216:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.noCursorTimeout(boolean):215:216 -> a
    9215:9216:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):197 -> a
    9304:9304:boolean com.mongodb.internal.client.model.FindOptions.isOplogReplay():304:304 -> a
    9304:9304:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):198 -> a
    10206:10207:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.oplogReplay(boolean):206:207 -> a
    10206:10207:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):198 -> a
    10324:10324:boolean com.mongodb.internal.client.model.FindOptions.isPartial():324:324 -> a
    10324:10324:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):199 -> a
    11224:11225:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.partial(boolean):224:225 -> a
    11224:11225:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):199 -> a
    11365:11365:com.mongodb.client.model.mql.MqlExpression$AstPlaceholder com.mongodb.internal.client.model.FindOptions.getCollation$35680fe6():365:365 -> a
    11365:11365:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):200 -> a
    12233:12234:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.collation$2b4a9d4(com.mongodb.client.model.mql.MqlExpression$AstPlaceholder):233:234 -> a
    12233:12234:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):200 -> a
    12387:12387:org.bson.BsonValue com.mongodb.internal.client.model.FindOptions.getComment():387:387 -> a
    12387:12387:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):201 -> a
    13242:13243:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.comment(org.bson.BsonValue):242:243 -> a
    13242:13243:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):201 -> a
    13461:13461:org.bson.conversions.Bson com.mongodb.internal.client.model.FindOptions.getLet():461:461 -> a
    13461:13461:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):202 -> a
    14260:14261:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.let(org.bson.BsonDocument):260:261 -> a
    14260:14261:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):202 -> a
    14505:14505:org.bson.conversions.Bson com.mongodb.internal.client.model.FindOptions.getMin():505:505 -> a
    14505:14505:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):203 -> a
    15278:15279:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.min(org.bson.BsonDocument):278:279 -> a
    15278:15279:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):203 -> a
    15484:15484:org.bson.conversions.Bson com.mongodb.internal.client.model.FindOptions.getMax():484:484 -> a
    15484:15484:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):204 -> a
    16269:16270:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.max(org.bson.BsonDocument):269:270 -> a
    16269:16270:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):204 -> a
    16527:16527:boolean com.mongodb.internal.client.model.FindOptions.isReturnKey():527:527 -> a
    16527:16527:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):205 -> a
    17287:17288:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.returnKey(boolean):287:288 -> a
    17287:17288:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):205 -> a
    17550:17550:boolean com.mongodb.internal.client.model.FindOptions.isShowRecordId():550:550 -> a
    17550:17550:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):206 -> a
    18296:18297:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.showRecordId(boolean):296:297 -> a
    18296:18297:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):206 -> a
    18570:18570:java.lang.Boolean com.mongodb.internal.client.model.FindOptions.isAllowDiskUse():570:570 -> a
    18570:18570:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):207 -> a
    19314:19315:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.allowDiskUse(java.lang.Boolean):314:315 -> a
    19314:19315:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):207 -> a
    19419:19419:org.bson.conversions.Bson com.mongodb.internal.client.model.FindOptions.getHint():419:419 -> a
    19419:19419:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):209 -> a
    20419:20419:org.bson.conversions.Bson com.mongodb.internal.client.model.FindOptions.getHint():419:419 -> a
    20419:20419:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):210 -> a
    21251:21252:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.hint(org.bson.BsonValue):251:252 -> a
    21251:21252:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):210 -> a
    21440:21440:java.lang.String com.mongodb.internal.client.model.FindOptions.getHintString():440:440 -> a
    21440:21440:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):211 -> a
    22440:22440:java.lang.String com.mongodb.internal.client.model.FindOptions.getHintString():440:440 -> a
    22440:22440:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):212 -> a
    23251:23252:com.mongodb.internal.operation.FindOperation com.mongodb.internal.operation.FindOperation.hint(org.bson.BsonValue):251:252 -> a
    23251:23252:com.mongodb.internal.operation.FindOperation createFindOperation(com.mongodb.MongoNamespace,org.bson.conversions.Bson,java.lang.Class,com.mongodb.internal.client.model.FindOptions):212 -> a
    456:520:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper) -> a
    24046:24046:java.lang.Object com.mongodb.client.model.InsertOneModel.getDocument():46:46 -> a
    24046:24046:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):463 -> a
    24065:24065:org.bson.conversions.Bson com.mongodb.client.model.ReplaceOneModel.getFilter():65:65 -> a
    24065:24065:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):470 -> a
    24074:24074:java.lang.Object com.mongodb.client.model.ReplaceOneModel.getReplacement():74:74 -> a
    24074:24074:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):471 -> a
    24084:24084:com.mongodb.internal.connection.DefaultConnectionPool$Task com.mongodb.client.model.ReplaceOneModel.getReplaceOptions$7d0a0163():84:84 -> a
    24084:24084:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):473 -> a
    24089:24090:com.mongodb.internal.bulk.UpdateRequest com.mongodb.internal.bulk.UpdateRequest.upsert(boolean):89:90 -> a
    24089:24090:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):473 -> a
    25084:25084:com.mongodb.internal.connection.DefaultConnectionPool$Task com.mongodb.client.model.ReplaceOneModel.getReplaceOptions$7d0a0163():84:84 -> a
    25084:25084:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):474 -> a
    25099:25100:com.mongodb.internal.bulk.UpdateRequest com.mongodb.internal.bulk.UpdateRequest.collation$7abbc5bb(com.mongodb.client.model.mql.MqlExpression$AstPlaceholder):99:100 -> a
    25099:25100:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):474 -> a
    26084:26084:com.mongodb.internal.connection.DefaultConnectionPool$Task com.mongodb.client.model.ReplaceOneModel.getReplaceOptions$7d0a0163():84:84 -> a
    26084:26084:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):475 -> a
    26119:26120:com.mongodb.internal.bulk.UpdateRequest com.mongodb.internal.bulk.UpdateRequest.hint(org.bson.conversions.Bson):119:120 -> a
    26119:26120:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):475 -> a
    27084:27084:com.mongodb.internal.connection.DefaultConnectionPool$Task com.mongodb.client.model.ReplaceOneModel.getReplaceOptions$7d0a0163():84:84 -> a
    27084:27084:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):476 -> a
    27129:27130:com.mongodb.internal.bulk.UpdateRequest com.mongodb.internal.bulk.UpdateRequest.hintString(java.lang.String):129:130 -> a
    27129:27130:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):476 -> a
    28110:28110:org.bson.conversions.Bson com.mongodb.client.model.UpdateOneModel.getUpdate():110:110 -> a
    28110:28110:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):479 -> a
    29110:29110:org.bson.conversions.Bson com.mongodb.client.model.UpdateOneModel.getUpdate():110:110 -> a
    29110:29110:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):479 -> a
    29122:29122:java.util.List com.mongodb.client.model.UpdateOneModel.getUpdatePipeline():122:122 -> a
    29122:29122:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):480 -> a
    30100:30100:org.bson.conversions.Bson com.mongodb.client.model.UpdateOneModel.getFilter():100:100 -> a
    30100:30100:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):481 -> a
    30131:30131:com.mongodb.client.model.UpdateOptions com.mongodb.client.model.UpdateOneModel.getOptions():131:131 -> a
    30131:30131:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):483 -> a
    31050:31050:boolean com.mongodb.client.model.UpdateOptions.isUpsert():50:50 -> a
    31050:31050:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):483 -> a
    31089:31090:com.mongodb.internal.bulk.UpdateRequest com.mongodb.internal.bulk.UpdateRequest.upsert(boolean):89:90 -> a
    31089:31090:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):483 -> a
    31131:31131:com.mongodb.client.model.UpdateOptions com.mongodb.client.model.UpdateOneModel.getOptions():131:131 -> a
    31131:31131:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):484 -> a
    32100:32100:com.mongodb.client.model.mql.MqlExpression$AstPlaceholder com.mongodb.client.model.UpdateOptions.getCollation$35680fe6():100:100 -> a
    32100:32100:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):484 -> a
    33099:33100:com.mongodb.internal.bulk.UpdateRequest com.mongodb.internal.bulk.UpdateRequest.collation$7abbc5bb(com.mongodb.client.model.mql.MqlExpression$AstPlaceholder):99:100 -> a
    33099:33100:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):484 -> a
    33131:33131:com.mongodb.client.model.UpdateOptions com.mongodb.client.model.UpdateOneModel.getOptions():131:131 -> a
    33131:33131:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):485 -> a
    33139:33139:java.util.List com.mongodb.client.model.UpdateOptions.getArrayFilters():139:139 -> a
    33139:33139:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):485 -> a
    34104:34105:com.mongodb.internal.bulk.UpdateRequest com.mongodb.internal.bulk.UpdateRequest.arrayFilters(java.util.List):104:105 -> a
    34104:34105:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):485 -> a
    34131:34131:com.mongodb.client.model.UpdateOptions com.mongodb.client.model.UpdateOneModel.getOptions():131:131 -> a
    34131:34131:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):486 -> a
    34150:34150:org.bson.conversions.Bson com.mongodb.client.model.UpdateOptions.getHint():150:150 -> a
    34150:34150:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):486 -> a
    35119:35120:com.mongodb.internal.bulk.UpdateRequest com.mongodb.internal.bulk.UpdateRequest.hint(org.bson.conversions.Bson):119:120 -> a
    35119:35120:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):486 -> a
    35131:35131:com.mongodb.client.model.UpdateOptions com.mongodb.client.model.UpdateOneModel.getOptions():131:131 -> a
    35131:35131:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):487 -> a
    35173:35173:java.lang.String com.mongodb.client.model.UpdateOptions.getHintString():173:173 -> a
    35173:35173:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):487 -> a
    36129:36130:com.mongodb.internal.bulk.UpdateRequest com.mongodb.internal.bulk.UpdateRequest.hintString(java.lang.String):129:130 -> a
    36129:36130:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):487 -> a
    37113:37113:org.bson.conversions.Bson com.mongodb.client.model.UpdateManyModel.getUpdate():113:113 -> a
    37113:37113:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):490 -> a
    38113:38113:org.bson.conversions.Bson com.mongodb.client.model.UpdateManyModel.getUpdate():113:113 -> a
    38113:38113:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):490 -> a
    38126:38126:java.util.List com.mongodb.client.model.UpdateManyModel.getUpdatePipeline():126:126 -> a
    38126:38126:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):491 -> a
    39102:39102:org.bson.conversions.Bson com.mongodb.client.model.UpdateManyModel.getFilter():102:102 -> a
    39102:39102:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):492 -> a
    39135:39135:com.mongodb.client.model.UpdateOptions com.mongodb.client.model.UpdateManyModel.getOptions():135:135 -> a
    39135:39135:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):494 -> a
    40050:40050:boolean com.mongodb.client.model.UpdateOptions.isUpsert():50:50 -> a
    40050:40050:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):494 -> a
    40089:40090:com.mongodb.internal.bulk.UpdateRequest com.mongodb.internal.bulk.UpdateRequest.upsert(boolean):89:90 -> a
    40089:40090:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):494 -> a
    40135:40135:com.mongodb.client.model.UpdateOptions com.mongodb.client.model.UpdateManyModel.getOptions():135:135 -> a
    40135:40135:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):495 -> a
    41100:41100:com.mongodb.client.model.mql.MqlExpression$AstPlaceholder com.mongodb.client.model.UpdateOptions.getCollation$35680fe6():100:100 -> a
    41100:41100:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):495 -> a
    42099:42100:com.mongodb.internal.bulk.UpdateRequest com.mongodb.internal.bulk.UpdateRequest.collation$7abbc5bb(com.mongodb.client.model.mql.MqlExpression$AstPlaceholder):99:100 -> a
    42099:42100:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):495 -> a
    42135:42135:com.mongodb.client.model.UpdateOptions com.mongodb.client.model.UpdateManyModel.getOptions():135:135 -> a
    42135:42135:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):496 -> a
    42139:42139:java.util.List com.mongodb.client.model.UpdateOptions.getArrayFilters():139:139 -> a
    42139:42139:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):496 -> a
    43104:43105:com.mongodb.internal.bulk.UpdateRequest com.mongodb.internal.bulk.UpdateRequest.arrayFilters(java.util.List):104:105 -> a
    43104:43105:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):496 -> a
    43135:43135:com.mongodb.client.model.UpdateOptions com.mongodb.client.model.UpdateManyModel.getOptions():135:135 -> a
    43135:43135:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):497 -> a
    43150:43150:org.bson.conversions.Bson com.mongodb.client.model.UpdateOptions.getHint():150:150 -> a
    43150:43150:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):497 -> a
    44119:44120:com.mongodb.internal.bulk.UpdateRequest com.mongodb.internal.bulk.UpdateRequest.hint(org.bson.conversions.Bson):119:120 -> a
    44119:44120:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):497 -> a
    44135:44135:com.mongodb.client.model.UpdateOptions com.mongodb.client.model.UpdateManyModel.getOptions():135:135 -> a
    44135:44135:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):498 -> a
    44173:44173:java.lang.String com.mongodb.client.model.UpdateOptions.getHintString():173:173 -> a
    44173:44173:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):498 -> a
    45129:45130:com.mongodb.internal.bulk.UpdateRequest com.mongodb.internal.bulk.UpdateRequest.hintString(java.lang.String):129:130 -> a
    45129:45130:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):498 -> a
    46063:46063:org.bson.conversions.Bson com.mongodb.client.model.DeleteOneModel.getFilter():63:63 -> a
    46063:46063:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):501 -> a
    47047:47048:com.mongodb.internal.bulk.DeleteRequest com.mongodb.internal.bulk.DeleteRequest.multi(boolean):47:48 -> a
    47047:47048:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):501 -> a
    47073:47073:com.mongodb.client.model.DeleteOptions com.mongodb.client.model.DeleteOneModel.getOptions():73:73 -> a
    47073:47073:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):502 -> a
    48046:48046:com.mongodb.client.model.mql.MqlExpression$AstPlaceholder com.mongodb.client.model.DeleteOptions.getCollation$35680fe6():46:46 -> a
    48046:48046:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):502 -> a
    48061:48062:com.mongodb.internal.bulk.DeleteRequest com.mongodb.internal.bulk.DeleteRequest.collation$337fef63(com.mongodb.client.model.mql.MqlExpression$AstPlaceholder):61:62 -> a
    48061:48062:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):502 -> a
    48073:48073:com.mongodb.client.model.DeleteOptions com.mongodb.client.model.DeleteOneModel.getOptions():73:73 -> a
    48073:48073:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):503 -> a
    49071:49071:org.bson.conversions.Bson com.mongodb.client.model.DeleteOptions.getHint():71:71 -> a
    49071:49071:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):503 -> a
    50071:50072:com.mongodb.internal.bulk.DeleteRequest com.mongodb.internal.bulk.DeleteRequest.hint(org.bson.conversions.Bson):71:72 -> a
    50071:50072:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):503 -> a
    50073:50073:com.mongodb.client.model.DeleteOptions com.mongodb.client.model.DeleteOneModel.getOptions():73:73 -> a
    50073:50073:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):504 -> a
    50074:50074:java.lang.String com.mongodb.client.model.DeleteOptions.getHintString():83:83 -> a
    50074:50074:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):504 -> a
    50075:50076:com.mongodb.internal.bulk.DeleteRequest com.mongodb.internal.bulk.DeleteRequest.hintString(java.lang.String):81:82 -> a
    50075:50076:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):504 -> a
    50077:50077:org.bson.conversions.Bson com.mongodb.client.model.DeleteManyModel.getFilter():63:63 -> a
    50077:50077:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):507 -> a
    50078:50079:com.mongodb.internal.bulk.DeleteRequest com.mongodb.internal.bulk.DeleteRequest.multi(boolean):47:48 -> a
    50078:50079:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):507 -> a
    50080:50080:com.mongodb.client.model.DeleteOptions com.mongodb.client.model.DeleteManyModel.getOptions():73:73 -> a
    50080:50080:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):508 -> a
    50081:50081:com.mongodb.client.model.mql.MqlExpression$AstPlaceholder com.mongodb.client.model.DeleteOptions.getCollation$35680fe6():46:46 -> a
    50081:50081:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):508 -> a
    50082:50083:com.mongodb.internal.bulk.DeleteRequest com.mongodb.internal.bulk.DeleteRequest.collation$337fef63(com.mongodb.client.model.mql.MqlExpression$AstPlaceholder):61:62 -> a
    50082:50083:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):508 -> a
    50084:50084:com.mongodb.client.model.DeleteOptions com.mongodb.client.model.DeleteManyModel.getOptions():73:73 -> a
    50084:50084:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):509 -> a
    50085:50085:org.bson.conversions.Bson com.mongodb.client.model.DeleteOptions.getHint():71:71 -> a
    50085:50085:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):509 -> a
    50086:50087:com.mongodb.internal.bulk.DeleteRequest com.mongodb.internal.bulk.DeleteRequest.hint(org.bson.conversions.Bson):71:72 -> a
    50086:50087:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):509 -> a
    50088:50088:com.mongodb.client.model.DeleteOptions com.mongodb.client.model.DeleteManyModel.getOptions():73:73 -> a
    50088:50088:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):510 -> a
    50089:50089:java.lang.String com.mongodb.client.model.DeleteOptions.getHintString():83:83 -> a
    50089:50089:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):510 -> a
    50090:50091:com.mongodb.internal.bulk.DeleteRequest com.mongodb.internal.bulk.DeleteRequest.hintString(java.lang.String):81:82 -> a
    50090:50091:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):510 -> a
    50092:50093:com.mongodb.internal.operation.MixedBulkWriteOperation com.mongodb.internal.operation.MixedBulkWriteOperation.bypassDocumentValidation(java.lang.Boolean):118:119 -> a
    50092:50093:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):518 -> a
    50094:50095:com.mongodb.internal.operation.MixedBulkWriteOperation com.mongodb.internal.operation.MixedBulkWriteOperation.comment(org.bson.BsonValue):127:128 -> a
    50094:50095:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):519 -> a
    50096:50097:com.mongodb.internal.operation.MixedBulkWriteOperation com.mongodb.internal.operation.MixedBulkWriteOperation.let(org.bson.BsonDocument):132:133 -> a
    50096:50097:com.mongodb.internal.operation.MixedBulkWriteOperation bulkWrite$5e4fd12c(java.util.List,org.bson.codecs.NumberCodecHelper):520 -> a
    709:709:org.bson.codecs.Codec getCodec() -> a
    713:713:org.bson.BsonDocument documentToBsonDocument(java.lang.Object) -> a
    718:718:org.bson.BsonDocument toBsonDocument(org.bson.conversions.Bson) -> a
com.mongodb.internal.operation.QueryBatchCursor -> com.a.e.m.s:
    com.mongodb.RequestContext LOGGER$2b2d9cbd -> a
    org.bson.FieldNameValidator NO_OP_FIELD_NAME_VALIDATOR -> b
    com.mongodb.MongoNamespace namespace -> c
    com.mongodb.internal.connection.DescriptionHelper serverApi$10f7fbbb -> d
    com.mongodb.ServerAddress serverAddress -> e
    int limit -> f
    org.bson.codecs.Decoder decoder -> g
    long maxTimeMS -> h
    int batchSize -> i
    org.bson.BsonValue comment -> j
    java.util.List nextBatch -> k
    int count -> l
    com.mongodb.internal.operation.QueryBatchCursor$ResourceManager resourceManager -> m
    98:99:void <init>(com.mongodb.internal.connection.QueryResult,int,int,org.bson.codecs.Decoder) -> <init>
    103:104:void <init>(com.mongodb.internal.connection.QueryResult,int,int,org.bson.codecs.Decoder,org.bson.BsonValue,com.mongodb.internal.binding.ConnectionSource) -> <init>
    109:110:void <init>(com.mongodb.internal.connection.QueryResult,int,int,long,org.bson.codecs.Decoder,org.bson.BsonValue,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection) -> <init>
    94:150:void <init>(com.mongodb.internal.connection.QueryResult,int,int,long,org.bson.codecs.Decoder,org.bson.BsonValue,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection,org.bson.BsonDocument) -> <init>
    1060:1060:com.mongodb.MongoNamespace com.mongodb.internal.connection.QueryResult.getNamespace():60:60 -> <init>
    1060:1060:void <init>(com.mongodb.internal.connection.QueryResult,int,int,long,org.bson.codecs.Decoder,org.bson.BsonValue,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection,org.bson.BsonDocument):117 -> <init>
    1088:1088:com.mongodb.ServerAddress com.mongodb.internal.connection.QueryResult.getAddress():88:88 -> <init>
    1088:1088:void <init>(com.mongodb.internal.connection.QueryResult,int,int,long,org.bson.codecs.Decoder,org.bson.BsonValue,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection,org.bson.BsonDocument):119 -> <init>
    2079:2079:java.util.List com.mongodb.internal.connection.QueryResult.getResults():79:79 -> <init>
    2079:2079:void <init>(com.mongodb.internal.connection.QueryResult,int,int,long,org.bson.codecs.Decoder,org.bson.BsonValue,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection,org.bson.BsonDocument):132 -> <init>
    2192:2192:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> <init>
    2192:2192:void <init>(com.mongodb.internal.connection.QueryResult,int,int,long,org.bson.codecs.Decoder,org.bson.BsonValue,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection,org.bson.BsonDocument):136 -> <init>
    2814:2814:com.mongodb.connection.ServerType com.mongodb.connection.ServerDescription.getType():814:814 -> <init>
    2814:2814:void <init>(com.mongodb.internal.connection.QueryResult,int,int,long,org.bson.codecs.Decoder,org.bson.BsonValue,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection,org.bson.BsonDocument):141 -> <init>
    154:154:boolean hasNext() -> hasNext
    158:176:boolean doHasNext() -> c
    3555:3555:com.mongodb.ServerCursor com.mongodb.internal.operation.QueryBatchCursor$ResourceManager.serverCursor():555:555 -> c
    3555:3555:boolean doHasNext():166 -> c
    4286:4305:void getMore():286:305 -> c
    4286:4305:boolean doHasNext():167 -> c
    4555:4555:com.mongodb.ServerCursor com.mongodb.internal.operation.QueryBatchCursor$ResourceManager.serverCursor():555:555 -> c
    4555:4555:void getMore():286 -> c
    4555:4555:boolean doHasNext():167 -> c
    5398:5398:boolean com.mongodb.internal.operation.QueryBatchCursor$ResourceManager.operable():398:398 -> c
    5398:5398:boolean doHasNext():168 -> c
    5643:5643:boolean com.mongodb.internal.operation.QueryBatchCursor$State.operable():643:643 -> c
    5643:5643:boolean com.mongodb.internal.operation.QueryBatchCursor$ResourceManager.operable():398 -> c
    5643:5643:boolean doHasNext():168 -> c
    181:181:java.util.List next() -> a
    190:196:java.util.List doNext() -> d
    211:211:void remove() -> remove
    216:217:void close() -> close
    6472:6488:void com.mongodb.internal.operation.QueryBatchCursor$ResourceManager.close():472:488 -> close
    6472:6488:void close():216 -> close
    326:330:com.mongodb.ServerCursor initFromQueryResult(com.mongodb.internal.connection.QueryResult) -> a
    7079:7079:java.util.List com.mongodb.internal.connection.QueryResult.getResults():79:79 -> a
    7079:7079:com.mongodb.ServerCursor initFromQueryResult(com.mongodb.internal.connection.QueryResult):326 -> a
    8079:8079:java.util.List com.mongodb.internal.connection.QueryResult.getResults():79:79 -> a
    8079:8079:com.mongodb.ServerCursor initFromQueryResult(com.mongodb.internal.connection.QueryResult):326 -> a
    9079:9079:java.util.List com.mongodb.internal.connection.QueryResult.getResults():79:79 -> a
    9079:9079:com.mongodb.ServerCursor initFromQueryResult(com.mongodb.internal.connection.QueryResult):327 -> a
    10079:10079:java.util.List com.mongodb.internal.connection.QueryResult.getResults():79:79 -> a
    10079:10079:com.mongodb.ServerCursor initFromQueryResult(com.mongodb.internal.connection.QueryResult):328 -> a
    10092:10092:long com.mongodb.internal.connection.QueryResult.getCursorId():92:92 -> a
    10092:10092:com.mongodb.ServerCursor initFromQueryResult(com.mongodb.internal.connection.QueryResult):329 -> a
    11088:11088:com.mongodb.ServerAddress com.mongodb.internal.connection.QueryResult.getAddress():88:88 -> a
    11088:11088:com.mongodb.ServerCursor initFromQueryResult(com.mongodb.internal.connection.QueryResult):329 -> a
    342:342:boolean limitReached() -> e
    347:351:org.bson.BsonDocument getPostBatchResumeTokenFromResponse(org.bson.BsonDocument) -> a
    71:71:java.lang.Object next() -> next
    290:304:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection) -> a
    11125:11125:java.lang.String com.mongodb.MongoNamespace.getDatabaseName():125:125 -> a
    11125:11125:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):290 -> a
    12063:12063:long com.mongodb.ServerCursor.getId():63:63 -> a
    12063:12063:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):291 -> a
    12308:12321:org.bson.BsonDocument asGetMoreCommandDocument(long,com.mongodb.connection.ConnectionDescription):308:321 -> a
    12308:12321:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):291 -> a
    13135:13135:java.lang.String com.mongodb.MongoNamespace.getCollectionName():135:135 -> a
    13135:13135:org.bson.BsonDocument asGetMoreCommandDocument(long,com.mongodb.connection.ConnectionDescription):309 -> a
    13135:13135:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):291 -> a
    14042:14050:int com.mongodb.internal.operation.CursorHelper.getNumberToReturn(int,int,int):42:50 -> a
    14042:14050:org.bson.BsonDocument asGetMoreCommandDocument(long,com.mongodb.connection.ConnectionDescription):311 -> a
    14042:14050:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):291 -> a
    15044:15044:boolean com.mongodb.internal.operation.ServerVersionHelper.serverIsAtLeastVersionFourDotFour(com.mongodb.connection.ConnectionDescription):44:44 -> a
    15044:15044:org.bson.BsonDocument asGetMoreCommandDocument(long,com.mongodb.connection.ConnectionDescription):318 -> a
    15044:15044:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):291 -> a
    15192:15192:int com.mongodb.connection.ConnectionDescription.getMaxWireVersion():192:192 -> a
    15192:15192:boolean com.mongodb.internal.operation.ServerVersionHelper.serverIsAtLeastVersionFourDotFour(com.mongodb.connection.ConnectionDescription):44 -> a
    15192:15192:org.bson.BsonDocument asGetMoreCommandDocument(long,com.mongodb.connection.ConnectionDescription):318 -> a
    15192:15192:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):291 -> a
    15335:15338:com.mongodb.ServerCursor initFromCommandResult(org.bson.BsonDocument):335:338 -> a
    15335:15338:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):290 -> a
    16026:16029:com.mongodb.MongoQueryException com.mongodb.internal.operation.QueryHelper.translateCommandException(com.mongodb.MongoCommandException,com.mongodb.ServerCursor):26:29 -> a
    16026:16029:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):298 -> a
    16062:16062:int com.mongodb.MongoCommandException.getErrorCode():62:62 -> a
    16062:16062:com.mongodb.MongoQueryException com.mongodb.internal.operation.QueryHelper.translateCommandException(com.mongodb.MongoCommandException,com.mongodb.ServerCursor):26 -> a
    16062:16062:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):298 -> a
    16145:16145:int com.mongodb.MongoException.getCode():145:145 -> a
    16145:16145:int com.mongodb.MongoCommandException.getErrorCode():62 -> a
    16145:16145:com.mongodb.MongoQueryException com.mongodb.internal.operation.QueryHelper.translateCommandException(com.mongodb.MongoCommandException,com.mongodb.ServerCursor):26 -> a
    16145:16145:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):298 -> a
    17063:17063:long com.mongodb.ServerCursor.getId():63:63 -> a
    17063:17063:com.mongodb.MongoQueryException com.mongodb.internal.operation.QueryHelper.translateCommandException(com.mongodb.MongoCommandException,com.mongodb.ServerCursor):27 -> a
    17063:17063:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):298 -> a
    17092:17092:org.bson.BsonDocument com.mongodb.MongoCommandException.getResponse():92:92 -> a
    17092:17092:com.mongodb.MongoQueryException com.mongodb.internal.operation.QueryHelper.translateCommandException(com.mongodb.MongoCommandException,com.mongodb.ServerCursor):27 -> a
    17092:17092:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):298 -> a
    18072:18072:com.mongodb.ServerAddress com.mongodb.ServerCursor.getAddress():72:72 -> a
    18072:18072:com.mongodb.MongoQueryException com.mongodb.internal.operation.QueryHelper.translateCommandException(com.mongodb.MongoCommandException,com.mongodb.ServerCursor):27 -> a
    18072:18072:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):298 -> a
    18092:18092:org.bson.BsonDocument com.mongodb.MongoCommandException.getResponse():92:92 -> a
    18092:18092:com.mongodb.MongoQueryException com.mongodb.internal.operation.QueryHelper.translateCommandException(com.mongodb.MongoCommandException,com.mongodb.ServerCursor):29 -> a
    18092:18092:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):298 -> a
    18559:18567:void com.mongodb.internal.operation.QueryBatchCursor$ResourceManager.setServerCursor(com.mongodb.ServerCursor):559:567 -> a
    18559:18567:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):300 -> a
    18647:18647:boolean com.mongodb.internal.operation.QueryBatchCursor$State.inProgress():647:647 -> a
    18647:18647:void com.mongodb.internal.operation.QueryBatchCursor$ResourceManager.setServerCursor(com.mongodb.ServerCursor):559 -> a
    18647:18647:void lambda$getMore$1(com.mongodb.ServerCursor,com.mongodb.internal.connection.Connection):300 -> a
    71:71:com.mongodb.MongoNamespace access$000(com.mongodb.internal.operation.QueryBatchCursor) -> a
    71:71:com.mongodb.internal.connection.DescriptionHelper access$100$69d16346(com.mongodb.internal.operation.QueryBatchCursor) -> b
    71:71:org.bson.FieldNameValidator access$200() -> b
    72:73:void <clinit>() -> <clinit>
com.mongodb.internal.operation.QueryBatchCursor$ResourceManager -> com.a.e.m.s$a:
    java.util.concurrent.locks.Lock lock -> a
    com.mongodb.internal.operation.QueryBatchCursor$State state -> b
    com.mongodb.internal.binding.ConnectionSource connectionSource -> c
    com.mongodb.internal.connection.Connection pinnedConnection -> e
    com.mongodb.ServerCursor serverCursor -> d
    boolean skipReleasingServerResourcesOnClose -> f
    com.mongodb.internal.operation.QueryBatchCursor this$0 -> g
    380:392:void <init>(com.mongodb.internal.operation.QueryBatchCursor,com.mongodb.internal.binding.ConnectionSource,com.mongodb.internal.connection.Connection,com.mongodb.ServerCursor) -> <init>
    409:416:java.lang.Object execute(java.lang.String,java.util.function.Supplier) -> a
    426:441:boolean tryStartOperation() -> e
    1643:1643:boolean com.mongodb.internal.operation.QueryBatchCursor$State.operable():643:643 -> e
    1643:1643:boolean tryStartOperation():429 -> e
    448:466:void endOperation() -> f
    496:513:void doClose() -> a
    516:523:void onCorruptedConnection(com.mongodb.internal.connection.Connection) -> b
    1647:1647:boolean com.mongodb.internal.operation.QueryBatchCursor$State.inProgress():647:647 -> b
    1647:1647:void onCorruptedConnection(com.mongodb.internal.connection.Connection):516 -> b
    526:539:void executeWithConnection(java.util.function.Consumer) -> a
    542:546:com.mongodb.internal.connection.Connection connection() -> g
    570:570:com.mongodb.internal.session.SessionContext sessionContext() -> b
    574:574:com.mongodb.RequestContext requestContext() -> c
    579:583:void releaseServerAndClientResources(com.mongodb.internal.connection.Connection) -> a
    587:595:void releaseServerResources(com.mongodb.internal.connection.Connection) -> c
    600:603:void killServerCursor$2f8beef3(com.mongodb.MongoNamespace,com.mongodb.ServerCursor,com.mongodb.internal.session.SessionContext,com.mongodb.RequestContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.internal.connection.Connection) -> a
    2125:2125:java.lang.String com.mongodb.MongoNamespace.getDatabaseName():125:125 -> a
    2125:2125:void killServerCursor$2f8beef3(com.mongodb.MongoNamespace,com.mongodb.ServerCursor,com.mongodb.internal.session.SessionContext,com.mongodb.RequestContext,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.internal.connection.Connection):600 -> a
    606:607:org.bson.BsonDocument asKillCursorsCommandDocument(com.mongodb.MongoNamespace,com.mongodb.ServerCursor) -> a
    2135:2135:java.lang.String com.mongodb.MongoNamespace.getCollectionName():135:135 -> a
    2135:2135:org.bson.BsonDocument asKillCursorsCommandDocument(com.mongodb.MongoNamespace,com.mongodb.ServerCursor):606 -> a
    3063:3063:long com.mongodb.ServerCursor.getId():63:63 -> a
    3063:3063:org.bson.BsonDocument asKillCursorsCommandDocument(com.mongodb.MongoNamespace,com.mongodb.ServerCursor):607 -> a
    611:622:void releaseClientResources() -> d
com.mongodb.internal.operation.QueryBatchCursor$State -> com.a.e.m.s$b:
    com.mongodb.internal.operation.QueryBatchCursor$State IDLE -> a
    com.mongodb.internal.operation.QueryBatchCursor$State OPERATION_IN_PROGRESS -> b
    com.mongodb.internal.operation.QueryBatchCursor$State CLOSE_PENDING -> c
    com.mongodb.internal.operation.QueryBatchCursor$State CLOSED -> d
    boolean operable -> e
    boolean inProgress -> f
    com.mongodb.internal.operation.QueryBatchCursor$State[] $VALUES -> g
    625:625:com.mongodb.internal.operation.QueryBatchCursor$State[] values() -> values
    625:625:com.mongodb.internal.operation.QueryBatchCursor$State valueOf(java.lang.String) -> valueOf
    637:640:void <init>(java.lang.String,int,boolean,boolean) -> <init>
    625:632:void <clinit>() -> <clinit>
    1625:1625:com.mongodb.internal.operation.QueryBatchCursor$State[] $values():625:625 -> <clinit>
    1625:1625:void <clinit>():625 -> <clinit>
com.mongodb.internal.operation.ReadOperation -> com.a.e.m.t:
    java.lang.Object execute(com.mongodb.internal.binding.ReadBinding) -> a
com.mongodb.internal.operation.SyncOperations -> com.a.e.m.u:
    com.mongodb.internal.operation.Operations operations -> a
    68:69:void <init>(java.lang.Class,com.mongodb.ReadPreference,org.bson.codecs.configuration.CodecRegistry,boolean) -> <init>
    73:74:void <init>(com.mongodb.MongoNamespace,java.lang.Class,com.mongodb.ReadPreference,org.bson.codecs.configuration.CodecRegistry,boolean) -> <init>
    78:81:void <init>(com.mongodb.MongoNamespace,java.lang.Class,com.mongodb.ReadPreference,org.bson.codecs.configuration.CodecRegistry,com.mongodb.ReadConcern,com.mongodb.WriteConcern,boolean,boolean) -> <init>
com.mongodb.internal.operation.TransactionOperation -> com.a.e.m.v:
    com.mongodb.WriteConcern writeConcern -> a
    47:49:void <init>(com.mongodb.WriteConcern) -> <init>
    52:52:com.mongodb.WriteConcern getWriteConcern() -> d
    57:59:java.lang.Void execute(com.mongodb.internal.binding.WriteBinding) -> a
    71:71:com.mongodb.internal.operation.CommandOperationHelper$CommandCreator getCommandCreator() -> b
    java.lang.String getCommandName() -> a
    com.mongodb.Function getRetryCommandModifier() -> c
    44:44:java.lang.Object execute(com.mongodb.internal.binding.WriteBinding) -> b
    72:76:org.bson.BsonDocument lambda$getCommandCreator$0(com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription) -> a
    1260:1260:boolean com.mongodb.WriteConcern.isServerDefault():260:260 -> a
    1260:1260:org.bson.BsonDocument lambda$getCommandCreator$0(com.mongodb.connection.ServerDescription,com.mongodb.connection.ConnectionDescription):73 -> a
com.mongodb.internal.operation.WriteConcernHelper -> com.a.e.m.w:
    int index -> a
    org.bson.BsonValue id -> b
    61:66:com.mongodb.MongoWriteConcernException createWriteConcernException(org.bson.BsonDocument,com.mongodb.ServerAddress) -> a
    71:76:net.kyori.adventure.text.ComponentCompaction createWriteConcernError$5b684e5d(org.bson.BsonDocument) -> a
    1056:1056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    1056:1056:net.kyori.adventure.text.ComponentCompaction createWriteConcernError$5b684e5d(org.bson.BsonDocument):72 -> a
    2056:2056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    2056:2056:net.kyori.adventure.text.ComponentCompaction createWriteConcernError$5b684e5d(org.bson.BsonDocument):73 -> a
    75:75:java.lang.String lambda$createWriteConcernError$1(org.bson.BsonValue) -> a
    3056:3056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    3056:3056:java.lang.String lambda$createWriteConcernError$1(org.bson.BsonValue):75 -> a
    64:64:java.lang.String lambda$createWriteConcernException$0(org.bson.BsonValue) -> b
    4056:4056:java.lang.String org.bson.BsonString.getValue():56:56 -> b
    4056:4056:java.lang.String lambda$createWriteConcernException$0(org.bson.BsonValue):64 -> b
    5038:5041:void com.mongodb.bulk.BulkWriteInsert.<init>(int,org.bson.BsonValue):38:41 -> <init>
    5049:5049:int com.mongodb.bulk.BulkWriteInsert.getIndex():49:49 -> a
    5058:5058:org.bson.BsonValue com.mongodb.bulk.BulkWriteInsert.getId():58:58 -> b
    5063:5070:boolean com.mongodb.bulk.BulkWriteInsert.equals(java.lang.Object):63:70 -> equals
    5075:5075:int com.mongodb.bulk.BulkWriteInsert.hashCode():75:75 -> hashCode
    5080:5080:java.lang.String com.mongodb.bulk.BulkWriteInsert.toString():80:80 -> toString
com.mongodb.internal.operation.WriteOperation -> com.a.e.m.x:
    java.lang.Object execute(com.mongodb.internal.binding.WriteBinding) -> b
com.mongodb.internal.operation.retry.AttachmentKeys -> com.a.e.m.a.a:
    com.mongodb.internal.async.function.LoopState$AttachmentKey MAX_WIRE_VERSION -> a
    com.mongodb.internal.async.function.LoopState$AttachmentKey COMMAND -> b
    com.mongodb.internal.async.function.LoopState$AttachmentKey RETRYABLE_COMMAND_FLAG -> c
    com.mongodb.internal.async.function.LoopState$AttachmentKey COMMAND_DESCRIPTION_SUPPLIER -> d
    com.mongodb.internal.async.function.LoopState$AttachmentKey BULK_WRITE_TRACKER -> e
    48:48:com.mongodb.internal.async.function.LoopState$AttachmentKey maxWireVersion() -> a
    52:52:com.mongodb.internal.async.function.LoopState$AttachmentKey command() -> b
    56:56:com.mongodb.internal.async.function.LoopState$AttachmentKey retryableCommandFlag() -> c
    60:60:com.mongodb.internal.async.function.LoopState$AttachmentKey commandDescriptionSupplier() -> d
    64:64:com.mongodb.internal.async.function.LoopState$AttachmentKey bulkWriteTracker() -> e
    39:45:void <clinit>() -> <clinit>
com.mongodb.internal.operation.retry.AttachmentKeys$DefaultAttachmentKey -> com.a.e.m.a.a$a:
    java.util.Set AVOID_KEY_DUPLICATION -> a
    java.lang.String key -> b
    81:84:void <init>(java.lang.String) -> <init>
    88:95:boolean equals(java.lang.Object) -> equals
    100:100:int hashCode() -> hashCode
    105:105:java.lang.String toString() -> toString
    76:76:void <init>(java.lang.String,byte) -> <init>
    77:77:void <clinit>() -> <clinit>
com.mongodb.internal.selector.LatencyMinimizingServerSelector -> com.a.e.n.a:
    long acceptableLatencyDifferenceNanos -> a
    47:49:void <init>(long,java.util.concurrent.TimeUnit) -> <init>
    63:67:java.util.List select(com.mongodb.connection.ClusterDescription) -> select
    1201:1201:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterDescription.getConnectionMode():201:201 -> select
    1201:1201:java.util.List select(com.mongodb.connection.ClusterDescription):63 -> select
    1231:1231:java.util.List com.mongodb.connection.ClusterDescription.getServerDescriptions():231:231 -> select
    1231:1231:java.util.List select(com.mongodb.connection.ClusterDescription):67 -> select
    2097:2106:long getFastestRoundTripTimeNanos(java.util.List):97:106 -> select
    2097:2106:java.util.List select(com.mongodb.connection.ClusterDescription):67 -> select
    2832:2832:long com.mongodb.connection.ServerDescription.getRoundTripTimeNanos():832:832 -> select
    2832:2832:long getFastestRoundTripTimeNanos(java.util.List):102 -> select
    2832:2832:java.util.List select(com.mongodb.connection.ClusterDescription):67 -> select
    3832:3832:long com.mongodb.connection.ServerDescription.getRoundTripTimeNanos():832:832 -> select
    3832:3832:long getFastestRoundTripTimeNanos(java.util.List):103 -> select
    3832:3832:java.util.List select(com.mongodb.connection.ClusterDescription):67 -> select
    4111:4120:java.util.List getServersWithAcceptableLatencyDifference(java.util.List,long):111:120 -> select
    4111:4120:java.util.List select(com.mongodb.connection.ClusterDescription):66 -> select
    4832:4832:long com.mongodb.connection.ServerDescription.getRoundTripTimeNanos():832:832 -> select
    4832:4832:java.util.List getServersWithAcceptableLatencyDifference(java.util.List,long):116 -> select
    4832:4832:java.util.List select(com.mongodb.connection.ClusterDescription):66 -> select
    73:74:java.lang.String toString() -> toString
    80:88:boolean equals(java.lang.Object) -> equals
    93:93:int hashCode() -> hashCode
com.mongodb.internal.selector.ReadPreferenceServerSelector -> com.a.e.n.b:
    com.mongodb.ReadPreference readPreference -> a
    43:45:void <init>(com.mongodb.ReadPreference) -> <init>
    58:61:java.util.List select(com.mongodb.connection.ClusterDescription) -> select
    1201:1201:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterDescription.getConnectionMode():201:201 -> select
    1201:1201:java.util.List select(com.mongodb.connection.ClusterDescription):58 -> select
    66:66:java.lang.String toString() -> toString
com.mongodb.internal.selector.ServerAddressSelector -> com.a.e.n.c:
    com.mongodb.ServerAddress serverAddress -> a
    44:46:void <init>(com.mongodb.ServerAddress) -> <init>
    59:63:java.util.List select(com.mongodb.connection.ClusterDescription) -> select
    1057:1062:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.ClusterDescriptionHelper.getByServerAddress(com.mongodb.connection.ClusterDescription,com.mongodb.ServerAddress):57:62 -> select
    1057:1062:java.util.List select(com.mongodb.connection.ClusterDescription):59 -> select
    1231:1231:java.util.List com.mongodb.connection.ClusterDescription.getServerDescriptions():231:231 -> select
    1231:1231:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.ClusterDescriptionHelper.getByServerAddress(com.mongodb.connection.ClusterDescription,com.mongodb.ServerAddress):57 -> select
    1231:1231:java.util.List select(com.mongodb.connection.ClusterDescription):59 -> select
    1583:1583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> select
    1583:1583:com.mongodb.connection.ServerDescription com.mongodb.internal.connection.ClusterDescriptionHelper.getByServerAddress(com.mongodb.connection.ClusterDescription,com.mongodb.ServerAddress):58 -> select
    1583:1583:java.util.List select(com.mongodb.connection.ClusterDescription):59 -> select
    68:68:java.lang.String toString() -> toString
com.mongodb.internal.selector.WritableServerSelector -> com.a.e.n.d:
    34:34:void <init>() -> <init>
    38:42:java.util.List select(com.mongodb.connection.ClusterDescription) -> select
    1201:1201:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterDescription.getConnectionMode():201:201 -> select
    1201:1201:java.util.List select(com.mongodb.connection.ClusterDescription):38 -> select
    2201:2201:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterDescription.getConnectionMode():201:201 -> select
    2201:2201:java.util.List select(com.mongodb.connection.ClusterDescription):39 -> select
    47:47:java.lang.String toString() -> toString
com.mongodb.internal.session.BaseClientSessionImpl -> com.a.e.o.a:
    com.mongodb.internal.session.ServerSessionPool serverSessionPool -> a
    com.mongodb.session.ServerSession serverSession -> b
    java.lang.Object originator -> c
    com.mongodb.ClientSessionOptions options -> d
    org.bson.BsonDocument clusterTime -> e
    org.bson.BsonTimestamp operationTime -> f
    org.bson.BsonTimestamp snapshotTimestamp -> g
    com.mongodb.ServerAddress pinnedServerAddress -> h
    org.bson.BsonDocument recoveryToken -> i
    com.mongodb.internal.binding.ReferenceCounted transactionContext -> j
    boolean closed -> k
    50:56:void <init>(com.mongodb.internal.session.ServerSessionPool,java.lang.Object,com.mongodb.ClientSessionOptions) -> <init>
    61:61:com.mongodb.ServerAddress getPinnedServerAddress() -> a
    66:66:java.lang.Object getTransactionContext() -> e
    71:75:void setTransactionContext(com.mongodb.ServerAddress,java.lang.Object) -> a
    79:84:void clearTransactionContext() -> f
    88:88:org.bson.BsonDocument getRecoveryToken() -> g
    93:94:void setRecoveryToken(org.bson.BsonDocument) -> a
    98:98:com.mongodb.ClientSessionOptions getOptions() -> h
    103:104:boolean isCausallyConsistent() -> i
    1052:1052:java.lang.Boolean com.mongodb.ClientSessionOptions.isCausallyConsistent():52:52 -> i
    1052:1052:boolean isCausallyConsistent():103 -> i
    109:109:java.lang.Object getOriginator() -> j
    114:114:org.bson.BsonDocument getClusterTime() -> k
    119:119:org.bson.BsonTimestamp getOperationTime() -> l
    124:128:com.mongodb.session.ServerSession getServerSession() -> m
    1077:1087:com.mongodb.session.ServerSession com.mongodb.internal.session.ServerSessionPool.get():77:87 -> m
    1077:1087:com.mongodb.session.ServerSession getServerSession():126 -> m
    1159:1167:boolean com.mongodb.internal.session.ServerSessionPool.shouldPrune(com.mongodb.internal.session.ServerSessionPool$ServerSessionImpl):159:167 -> m
    1159:1167:com.mongodb.session.ServerSession com.mongodb.internal.session.ServerSessionPool.get():79 -> m
    1159:1167:com.mongodb.session.ServerSession getServerSession():126 -> m
    1243:1243:java.lang.Integer com.mongodb.connection.ClusterDescription.getLogicalSessionTimeoutMinutes():243:243 -> m
    1243:1243:boolean com.mongodb.internal.session.ServerSessionPool.shouldPrune(com.mongodb.internal.session.ServerSessionPool$ServerSessionImpl):159 -> m
    1243:1243:com.mongodb.session.ServerSession com.mongodb.internal.session.ServerSessionPool.get():79 -> m
    1243:1243:com.mongodb.session.ServerSession getServerSession():126 -> m
    2197:2197:long com.mongodb.internal.session.ServerSessionPool$ServerSessionImpl.getLastUsedAtMillis():197:197 -> m
    2197:2197:boolean com.mongodb.internal.session.ServerSessionPool.shouldPrune(com.mongodb.internal.session.ServerSessionPool$ServerSessionImpl):165 -> m
    2197:2197:com.mongodb.session.ServerSession com.mongodb.internal.session.ServerSessionPool.get():79 -> m
    2197:2197:com.mongodb.session.ServerSession getServerSession():126 -> m
    3193:3194:void com.mongodb.internal.session.ServerSessionPool$ServerSessionImpl.close():193:194 -> m
    3193:3194:com.mongodb.session.ServerSession com.mongodb.internal.session.ServerSessionPool.get():80 -> m
    3193:3194:com.mongodb.session.ServerSession getServerSession():126 -> m
    133:135:void advanceOperationTime(org.bson.BsonTimestamp) -> a
    4174:4179:org.bson.BsonTimestamp greaterOf(org.bson.BsonTimestamp):174:179 -> a
    4174:4179:void advanceOperationTime(org.bson.BsonTimestamp):134 -> a
    139:141:void advanceClusterTime(org.bson.BsonDocument) -> b
    5163:5169:org.bson.BsonDocument greaterOf(org.bson.BsonDocument):163:169 -> b
    5163:5169:void advanceClusterTime(org.bson.BsonDocument):140 -> b
    145:153:void setSnapshotTimestamp(org.bson.BsonTimestamp) -> b
    158:159:org.bson.BsonTimestamp getSnapshotTimestamp() -> n
    185:192:void close() -> close
    6091:6098:void com.mongodb.internal.session.ServerSessionPool.release(com.mongodb.session.ServerSession):91:98 -> close
    6091:6098:void close():188 -> close
    6229:6229:boolean com.mongodb.internal.session.ServerSessionPool$ServerSessionImpl.isMarkedDirty():229:229 -> close
    6229:6229:void com.mongodb.internal.session.ServerSessionPool.release(com.mongodb.session.ServerSession):93 -> close
    6229:6229:void close():188 -> close
    7193:7194:void com.mongodb.internal.session.ServerSessionPool$ServerSessionImpl.close():193:194 -> close
    7193:7194:void com.mongodb.internal.session.ServerSessionPool.release(com.mongodb.session.ServerSession):94 -> close
    7193:7194:void close():188 -> close
com.mongodb.internal.session.ClientSessionContext -> com.a.e.o.b:
    com.mongodb.session.ClientSession clientSession -> a
    33:35:void <init>(com.mongodb.session.ClientSession) -> <init>
    43:43:boolean hasSession() -> e
    48:48:org.bson.BsonDocument getSessionId() -> f
    53:53:boolean isCausallyConsistent() -> g
    58:58:long getTransactionNumber() -> h
    63:63:long advanceTransactionNumber() -> i
    68:68:org.bson.BsonTimestamp getOperationTime() -> j
    73:74:void advanceOperationTime(org.bson.BsonTimestamp) -> a
    78:78:org.bson.BsonDocument getClusterTime() -> k
    83:84:void advanceClusterTime(org.bson.BsonDocument) -> a
    88:89:boolean isSnapshot() -> l
    1066:1066:java.lang.Boolean com.mongodb.ClientSessionOptions.isSnapshot():66:66 -> l
    1066:1066:boolean isSnapshot():88 -> l
    94:95:void setSnapshotTimestamp(org.bson.BsonTimestamp) -> b
    100:100:org.bson.BsonTimestamp getSnapshotTimestamp() -> m
    105:106:void setRecoveryToken(org.bson.BsonDocument) -> b
    110:111:void clearTransactionContext() -> n
    115:116:void markSessionDirty() -> o
com.mongodb.internal.session.ServerSessionPool -> com.a.e.o.c:
    java.util.concurrent.ConcurrentLinkedDeque available -> a
    com.mongodb.internal.connection.Cluster cluster -> b
    com.mongodb.internal.session.ServerSessionPool$Clock clock -> c
    boolean closed -> d
    com.mongodb.internal.connection.DescriptionHelper serverApi$10f7fbbb -> f
    java.util.concurrent.atomic.LongAdder inUseCount -> e
    67:68:void <init>(com.mongodb.internal.connection.Cluster,com.mongodb.internal.connection.DescriptionHelper) -> <init>
    54:74:void <init>(com.mongodb.internal.connection.Cluster,com.mongodb.internal.connection.DescriptionHelper,com.mongodb.internal.session.ServerSessionPool$Clock) -> <init>
    110:143:void endClosedSessions() -> a
    1034:1034:com.mongodb.internal.connection.Server com.mongodb.internal.connection.ServerTuple.getServer():34:34 -> a
    1034:1034:void endClosedSessions():130 -> a
    149:155:java.util.List drainPool() -> b
    124:129:java.util.List lambda$endClosedSessions$0(java.util.List,com.mongodb.connection.ClusterDescription) -> a
    1231:1231:java.util.List com.mongodb.connection.ClusterDescription.getServerDescriptions():231:231 -> a
    1231:1231:java.util.List lambda$endClosedSessions$0(java.util.List,com.mongodb.connection.ClusterDescription):124 -> a
    1583:1583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> a
    1583:1583:java.util.List lambda$endClosedSessions$0(java.util.List,com.mongodb.connection.ClusterDescription):125 -> a
    2583:2583:com.mongodb.ServerAddress com.mongodb.connection.ServerDescription.getAddress():583:583 -> a
    2583:2583:java.util.List lambda$endClosedSessions$0(java.util.List,com.mongodb.connection.ClusterDescription):125 -> a
com.mongodb.internal.session.ServerSessionPool$Clock -> com.a.e.o.c$a:
    long millis() -> millis
com.mongodb.internal.session.ServerSessionPool$ServerSessionImpl -> com.a.e.o.c$b:
    org.bson.BsonDocument identifier -> d
    long transactionNumber -> e
    long lastUsedAtMillis -> a
    boolean closed -> b
    boolean dirty -> c
    com.mongodb.internal.session.ServerSessionPool this$0 -> f
    183:190:void <init>(com.mongodb.internal.session.ServerSessionPool) -> <init>
    1053:1053:com.mongodb.internal.session.ServerSessionPool$Clock com.mongodb.internal.session.ServerSessionPool.access$000(com.mongodb.internal.session.ServerSessionPool):53:53 -> <init>
    1053:1053:void <init>(com.mongodb.internal.session.ServerSessionPool):184 -> <init>
    2053:2053:org.bson.BsonBinary com.mongodb.internal.session.ServerSessionPool.access$100(com.mongodb.internal.session.ServerSessionPool):53:53 -> <init>
    2053:2053:void <init>(com.mongodb.internal.session.ServerSessionPool):189 -> <init>
    2171:2178:org.bson.BsonBinary com.mongodb.internal.session.ServerSessionPool.createNewServerSessionIdentifier():171:178 -> <init>
    2171:2178:org.bson.BsonBinary com.mongodb.internal.session.ServerSessionPool.access$100(com.mongodb.internal.session.ServerSessionPool):53 -> <init>
    2171:2178:void <init>(com.mongodb.internal.session.ServerSessionPool):189 -> <init>
    202:202:long getTransactionNumber() -> a
    207:208:org.bson.BsonDocument getIdentifier() -> b
    3053:3053:com.mongodb.internal.session.ServerSessionPool$Clock com.mongodb.internal.session.ServerSessionPool.access$000(com.mongodb.internal.session.ServerSessionPool):53:53 -> b
    3053:3053:org.bson.BsonDocument getIdentifier():207 -> b
    213:214:long advanceTransactionNumber() -> c
    224:225:void markDirty() -> d
com.mongodb.internal.session.SessionContext -> com.a.e.o.d:
    boolean hasSession() -> e
    boolean isImplicitSession() -> a
    org.bson.BsonDocument getSessionId() -> f
    boolean isCausallyConsistent() -> g
    long getTransactionNumber() -> h
    long advanceTransactionNumber() -> i
    boolean notifyMessageSent() -> b
    org.bson.BsonTimestamp getOperationTime() -> j
    void advanceOperationTime(org.bson.BsonTimestamp) -> a
    org.bson.BsonDocument getClusterTime() -> k
    void advanceClusterTime(org.bson.BsonDocument) -> a
    boolean isSnapshot() -> l
    void setSnapshotTimestamp(org.bson.BsonTimestamp) -> b
    org.bson.BsonTimestamp getSnapshotTimestamp() -> m
    boolean hasActiveTransaction() -> c
    com.mongodb.ReadConcern getReadConcern() -> d
    void setRecoveryToken(org.bson.BsonDocument) -> b
    void clearTransactionContext() -> n
    void markSessionDirty() -> o
com.mongodb.internal.thread.DaemonThreadFactory -> com.a.e.p.a:
    java.util.concurrent.atomic.AtomicInteger POOL_NUMBER -> a
    java.util.concurrent.atomic.AtomicInteger threadNumber -> b
    java.lang.String namePrefix -> c
    30:35:void <init>(java.lang.String) -> <init>
    39:41:java.lang.Thread newThread(java.lang.Runnable) -> newThread
    29:29:void <clinit>() -> <clinit>
com.mongodb.internal.validator.MappedFieldNameValidator -> com.a.e.q.a:
    org.bson.FieldNameValidator defaultValidator -> a
    java.util.Map fieldNameToValidatorMap -> b
    41:44:void <init>(org.bson.FieldNameValidator,java.util.Map) -> <init>
    48:48:boolean validate(java.lang.String) -> a
    53:53:java.lang.String getValidationErrorMessage(java.lang.String) -> b
    58:61:org.bson.FieldNameValidator getValidatorForField(java.lang.String) -> c
com.mongodb.internal.validator.NoOpFieldNameValidator -> com.a.e.q.b:
    26:26:void <init>() -> <init>
    29:29:boolean validate(java.lang.String) -> a
    34:34:org.bson.FieldNameValidator getValidatorForField(java.lang.String) -> c
com.mongodb.internal.validator.ReplacingDocumentFieldNameValidator -> com.a.e.q.c:
    com.mongodb.internal.validator.NoOpFieldNameValidator NO_OP_FIELD_NAME_VALIDATOR -> a
    java.util.List EXCEPTIONS -> b
    33:33:void <init>() -> <init>
    40:40:boolean validate(java.lang.String) -> a
    45:46:java.lang.String getValidationErrorMessage(java.lang.String) -> b
    52:52:org.bson.FieldNameValidator getValidatorForField(java.lang.String) -> c
    34:36:void <clinit>() -> <clinit>
com.mongodb.internal.validator.UpdateFieldNameValidator -> com.a.e.q.d:
    int numFields -> a
    29:30:void <init>() -> <init>
    34:35:boolean validate(java.lang.String) -> a
    40:41:java.lang.String getValidationErrorMessage(java.lang.String) -> b
    46:46:org.bson.FieldNameValidator getValidatorForField(java.lang.String) -> c
    51:52:void start() -> a
    56:59:void end() -> b
com.mongodb.selector.CompositeServerSelector -> com.a.f.a:
    java.util.List serverSelectors -> a
    43:60:void <init>(java.util.List) -> <init>
    71:80:java.util.List select(com.mongodb.connection.ClusterDescription) -> select
    1201:1201:com.mongodb.connection.ClusterConnectionMode com.mongodb.connection.ClusterDescription.getConnectionMode():201:201 -> select
    1201:1201:java.util.List select(com.mongodb.connection.ClusterDescription):75 -> select
    1210:1210:com.mongodb.connection.ClusterType com.mongodb.connection.ClusterDescription.getType():210:210 -> select
    1210:1210:java.util.List select(com.mongodb.connection.ClusterDescription):75 -> select
    2112:2112:com.mongodb.connection.ClusterSettings com.mongodb.connection.ClusterDescription.getClusterSettings():112:112 -> select
    2112:2112:java.util.List select(com.mongodb.connection.ClusterDescription):76 -> select
    2122:2122:com.mongodb.connection.ServerSettings com.mongodb.connection.ClusterDescription.getServerSettings():122:122 -> select
    2122:2122:java.util.List select(com.mongodb.connection.ClusterDescription):77 -> select
    85:96:boolean equals(java.lang.Object) -> equals
    101:101:int hashCode() -> hashCode
    106:106:java.lang.String toString() -> toString
com.mongodb.selector.ServerSelector -> com.a.f.b:
    java.util.List select(com.mongodb.connection.ClusterDescription) -> select
com.mongodb.session.ClientSession -> com.a.g.a:
    java.lang.Object getTransactionContext() -> e
    void setTransactionContext(com.mongodb.ServerAddress,java.lang.Object) -> a
    void clearTransactionContext() -> f
    void setRecoveryToken(org.bson.BsonDocument) -> a
    com.mongodb.ClientSessionOptions getOptions() -> h
    boolean isCausallyConsistent() -> i
    java.lang.Object getOriginator() -> j
    com.mongodb.session.ServerSession getServerSession() -> m
    org.bson.BsonTimestamp getOperationTime() -> l
    void advanceOperationTime(org.bson.BsonTimestamp) -> a
    void advanceClusterTime(org.bson.BsonDocument) -> b
    void setSnapshotTimestamp(org.bson.BsonTimestamp) -> b
    org.bson.BsonTimestamp getSnapshotTimestamp() -> n
    org.bson.BsonDocument getClusterTime() -> k
    void close() -> close
com.mongodb.session.ServerSession -> com.a.g.b:
    org.bson.BsonDocument getIdentifier() -> b
    long getTransactionNumber() -> a
    long advanceTransactionNumber() -> c
    void markDirty() -> d
com.mongodb.spi.dns.DnsClient -> com.a.h.a.a:
    java.util.List getResourceRecordData(java.lang.String,java.lang.String) -> a
com.mongodb.spi.dns.DnsClientProvider -> com.a.h.a.b:
    com.mongodb.spi.dns.DnsClient create() -> a
com.mongodb.spi.dns.DnsException -> com.a.h.a.c:
    35:36:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    1043:1044:void net.kyori.adventure.util.Nag.print(net.kyori.adventure.util.Nag):43:44 -> a
    1053:1054:void net.kyori.adventure.util.Nag.<init>(java.lang.String):53:54 -> <init>
    2032:2033:void net.kyori.adventure.text.LegacyFormattingDetected.<init>(net.kyori.adventure.text.Component):32:33 -> <init>
com.mongodb.spi.dns.DnsWithResponseCodeException -> com.a.h.a.d:
    int responseCode -> a
    38:40:void <init>(java.lang.String,int,java.lang.Throwable) -> <init>
de.themoep.inventorygui.DynamicGuiElement -> a.a.a.a:
    java.util.function.Function query -> e
    java.util.Map cachedElements -> a
    43:62:void <init>(char,java.util.function.Function) -> <init>
    83:90:de.themoep.inventorygui.DynamicGuiElement$CacheEntry update(org.bukkit.entity.HumanEntity) -> a
    1132:1137:de.themoep.inventorygui.GuiElement queryElement(org.bukkit.entity.HumanEntity):132:137 -> a
    1132:1137:de.themoep.inventorygui.DynamicGuiElement$CacheEntry update(org.bukkit.entity.HumanEntity):83 -> a
    2115:2115:java.util.function.Function getQuery():115:115 -> a
    2115:2115:de.themoep.inventorygui.GuiElement queryElement(org.bukkit.entity.HumanEntity):132 -> a
    2115:2115:de.themoep.inventorygui.DynamicGuiElement$CacheEntry update(org.bukkit.entity.HumanEntity):83 -> a
    2174:2174:de.themoep.inventorygui.GuiElement de.themoep.inventorygui.DynamicGuiElement$CacheEntry.access$000(de.themoep.inventorygui.DynamicGuiElement$CacheEntry):174:174 -> a
    2174:2174:de.themoep.inventorygui.DynamicGuiElement$CacheEntry update(org.bukkit.entity.HumanEntity):84 -> a
    3174:3174:de.themoep.inventorygui.GuiElement de.themoep.inventorygui.DynamicGuiElement$CacheEntry.access$000(de.themoep.inventorygui.DynamicGuiElement$CacheEntry):174:174 -> a
    3174:3174:de.themoep.inventorygui.DynamicGuiElement$CacheEntry update(org.bukkit.entity.HumanEntity):85 -> a
    4174:4174:de.themoep.inventorygui.GuiElement de.themoep.inventorygui.DynamicGuiElement$CacheEntry.access$000(de.themoep.inventorygui.DynamicGuiElement$CacheEntry):174:174 -> a
    4174:4174:de.themoep.inventorygui.DynamicGuiElement$CacheEntry update(org.bukkit.entity.HumanEntity):86 -> a
    5174:5174:de.themoep.inventorygui.GuiElement de.themoep.inventorygui.DynamicGuiElement$CacheEntry.access$000(de.themoep.inventorygui.DynamicGuiElement$CacheEntry):174:174 -> a
    5174:5174:de.themoep.inventorygui.DynamicGuiElement$CacheEntry update(org.bukkit.entity.HumanEntity):87 -> a
    5209:5209:java.util.List de.themoep.inventorygui.GuiElementGroup.getElements():209:209 -> a
    5209:5209:de.themoep.inventorygui.DynamicGuiElement$CacheEntry update(org.bukkit.entity.HumanEntity):87 -> a
    95:96:void setGui(de.themoep.inventorygui.InventoryGui) -> a
    100:101:org.bukkit.inventory.ItemStack getItem(org.bukkit.entity.HumanEntity,int) -> a
    106:107:de.themoep.inventorygui.GuiElement$Action getAction(org.bukkit.entity.HumanEntity) -> b
    147:151:de.themoep.inventorygui.GuiElement getCachedElement(org.bukkit.entity.HumanEntity) -> c
    6183:6183:de.themoep.inventorygui.GuiElement de.themoep.inventorygui.DynamicGuiElement$CacheEntry.getElement():183:183 -> c
    6183:6183:de.themoep.inventorygui.GuiElement getCachedElement(org.bukkit.entity.HumanEntity):151 -> c
de.themoep.inventorygui.DynamicGuiElement$CacheEntry -> a.a.a.a$a:
    de.themoep.inventorygui.GuiElement element -> a
    176:180:void <init>(de.themoep.inventorygui.DynamicGuiElement,de.themoep.inventorygui.GuiElement) -> <init>
de.themoep.inventorygui.GuiElement -> a.a.a.b:
    char slotChar -> b
    de.themoep.inventorygui.GuiElement$Action action -> a
    int[] slots -> c
    de.themoep.inventorygui.InventoryGui gui -> d
    36:47:void <init>(char,de.themoep.inventorygui.GuiElement$Action) -> <init>
    1088:1089:void setAction(de.themoep.inventorygui.GuiElement$Action):88:89 -> <init>
    1088:1089:void <init>(char,de.themoep.inventorygui.GuiElement$Action):46 -> <init>
    54:55:void <init>(char) -> <init>
    org.bukkit.inventory.ItemStack getItem(org.bukkit.entity.HumanEntity,int) -> a
    79:79:de.themoep.inventorygui.GuiElement$Action getAction(org.bukkit.entity.HumanEntity) -> b
    88:89:void setAction(de.themoep.inventorygui.GuiElement$Action) -> a
    96:96:int[] getSlots() -> a
    104:105:void setSlots(int[]) -> a
    123:128:int getSlotIndex(int,int) -> a
    136:137:void setGui(de.themoep.inventorygui.InventoryGui) -> a
    144:144:de.themoep.inventorygui.InventoryGui getGui() -> b
de.themoep.inventorygui.GuiElement$Action -> a.a.a.b$a:
    boolean onClick(de.themoep.inventorygui.GuiElement$Click) -> onClick
de.themoep.inventorygui.GuiElement$Click -> a.a.a.b$b:
    de.themoep.inventorygui.InventoryGui gui -> a
    int slot -> b
    org.bukkit.event.inventory.ClickType clickType -> c
    org.bukkit.inventory.ItemStack cursor -> d
    de.themoep.inventorygui.GuiElement element -> e
    org.bukkit.event.inventory.InventoryInteractEvent event -> f
    166:173:void <init>(de.themoep.inventorygui.InventoryGui,int,org.bukkit.event.inventory.ClickType,org.bukkit.inventory.ItemStack,de.themoep.inventorygui.GuiElement,org.bukkit.event.inventory.InventoryInteractEvent) -> <init>
de.themoep.inventorygui.GuiElementGroup -> a.a.a.c:
    java.util.List elements -> a
    de.themoep.inventorygui.GuiElement filler -> e
    de.themoep.inventorygui.GuiElementGroup$Alignment alignment -> f
    37:56:void <init>(char,de.themoep.inventorygui.GuiElement[]) -> <init>
    60:64:org.bukkit.inventory.ItemStack getItem(org.bukkit.entity.HumanEntity,int) -> a
    69:78:void setGui(de.themoep.inventorygui.InventoryGui) -> a
    82:88:void setSlots(int[]) -> a
    95:100:void addElement(de.themoep.inventorygui.GuiElement) -> a
    138:161:de.themoep.inventorygui.GuiElement getElement(int,int) -> b
    170:179:int getLineWidth(int) -> a
    2085:2085:int de.themoep.inventorygui.InventoryGui.getWidth():1085:1085 -> a
    2085:2085:int getLineWidth(int):170 -> a
    188:200:int getLinePosition(int) -> b
    3085:3085:int de.themoep.inventorygui.InventoryGui.getWidth():1085:1085 -> b
    3085:3085:int getLinePosition(int):188 -> b
    252:252:int size() -> c
    49:53:boolean lambda$new$0(de.themoep.inventorygui.GuiElement$Click) -> a
    3180:3180:int de.themoep.inventorygui.GuiElement$Click.getSlot():180:180 -> a
    3180:3180:boolean lambda$new$0(de.themoep.inventorygui.GuiElement$Click):49 -> a
    3232:3232:de.themoep.inventorygui.InventoryGui de.themoep.inventorygui.GuiElement$Click.getGui():232:232 -> a
    3232:3232:boolean lambda$new$0(de.themoep.inventorygui.GuiElement$Click):49 -> a
    4220:4220:org.bukkit.entity.HumanEntity de.themoep.inventorygui.GuiElement$Click.getWhoClicked():220:220 -> a
    4220:4220:boolean lambda$new$0(de.themoep.inventorygui.GuiElement$Click):49 -> a
    4228:4228:org.bukkit.event.inventory.InventoryInteractEvent de.themoep.inventorygui.GuiElement$Click.getRawEvent():228:228 -> a
    4228:4228:boolean lambda$new$0(de.themoep.inventorygui.GuiElement$Click):50 -> a
    5220:5220:org.bukkit.entity.HumanEntity de.themoep.inventorygui.GuiElement$Click.getWhoClicked():220:220 -> a
    5220:5220:boolean lambda$new$0(de.themoep.inventorygui.GuiElement$Click):51 -> a
de.themoep.inventorygui.GuiElementGroup$Alignment -> a.a.a.c$a:
    de.themoep.inventorygui.GuiElementGroup$Alignment LEFT -> a
    de.themoep.inventorygui.GuiElementGroup$Alignment CENTER -> b
    de.themoep.inventorygui.GuiElementGroup$Alignment RIGHT -> c
    de.themoep.inventorygui.GuiElementGroup$Alignment[] $VALUES -> d
    271:271:de.themoep.inventorygui.GuiElementGroup$Alignment[] values() -> values
    271:271:de.themoep.inventorygui.GuiElementGroup$Alignment valueOf(java.lang.String) -> valueOf
    271:271:void <init>(java.lang.String,int) -> <init>
    271:274:void <clinit>() -> <clinit>
    1271:1271:de.themoep.inventorygui.GuiElementGroup$Alignment[] $values():271:271 -> <clinit>
    1271:1271:void <clinit>():271 -> <clinit>
de.themoep.inventorygui.GuiPageElement -> a.a.a.d:
    de.themoep.inventorygui.GuiPageElement$PageAction pageAction -> a
    boolean silent -> e
    34:83:void <init>(char,org.bukkit.inventory.ItemStack,de.themoep.inventorygui.GuiPageElement$PageAction,java.lang.String[]) -> <init>
    103:115:org.bukkit.inventory.ItemStack getItem(org.bukkit.entity.HumanEntity,int) -> a
    50:80:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click) -> a
    1232:1232:de.themoep.inventorygui.InventoryGui de.themoep.inventorygui.GuiElement$Click.getGui():232:232 -> a
    1232:1232:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):52 -> a
    2220:2220:org.bukkit.entity.HumanEntity de.themoep.inventorygui.GuiElement$Click.getWhoClicked():220:220 -> a
    2220:2220:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):52 -> a
    2232:2232:de.themoep.inventorygui.InventoryGui de.themoep.inventorygui.GuiElement$Click.getGui():232:232 -> a
    2232:2232:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):52 -> a
    3220:3220:org.bukkit.entity.HumanEntity de.themoep.inventorygui.GuiElement$Click.getWhoClicked():220:220 -> a
    3220:3220:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):52 -> a
    4090:4090:boolean isSilent():90:90 -> a
    4090:4090:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):53 -> a
    4232:4232:de.themoep.inventorygui.InventoryGui de.themoep.inventorygui.GuiElement$Click.getGui():232:232 -> a
    4232:4232:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):54 -> a
    5232:5232:de.themoep.inventorygui.InventoryGui de.themoep.inventorygui.GuiElement$Click.getGui():232:232 -> a
    5232:5232:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):56 -> a
    6220:6220:org.bukkit.entity.HumanEntity de.themoep.inventorygui.GuiElement$Click.getWhoClicked():220:220 -> a
    6220:6220:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):56 -> a
    6232:6232:de.themoep.inventorygui.InventoryGui de.themoep.inventorygui.GuiElement$Click.getGui():232:232 -> a
    6232:6232:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):56 -> a
    7220:7220:org.bukkit.entity.HumanEntity de.themoep.inventorygui.GuiElement$Click.getWhoClicked():220:220 -> a
    7220:7220:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):56 -> a
    7232:7232:de.themoep.inventorygui.InventoryGui de.themoep.inventorygui.GuiElement$Click.getGui():232:232 -> a
    7232:7232:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):60 -> a
    8220:8220:org.bukkit.entity.HumanEntity de.themoep.inventorygui.GuiElement$Click.getWhoClicked():220:220 -> a
    8220:8220:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):60 -> a
    9090:9090:boolean isSilent():90:90 -> a
    9090:9090:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):61 -> a
    9232:9232:de.themoep.inventorygui.InventoryGui de.themoep.inventorygui.GuiElement$Click.getGui():232:232 -> a
    9232:9232:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):62 -> a
    10232:10232:de.themoep.inventorygui.InventoryGui de.themoep.inventorygui.GuiElement$Click.getGui():232:232 -> a
    10232:10232:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):64 -> a
    11220:11220:org.bukkit.entity.HumanEntity de.themoep.inventorygui.GuiElement$Click.getWhoClicked():220:220 -> a
    11220:11220:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):64 -> a
    11232:11232:de.themoep.inventorygui.InventoryGui de.themoep.inventorygui.GuiElement$Click.getGui():232:232 -> a
    11232:11232:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):64 -> a
    12220:12220:org.bukkit.entity.HumanEntity de.themoep.inventorygui.GuiElement$Click.getWhoClicked():220:220 -> a
    12220:12220:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):64 -> a
    13090:13090:boolean isSilent():90:90 -> a
    13090:13090:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):68 -> a
    13232:13232:de.themoep.inventorygui.InventoryGui de.themoep.inventorygui.GuiElement$Click.getGui():232:232 -> a
    13232:13232:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):69 -> a
    14232:14232:de.themoep.inventorygui.InventoryGui de.themoep.inventorygui.GuiElement$Click.getGui():232:232 -> a
    14232:14232:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):71 -> a
    15220:15220:org.bukkit.entity.HumanEntity de.themoep.inventorygui.GuiElement$Click.getWhoClicked():220:220 -> a
    15220:15220:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):71 -> a
    16090:16090:boolean isSilent():90:90 -> a
    16090:16090:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):74 -> a
    16232:16232:de.themoep.inventorygui.InventoryGui de.themoep.inventorygui.GuiElement$Click.getGui():232:232 -> a
    16232:16232:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):75 -> a
    17232:17232:de.themoep.inventorygui.InventoryGui de.themoep.inventorygui.GuiElement$Click.getGui():232:232 -> a
    17232:17232:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):77 -> a
    18220:18220:org.bukkit.entity.HumanEntity de.themoep.inventorygui.GuiElement$Click.getWhoClicked():220:220 -> a
    18220:18220:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):77 -> a
    18232:18232:de.themoep.inventorygui.InventoryGui de.themoep.inventorygui.GuiElement$Click.getGui():232:232 -> a
    18232:18232:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):77 -> a
    19220:19220:org.bukkit.entity.HumanEntity de.themoep.inventorygui.GuiElement$Click.getWhoClicked():220:220 -> a
    19220:19220:boolean lambda$new$0(de.themoep.inventorygui.GuiPageElement$PageAction,de.themoep.inventorygui.GuiElement$Click):77 -> a
de.themoep.inventorygui.GuiPageElement$1 -> a.a.a.d$1:
    int[] $SwitchMap$de$themoep$inventorygui$GuiPageElement$PageAction -> a
    50:50:void <clinit>() -> <clinit>
de.themoep.inventorygui.GuiPageElement$PageAction -> a.a.a.d$a:
    de.themoep.inventorygui.GuiPageElement$PageAction NEXT -> a
    de.themoep.inventorygui.GuiPageElement$PageAction PREVIOUS -> b
    de.themoep.inventorygui.GuiPageElement$PageAction FIRST -> c
    de.themoep.inventorygui.GuiPageElement$PageAction LAST -> d
    de.themoep.inventorygui.GuiPageElement$PageAction[] $VALUES -> e
    118:118:de.themoep.inventorygui.GuiPageElement$PageAction[] values() -> values
    118:118:de.themoep.inventorygui.GuiPageElement$PageAction valueOf(java.lang.String) -> valueOf
    118:118:void <init>(java.lang.String,int) -> <init>
    118:122:void <clinit>() -> <clinit>
    1118:1118:de.themoep.inventorygui.GuiPageElement$PageAction[] $values():118:118 -> <clinit>
    1118:1118:void <clinit>():118 -> <clinit>
de.themoep.inventorygui.GuiStorageElement -> a.a.a.e:
    213:217:org.bukkit.inventory.ItemStack getItem(org.bukkit.entity.HumanEntity,int) -> a
de.themoep.inventorygui.InventoryGui -> a.a.a.f:
    int[] ROW_WIDTHS -> d
    org.bukkit.event.inventory.InventoryType[] INVENTORY_TYPES -> e
    java.util.Map GUI_MAP -> f
    java.util.Map GUI_HISTORY -> g
    java.util.Map PATTERN_CACHE -> h
    boolean FOLIA -> i
    java.lang.String DEFAULT_CLICK_SOUND -> j
    org.bukkit.plugin.java.JavaPlugin plugin -> k
    de.themoep.inventorygui.InventoryGui$GuiListener listener -> l
    de.themoep.inventorygui.InventoryGui$InventoryCreator creator -> m
    java.lang.String title -> n
    boolean titleUpdated -> o
    char[] slots -> p
    int width -> a
    de.themoep.inventorygui.GuiElement[] elementSlots -> q
    java.util.Map elements -> b
    org.bukkit.event.inventory.InventoryType inventoryType -> r
    java.util.Map inventories -> s
    org.bukkit.inventory.InventoryHolder owner -> t
    java.util.Map pageNumbers -> u
    java.util.Map pageAmounts -> v
    de.themoep.inventorygui.GuiElement$Action outsideAction -> w
    de.themoep.inventorygui.InventoryGui$CloseAction closeAction -> c
    java.lang.String clickSound -> x
    boolean silent -> y
    103:213:void <init>(org.bukkit.plugin.java.JavaPlugin,de.themoep.inventorygui.InventoryGui$InventoryCreator,org.bukkit.inventory.InventoryHolder,java.lang.String,java.lang.String[],de.themoep.inventorygui.GuiElement[]) -> <init>
    1956:1956:java.lang.String getDefaultClickSound():956:956 -> <init>
    1956:1956:void <init>(org.bukkit.plugin.java.JavaPlugin,de.themoep.inventorygui.InventoryGui$InventoryCreator,org.bukkit.inventory.InventoryHolder,java.lang.String,java.lang.String[],de.themoep.inventorygui.GuiElement[]):115 -> <init>
    227:231:void <init>(org.bukkit.plugin.java.JavaPlugin,org.bukkit.inventory.InventoryHolder,java.lang.String,java.lang.String[],de.themoep.inventorygui.GuiElement[]) -> <init>
    243:244:void <init>(org.bukkit.plugin.java.JavaPlugin,java.lang.String,java.lang.String[],de.themoep.inventorygui.GuiElement[]) -> <init>
    285:295:void addElement(de.themoep.inventorygui.GuiElement) -> a
    2062:2062:char de.themoep.inventorygui.GuiElement.getSlotChar():62:62 -> a
    2062:2062:void addElement(de.themoep.inventorygui.GuiElement):288 -> a
    3062:3062:char de.themoep.inventorygui.GuiElement.getSlotChar():62:62 -> a
    3062:3062:void addElement(de.themoep.inventorygui.GuiElement):290 -> a
    298:304:int[] getSlots(char) -> a
    387:390:void addElements(de.themoep.inventorygui.GuiElement[]) -> a
    450:451:void setFiller(org.bukkit.inventory.ItemStack) -> a
    458:458:de.themoep.inventorygui.GuiElement getFiller() -> a
    467:467:int getPageNumber(org.bukkit.entity.HumanEntity) -> a
    489:491:void setPageNumber(org.bukkit.entity.HumanEntity,int) -> a
    3624:3625:void draw(org.bukkit.entity.HumanEntity,boolean):624:625 -> a
    3624:3625:void setPageNumber(org.bukkit.entity.HumanEntity,int):490 -> a
    494:495:void setPageNumberInternal(org.bukkit.entity.HumanEntity,int) -> b
    503:503:int getPageAmount(org.bukkit.entity.HumanEntity) -> b
    516:527:void calculatePageAmount(org.bukkit.entity.HumanEntity) -> h
    4512:4513:void setPageAmount(org.bukkit.entity.HumanEntity,int):512:513 -> h
    4512:4513:void calculatePageAmount(org.bukkit.entity.HumanEntity):523 -> h
    530:537:int calculateElementSize(org.bukkit.entity.HumanEntity,de.themoep.inventorygui.GuiElement) -> a
    5225:5225:org.bukkit.inventory.Inventory de.themoep.inventorygui.GuiStorageElement.getStorage():225:225 -> a
    5225:5225:int calculateElementSize(org.bukkit.entity.HumanEntity,de.themoep.inventorygui.GuiElement):533 -> a
    545:546:void show(org.bukkit.entity.HumanEntity) -> c
    555:580:void show(org.bukkit.entity.HumanEntity,boolean) -> a
    586:587:void build() -> g
    5594:5596:void build(org.bukkit.inventory.InventoryHolder):594:596 -> g
    5594:5596:void build():586 -> g
    5894:5901:void setOwner(org.bukkit.inventory.InventoryHolder):894:901 -> g
    5894:5901:void build(org.bukkit.inventory.InventoryHolder):594 -> g
    5894:5901:void build():586 -> g
    602:608:void draw() -> b
    6693:6706:void runTaskOrNow(org.bukkit.entity.HumanEntity,java.lang.Runnable):693:706 -> b
    6693:6706:void draw():605 -> b
    634:659:void draw(org.bukkit.entity.HumanEntity,boolean,boolean) -> a
    6848:6848:de.themoep.inventorygui.InventoryGui$InventoryCreator getInventoryCreator():848:848 -> a
    6848:6848:void draw(org.bukkit.entity.HumanEntity,boolean,boolean):642 -> a
    7680:7680:de.themoep.inventorygui.InventoryGui$InventoryCreator$CreatorImplementation de.themoep.inventorygui.InventoryGui$InventoryCreator.getSizeCreator():1680:1680 -> a
    7680:7680:void draw(org.bukkit.entity.HumanEntity,boolean,boolean):642 -> a
    7848:7848:de.themoep.inventorygui.InventoryGui$InventoryCreator getInventoryCreator():848:848 -> a
    7848:7848:void draw(org.bukkit.entity.HumanEntity,boolean,boolean):644 -> a
    8676:8676:de.themoep.inventorygui.InventoryGui$InventoryCreator$CreatorImplementation de.themoep.inventorygui.InventoryGui$InventoryCreator.getTypeCreator():1676:1676 -> a
    8676:8676:void draw(org.bukkit.entity.HumanEntity,boolean,boolean):644 -> a
    667:672:void runTask(org.bukkit.entity.HumanEntity,java.lang.Runnable) -> a
    679:684:void runTask(java.lang.Runnable) -> a
    714:721:void updateElements(org.bukkit.entity.HumanEntity,java.util.Collection) -> a
    9209:9209:java.util.List de.themoep.inventorygui.GuiElementGroup.getElements():209:209 -> a
    9209:9209:void updateElements(org.bukkit.entity.HumanEntity,java.util.Collection):718 -> a
    727:728:void close() -> c
    9735:9740:void close(boolean):735:740 -> c
    9735:9740:void close():727 -> c
    9756:9760:void close(org.bukkit.entity.HumanEntity,boolean):756:760 -> c
    9756:9760:void close(boolean):737 -> c
    9756:9760:void close():727 -> c
    766:767:void destroy() -> d
    770:781:void destroy(boolean) -> a
    789:794:void addHistory(org.bukkit.entity.HumanEntity,de.themoep.inventorygui.InventoryGui) -> a
    803:803:java.util.Deque getHistory(org.bukkit.entity.HumanEntity) -> i
    812:821:boolean goBack(org.bukkit.entity.HumanEntity) -> d
    830:831:java.util.Deque clearHistory(org.bukkit.entity.HumanEntity) -> e
    868:868:de.themoep.inventorygui.GuiElement getElement(int) -> a
    916:916:boolean hasRealOwner() -> e
    1002:1007:void removeFromMap() -> h
    1029:1029:de.themoep.inventorygui.InventoryGui getOpen(org.bukkit.entity.HumanEntity) -> f
    1053:1061:void playClickSound() -> f
    9990:9990:boolean isSilent():990:990 -> f
    9990:9990:void playClickSound():1053 -> f
    10973:10973:java.lang.String getClickSound():973:973 -> f
    10973:10973:void playClickSound():1057 -> f
    1077:1077:org.bukkit.inventory.Inventory getInventory(org.bukkit.entity.HumanEntity) -> g
    1097:1151:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack) -> a
    11576:11632:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1576:1632 -> a
    11576:11632:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    12228:12228:org.bukkit.event.inventory.InventoryInteractEvent de.themoep.inventorygui.GuiElement$Click.getRawEvent():228:228 -> a
    12228:12228:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1576 -> a
    12228:12228:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    13228:13228:org.bukkit.event.inventory.InventoryInteractEvent de.themoep.inventorygui.GuiElement$Click.getRawEvent():228:228 -> a
    13228:13228:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1580 -> a
    13228:13228:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    14204:14204:org.bukkit.inventory.ItemStack de.themoep.inventorygui.GuiElement$Click.getCursor():204:204 -> a
    14204:14204:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1582 -> a
    14204:14204:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    14228:14228:org.bukkit.event.inventory.InventoryInteractEvent de.themoep.inventorygui.GuiElement$Click.getRawEvent():228:228 -> a
    14228:14228:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1585 -> a
    14228:14228:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    15228:15228:org.bukkit.event.inventory.InventoryInteractEvent de.themoep.inventorygui.GuiElement$Click.getRawEvent():228:228 -> a
    15228:15228:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1587 -> a
    15228:15228:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    16220:16220:org.bukkit.entity.HumanEntity de.themoep.inventorygui.GuiElement$Click.getWhoClicked():220:220 -> a
    16220:16220:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1594 -> a
    16220:16220:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    16276:16276:boolean de.themoep.inventorygui.GuiStorageElement.setStorageItem(int,org.bukkit.inventory.ItemStack):276:276 -> a
    16276:16276:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1599 -> a
    16276:16276:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    17228:17228:org.bukkit.event.inventory.InventoryInteractEvent de.themoep.inventorygui.GuiElement$Click.getRawEvent():228:228 -> a
    17228:17228:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1610 -> a
    17228:17228:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    18228:18228:org.bukkit.event.inventory.InventoryInteractEvent de.themoep.inventorygui.GuiElement$Click.getRawEvent():228:228 -> a
    18228:18228:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1611 -> a
    18228:18228:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    19228:19228:org.bukkit.event.inventory.InventoryInteractEvent de.themoep.inventorygui.GuiElement$Click.getRawEvent():228:228 -> a
    19228:19228:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1612 -> a
    19228:19228:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    20188:20188:de.themoep.inventorygui.GuiElement de.themoep.inventorygui.GuiElement$Click.getElement():188:188 -> a
    20188:20188:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1615 -> a
    20188:20188:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    21188:21188:de.themoep.inventorygui.GuiElement de.themoep.inventorygui.GuiElement$Click.getElement():188:188 -> a
    21188:21188:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1616 -> a
    21188:21188:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    21220:21220:org.bukkit.entity.HumanEntity de.themoep.inventorygui.GuiElement$Click.getWhoClicked():220:220 -> a
    21220:21220:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1616 -> a
    21220:21220:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    22180:22180:int de.themoep.inventorygui.GuiElement$Click.getSlot():180:180 -> a
    22180:22180:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1616 -> a
    22180:22180:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    22228:22228:org.bukkit.event.inventory.InventoryInteractEvent de.themoep.inventorygui.GuiElement$Click.getRawEvent():228:228 -> a
    22228:22228:void simulateCollectToCursor(de.themoep.inventorygui.GuiElement$Click):1620 -> a
    22228:22228:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1112 -> a
    22624:22625:void draw(org.bukkit.entity.HumanEntity,boolean):624:625 -> a
    22624:22625:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1135 -> a
    23037:23037:java.lang.String getTitle():1037:1037 -> a
    23037:23037:de.themoep.inventorygui.GuiElement$Click handleInteract(org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack):1148 -> a
    1473:1492:void setItemText(org.bukkit.entity.HumanEntity,org.bukkit.inventory.ItemStack,java.lang.String[]) -> a
    1530:1547:java.lang.String replaceVars(org.bukkit.entity.HumanEntity,java.lang.String,java.lang.String[]) -> a
    1557:1568:java.lang.String replace(java.lang.String,java.util.Map) -> a
    1641:1652:boolean addToStack(org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack) -> a
    1478:1478:boolean lambda$setItemText$10(java.lang.String) -> a
    1477:1477:java.lang.String lambda$setItemText$9(java.lang.String) -> b
    697:697:void lambda$runTaskOrNow$8(java.lang.Runnable,io.papermc.paper.threadedregions.scheduler.ScheduledTask) -> a
    680:680:void lambda$runTask$7(java.lang.Runnable,io.papermc.paper.threadedregions.scheduler.ScheduledTask) -> b
    668:668:void lambda$runTask$6(java.lang.Runnable,io.papermc.paper.threadedregions.scheduler.ScheduledTask) -> c
    605:605:void lambda$draw$5(org.bukkit.entity.Player) -> a
    23615:23616:void draw(org.bukkit.entity.HumanEntity):615:616 -> a
    23615:23616:void lambda$draw$5(org.bukkit.entity.Player):605 -> a
    23624:23625:void draw(org.bukkit.entity.HumanEntity,boolean):624:625 -> a
    23624:23625:void draw(org.bukkit.entity.HumanEntity):615 -> a
    23624:23625:void lambda$draw$5(org.bukkit.entity.Player):605 -> a
    563:568:void lambda$show$4(org.bukkit.entity.HumanEntity) -> j
    229:229:org.bukkit.inventory.Inventory lambda$new$3(org.bukkit.plugin.java.JavaPlugin,de.themoep.inventorygui.InventoryGui,org.bukkit.entity.HumanEntity,java.lang.Integer) -> a
    24037:24037:java.lang.String getTitle():1037:1037 -> a
    24037:24037:org.bukkit.inventory.Inventory lambda$new$3(org.bukkit.plugin.java.JavaPlugin,de.themoep.inventorygui.InventoryGui,org.bukkit.entity.HumanEntity,java.lang.Integer):229 -> a
    228:228:org.bukkit.inventory.Inventory lambda$new$2(org.bukkit.plugin.java.JavaPlugin,de.themoep.inventorygui.InventoryGui,org.bukkit.entity.HumanEntity,org.bukkit.event.inventory.InventoryType) -> a
    25037:25037:java.lang.String getTitle():1037:1037 -> a
    25037:25037:org.bukkit.inventory.Inventory lambda$new$2(org.bukkit.plugin.java.JavaPlugin,de.themoep.inventorygui.InventoryGui,org.bukkit.entity.HumanEntity,org.bukkit.event.inventory.InventoryType):228 -> a
    114:114:boolean lambda$new$1(de.themoep.inventorygui.InventoryGui$Close) -> a
    113:113:boolean lambda$new$0(de.themoep.inventorygui.GuiElement$Click) -> a
    81:81:org.bukkit.plugin.java.JavaPlugin access$200(de.themoep.inventorygui.InventoryGui) -> a
    81:81:org.bukkit.inventory.Inventory access$400(de.themoep.inventorygui.InventoryGui,org.bukkit.entity.HumanEntity) -> a
    81:81:de.themoep.inventorygui.GuiElement$Click access$500(de.themoep.inventorygui.InventoryGui,org.bukkit.event.inventory.InventoryInteractEvent,org.bukkit.event.inventory.ClickType,int,org.bukkit.inventory.ItemStack) -> a
    81:81:org.bukkit.inventory.InventoryHolder access$600(de.themoep.inventorygui.InventoryGui) -> b
    81:81:de.themoep.inventorygui.InventoryGui$CloseAction access$700(de.themoep.inventorygui.InventoryGui) -> c
    81:81:java.util.Map access$800(de.themoep.inventorygui.InventoryGui) -> d
    81:81:void access$900(de.themoep.inventorygui.InventoryGui,boolean) -> a
    81:81:java.util.Map access$1000(de.themoep.inventorygui.InventoryGui) -> e
    81:81:java.util.Map access$1100(de.themoep.inventorygui.InventoryGui) -> f
    83:152:void <clinit>() -> <clinit>
    25964:25965:void setDefaultClickSound(java.lang.String):964:965 -> <clinit>
    25964:25965:void <clinit>():151 -> <clinit>
de.themoep.inventorygui.InventoryGui$Close -> a.a.a.f$a:
    1432:1436:void <init>(org.bukkit.entity.HumanEntity,de.themoep.inventorygui.InventoryGui,org.bukkit.event.inventory.InventoryCloseEvent) -> <init>
de.themoep.inventorygui.InventoryGui$CloseAction -> a.a.a.f$b:
    boolean onClose(de.themoep.inventorygui.InventoryGui$Close) -> onClose
de.themoep.inventorygui.InventoryGui$GuiListener -> a.a.a.f$c:
    de.themoep.inventorygui.InventoryGui this$0 -> a
    1210:1210:void <init>(de.themoep.inventorygui.InventoryGui) -> <init>
    1214:1238:void onInventoryClick(org.bukkit.event.inventory.InventoryClickEvent) -> a
    2204:2204:org.bukkit.inventory.ItemStack de.themoep.inventorygui.GuiElement$Click.getCursor():204:204 -> a
    2204:2204:void onInventoryClick(org.bukkit.event.inventory.InventoryClickEvent):1230 -> a
    3204:3204:org.bukkit.inventory.ItemStack de.themoep.inventorygui.GuiElement$Click.getCursor():204:204 -> a
    3204:3204:void onInventoryClick(org.bukkit.event.inventory.InventoryClickEvent):1231 -> a
    1242:1311:void onInventoryDrag(org.bukkit.event.inventory.InventoryDragEvent) -> a
    4204:4204:org.bukkit.inventory.ItemStack de.themoep.inventorygui.GuiElement$Click.getCursor():204:204 -> a
    4204:4204:void onInventoryDrag(org.bukkit.event.inventory.InventoryDragEvent):1257 -> a
    5204:5204:org.bukkit.inventory.ItemStack de.themoep.inventorygui.GuiElement$Click.getCursor():204:204 -> a
    5204:5204:void onInventoryDrag(org.bukkit.event.inventory.InventoryDragEvent):1258 -> a
    1315:1344:void onInventoryClose(org.bukkit.event.inventory.InventoryCloseEvent) -> a
    5886:5886:java.util.Collection de.themoep.inventorygui.InventoryGui.getElements():886:886 -> a
    5886:5886:void onInventoryClose(org.bukkit.event.inventory.InventoryCloseEvent):1337 -> a
    6160:6161:de.themoep.inventorygui.GuiElement de.themoep.inventorygui.DynamicGuiElement.removeCachedElement(org.bukkit.entity.HumanEntity):160:161 -> a
    6160:6161:void onInventoryClose(org.bukkit.event.inventory.InventoryCloseEvent):1339 -> a
    6183:6183:de.themoep.inventorygui.GuiElement de.themoep.inventorygui.DynamicGuiElement$CacheEntry.getElement():183:183 -> a
    6183:6183:de.themoep.inventorygui.GuiElement de.themoep.inventorygui.DynamicGuiElement.removeCachedElement(org.bukkit.entity.HumanEntity):161 -> a
    6183:6183:void onInventoryClose(org.bukkit.event.inventory.InventoryCloseEvent):1339 -> a
    1348:1351:void onInventoryMoveItem(org.bukkit.event.inventory.InventoryMoveItemEvent) -> a
    1355:1358:void onDispense(org.bukkit.event.block.BlockDispenseEvent) -> a
    1362:1365:void onBlockBreak(org.bukkit.event.block.BlockBreakEvent) -> a
    1369:1372:void onEntityDeath(org.bukkit.event.entity.EntityDeathEvent) -> a
    1376:1379:void onPluginDisable(org.bukkit.event.server.PluginDisableEvent) -> a
    1284:1287:void lambda$onInventoryDrag$0(java.util.Map,org.bukkit.event.inventory.InventoryDragEvent) -> a
    1210:1210:void <init>(de.themoep.inventorygui.InventoryGui,byte) -> <init>
de.themoep.inventorygui.InventoryGui$GuiListener$ItemSwapGuiListener -> a.a.a.f$c$a:
    de.themoep.inventorygui.InventoryGui$GuiListener this$1 -> a
    1388:1392:void onInventoryMoveItem(org.bukkit.event.player.PlayerSwapHandItemsEvent) -> a
de.themoep.inventorygui.InventoryGui$Holder -> a.a.a.f$d:
    de.themoep.inventorygui.InventoryGui gui -> a
    1402:1404:void <init>(de.themoep.inventorygui.InventoryGui) -> <init>
    1408:1408:org.bukkit.inventory.Inventory getInventory() -> getInventory
    2068:2068:org.bukkit.inventory.Inventory de.themoep.inventorygui.InventoryGui.getInventory():1068:1068 -> getInventory
    2068:2068:org.bukkit.inventory.Inventory getInventory():1408 -> getInventory
de.themoep.inventorygui.InventoryGui$InventoryCreator -> a.a.a.f$e:
    de.themoep.inventorygui.InventoryGui$InventoryCreator$CreatorImplementation typeCreator -> a
    de.themoep.inventorygui.InventoryGui$InventoryCreator$CreatorImplementation sizeCreator -> b
    1670:1673:void <init>(de.themoep.inventorygui.InventoryGui$InventoryCreator$CreatorImplementation,de.themoep.inventorygui.InventoryGui$InventoryCreator$CreatorImplementation) -> <init>
de.themoep.inventorygui.InventoryGui$InventoryCreator$CreatorImplementation -> a.a.a.f$e$a:
    org.bukkit.inventory.Inventory create(de.themoep.inventorygui.InventoryGui,org.bukkit.entity.HumanEntity,java.lang.Object) -> create
de.themoep.inventorygui.InventoryGui$OptionalListener -> a.a.a.f$f:
    1198:1202:boolean isCompatible() -> c
    1195:1195:boolean access$100(de.themoep.inventorygui.InventoryGui$OptionalListener) -> a
de.themoep.inventorygui.InventoryGui$UnregisterableListener -> a.a.a.f$g:
    java.util.List listeners -> a
    boolean listenersRegistered -> b
    de.themoep.inventorygui.InventoryGui this$0 -> c
    1156:1173:void <init>(de.themoep.inventorygui.InventoryGui) -> <init>
    1176:1184:void registerListeners() -> a
    1187:1192:void unregisterListeners() -> b
    1154:1154:void <init>(de.themoep.inventorygui.InventoryGui,byte) -> <init>
de.themoep.inventorygui.StaticGuiElement -> a.a.a.g:
    org.bukkit.inventory.ItemStack item -> a
    int number -> e
    java.lang.String[] text -> f
    51:55:void <init>(char,org.bukkit.inventory.ItemStack,int,de.themoep.inventorygui.GuiElement$Action,java.lang.String[]) -> <init>
    69:70:void <init>(char,org.bukkit.inventory.ItemStack,de.themoep.inventorygui.GuiElement$Action,java.lang.String[]) -> <init>
    83:84:void <init>(char,org.bukkit.inventory.ItemStack,java.lang.String[]) -> <init>
    106:114:org.bukkit.inventory.ItemStack getItem(org.bukkit.entity.HumanEntity,int) -> a
    1134:1134:java.lang.String[] getText():134:134 -> a
    1134:1134:org.bukkit.inventory.ItemStack getItem(org.bukkit.entity.HumanEntity,int):110 -> a
    143:148:boolean setNumber(int) -> a
it.mikeslab.Main -> it.mikeslab.Main:
    it.mikeslab.Main instance -> instance
    org.bukkit.scheduler.BukkitTask limitTask -> limitTask
    it.mikeslab.util.GSONUtil transactionGson -> transactionGson
    it.mikeslab.util.GSONUtil playerDataGson -> playerDataGson
    it.mikeslab.util.transactions.EconomyManager economyManager -> economyManager
    it.mikeslab.util.creditcard.CardTypeUtil cardTypeUtil -> cardTypeUtil
    it.mikeslab.util.transactions.TransactionUtil transactionUtil -> transactionUtil
    it.mikeslab.util.creditcard.CreditCardUtil creditCardUtil -> creditCardUtil
    co.aikar.commands.BukkitCommandManager commandManager -> commandManager
    it.mikeslab.util.database.MongoDBHandler transactionHandler -> transactionHandler
    it.mikeslab.vault.EconomyCore economyCore -> economyCore
    36:36:void <init>() -> <init>
    51:101:void onEnable() -> onEnable
    106:115:void onDisable() -> onDisable
    119:125:boolean setupEconomy(it.mikeslab.vault.EconomyCore) -> setupEconomy
    131:142:void setupCommandFramework() -> setupCommandFramework
    151:151:boolean useMongo() -> useMongo
    38:38:org.bukkit.scheduler.BukkitTask getLimitTask() -> getLimitTask
    39:39:it.mikeslab.util.GSONUtil getTransactionGson() -> getTransactionGson
    40:40:it.mikeslab.util.GSONUtil getPlayerDataGson() -> getPlayerDataGson
    41:41:it.mikeslab.util.transactions.EconomyManager getEconomyManager() -> getEconomyManager
    42:42:it.mikeslab.util.creditcard.CardTypeUtil getCardTypeUtil() -> getCardTypeUtil
    43:43:it.mikeslab.util.transactions.TransactionUtil getTransactionUtil() -> getTransactionUtil
    44:44:it.mikeslab.util.creditcard.CreditCardUtil getCreditCardUtil() -> getCreditCardUtil
    45:45:co.aikar.commands.BukkitCommandManager getCommandManager() -> getCommandManager
    46:46:it.mikeslab.util.database.MongoDBHandler getTransactionHandler() -> getTransactionHandler
    47:47:it.mikeslab.vault.EconomyCore getEconomyCore() -> getEconomyCore
    37:37:it.mikeslab.Main getInstance() -> getInstance
    138:138:java.util.Collection lambda$setupCommandFramework$0(co.aikar.commands.BukkitCommandCompletionContext) -> lambda$setupCommandFramework$0
it.mikeslab.Perms -> it.mikeslab.Perms:
    java.lang.String ATM_CMD -> ATM_CMD
    java.lang.String ATM_USE -> ATM_USE
    java.lang.String ATM_REMOVE -> ATM_REMOVE
    java.lang.String ATM_PLACE -> ATM_PLACE
    java.lang.String ATM_ADMIN -> ATM_ADMIN
    java.lang.String CREDITCARD_CMD -> CREDITCARD_CMD
    java.lang.String CREDITCARD_CREATE -> CREDITCARD_CREATE
    java.lang.String CREDITCARD_DELETE -> CREDITCARD_DELETE
    java.lang.String CREDITCARD_BALANCE -> CREDITCARD_BALANCE
    java.lang.String CREDITCARD_TRANSACTIONS -> CREDITCARD_TRANSACTIONS
    java.lang.String CREDITCARD_TRANSACTIONS_OTHERS -> CREDITCARD_TRANSACTIONS_OTHERS
    java.lang.String CREDITCARD_TYPES_PREVIEW -> CREDITCARD_TYPES_PREVIEW
    java.lang.String WIRE_TRANSFER_CMD -> WIRE_TRANSFER_CMD
    java.lang.String WIRE_TRANSFER_SEND -> WIRE_TRANSFER_SEND
    java.lang.String BANK_CMD -> BANK_CMD
    java.lang.String BANK_GIVE -> BANK_GIVE
    java.lang.String BANK_TAKE -> BANK_TAKE
    java.lang.String BANK_RESET -> BANK_RESET
    java.lang.String BANK_SET -> BANK_SET
    3:3:void <init>() -> <init>
it.mikeslab.anvilgui.AnvilGUI -> it.mikeslab.anvilgui.AnvilGUI:
    it.mikeslab.anvilgui.version.VersionWrapper WRAPPER -> WRAPPER
    org.bukkit.inventory.ItemStack AIR -> AIR
    org.bukkit.plugin.Plugin plugin -> plugin
    org.bukkit.entity.Player player -> player
    java.lang.String inventoryTitle -> inventoryTitle
    org.bukkit.inventory.ItemStack[] initialContents -> initialContents
    boolean preventClose -> preventClose
    java.util.Set interactableSlots -> interactableSlots
    java.util.function.Consumer closeListener -> closeListener
    java.util.function.Function completeFunction -> completeFunction
    java.util.function.Consumer inputLeftClickListener -> inputLeftClickListener
    java.util.function.Consumer inputRightClickListener -> inputRightClickListener
    int containerId -> containerId
    org.bukkit.inventory.Inventory inventory -> inventory
    it.mikeslab.anvilgui.AnvilGUI$ListenUp listener -> listener
    boolean open -> open
    105:146:void <init>(org.bukkit.plugin.Plugin,org.bukkit.entity.Player,java.lang.String,org.bukkit.inventory.ItemStack[],boolean,java.util.Set,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Function) -> <init>
    152:175:void openInventory() -> openInventory
    181:182:void closeInventory() -> closeInventory
    190:207:void closeInventory(boolean) -> closeInventory
    215:215:org.bukkit.inventory.Inventory getInventory() -> getInventory
    298:298:org.bukkit.inventory.ItemStack notNull(org.bukkit.inventory.ItemStack) -> notNull
    34:34:org.bukkit.inventory.Inventory access$100(it.mikeslab.anvilgui.AnvilGUI) -> access$100
    34:34:java.util.Set access$200(it.mikeslab.anvilgui.AnvilGUI) -> access$200
    34:34:org.bukkit.inventory.ItemStack access$300(it.mikeslab.anvilgui.AnvilGUI,org.bukkit.inventory.ItemStack) -> access$300
    34:34:org.bukkit.entity.Player access$400(it.mikeslab.anvilgui.AnvilGUI) -> access$400
    34:34:java.util.function.Function access$500(it.mikeslab.anvilgui.AnvilGUI) -> access$500
    34:34:java.util.function.Consumer access$600(it.mikeslab.anvilgui.AnvilGUI) -> access$600
    34:34:java.util.function.Consumer access$700(it.mikeslab.anvilgui.AnvilGUI) -> access$700
    34:34:boolean access$800(it.mikeslab.anvilgui.AnvilGUI) -> access$800
    34:34:void access$900(it.mikeslab.anvilgui.AnvilGUI,boolean) -> access$900
    34:34:boolean access$1000(it.mikeslab.anvilgui.AnvilGUI) -> access$1000
    34:34:org.bukkit.plugin.Plugin access$1100(it.mikeslab.anvilgui.AnvilGUI) -> access$1100
    34:34:void access$1200(it.mikeslab.anvilgui.AnvilGUI) -> access$1200
    34:34:void <init>(org.bukkit.plugin.Plugin,org.bukkit.entity.Player,java.lang.String,org.bukkit.inventory.ItemStack[],boolean,java.util.Set,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Consumer,java.util.function.Function,it.mikeslab.anvilgui.AnvilGUI$1) -> <init>
    39:45:void <clinit>() -> <clinit>
it.mikeslab.anvilgui.AnvilGUI$1 -> it.mikeslab.anvilgui.AnvilGUI$1:
it.mikeslab.anvilgui.AnvilGUI$Builder -> it.mikeslab.anvilgui.AnvilGUI$Builder:
    java.util.function.Consumer closeListener -> closeListener
    boolean preventClose -> preventClose
    java.util.Set interactableSlots -> interactableSlots
    java.util.function.Consumer inputLeftClickListener -> inputLeftClickListener
    java.util.function.Consumer inputRightClickListener -> inputRightClickListener
    java.util.function.Function completeFunction -> completeFunction
    org.bukkit.plugin.Plugin plugin -> plugin
    java.lang.String title -> title
    java.lang.String itemText -> itemText
    org.bukkit.inventory.ItemStack itemLeft -> itemLeft
    org.bukkit.inventory.ItemStack itemRight -> itemRight
    org.bukkit.inventory.ItemStack itemOutput -> itemOutput
    304:339:void <init>() -> <init>
    363:364:it.mikeslab.anvilgui.AnvilGUI$Builder preventClose() -> preventClose
    375:380:it.mikeslab.anvilgui.AnvilGUI$Builder interactableSlots(int[]) -> interactableSlots
    391:393:it.mikeslab.anvilgui.AnvilGUI$Builder onClose(java.util.function.Consumer) -> onClose
    403:404:it.mikeslab.anvilgui.AnvilGUI$Builder onLeftInputClick(java.util.function.Consumer) -> onLeftInputClick
    414:415:it.mikeslab.anvilgui.AnvilGUI$Builder onRightInputClick(java.util.function.Consumer) -> onRightInputClick
    428:430:it.mikeslab.anvilgui.AnvilGUI$Builder onComplete(java.util.function.BiFunction) -> onComplete
    444:446:it.mikeslab.anvilgui.AnvilGUI$Builder onComplete(java.util.function.Function) -> onComplete
    457:459:it.mikeslab.anvilgui.AnvilGUI$Builder plugin(org.bukkit.plugin.Plugin) -> plugin
    470:472:it.mikeslab.anvilgui.AnvilGUI$Builder text(java.lang.String) -> text
    483:485:it.mikeslab.anvilgui.AnvilGUI$Builder title(java.lang.String) -> title
    498:498:it.mikeslab.anvilgui.AnvilGUI$Builder item(org.bukkit.inventory.ItemStack) -> item
    509:511:it.mikeslab.anvilgui.AnvilGUI$Builder itemLeft(org.bukkit.inventory.ItemStack) -> itemLeft
    521:522:it.mikeslab.anvilgui.AnvilGUI$Builder itemRight(org.bukkit.inventory.ItemStack) -> itemRight
    532:533:it.mikeslab.anvilgui.AnvilGUI$Builder itemOutput(org.bukkit.inventory.ItemStack) -> itemOutput
    544:558:it.mikeslab.anvilgui.AnvilGUI open(org.bukkit.entity.Player) -> open
    429:429:java.util.List lambda$onComplete$0(java.util.function.BiFunction,it.mikeslab.anvilgui.AnvilGUI$Completion) -> lambda$onComplete$0
it.mikeslab.anvilgui.AnvilGUI$Completion -> it.mikeslab.anvilgui.AnvilGUI$Completion:
    org.bukkit.inventory.ItemStack leftItem -> leftItem
    org.bukkit.inventory.ItemStack rightItem -> rightItem
    org.bukkit.inventory.ItemStack outputItem -> outputItem
    org.bukkit.entity.Player player -> player
    java.lang.String text -> text
    717:723:void <init>(org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack,org.bukkit.entity.Player,java.lang.String) -> <init>
    731:731:org.bukkit.inventory.ItemStack getLeftItem() -> getLeftItem
    740:740:org.bukkit.inventory.ItemStack getRightItem() -> getRightItem
    750:750:org.bukkit.inventory.ItemStack getOutputItem() -> getOutputItem
    759:759:org.bukkit.entity.Player getPlayer() -> getPlayer
    768:768:java.lang.String getText() -> getText
    692:692:org.bukkit.entity.Player access$1400(it.mikeslab.anvilgui.AnvilGUI$Completion) -> access$1400
    692:692:java.lang.String access$1500(it.mikeslab.anvilgui.AnvilGUI$Completion) -> access$1500
it.mikeslab.anvilgui.AnvilGUI$ListenUp -> it.mikeslab.anvilgui.AnvilGUI$ListenUp:
    it.mikeslab.anvilgui.AnvilGUI this$0 -> this$0
    221:221:void <init>(it.mikeslab.anvilgui.AnvilGUI) -> <init>
    225:266:void onInventoryClick(org.bukkit.event.inventory.InventoryClickEvent) -> onInventoryClick
    270:278:void onInventoryDrag(org.bukkit.event.inventory.InventoryDragEvent) -> onInventoryDrag
    282:288:void onInventoryClose(org.bukkit.event.inventory.InventoryCloseEvent) -> onInventoryClose
    285:285:void lambda$onInventoryClose$0(it.mikeslab.anvilgui.AnvilGUI) -> lambda$onInventoryClose$0
    221:221:void <init>(it.mikeslab.anvilgui.AnvilGUI,it.mikeslab.anvilgui.AnvilGUI$1) -> <init>
it.mikeslab.anvilgui.AnvilGUI$Response -> it.mikeslab.anvilgui.AnvilGUI$Response:
    624:624:void <init>() -> <init>
    631:631:java.util.List close() -> close
    642:642:java.util.List text(java.lang.String) -> text
    653:653:java.util.List openInventory(org.bukkit.inventory.Inventory) -> openInventory
it.mikeslab.anvilgui.AnvilGUI$ResponseAction -> it.mikeslab.anvilgui.AnvilGUI$ResponseAction:
    582:582:it.mikeslab.anvilgui.AnvilGUI$ResponseAction replaceInputText(java.lang.String) -> replaceInputText
    598:598:it.mikeslab.anvilgui.AnvilGUI$ResponseAction openInventory(org.bukkit.inventory.Inventory) -> openInventory
    606:606:it.mikeslab.anvilgui.AnvilGUI$ResponseAction close() -> close
    615:615:it.mikeslab.anvilgui.AnvilGUI$ResponseAction run(java.lang.Runnable) -> run
    615:615:void lambda$run$3(java.lang.Runnable,it.mikeslab.anvilgui.AnvilGUI,org.bukkit.entity.Player) -> lambda$run$3
    606:606:void lambda$close$2(it.mikeslab.anvilgui.AnvilGUI,org.bukkit.entity.Player) -> lambda$close$2
    598:598:void lambda$openInventory$1(org.bukkit.inventory.Inventory,it.mikeslab.anvilgui.AnvilGUI,org.bukkit.entity.Player) -> lambda$openInventory$1
    583:589:void lambda$replaceInputText$0(java.lang.String,it.mikeslab.anvilgui.AnvilGUI,org.bukkit.entity.Player) -> lambda$replaceInputText$0
it.mikeslab.anvilgui.AnvilGUI$Slot -> it.mikeslab.anvilgui.AnvilGUI$Slot:
    int[] values -> values
    int INPUT_LEFT -> INPUT_LEFT
    int INPUT_RIGHT -> INPUT_RIGHT
    int OUTPUT -> OUTPUT
    660:660:void <init>() -> <init>
    685:685:int[] values() -> values
    662:662:void <clinit>() -> <clinit>
it.mikeslab.anvilgui.version.VersionMatcher -> it.mikeslab.anvilgui.version.VersionMatcher:
    12:12:void <init>() -> <init>
    21:34:it.mikeslab.anvilgui.version.VersionWrapper match() -> match
it.mikeslab.anvilgui.version.VersionWrapper -> it.mikeslab.anvilgui.version.VersionWrapper:
    int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
it.mikeslab.anvilgui.version.Wrapper1_10_R1 -> it.mikeslab.anvilgui.version.Wrapper1_10_R1:
    16:16:void <init>() -> <init>
    23:23:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    31:32:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    39:43:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    50:51:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    58:59:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    66:67:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    74:75:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    82:83:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    90:90:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    98:98:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    108:108:net.minecraft.server.v1_10_R1.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
it.mikeslab.anvilgui.version.Wrapper1_10_R1$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_10_R1$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_10_R1 this$0 -> this$0
    116:118:void <init>(it.mikeslab.anvilgui.version.Wrapper1_10_R1,net.minecraft.server.v1_10_R1.EntityHuman) -> <init>
    122:122:boolean a(net.minecraft.server.v1_10_R1.EntityHuman) -> a
    126:126:void b(net.minecraft.server.v1_10_R1.EntityHuman) -> b
it.mikeslab.anvilgui.version.Wrapper1_11_R1 -> it.mikeslab.anvilgui.version.Wrapper1_11_R1:
    16:16:void <init>() -> <init>
    23:23:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    31:32:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    39:43:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    50:51:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    58:59:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    66:67:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    74:75:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    82:83:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    90:90:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    98:98:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    108:108:net.minecraft.server.v1_11_R1.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
it.mikeslab.anvilgui.version.Wrapper1_11_R1$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_11_R1$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_11_R1 this$0 -> this$0
    116:118:void <init>(it.mikeslab.anvilgui.version.Wrapper1_11_R1,net.minecraft.server.v1_11_R1.EntityHuman) -> <init>
    122:122:boolean a(net.minecraft.server.v1_11_R1.EntityHuman) -> a
    126:126:void b(net.minecraft.server.v1_11_R1.EntityHuman) -> b
it.mikeslab.anvilgui.version.Wrapper1_12_R1 -> it.mikeslab.anvilgui.version.Wrapper1_12_R1:
    16:16:void <init>() -> <init>
    23:23:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    31:32:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    39:43:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    50:51:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    58:59:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    66:67:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    74:75:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    82:83:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    90:90:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    98:98:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    108:108:net.minecraft.server.v1_12_R1.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
it.mikeslab.anvilgui.version.Wrapper1_12_R1$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_12_R1$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_12_R1 this$0 -> this$0
    116:119:void <init>(it.mikeslab.anvilgui.version.Wrapper1_12_R1,net.minecraft.server.v1_12_R1.EntityHuman) -> <init>
    123:125:void e() -> e
    128:128:void b(net.minecraft.server.v1_12_R1.EntityHuman) -> b
    131:131:void a(net.minecraft.server.v1_12_R1.EntityHuman,net.minecraft.server.v1_12_R1.World,net.minecraft.server.v1_12_R1.IInventory) -> a
it.mikeslab.anvilgui.version.Wrapper1_13_R1 -> it.mikeslab.anvilgui.version.Wrapper1_13_R1:
    16:16:void <init>() -> <init>
    23:23:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    31:32:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    39:43:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    50:51:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    58:59:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    66:67:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    74:75:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    82:83:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    90:90:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    98:98:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    108:108:net.minecraft.server.v1_13_R1.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
it.mikeslab.anvilgui.version.Wrapper1_13_R1$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_13_R1$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_13_R1 this$0 -> this$0
    116:119:void <init>(it.mikeslab.anvilgui.version.Wrapper1_13_R1,net.minecraft.server.v1_13_R1.EntityHuman) -> <init>
    123:125:void d() -> d
    128:128:void b(net.minecraft.server.v1_13_R1.EntityHuman) -> b
    131:131:void a(net.minecraft.server.v1_13_R1.EntityHuman,net.minecraft.server.v1_13_R1.World,net.minecraft.server.v1_13_R1.IInventory) -> a
it.mikeslab.anvilgui.version.Wrapper1_13_R2 -> it.mikeslab.anvilgui.version.Wrapper1_13_R2:
    16:16:void <init>() -> <init>
    23:23:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    31:32:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    39:43:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    50:51:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    58:59:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    66:67:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    74:75:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    82:83:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    90:90:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    98:98:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    108:108:net.minecraft.server.v1_13_R2.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
it.mikeslab.anvilgui.version.Wrapper1_13_R2$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_13_R2$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_13_R2 this$0 -> this$0
    116:119:void <init>(it.mikeslab.anvilgui.version.Wrapper1_13_R2,net.minecraft.server.v1_13_R2.EntityHuman) -> <init>
    123:125:void d() -> d
    128:128:void b(net.minecraft.server.v1_13_R2.EntityHuman) -> b
    131:131:void a(net.minecraft.server.v1_13_R2.EntityHuman,net.minecraft.server.v1_13_R2.World,net.minecraft.server.v1_13_R2.IInventory) -> a
it.mikeslab.anvilgui.version.Wrapper1_14_R1 -> it.mikeslab.anvilgui.version.Wrapper1_14_R1:
    boolean IS_ONE_FOURTEEN -> IS_ONE_FOURTEEN
    13:15:void <init>() -> <init>
    18:18:int getRealNextContainerId(org.bukkit.entity.Player) -> getRealNextContainerId
    26:29:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    38:39:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    46:49:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    56:57:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    64:65:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    72:73:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    81:81:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    88:89:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    96:96:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    104:107:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    118:118:net.minecraft.server.v1_14_R1.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
    13:13:int access$000(it.mikeslab.anvilgui.version.Wrapper1_14_R1,org.bukkit.entity.Player) -> access$000
it.mikeslab.anvilgui.version.Wrapper1_14_R1$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_14_R1$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_14_R1 this$0 -> this$0
    126:133:void <init>(it.mikeslab.anvilgui.version.Wrapper1_14_R1,org.bukkit.entity.Player,java.lang.String) -> <init>
    137:139:void e() -> e
    142:142:void b(net.minecraft.server.v1_14_R1.EntityHuman) -> b
    145:145:void a(net.minecraft.server.v1_14_R1.EntityHuman,net.minecraft.server.v1_14_R1.World,net.minecraft.server.v1_14_R1.IInventory) -> a
    148:148:int getContainerId() -> getContainerId
it.mikeslab.anvilgui.version.Wrapper1_15_R1 -> it.mikeslab.anvilgui.version.Wrapper1_15_R1:
    11:11:void <init>() -> <init>
    13:13:int getRealNextContainerId(org.bukkit.entity.Player) -> getRealNextContainerId
    21:21:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    29:30:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    37:40:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    47:48:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    55:56:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    63:64:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    72:72:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    79:80:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    87:87:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    95:95:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    105:105:net.minecraft.server.v1_15_R1.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
    11:11:int access$000(it.mikeslab.anvilgui.version.Wrapper1_15_R1,org.bukkit.entity.Player) -> access$000
it.mikeslab.anvilgui.version.Wrapper1_15_R1$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_15_R1$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_15_R1 this$0 -> this$0
    113:120:void <init>(it.mikeslab.anvilgui.version.Wrapper1_15_R1,org.bukkit.entity.Player,java.lang.String) -> <init>
    124:126:void e() -> e
    129:129:void b(net.minecraft.server.v1_15_R1.EntityHuman) -> b
    132:132:void a(net.minecraft.server.v1_15_R1.EntityHuman,net.minecraft.server.v1_15_R1.World,net.minecraft.server.v1_15_R1.IInventory) -> a
    135:135:int getContainerId() -> getContainerId
it.mikeslab.anvilgui.version.Wrapper1_16_R1 -> it.mikeslab.anvilgui.version.Wrapper1_16_R1:
    11:11:void <init>() -> <init>
    13:13:int getRealNextContainerId(org.bukkit.entity.Player) -> getRealNextContainerId
    21:21:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    29:30:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    37:40:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    47:48:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    55:56:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    63:64:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    72:72:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    79:80:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    87:87:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    95:95:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    105:105:net.minecraft.server.v1_16_R1.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
    11:11:int access$000(it.mikeslab.anvilgui.version.Wrapper1_16_R1,org.bukkit.entity.Player) -> access$000
it.mikeslab.anvilgui.version.Wrapper1_16_R1$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_16_R1$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_16_R1 this$0 -> this$0
    113:120:void <init>(it.mikeslab.anvilgui.version.Wrapper1_16_R1,org.bukkit.entity.Player,java.lang.String) -> <init>
    124:126:void e() -> e
    129:129:void b(net.minecraft.server.v1_16_R1.EntityHuman) -> b
    132:132:void a(net.minecraft.server.v1_16_R1.EntityHuman,net.minecraft.server.v1_16_R1.World,net.minecraft.server.v1_16_R1.IInventory) -> a
    135:135:int getContainerId() -> getContainerId
it.mikeslab.anvilgui.version.Wrapper1_16_R2 -> it.mikeslab.anvilgui.version.Wrapper1_16_R2:
    11:11:void <init>() -> <init>
    13:13:int getRealNextContainerId(org.bukkit.entity.Player) -> getRealNextContainerId
    21:21:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    29:30:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    37:40:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    47:48:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    55:56:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    63:64:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    72:72:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    79:80:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    87:87:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    95:95:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    105:105:net.minecraft.server.v1_16_R2.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
    11:11:int access$000(it.mikeslab.anvilgui.version.Wrapper1_16_R2,org.bukkit.entity.Player) -> access$000
it.mikeslab.anvilgui.version.Wrapper1_16_R2$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_16_R2$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_16_R2 this$0 -> this$0
    113:120:void <init>(it.mikeslab.anvilgui.version.Wrapper1_16_R2,org.bukkit.entity.Player,java.lang.String) -> <init>
    124:126:void e() -> e
    129:129:void b(net.minecraft.server.v1_16_R2.EntityHuman) -> b
    132:132:void a(net.minecraft.server.v1_16_R2.EntityHuman,net.minecraft.server.v1_16_R2.World,net.minecraft.server.v1_16_R2.IInventory) -> a
    135:135:int getContainerId() -> getContainerId
it.mikeslab.anvilgui.version.Wrapper1_16_R3 -> it.mikeslab.anvilgui.version.Wrapper1_16_R3:
    11:11:void <init>() -> <init>
    13:13:int getRealNextContainerId(org.bukkit.entity.Player) -> getRealNextContainerId
    21:21:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    29:30:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    37:40:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    47:48:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    55:56:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    63:64:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    72:72:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    79:80:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    87:87:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    95:95:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    105:105:net.minecraft.server.v1_16_R3.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
    11:11:int access$000(it.mikeslab.anvilgui.version.Wrapper1_16_R3,org.bukkit.entity.Player) -> access$000
it.mikeslab.anvilgui.version.Wrapper1_16_R3$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_16_R3$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_16_R3 this$0 -> this$0
    113:120:void <init>(it.mikeslab.anvilgui.version.Wrapper1_16_R3,org.bukkit.entity.Player,java.lang.String) -> <init>
    124:126:void e() -> e
    129:129:void b(net.minecraft.server.v1_16_R3.EntityHuman) -> b
    132:132:void a(net.minecraft.server.v1_16_R3.EntityHuman,net.minecraft.server.v1_16_R3.World,net.minecraft.server.v1_16_R3.IInventory) -> a
    135:135:int getContainerId() -> getContainerId
it.mikeslab.anvilgui.version.Wrapper1_17_R1 -> it.mikeslab.anvilgui.version.Wrapper1_17_R1:
    boolean IS_ONE_SEVENTEEN_ONE -> IS_ONE_SEVENTEEN_ONE
    24:26:void <init>() -> <init>
    29:29:int getRealNextContainerId(org.bukkit.entity.Player) -> getRealNextContainerId
    37:40:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    48:49:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    56:59:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    66:67:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    74:75:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    82:83:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    91:91:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    98:99:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    106:106:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    114:117:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    127:127:net.minecraft.server.level.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
it.mikeslab.anvilgui.version.Wrapper1_17_R1$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_17_R1$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_17_R1 this$0 -> this$0
    134:141:void <init>(it.mikeslab.anvilgui.version.Wrapper1_17_R1,org.bukkit.entity.Player,java.lang.String) -> <init>
    145:147:void i() -> i
    150:150:void b(net.minecraft.world.entity.player.EntityHuman) -> b
    153:153:void a(net.minecraft.world.entity.player.EntityHuman,net.minecraft.world.IInventory) -> a
    156:156:int getContainerId() -> getContainerId
it.mikeslab.anvilgui.version.Wrapper1_18_R1 -> it.mikeslab.anvilgui.version.Wrapper1_18_R1:
    22:22:void <init>() -> <init>
    24:24:int getRealNextContainerId(org.bukkit.entity.Player) -> getRealNextContainerId
    34:34:net.minecraft.server.level.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
    39:39:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    44:45:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    49:52:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    56:57:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    61:62:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    66:67:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    70:70:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    74:75:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    79:79:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    84:84:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
it.mikeslab.anvilgui.version.Wrapper1_18_R1$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_18_R1$AnvilContainer:
    89:95:void <init>(org.bukkit.entity.Player,int,java.lang.String) -> <init>
    99:101:void l() -> l
    104:104:void b(net.minecraft.world.entity.player.EntityHuman) -> b
    107:107:void a(net.minecraft.world.entity.player.EntityHuman,net.minecraft.world.IInventory) -> a
    110:110:int getContainerId() -> getContainerId
it.mikeslab.anvilgui.version.Wrapper1_18_R2 -> it.mikeslab.anvilgui.version.Wrapper1_18_R2:
    22:22:void <init>() -> <init>
    24:24:int getRealNextContainerId(org.bukkit.entity.Player) -> getRealNextContainerId
    34:34:net.minecraft.server.level.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
    39:39:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    44:45:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    49:52:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    56:57:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    61:62:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    66:67:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    70:70:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    74:75:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    79:79:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    84:84:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
it.mikeslab.anvilgui.version.Wrapper1_18_R2$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_18_R2$AnvilContainer:
    89:95:void <init>(org.bukkit.entity.Player,int,java.lang.String) -> <init>
    99:101:void l() -> l
    104:104:void b(net.minecraft.world.entity.player.EntityHuman) -> b
    107:107:void a(net.minecraft.world.entity.player.EntityHuman,net.minecraft.world.IInventory) -> a
    110:110:int getContainerId() -> getContainerId
it.mikeslab.anvilgui.version.Wrapper1_19_R1 -> it.mikeslab.anvilgui.version.Wrapper1_19_R1:
    boolean IS_ONE_NINETEEN_ONE -> IS_ONE_NINETEEN_ONE
    23:25:void <init>() -> <init>
    28:28:int getRealNextContainerId(org.bukkit.entity.Player) -> getRealNextContainerId
    38:38:net.minecraft.server.level.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
    43:46:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    51:52:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    56:57:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    61:62:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    66:67:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    71:72:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    75:75:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    79:80:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    84:84:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    89:92:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
it.mikeslab.anvilgui.version.Wrapper1_19_R1$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_19_R1$AnvilContainer:
    97:103:void <init>(org.bukkit.entity.Player,int,java.lang.String) -> <init>
    107:109:void l() -> l
    112:112:void b(net.minecraft.world.entity.player.EntityHuman) -> b
    115:115:void a(net.minecraft.world.entity.player.EntityHuman,net.minecraft.world.IInventory) -> a
    118:118:int getContainerId() -> getContainerId
it.mikeslab.anvilgui.version.Wrapper1_19_R2 -> it.mikeslab.anvilgui.version.Wrapper1_19_R2:
    21:21:void <init>() -> <init>
    23:23:int getRealNextContainerId(org.bukkit.entity.Player) -> getRealNextContainerId
    33:33:net.minecraft.server.level.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
    38:38:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    43:44:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    48:49:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    53:54:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    58:59:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    63:64:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    67:67:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    71:72:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    76:76:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    81:81:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
it.mikeslab.anvilgui.version.Wrapper1_19_R2$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_19_R2$AnvilContainer:
    86:92:void <init>(org.bukkit.entity.Player,int,java.lang.String) -> <init>
    96:98:void l() -> l
    101:101:void b(net.minecraft.world.entity.player.EntityHuman) -> b
    104:104:void a(net.minecraft.world.entity.player.EntityHuman,net.minecraft.world.IInventory) -> a
    107:107:int getContainerId() -> getContainerId
it.mikeslab.anvilgui.version.Wrapper1_19_R3 -> it.mikeslab.anvilgui.version.Wrapper1_19_R3:
    21:21:void <init>() -> <init>
    23:23:int getRealNextContainerId(org.bukkit.entity.Player) -> getRealNextContainerId
    33:33:net.minecraft.server.level.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
    38:38:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    43:44:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    48:49:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    53:54:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    58:59:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    63:64:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    67:67:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    71:72:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    76:76:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    81:81:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
it.mikeslab.anvilgui.version.Wrapper1_19_R3$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_19_R3$AnvilContainer:
    86:92:void <init>(org.bukkit.entity.Player,int,java.lang.String) -> <init>
    96:98:void m() -> m
    101:101:void b(net.minecraft.world.entity.player.EntityHuman) -> b
    104:104:void a(net.minecraft.world.entity.player.EntityHuman,net.minecraft.world.IInventory) -> a
    107:107:int getContainerId() -> getContainerId
it.mikeslab.anvilgui.version.Wrapper1_7_R4 -> it.mikeslab.anvilgui.version.Wrapper1_7_R4:
    16:16:void <init>() -> <init>
    23:23:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    31:32:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    39:42:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    49:50:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    57:58:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    65:66:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    73:74:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    81:82:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    89:89:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    97:97:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    107:107:net.minecraft.server.v1_7_R4.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
it.mikeslab.anvilgui.version.Wrapper1_7_R4$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_7_R4$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_7_R4 this$0 -> this$0
    115:117:void <init>(it.mikeslab.anvilgui.version.Wrapper1_7_R4,net.minecraft.server.v1_7_R4.EntityHuman) -> <init>
    121:121:boolean a(net.minecraft.server.v1_7_R4.EntityHuman) -> a
    125:125:void b(net.minecraft.server.v1_7_R4.EntityHuman) -> b
it.mikeslab.anvilgui.version.Wrapper1_8_R1 -> it.mikeslab.anvilgui.version.Wrapper1_8_R1:
    16:16:void <init>() -> <init>
    23:23:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    31:32:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    39:43:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    50:51:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    58:59:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    66:67:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    74:75:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    82:83:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    90:90:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    98:98:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    108:108:net.minecraft.server.v1_8_R1.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
it.mikeslab.anvilgui.version.Wrapper1_8_R1$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_8_R1$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_8_R1 this$0 -> this$0
    116:118:void <init>(it.mikeslab.anvilgui.version.Wrapper1_8_R1,net.minecraft.server.v1_8_R1.EntityHuman) -> <init>
    122:122:boolean a(net.minecraft.server.v1_8_R1.EntityHuman) -> a
    126:126:void b(net.minecraft.server.v1_8_R1.EntityHuman) -> b
it.mikeslab.anvilgui.version.Wrapper1_8_R2 -> it.mikeslab.anvilgui.version.Wrapper1_8_R2:
    16:16:void <init>() -> <init>
    23:23:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    31:32:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    39:43:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    50:51:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    58:59:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    66:67:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    74:75:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    82:83:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    90:90:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    98:98:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    108:108:net.minecraft.server.v1_8_R2.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
it.mikeslab.anvilgui.version.Wrapper1_8_R2$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_8_R2$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_8_R2 this$0 -> this$0
    116:118:void <init>(it.mikeslab.anvilgui.version.Wrapper1_8_R2,net.minecraft.server.v1_8_R2.EntityHuman) -> <init>
    122:122:boolean a(net.minecraft.server.v1_8_R2.EntityHuman) -> a
    126:126:void b(net.minecraft.server.v1_8_R2.EntityHuman) -> b
it.mikeslab.anvilgui.version.Wrapper1_8_R3 -> it.mikeslab.anvilgui.version.Wrapper1_8_R3:
    16:16:void <init>() -> <init>
    23:23:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    31:32:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    39:43:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    50:51:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    58:59:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    66:67:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    74:75:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    82:83:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    90:90:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    98:98:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    108:108:net.minecraft.server.v1_8_R3.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
it.mikeslab.anvilgui.version.Wrapper1_8_R3$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_8_R3$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_8_R3 this$0 -> this$0
    116:118:void <init>(it.mikeslab.anvilgui.version.Wrapper1_8_R3,net.minecraft.server.v1_8_R3.EntityHuman) -> <init>
    122:122:boolean a(net.minecraft.server.v1_8_R3.EntityHuman) -> a
    126:126:void b(net.minecraft.server.v1_8_R3.EntityHuman) -> b
it.mikeslab.anvilgui.version.Wrapper1_9_R1 -> it.mikeslab.anvilgui.version.Wrapper1_9_R1:
    16:16:void <init>() -> <init>
    23:23:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    31:32:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    39:43:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    50:51:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    58:59:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    66:67:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    74:75:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    82:83:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    90:90:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    98:98:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    108:108:net.minecraft.server.v1_9_R1.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
it.mikeslab.anvilgui.version.Wrapper1_9_R1$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_9_R1$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_9_R1 this$0 -> this$0
    116:118:void <init>(it.mikeslab.anvilgui.version.Wrapper1_9_R1,net.minecraft.server.v1_9_R1.EntityHuman) -> <init>
    122:122:boolean a(net.minecraft.server.v1_9_R1.EntityHuman) -> a
    126:126:void b(net.minecraft.server.v1_9_R1.EntityHuman) -> b
it.mikeslab.anvilgui.version.Wrapper1_9_R2 -> it.mikeslab.anvilgui.version.Wrapper1_9_R2:
    16:16:void <init>() -> <init>
    23:23:int getNextContainerId(org.bukkit.entity.Player,java.lang.Object) -> getNextContainerId
    31:32:void handleInventoryCloseEvent(org.bukkit.entity.Player) -> handleInventoryCloseEvent
    39:43:void sendPacketOpenWindow(org.bukkit.entity.Player,int,java.lang.String) -> sendPacketOpenWindow
    50:51:void sendPacketCloseWindow(org.bukkit.entity.Player,int) -> sendPacketCloseWindow
    58:59:void setActiveContainerDefault(org.bukkit.entity.Player) -> setActiveContainerDefault
    66:67:void setActiveContainer(org.bukkit.entity.Player,java.lang.Object) -> setActiveContainer
    74:75:void setActiveContainerId(java.lang.Object,int) -> setActiveContainerId
    82:83:void addActiveContainerSlotListener(java.lang.Object,org.bukkit.entity.Player) -> addActiveContainerSlotListener
    90:90:org.bukkit.inventory.Inventory toBukkitInventory(java.lang.Object) -> toBukkitInventory
    98:98:java.lang.Object newContainerAnvil(org.bukkit.entity.Player,java.lang.String) -> newContainerAnvil
    108:108:net.minecraft.server.v1_9_R2.EntityPlayer toNMS(org.bukkit.entity.Player) -> toNMS
it.mikeslab.anvilgui.version.Wrapper1_9_R2$AnvilContainer -> it.mikeslab.anvilgui.version.Wrapper1_9_R2$AnvilContainer:
    it.mikeslab.anvilgui.version.Wrapper1_9_R2 this$0 -> this$0
    116:118:void <init>(it.mikeslab.anvilgui.version.Wrapper1_9_R2,net.minecraft.server.v1_9_R2.EntityHuman) -> <init>
    122:122:boolean a(net.minecraft.server.v1_9_R2.EntityHuman) -> a
    126:126:void b(net.minecraft.server.v1_9_R2.EntityHuman) -> b
it.mikeslab.anvilgui.version.special.AnvilContainer1_14_4_R1 -> it.mikeslab.anvilgui.version.special.AnvilContainer1_14_4_R1:
    12:18:void <init>(org.bukkit.entity.Player,int,java.lang.String) -> <init>
    22:24:void e() -> e
    27:27:void b(net.minecraft.server.v1_14_R1.EntityHuman) -> b
    30:30:void a(net.minecraft.server.v1_14_R1.EntityHuman,net.minecraft.server.v1_14_R1.World,net.minecraft.server.v1_14_R1.IInventory) -> a
    33:33:int getContainerId() -> getContainerId
it.mikeslab.anvilgui.version.special.AnvilContainer1_17_1_R1 -> it.mikeslab.anvilgui.version.special.AnvilContainer1_17_1_R1:
    16:22:void <init>(org.bukkit.entity.Player,int,java.lang.String) -> <init>
    26:28:void l() -> l
    31:31:void b(net.minecraft.world.entity.player.EntityHuman) -> b
    34:34:void a(net.minecraft.world.entity.player.EntityHuman,net.minecraft.world.IInventory) -> a
    37:37:int getContainerId() -> getContainerId
it.mikeslab.anvilgui.version.special.AnvilContainer1_19_1_R1 -> it.mikeslab.anvilgui.version.special.AnvilContainer1_19_1_R1:
    16:22:void <init>(org.bukkit.entity.Player,int,java.lang.String) -> <init>
    26:28:void l() -> l
    31:31:void b(net.minecraft.world.entity.player.EntityHuman) -> b
    34:34:void a(net.minecraft.world.entity.player.EntityHuman,net.minecraft.world.IInventory) -> a
    37:37:int getContainerId() -> getContainerId
it.mikeslab.command.CmdATM -> it.mikeslab.command.CmdATM:
    19:19:void <init>() -> <init>
    29:30:void onHelp(co.aikar.commands.CommandHelp) -> onHelp
    43:50:void onAtm(org.bukkit.entity.Player) -> onAtm
it.mikeslab.command.CmdBank -> it.mikeslab.command.CmdBank:
    21:21:void <init>() -> <init>
    37:77:void giveMoney(org.bukkit.command.CommandSender,co.aikar.commands.bukkit.contexts.OnlinePlayer,double,java.lang.String) -> giveMoney
    95:123:void takeMoney(org.bukkit.command.CommandSender,co.aikar.commands.bukkit.contexts.OnlinePlayer,double,java.lang.String) -> takeMoney
    141:169:void setMoney(org.bukkit.command.CommandSender,co.aikar.commands.bukkit.contexts.OnlinePlayer,double,java.lang.String) -> setMoney
    185:205:void resetMoney(org.bukkit.command.CommandSender,co.aikar.commands.bukkit.contexts.OnlinePlayer,java.lang.String) -> resetMoney
it.mikeslab.command.CmdCreditCard -> it.mikeslab.command.CmdCreditCard:
    30:30:void <init>() -> <init>
    40:41:void onHelp(co.aikar.commands.CommandHelp) -> onHelp
    56:76:void onCreate(org.bukkit.command.CommandSender,co.aikar.commands.bukkit.contexts.OnlinePlayer) -> onCreate
    91:105:void onDelete(org.bukkit.command.CommandSender,org.bukkit.OfflinePlayer) -> onDelete
    120:154:void onBalance(org.bukkit.command.CommandSender,org.bukkit.OfflinePlayer) -> onBalance
    170:184:void onTransactions(org.bukkit.command.CommandSender,org.bukkit.OfflinePlayer) -> onTransactions
    70:71:void lambda$onCreate$0(co.aikar.commands.bukkit.contexts.OnlinePlayer,it.mikeslab.util.creditcard.CreditCardUtil,it.mikeslab.util.creditcard.CardType) -> lambda$onCreate$0
it.mikeslab.command.CmdWireTransfer -> it.mikeslab.command.CmdWireTransfer:
    22:22:void <init>() -> <init>
    32:33:void onHelp(co.aikar.commands.CommandHelp) -> onHelp
    51:80:void onSend(org.bukkit.entity.Player,co.aikar.commands.bukkit.contexts.OnlinePlayer,double,java.lang.String,java.lang.String[]) -> onSend
    71:78:void lambda$onSend$0(org.bukkit.entity.Player,co.aikar.commands.bukkit.contexts.OnlinePlayer,double,java.lang.String[],java.lang.String,java.lang.Boolean) -> lambda$onSend$0
it.mikeslab.command.inventory.AnvilPinGUI -> it.mikeslab.command.inventory.AnvilPinGUI:
    java.util.Map completableFutures -> completableFutures
    20:21:void <init>() -> <init>
    31:60:java.util.concurrent.CompletableFuture openPinGui(org.bukkit.entity.Player,int) -> openPinGui
    45:52:java.util.List lambda$openPinGui$1(int,it.mikeslab.anvilgui.AnvilGUI$Completion) -> lambda$openPinGui$1
    38:43:void lambda$openPinGui$0(org.bukkit.entity.Player) -> lambda$openPinGui$0
it.mikeslab.command.inventory.InventoryBanknotes -> it.mikeslab.command.inventory.InventoryBanknotes:
    29:29:void <init>() -> <init>
    42:128:void openATM(org.bukkit.entity.Player,java.util.UUID,java.lang.String,java.lang.String) -> openATM
    118:119:boolean lambda$openATM$5(org.bukkit.entity.Player,org.bukkit.OfflinePlayer,java.lang.String,de.themoep.inventorygui.GuiElement$Click) -> lambda$openATM$5
    106:110:de.themoep.inventorygui.GuiElement lambda$openATM$4(it.mikeslab.util.transactions.EconomyManager,org.bukkit.OfflinePlayer,java.lang.String,de.themoep.inventorygui.InventoryGui,org.bukkit.entity.HumanEntity) -> lambda$openATM$4
    111:112:boolean lambda$openATM$3(de.themoep.inventorygui.InventoryGui,de.themoep.inventorygui.GuiElement$Click) -> lambda$openATM$3
    97:102:boolean lambda$openATM$2(org.bukkit.entity.Player,java.util.UUID,java.lang.String,de.themoep.inventorygui.GuiElement$Click) -> lambda$openATM$2
    98:99:void lambda$openATM$1(org.bukkit.entity.Player,java.util.UUID,java.lang.String,java.lang.String) -> lambda$openATM$1
    59:85:boolean lambda$openATM$0(it.mikeslab.util.transactions.EconomyManager,java.util.UUID,it.mikeslab.object.Banknote,java.lang.String,org.bukkit.entity.Player,de.themoep.inventorygui.InventoryGui,de.themoep.inventorygui.GuiElement$Click) -> lambda$openATM$0
    1196:1196:org.bukkit.event.inventory.ClickType de.themoep.inventorygui.GuiElement$Click.getType():196:196 -> lambda$openATM$0
    1196:1196:boolean lambda$openATM$0(it.mikeslab.util.transactions.EconomyManager,java.util.UUID,it.mikeslab.object.Banknote,java.lang.String,org.bukkit.entity.Player,de.themoep.inventorygui.InventoryGui,de.themoep.inventorygui.GuiElement$Click):76 -> lambda$openATM$0
it.mikeslab.command.inventory.InventoryCardType -> it.mikeslab.command.inventory.InventoryCardType:
    25:25:void <init>() -> <init>
    35:78:java.util.concurrent.CompletableFuture openCardTypeSelector(org.bukkit.entity.Player) -> openCardTypeSelector
    1948:1949:void de.themoep.inventorygui.InventoryGui.setCloseAction(de.themoep.inventorygui.InventoryGui$CloseAction):948:949 -> openCardTypeSelector
    1948:1949:java.util.concurrent.CompletableFuture openCardTypeSelector(org.bukkit.entity.Player):71 -> openCardTypeSelector
    71:71:boolean lambda$openCardTypeSelector$1(de.themoep.inventorygui.InventoryGui$Close) -> lambda$openCardTypeSelector$1
    58:60:boolean lambda$openCardTypeSelector$0(de.themoep.inventorygui.InventoryGui,java.util.concurrent.CompletableFuture,it.mikeslab.util.creditcard.CardType,de.themoep.inventorygui.GuiElement$Click) -> lambda$openCardTypeSelector$0
it.mikeslab.command.inventory.InventoryConfirm -> it.mikeslab.command.inventory.InventoryConfirm:
    17:17:void <init>() -> <init>
    27:61:java.util.concurrent.CompletableFuture openConfirmInventory(org.bukkit.entity.Player,java.lang.String) -> openConfirmInventory
    1948:1949:void de.themoep.inventorygui.InventoryGui.setCloseAction(de.themoep.inventorygui.InventoryGui$CloseAction):948:949 -> openConfirmInventory
    1948:1949:java.util.concurrent.CompletableFuture openConfirmInventory(org.bukkit.entity.Player,java.lang.String):54 -> openConfirmInventory
    55:55:boolean lambda$openConfirmInventory$2(de.themoep.inventorygui.InventoryGui$Close) -> lambda$openConfirmInventory$2
    49:50:boolean lambda$openConfirmInventory$1(java.util.concurrent.CompletableFuture,de.themoep.inventorygui.GuiElement$Click) -> lambda$openConfirmInventory$1
    41:42:boolean lambda$openConfirmInventory$0(java.util.concurrent.CompletableFuture,de.themoep.inventorygui.GuiElement$Click) -> lambda$openConfirmInventory$0
it.mikeslab.command.inventory.InventoryCurrencySelector -> it.mikeslab.command.inventory.InventoryCurrencySelector:
    25:25:void <init>() -> <init>
    35:76:java.util.concurrent.CompletableFuture openCurrencySelector(org.bukkit.entity.Player) -> openCurrencySelector
    1948:1949:void de.themoep.inventorygui.InventoryGui.setCloseAction(de.themoep.inventorygui.InventoryGui$CloseAction):948:949 -> openCurrencySelector
    1948:1949:java.util.concurrent.CompletableFuture openCurrencySelector(org.bukkit.entity.Player):70 -> openCurrencySelector
    70:70:boolean lambda$openCurrencySelector$1(de.themoep.inventorygui.InventoryGui$Close) -> lambda$openCurrencySelector$1
    59:61:boolean lambda$openCurrencySelector$0(de.themoep.inventorygui.InventoryGui,java.util.concurrent.CompletableFuture,java.lang.String,de.themoep.inventorygui.GuiElement$Click) -> lambda$openCurrencySelector$0
it.mikeslab.command.inventory.InventoryExchange -> it.mikeslab.command.inventory.InventoryExchange:
    31:31:void <init>() -> <init>
    45:172:void openExchangeInventory(org.bukkit.entity.Player,org.bukkit.OfflinePlayer,java.lang.String,java.lang.String,java.lang.String,double) -> openExchangeInventory
    1948:1949:void de.themoep.inventorygui.InventoryGui.setCloseAction(de.themoep.inventorygui.InventoryGui$CloseAction):948:949 -> openExchangeInventory
    1948:1949:void openExchangeInventory(org.bukkit.entity.Player,org.bukkit.OfflinePlayer,java.lang.String,java.lang.String,java.lang.String,double):165 -> openExchangeInventory
    175:191:java.util.concurrent.CompletableFuture openInputAnvil(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> openInputAnvil
    182:183:java.util.List lambda$openInputAnvil$10(java.util.concurrent.CompletableFuture,it.mikeslab.anvilgui.AnvilGUI$Completion) -> lambda$openInputAnvil$10
    179:180:void lambda$openInputAnvil$9(java.util.concurrent.CompletableFuture,org.bukkit.entity.Player) -> lambda$openInputAnvil$9
    166:166:boolean lambda$openExchangeInventory$8(de.themoep.inventorygui.InventoryGui$Close) -> lambda$openExchangeInventory$8
    161:162:boolean lambda$openExchangeInventory$7(de.themoep.inventorygui.InventoryGui,de.themoep.inventorygui.GuiElement$Click) -> lambda$openExchangeInventory$7
    134:157:boolean lambda$openExchangeInventory$6(boolean,it.mikeslab.util.transactions.EconomyManager,org.bukkit.OfflinePlayer,java.lang.String,java.lang.String,double,org.bukkit.entity.Player,double,de.themoep.inventorygui.InventoryGui,de.themoep.inventorygui.GuiElement$Click) -> lambda$openExchangeInventory$6
    94:129:boolean lambda$openExchangeInventory$5(org.bukkit.entity.Player,org.bukkit.OfflinePlayer,java.lang.String,java.lang.String,de.themoep.inventorygui.GuiElement$Click) -> lambda$openExchangeInventory$5
    95:128:void lambda$openExchangeInventory$4(org.bukkit.entity.Player,org.bukkit.OfflinePlayer,java.lang.String,java.lang.String,java.lang.String) -> lambda$openExchangeInventory$4
    81:90:boolean lambda$openExchangeInventory$3(org.bukkit.entity.Player,org.bukkit.OfflinePlayer,java.lang.String,java.lang.String,double,de.themoep.inventorygui.GuiElement$Click) -> lambda$openExchangeInventory$3
    82:89:void lambda$openExchangeInventory$2(org.bukkit.entity.Player,org.bukkit.OfflinePlayer,java.lang.String,java.lang.String,double,java.lang.String) -> lambda$openExchangeInventory$2
    74:74:de.themoep.inventorygui.GuiElement lambda$openExchangeInventory$1(java.util.List,de.themoep.inventorygui.InventoryGui,org.bukkit.entity.HumanEntity) -> lambda$openExchangeInventory$1
    75:76:boolean lambda$openExchangeInventory$0(de.themoep.inventorygui.InventoryGui,de.themoep.inventorygui.GuiElement$Click) -> lambda$openExchangeInventory$0
it.mikeslab.command.inventory.InventoryTransactions -> it.mikeslab.command.inventory.InventoryTransactions:
    34:34:void <init>() -> <init>
    46:112:de.themoep.inventorygui.InventoryGui getTransactionsInventory(org.bukkit.entity.Player,java.util.UUID,java.lang.String) -> getTransactionsInventory
    1948:1949:void de.themoep.inventorygui.InventoryGui.setCloseAction(de.themoep.inventorygui.InventoryGui$CloseAction):948:949 -> getTransactionsInventory
    1948:1949:de.themoep.inventorygui.InventoryGui getTransactionsInventory(org.bukkit.entity.Player,java.util.UUID,java.lang.String):108 -> getTransactionsInventory
    116:131:void openFilterInput(org.bukkit.entity.Player,java.util.UUID) -> openFilterInput
    136:142:java.lang.String formatDate(long) -> formatDate
    147:150:java.lang.String cutString(java.lang.String,int) -> cutString
    120:125:java.util.List lambda$openFilterInput$6(java.util.UUID,org.bukkit.entity.Player,it.mikeslab.anvilgui.AnvilGUI$Completion) -> lambda$openFilterInput$6
    117:117:void lambda$openFilterInput$5(java.util.UUID,org.bukkit.entity.Player) -> lambda$openFilterInput$5
    108:108:boolean lambda$getTransactionsInventory$4(de.themoep.inventorygui.InventoryGui$Close) -> lambda$getTransactionsInventory$4
    102:103:boolean lambda$getTransactionsInventory$3(org.bukkit.entity.Player,java.util.UUID,de.themoep.inventorygui.GuiElement$Click) -> lambda$getTransactionsInventory$3
    97:98:boolean lambda$getTransactionsInventory$2(org.bukkit.entity.Player,java.util.UUID,de.themoep.inventorygui.GuiElement$Click) -> lambda$getTransactionsInventory$2
    69:69:boolean lambda$getTransactionsInventory$1(java.lang.String,it.mikeslab.util.transactions.Transaction) -> lambda$getTransactionsInventory$1
    63:63:int lambda$getTransactionsInventory$0(it.mikeslab.util.transactions.Transaction,it.mikeslab.util.transactions.Transaction) -> lambda$getTransactionsInventory$0
it.mikeslab.listener.PlayerEventListener -> it.mikeslab.listener.PlayerEventListener:
    38:38:void <init>() -> <init>
    47:56:void onATMBlockPlace(org.bukkit.event.block.BlockPlaceEvent) -> onATMBlockPlace
    65:74:void onATMBlockBreak(org.bukkit.event.block.BlockBreakEvent) -> onATMBlockBreak
    83:98:void onATMUse(org.bukkit.event.player.PlayerInteractEvent) -> onATMUse
    101:101:boolean hasPermissionToPlaceATM(org.bukkit.entity.Player) -> hasPermissionToPlaceATM
    105:105:boolean hasPermissionToRemoveATM(org.bukkit.entity.Player) -> hasPermissionToRemoveATM
    109:109:boolean hasPermissionToUseATM(org.bukkit.entity.Player) -> hasPermissionToUseATM
    113:115:void cancelEventAndSendNoPermissionMessage(org.bukkit.event.Cancellable,org.bukkit.entity.Player) -> cancelEventAndSendNoPermissionMessage
    118:118:boolean isPlacingATMBlock(org.bukkit.event.block.BlockPlaceEvent) -> isPlacingATMBlock
    122:127:void addATMAndSendPlaceMessage(org.bukkit.entity.Player,org.bukkit.block.Block) -> addATMAndSendPlaceMessage
    130:130:boolean isBreakingATMBlock(org.bukkit.event.block.BlockBreakEvent) -> isBreakingATMBlock
    134:139:void removeATMAndSendRemoveMessage(org.bukkit.entity.Player,org.bukkit.block.Block) -> removeATMAndSendRemoveMessage
    142:145:boolean isInteractingWithATMBlock(org.bukkit.event.player.PlayerInteractEvent) -> isInteractingWithATMBlock
    149:150:void cancelEvent(org.bukkit.event.player.PlayerInteractEvent) -> cancelEvent
    153:154:void sendNoPermissionMessage(org.bukkit.entity.Player) -> sendNoPermissionMessage
    157:172:void handleATMInteraction(org.bukkit.event.player.PlayerInteractEvent,org.bukkit.entity.Player) -> handleATMInteraction
    175:190:void handleBanknoteDeposit(org.bukkit.entity.Player,it.mikeslab.util.transactions.EconomyManager,it.mikeslab.object.Banknote) -> handleBanknoteDeposit
    193:194:void sendNoCreditCardMessage(org.bukkit.entity.Player) -> sendNoCreditCardMessage
    197:211:void handleCreditCardInteraction(org.bukkit.event.player.PlayerInteractEvent,org.bukkit.entity.Player,org.bukkit.inventory.ItemStack) -> handleCreditCardInteraction
    214:221:void openBanknoteInventory(org.bukkit.event.player.PlayerInteractEvent,org.bukkit.entity.Player,java.util.UUID,java.lang.String) -> openBanknoteInventory
    216:217:void lambda$openBanknoteInventory$1(org.bukkit.entity.Player,java.util.UUID,java.lang.String,java.lang.String) -> lambda$openBanknoteInventory$1
    205:210:void lambda$handleCreditCardInteraction$0(org.bukkit.event.player.PlayerInteractEvent,org.bukkit.entity.Player,java.util.UUID,java.lang.String,java.lang.Boolean) -> lambda$handleCreditCardInteraction$0
it.mikeslab.object.Banknote -> it.mikeslab.object.Banknote:
    double value -> value
    org.bukkit.inventory.ItemStack itemStack -> itemStack
    java.lang.String currency -> currency
    41:56:org.bukkit.inventory.ItemStack createDefaultItemStack(org.bukkit.Material,java.lang.String,java.util.List,int,double,java.lang.String) -> createDefaultItemStack
    20:26:void <init>(double,org.bukkit.inventory.ItemStack) -> <init>
    24:24:double getValue() -> getValue
    25:25:org.bukkit.inventory.ItemStack getItemStack() -> getItemStack
    26:26:java.lang.String getCurrency() -> getCurrency
    22:22:void setCurrency(java.lang.String) -> setCurrency
it.mikeslab.object.Check -> it.mikeslab.object.Check:
    java.lang.String id -> id
    java.lang.String from -> from
    java.lang.String to -> to
    java.lang.String reason -> reason
    java.lang.String currency -> currency
    double amount -> amount
    long timestamp -> timestamp
    11:11:java.lang.String getId() -> getId
    12:12:java.lang.String getFrom() -> getFrom
    13:13:java.lang.String getTo() -> getTo
    14:14:java.lang.String getReason() -> getReason
    15:15:java.lang.String getCurrency() -> getCurrency
    16:16:double getAmount() -> getAmount
    17:17:long getTimestamp() -> getTimestamp
    9:9:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,double,long) -> <init>
it.mikeslab.task.LimitTask -> it.mikeslab.task.LimitTask:
    java.time.Clock clock -> clock
    java.time.LocalDate lastResetDate -> lastResetDate
    it.mikeslab.Main plugin -> plugin
    26:30:void <init>(it.mikeslab.Main) -> <init>
    34:40:void run() -> run
it.mikeslab.util.GSONUtil -> it.mikeslab.util.GSONUtil:
    com.google.gson.Gson gson -> gson
    java.io.File dataFolder -> dataFolder
    java.io.File configFile -> configFile
    java.util.Map data -> data
    31:38:void <init>(java.io.File,java.lang.String) -> <init>
    47:47:java.util.Optional getJson(java.lang.String) -> getJson
    57:57:java.util.Optional getJson(java.util.UUID) -> getJson
    68:70:void setJson(java.lang.String,com.google.gson.JsonObject) -> setJson
    76:81:void saveConfig() -> saveConfig
    87:101:void loadConfig() -> loadConfig
    110:112:void deleteObject(java.lang.String) -> deleteObject
    121:123:void deleteObject(java.util.UUID) -> deleteObject
    129:136:void createConfigIfNotExists() -> createConfigIfNotExists
    144:150:java.lang.String[] keySet() -> keySet
    161:167:java.util.Optional getUUIDByCreditCardNumber(java.lang.String) -> getUUIDByCreditCardNumber
it.mikeslab.util.ItemStackUtil -> it.mikeslab.util.ItemStackUtil:
    java.util.Map namespacedKeys -> namespacedKeys
    17:17:void <init>() -> <init>
    25:28:void loadNamespacedKeys() -> loadNamespacedKeys
    39:43:org.bukkit.inventory.ItemStack createStack(org.bukkit.Material,java.lang.String) -> createStack
    55:60:org.bukkit.inventory.ItemStack createStack(org.bukkit.Material,java.lang.String,java.util.List) -> createStack
    75:86:org.bukkit.inventory.ItemStack createStack(org.bukkit.Material,java.lang.String,java.util.List,int,java.util.Map) -> createStack
    97:97:org.bukkit.NamespacedKey getNamespaceKey(java.lang.String) -> getNamespaceKey
    107:111:org.bukkit.inventory.ItemStack getFiller() -> getFiller
    18:18:void <clinit>() -> <clinit>
it.mikeslab.util.LocationUtil -> it.mikeslab.util.LocationUtil:
    8:8:void <init>() -> <init>
    17:17:org.bukkit.Location getRawLocation(org.bukkit.Location) -> getRawLocation
    28:28:java.lang.String getLocationString(org.bukkit.Location) -> getLocationString
it.mikeslab.util.PlayerUtils -> it.mikeslab.util.PlayerUtils:
    11:11:void <init>() -> <init>
    21:27:void giveItem(org.bukkit.entity.Player,org.bukkit.inventory.ItemStack) -> giveItem
    31:32:void playSound(org.bukkit.entity.Player,java.lang.String) -> playSound
    41:41:boolean isInventoryFull(org.bukkit.entity.Player) -> isInventoryFull
it.mikeslab.util.Translator -> it.mikeslab.util.Translator:
    17:17:void <init>() -> <init>
    27:37:java.util.Collection translate(java.util.List,java.util.Map) -> translate
    48:48:net.kyori.adventure.text.Component translate(java.lang.String) -> translate
    58:58:java.lang.String translate(net.kyori.adventure.text.Component) -> translate
    69:69:java.lang.String legacyTranslate(java.lang.String) -> legacyTranslate
    80:86:java.lang.String legacyTranslate(java.lang.String,java.util.Map) -> legacyTranslate
    1057:1057:net.kyori.adventure.text.TextReplacementConfig$Builder net.kyori.adventure.text.TextReplacementConfig.builder():57:57 -> legacyTranslate
    1057:1057:java.lang.String legacyTranslate(java.lang.String,java.util.Map):83 -> legacyTranslate
    97:101:java.util.List legacyListTranslate(java.util.List) -> legacyListTranslate
it.mikeslab.util.atm.ATMUtil -> it.mikeslab.util.atm.ATMUtil:
    com.github.benmanes.caffeine.cache.Cache atmLocations -> atmLocations
    org.bukkit.inventory.ItemStack atmItem -> atmItem
    43:43:boolean isATM(org.bukkit.block.Block) -> isATM
    52:54:void addATM(org.bukkit.block.Block) -> addATM
    62:64:void removeATM(org.bukkit.block.Block) -> removeATM
    73:98:void saveATMs(org.bukkit.configuration.file.FileConfiguration) -> saveATMs
    107:127:void loadATMs(org.bukkit.configuration.file.FileConfiguration) -> loadATMs
    137:146:org.bukkit.inventory.ItemStack getATMPlaceableItem() -> getATMPlaceableItem
    156:159:boolean isATM(org.bukkit.inventory.ItemStack) -> isATM
    26:26:void <init>() -> <init>
    29:31:void <clinit>() -> <clinit>
it.mikeslab.util.banknote.BanknoteUtil -> it.mikeslab.util.banknote.BanknoteUtil:
    java.util.Map banknotes -> banknotes
    21:21:void <init>() -> <init>
    34:41:java.util.LinkedList getOrderedMap(java.lang.String) -> getOrderedMap
    51:82:void loadBanknotes(org.bukkit.configuration.file.FileConfiguration) -> loadBanknotes
    92:99:boolean isBanknote(org.bukkit.inventory.ItemStack) -> isBanknote
    109:127:it.mikeslab.object.Banknote fromItemStack(org.bukkit.inventory.ItemStack) -> fromItemStack
    139:152:boolean deposit(org.bukkit.entity.Player,it.mikeslab.object.Banknote) -> deposit
    158:172:boolean removeBanknoteFromHand(it.mikeslab.object.Banknote,org.bukkit.entity.Player) -> removeBanknoteFromHand
    23:23:java.util.Map getBanknotes() -> getBanknotes
    24:24:void <clinit>() -> <clinit>
it.mikeslab.util.book.CustomBook -> it.mikeslab.util.book.CustomBook:
    16:16:void <init>() -> <init>
    25:32:void pinBook(org.bukkit.entity.Player,int) -> pinBook
    1062:1062:net.kyori.adventure.inventory.Book net.kyori.adventure.inventory.Book.book(net.kyori.adventure.text.Component,net.kyori.adventure.text.Component,java.util.Collection):62:62 -> pinBook
    1062:1062:void pinBook(org.bukkit.entity.Player,int):30 -> pinBook
it.mikeslab.util.creditcard.CardType -> it.mikeslab.util.creditcard.CardType:
    java.lang.String name -> name
    java.lang.String displayName -> displayName
    double depositLimit -> depositLimit
    double withdrawLimit -> withdrawLimit
    double transferLimit -> transferLimit
    double perDayWithdrawLimit -> perDayWithdrawLimit
    org.bukkit.Material material -> material
    11:11:void <init>(java.lang.String,java.lang.String,double,double,double,double,org.bukkit.Material) -> <init>
    16:16:java.lang.String getName() -> getName
    17:17:java.lang.String getDisplayName() -> getDisplayName
    18:18:double getDepositLimit() -> getDepositLimit
    19:19:double getWithdrawLimit() -> getWithdrawLimit
    20:20:double getTransferLimit() -> getTransferLimit
    21:21:double getPerDayWithdrawLimit() -> getPerDayWithdrawLimit
    22:22:org.bukkit.Material getMaterial() -> getMaterial
it.mikeslab.util.creditcard.CardTypeUtil -> it.mikeslab.util.creditcard.CardTypeUtil:
    java.util.Map cardTypes -> cardTypes
    org.bukkit.configuration.file.FileConfiguration config -> config
    it.mikeslab.util.GSONUtil playerDataGsonUtil -> playerDataGsonUtil
    24:29:void <init>(org.bukkit.configuration.file.FileConfiguration) -> <init>
    38:38:java.util.List getList() -> getList
    46:59:void loadCardTypes() -> loadCardTypes
    68:69:it.mikeslab.util.creditcard.CardType getCardType(java.lang.String) -> getCardType
    81:93:it.mikeslab.util.creditcard.CardType getCardTypeForPlayer(java.util.UUID) -> getCardTypeForPlayer
it.mikeslab.util.creditcard.CreditCardUtil -> it.mikeslab.util.creditcard.CreditCardUtil:
    org.bukkit.configuration.file.FileConfiguration config -> config
    it.mikeslab.util.GSONUtil gsonUtil -> gsonUtil
    30:32:void <init>() -> <init>
    43:48:org.bukkit.inventory.ItemStack createCreditCard(java.util.UUID,java.lang.String) -> createCreditCard
    61:75:org.bukkit.inventory.ItemStack createCreditCard(java.util.UUID,it.mikeslab.util.creditcard.CardType) -> createCreditCard
    85:86:void deleteCreditCard(java.util.UUID) -> deleteCreditCard
    96:116:boolean isCreditCard(org.bukkit.inventory.ItemStack) -> isCreditCard
    126:131:java.util.UUID getOwnerUUID(org.bukkit.inventory.ItemStack) -> getOwnerUUID
    141:145:java.lang.String getCardNumberFromUUID(java.util.UUID) -> getCardNumberFromUUID
    156:161:int getPin(java.util.UUID) -> getPin
    170:180:void saveData(java.util.UUID,java.lang.String,java.lang.String,int,it.mikeslab.util.creditcard.CardType) -> saveData
    184:186:void eraseData(java.util.UUID) -> eraseData
it.mikeslab.util.currency.CurrencyUtil -> it.mikeslab.util.currency.CurrencyUtil:
    java.text.DecimalFormat CURRENCY_FORMAT -> CURRENCY_FORMAT
    java.util.Map exchangeRates -> exchangeRates
    double mainCurrencyExchangeRate -> mainCurrencyExchangeRate
    java.lang.String mainCurrency -> mainCurrency
    boolean CURRENCY_ENABLED -> CURRENCY_ENABLED
    org.bukkit.configuration.file.FileConfiguration config -> config
    12:12:void <init>() -> <init>
    26:52:void initializeExchangeRates(org.bukkit.configuration.file.FileConfiguration) -> initializeExchangeRates
    62:68:double convertToMainCurrency(double,java.lang.String) -> convertToMainCurrency
    80:86:double convertFromMainCurrency(double,java.lang.String) -> convertFromMainCurrency
    97:97:java.lang.String formatCurrency(double) -> formatCurrency
    107:107:boolean isCurrencyEnabled() -> isCurrencyEnabled
    117:117:boolean isCurrency(java.lang.String) -> isCurrency
    128:128:java.lang.String getSymbol(java.lang.String) -> getSymbol
    138:144:java.lang.String getCurrency(java.lang.String) -> getCurrency
    154:154:java.util.List getCurrencies() -> getCurrencies
    163:163:java.lang.String getMainCurrency() -> getMainCurrency
    168:168:java.lang.String format(double) -> format
    14:14:java.util.Map getExchangeRates() -> getExchangeRates
    13:17:void <clinit>() -> <clinit>
it.mikeslab.util.database.DatabaseType -> it.mikeslab.util.database.DatabaseType:
    it.mikeslab.util.database.DatabaseType TRANSACTIONS -> TRANSACTIONS
    it.mikeslab.util.database.DatabaseType PLAYER_DATA -> PLAYER_DATA
    it.mikeslab.util.database.DatabaseType[] $VALUES -> $VALUES
    6:6:it.mikeslab.util.database.DatabaseType[] values() -> values
    6:6:it.mikeslab.util.database.DatabaseType valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:6:it.mikeslab.util.database.DatabaseType[] $values() -> $values
    6:15:void <clinit>() -> <clinit>
it.mikeslab.util.database.MongoDBHandler -> it.mikeslab.util.database.MongoDBHandler:
    com.mongodb.client.MongoClient mongoClient -> mongoClient
    com.mongodb.client.MongoDatabase database -> database
    com.google.gson.Gson gson -> gson
    34:49:void <init>(java.lang.String,java.lang.String) -> <init>
    59:63:void insertDocument(java.lang.String,org.bson.Document) -> insertDocument
    74:76:void deleteDocument(java.lang.String,java.lang.String) -> deleteDocument
    84:87:void createCollectionIfNotExists(java.lang.String) -> createCollectionIfNotExists
    93:98:void close() -> close
    24:24:com.mongodb.client.MongoClient getMongoClient() -> getMongoClient
    25:25:com.mongodb.client.MongoDatabase getDatabase() -> getDatabase
    26:26:com.google.gson.Gson getGson() -> getGson
it.mikeslab.util.language.LangKey -> it.mikeslab.util.language.LangKey:
    it.mikeslab.util.language.LangKey ALREADY_REGISTERED -> ALREADY_REGISTERED
    it.mikeslab.util.language.LangKey INSUFFICIENT_FUNDS -> INSUFFICIENT_FUNDS
    it.mikeslab.util.language.LangKey DAILY_WITHDRAW_LIMIT_REACHED -> DAILY_WITHDRAW_LIMIT_REACHED
    it.mikeslab.util.language.LangKey INVENTORY_FULL_DROPPED -> INVENTORY_FULL_DROPPED
    it.mikeslab.util.language.LangKey INVENTORY_FULL -> INVENTORY_FULL
    it.mikeslab.util.language.LangKey ATM_RECEIVED -> ATM_RECEIVED
    it.mikeslab.util.language.LangKey ATM_PLACED -> ATM_PLACED
    it.mikeslab.util.language.LangKey ATM_REMOVED -> ATM_REMOVED
    it.mikeslab.util.language.LangKey NO_PERMISSION -> NO_PERMISSION
    it.mikeslab.util.language.LangKey NO_CREDIT_CARD -> NO_CREDIT_CARD
    it.mikeslab.util.language.LangKey WRONG_PIN -> WRONG_PIN
    it.mikeslab.util.language.LangKey NOT_REGISTERED -> NOT_REGISTERED
    it.mikeslab.util.language.LangKey NO_BANK_ACCOUNT -> NO_BANK_ACCOUNT
    it.mikeslab.util.language.LangKey TRANSFER_LIMIT_REACHED -> TRANSFER_LIMIT_REACHED
    it.mikeslab.util.language.LangKey ERROR_OCCURRED -> ERROR_OCCURRED
    it.mikeslab.util.language.LangKey SUBJECT_CANNOT_RECEIVE -> SUBJECT_CANNOT_RECEIVE
    it.mikeslab.util.language.LangKey TRANSFER_SUCCESS -> TRANSFER_SUCCESS
    it.mikeslab.util.language.LangKey DEPOSITED -> DEPOSITED
    it.mikeslab.util.language.LangKey DEPOSIT_FAILED -> DEPOSIT_FAILED
    it.mikeslab.util.language.LangKey CURRENCY_NOT_FOUND -> CURRENCY_NOT_FOUND
    it.mikeslab.util.language.LangKey AMOUNT_MUST_BE_POSITIVE -> AMOUNT_MUST_BE_POSITIVE
    it.mikeslab.util.language.LangKey AMOUNT_TOO_HIGH -> AMOUNT_TOO_HIGH
    it.mikeslab.util.language.LangKey PLAYER_ONLY -> PLAYER_ONLY
    it.mikeslab.util.language.LangKey NOT_VALID_PLAYER -> NOT_VALID_PLAYER
    it.mikeslab.util.language.LangKey CREDIT_CARD_DELETED -> CREDIT_CARD_DELETED
    it.mikeslab.util.language.LangKey CREDIT_CARD_BEING_CREATED -> CREDIT_CARD_BEING_CREATED
    it.mikeslab.util.language.LangKey BANK_GIVEN -> BANK_GIVEN
    it.mikeslab.util.language.LangKey BANK_TAKEN -> BANK_TAKEN
    it.mikeslab.util.language.LangKey BANK_SET -> BANK_SET
    it.mikeslab.util.language.LangKey BANK_RESET -> BANK_RESET
    it.mikeslab.util.language.LangKey REASON_TOO_LONG -> REASON_TOO_LONG
    it.mikeslab.util.language.LangKey OPERATION_CANCELLED -> OPERATION_CANCELLED
    it.mikeslab.util.language.LangKey CANNOT_PERFORM_EXCHANGE -> CANNOT_PERFORM_EXCHANGE
    it.mikeslab.util.language.LangKey EXCHANGE_PERFORMED -> EXCHANGE_PERFORMED
    it.mikeslab.util.language.LangKey EXCHANGE_TRANSACTION_REASON -> EXCHANGE_TRANSACTION_REASON
    it.mikeslab.util.language.LangKey INVALID_CURRENCY -> INVALID_CURRENCY
    it.mikeslab.util.language.LangKey INVALID_VALUE -> INVALID_VALUE
    it.mikeslab.util.language.LangKey INVALID_NUMBER -> INVALID_NUMBER
    it.mikeslab.util.language.LangKey ANVIL_INSERT_PIN -> ANVIL_INSERT_PIN
    it.mikeslab.util.language.LangKey ANVIL_PIN_TEXT -> ANVIL_PIN_TEXT
    it.mikeslab.util.language.LangKey ATM_TITLE -> ATM_TITLE
    it.mikeslab.util.language.LangKey ATM_WITHDRAWAL_REASON -> ATM_WITHDRAWAL_REASON
    it.mikeslab.util.language.LangKey RETURN_CURRENCIES_SELECTOR -> RETURN_CURRENCIES_SELECTOR
    it.mikeslab.util.language.LangKey PREVIOUS_PAGE -> PREVIOUS_PAGE
    it.mikeslab.util.language.LangKey NEXT_PAGE -> NEXT_PAGE
    it.mikeslab.util.language.LangKey EXCHANGE_ITEM_NAME -> EXCHANGE_ITEM_NAME
    it.mikeslab.util.language.LangKey BALANCE_ITEM_NAME -> BALANCE_ITEM_NAME
    it.mikeslab.util.language.LangKey SELECT_CARD_TYPE_TITLE -> SELECT_CARD_TYPE_TITLE
    it.mikeslab.util.language.LangKey CARD_TYPE -> CARD_TYPE
    it.mikeslab.util.language.LangKey CARD_DAILY_WITHDRAW_LIMIT -> CARD_DAILY_WITHDRAW_LIMIT
    it.mikeslab.util.language.LangKey CARD_DEPOSIT_LIMIT -> CARD_DEPOSIT_LIMIT
    it.mikeslab.util.language.LangKey CARD_TRANSFER_LIMIT -> CARD_TRANSFER_LIMIT
    it.mikeslab.util.language.LangKey CARD_WITHDRAW_LIMIT -> CARD_WITHDRAW_LIMIT
    it.mikeslab.util.language.LangKey CONFIRM -> CONFIRM
    it.mikeslab.util.language.LangKey CANCEL -> CANCEL
    it.mikeslab.util.language.LangKey SELECT_CURRENCY_TITLE -> SELECT_CURRENCY_TITLE
    it.mikeslab.util.language.LangKey SELECT_CURRENCY_ITEM_NAME -> SELECT_CURRENCY_ITEM_NAME
    it.mikeslab.util.language.LangKey EXCHANGE_RATES -> EXCHANGE_RATES
    it.mikeslab.util.language.LangKey EXCHANGE_TO -> EXCHANGE_TO
    it.mikeslab.util.language.LangKey EXCHANGE_FROM -> EXCHANGE_FROM
    it.mikeslab.util.language.LangKey EXCHANGE -> EXCHANGE
    it.mikeslab.util.language.LangKey BALANCE -> BALANCE
    it.mikeslab.util.language.LangKey CLOSE -> CLOSE
    it.mikeslab.util.language.LangKey TRANSACTION_HISTORY -> TRANSACTION_HISTORY
    it.mikeslab.util.language.LangKey FILTER_BY_DATE -> FILTER_BY_DATE
    it.mikeslab.util.language.LangKey REMOVE_DATE_FILTER -> REMOVE_DATE_FILTER
    it.mikeslab.util.language.LangKey TRANSACTION -> TRANSACTION
    it.mikeslab.util.language.LangKey TRANSACTION_AMOUNT -> TRANSACTION_AMOUNT
    it.mikeslab.util.language.LangKey TRANSACTION_SENDER -> TRANSACTION_SENDER
    it.mikeslab.util.language.LangKey TRANSACTION_RECEIVER -> TRANSACTION_RECEIVER
    it.mikeslab.util.language.LangKey TRANSACTION_REASON -> TRANSACTION_REASON
    it.mikeslab.util.language.LangKey TRANSACTION_CURRENCY -> TRANSACTION_CURRENCY
    it.mikeslab.util.language.LangKey TRANSACTION_ID -> TRANSACTION_ID
    it.mikeslab.util.language.LangKey INVALID_DATE_FORMAT -> INVALID_DATE_FORMAT
    it.mikeslab.util.language.LangKey ENTER_DATE -> ENTER_DATE
    it.mikeslab.util.language.LangKey COMMAND_SPECIFY_SUBJECT -> COMMAND_SPECIFY_SUBJECT
    it.mikeslab.util.language.LangKey OPEN_TRANSACTION_MENU -> OPEN_TRANSACTION_MENU
    it.mikeslab.util.language.LangKey WIRE_TRANSFER_REASON -> WIRE_TRANSFER_REASON
    it.mikeslab.util.language.LangKey WIRE_TRANSFER_TO -> WIRE_TRANSFER_TO
    java.lang.String defaultValue -> defaultValue
    it.mikeslab.util.language.LangKey[] $VALUES -> $VALUES
    6:6:it.mikeslab.util.language.LangKey[] values() -> values
    6:6:it.mikeslab.util.language.LangKey valueOf(java.lang.String) -> valueOf
    104:104:java.lang.String getDefaultValue() -> getDefaultValue
    7:7:void <init>(java.lang.String,int,java.lang.String) -> <init>
    6:6:it.mikeslab.util.language.LangKey[] $values() -> $values
    6:102:void <clinit>() -> <clinit>
it.mikeslab.util.language.Language -> it.mikeslab.util.language.Language:
    java.lang.String subFolder -> subFolder
    java.lang.String defaultLanguage -> defaultLanguage
    org.bukkit.configuration.file.FileConfiguration languageFile -> languageFile
    java.io.File dataFolder -> dataFolder
    org.bukkit.plugin.java.JavaPlugin plugin -> plugin
    com.github.benmanes.caffeine.cache.Cache cache -> cache
    19:19:void <init>() -> <init>
    38:49:void initialize(org.bukkit.plugin.java.JavaPlugin,java.lang.String) -> initialize
    57:58:void reload(java.lang.String) -> reload
    69:73:java.lang.String getString(it.mikeslab.util.language.LangKey) -> getString
    87:91:java.lang.String getComponentString(it.mikeslab.util.language.LangKey) -> getComponentString
    106:110:java.lang.String getComponentString(it.mikeslab.util.language.LangKey,java.util.Map) -> getComponentString
    121:129:java.lang.String loadString(it.mikeslab.util.language.LangKey) -> loadString
    136:137:void close() -> close
    146:146:boolean isLanguageFile(java.lang.String) -> isLanguageFile
    154:160:void generate() -> generate
    166:172:void generateSubFolder() -> generateSubFolder
    180:195:void generateLanguageFile(it.mikeslab.util.language.RecognizedLanguages) -> generateLanguageFile
    204:217:void loadLanguage(java.lang.String) -> loadLanguage
    25:25:org.bukkit.configuration.file.FileConfiguration getLanguageFile() -> getLanguageFile
    106:106:java.lang.String lambda$getComponentString$2(it.mikeslab.util.language.LangKey,it.mikeslab.util.language.LangKey) -> lambda$getComponentString$2
    87:87:java.lang.String lambda$getComponentString$1(it.mikeslab.util.language.LangKey,it.mikeslab.util.language.LangKey) -> lambda$getComponentString$1
    69:69:java.lang.String lambda$getString$0(it.mikeslab.util.language.LangKey,it.mikeslab.util.language.LangKey) -> lambda$getString$0
it.mikeslab.util.language.RecognizedLanguages -> it.mikeslab.util.language.RecognizedLanguages:
    it.mikeslab.util.language.RecognizedLanguages en_US -> en_US
    it.mikeslab.util.language.RecognizedLanguages it_IT -> it_IT
    it.mikeslab.util.language.RecognizedLanguages es_ES -> es_ES
    it.mikeslab.util.language.RecognizedLanguages fr_FR -> fr_FR
    it.mikeslab.util.language.RecognizedLanguages[] $VALUES -> $VALUES
    8:8:it.mikeslab.util.language.RecognizedLanguages[] values() -> values
    8:8:it.mikeslab.util.language.RecognizedLanguages valueOf(java.lang.String) -> valueOf
    8:8:void <init>(java.lang.String,int) -> <init>
    32:32:java.lang.String[] getLanguages() -> getLanguages
    42:48:boolean isRecognizedLanguage(java.lang.String) -> isRecognizedLanguage
    32:32:java.lang.String[] lambda$getLanguages$0(int) -> lambda$getLanguages$0
    8:8:it.mikeslab.util.language.RecognizedLanguages[] $values() -> $values
    8:24:void <clinit>() -> <clinit>
it.mikeslab.util.math.MathUtil -> it.mikeslab.util.math.MathUtil:
    9:9:void <init>() -> <init>
    18:19:double round(double) -> round
it.mikeslab.util.math.RandomUtils -> it.mikeslab.util.math.RandomUtils:
    int CREDIT_CARD_LENGTH -> CREDIT_CARD_LENGTH
    int PIN_LENGTH -> PIN_LENGTH
    int CARD_ID_LENGTH -> CARD_ID_LENGTH
    6:6:void <init>() -> <init>
    29:29:int generateRandomInt(int,int) -> generateRandomInt
    44:53:int generateRandomInt(int,int,int) -> generateRandomInt
    66:75:long generateRandomLong(int,int,int) -> generateRandomLong
it.mikeslab.util.transactions.EconomyManager -> it.mikeslab.util.transactions.EconomyManager:
    it.mikeslab.util.GSONUtil gsonUtil -> gsonUtil
    net.milkbowl.vault.economy.Economy econ -> econ
    java.util.Map dailyWithdraws -> dailyWithdraws
    38:42:void <init>(it.mikeslab.vault.EconomyCore) -> <init>
    54:65:boolean withdraw(java.util.UUID,java.lang.String,double) -> withdraw
    78:89:void deposit(java.util.UUID,java.lang.String,double) -> deposit
    102:118:boolean transfer(java.util.UUID,java.util.UUID,java.lang.String,double,java.lang.String) -> transfer
    133:176:it.mikeslab.util.transactions.TransferResult canWithdraw(java.util.UUID,double,java.lang.String,boolean) -> canWithdraw
    181:199:boolean withdrawWithCurrencySystem(java.util.UUID,double,java.lang.String) -> withdrawWithCurrencySystem
    204:217:void depositWithCurrencySystem(java.util.UUID,double,java.lang.String) -> depositWithCurrencySystem
    230:243:double getBalance(org.bukkit.OfflinePlayer,java.lang.String) -> getBalance
    257:272:void setBalance(java.util.UUID,java.lang.String,double) -> setBalance
    284:284:boolean hasBankAccount(java.util.UUID) -> hasBankAccount
    295:296:boolean compareCardID(java.lang.String,java.util.UUID) -> compareCardID
    308:325:java.util.List getBalanceMessages(java.lang.String,org.bukkit.OfflinePlayer) -> getBalanceMessages
    339:350:it.mikeslab.util.transactions.TransferResult exchange(java.util.UUID,java.lang.String,java.lang.String,double) -> exchange
    27:27:void <init>(it.mikeslab.util.GSONUtil,net.milkbowl.vault.economy.Economy,java.util.Map) -> <init>
    32:32:java.util.Map getDailyWithdraws() -> getDailyWithdraws
    296:296:java.lang.Boolean lambda$compareCardID$0(java.lang.String,com.google.gson.JsonObject) -> lambda$compareCardID$0
it.mikeslab.util.transactions.Transaction -> it.mikeslab.util.transactions.Transaction:
    java.lang.String id -> id
    java.util.UUID from -> from
    java.util.UUID to -> to
    java.lang.String currency -> currency
    java.lang.String reason -> reason
    double amount -> amount
    long timestamp -> timestamp
    33:33:it.mikeslab.util.transactions.Transaction empty() -> empty
    45:51:java.lang.String randomId() -> randomId
    19:19:java.lang.String getId() -> getId
    20:20:java.util.UUID getFrom() -> getFrom
    21:21:java.util.UUID getTo() -> getTo
    22:22:java.lang.String getCurrency() -> getCurrency
    23:23:java.lang.String getReason() -> getReason
    24:24:double getAmount() -> getAmount
    25:25:long getTimestamp() -> getTimestamp
    15:15:void setId(java.lang.String) -> setId
    15:15:void setFrom(java.util.UUID) -> setFrom
    15:15:void setTo(java.util.UUID) -> setTo
    15:15:void setCurrency(java.lang.String) -> setCurrency
    15:15:void setReason(java.lang.String) -> setReason
    15:15:void setAmount(double) -> setAmount
    15:15:void setTimestamp(long) -> setTimestamp
    16:16:void <init>(java.lang.String,java.util.UUID,java.util.UUID,java.lang.String,java.lang.String,double,long) -> <init>
it.mikeslab.util.transactions.TransactionResult -> it.mikeslab.util.transactions.TransactionResult:
    it.mikeslab.util.transactions.TransactionResult ACCOUNT_NOT_FOUND -> ACCOUNT_NOT_FOUND
    it.mikeslab.util.transactions.TransactionResult SUCCESS -> SUCCESS
    it.mikeslab.util.transactions.TransactionResult[] $VALUES -> $VALUES
    6:6:it.mikeslab.util.transactions.TransactionResult[] values() -> values
    6:6:it.mikeslab.util.transactions.TransactionResult valueOf(java.lang.String) -> valueOf
    6:6:void <init>(java.lang.String,int) -> <init>
    6:6:it.mikeslab.util.transactions.TransactionResult[] $values() -> $values
    6:14:void <clinit>() -> <clinit>
it.mikeslab.util.transactions.TransactionUtil -> it.mikeslab.util.transactions.TransactionUtil:
    it.mikeslab.util.GSONUtil gsonUtil -> gsonUtil
    boolean useMongo -> useMongo
    it.mikeslab.util.database.MongoDBHandler mongoHandler -> mongoHandler
    java.lang.String transactionsCollectionName -> transactionsCollectionName
    boolean wireTransferTransactionEnabled -> wireTransferTransactionEnabled
    boolean bankNoteTransactionEnabled -> bankNoteTransactionEnabled
    boolean exchangeTransactionEnabled -> exchangeTransactionEnabled
    32:40:void init() -> init
    49:70:void addTransaction(it.mikeslab.util.transactions.Transaction) -> addTransaction
    79:90:boolean removeTransaction(java.lang.String) -> removeTransaction
    100:126:it.mikeslab.util.transactions.Transaction getTransaction(java.lang.String) -> getTransaction
    139:185:java.util.List getTransactionsForAccount(java.util.UUID,int,int) -> getTransactionsForAccount
    19:22:void <init>(boolean,it.mikeslab.util.database.MongoDBHandler,java.lang.String) -> <init>
    26:26:boolean isWireTransferTransactionEnabled() -> isWireTransferTransactionEnabled
    26:26:boolean isBankNoteTransactionEnabled() -> isBankNoteTransactionEnabled
    26:26:boolean isExchangeTransactionEnabled() -> isExchangeTransactionEnabled
it.mikeslab.util.transactions.TransferResult -> it.mikeslab.util.transactions.TransferResult:
    it.mikeslab.util.transactions.TransferResult INSUFFICIENT_FUNDS -> INSUFFICIENT_FUNDS
    it.mikeslab.util.transactions.TransferResult INVALID_TRANSFER_AMOUNT -> INVALID_TRANSFER_AMOUNT
    it.mikeslab.util.transactions.TransferResult CANNOT_TRANSFER_TO_SELF -> CANNOT_TRANSFER_TO_SELF
    it.mikeslab.util.transactions.TransferResult ACCOUNT_NOT_FOUND -> ACCOUNT_NOT_FOUND
    it.mikeslab.util.transactions.TransferResult DAILY_WITHDRAW_LIMIT_REACHED -> DAILY_WITHDRAW_LIMIT_REACHED
    it.mikeslab.util.transactions.TransferResult TRANSFER_LIMIT_REACHED -> TRANSFER_LIMIT_REACHED
    it.mikeslab.util.transactions.TransferResult SUCCESS -> SUCCESS
    it.mikeslab.util.transactions.TransferResult[] $VALUES -> $VALUES
    3:3:it.mikeslab.util.transactions.TransferResult[] values() -> values
    3:3:it.mikeslab.util.transactions.TransferResult valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:3:it.mikeslab.util.transactions.TransferResult[] $values() -> $values
    3:10:void <clinit>() -> <clinit>
it.mikeslab.util.transactions.WireTransferUtil -> it.mikeslab.util.transactions.WireTransferUtil:
    16:16:void <init>() -> <init>
    28:78:void sendWireTransfer(org.bukkit.entity.Player,org.bukkit.entity.Player,double,java.lang.String[],java.lang.String) -> sendWireTransfer
it.mikeslab.util.transactions.WireTransferUtil$1 -> it.mikeslab.util.transactions.WireTransferUtil$1:
    int[] $SwitchMap$it$mikeslab$util$transactions$TransferResult -> $SwitchMap$it$mikeslab$util$transactions$TransferResult
    42:42:void <clinit>() -> <clinit>
it.mikeslab.vault.EconomyCore -> it.mikeslab.vault.EconomyCore:
    java.lang.String BALANCES_KEY -> BALANCES_KEY
    java.lang.String CURRENCY_KEY -> CURRENCY_KEY
    it.mikeslab.util.GSONUtil playerDataGson -> playerDataGson
    25:25:boolean isEnabled() -> isEnabled
    30:30:java.lang.String getName() -> getName
    35:35:boolean hasBankSupport() -> hasBankSupport
    40:40:int fractionalDigits() -> fractionalDigits
    45:45:java.lang.String format(double) -> format
    50:50:java.lang.String currencyNamePlural() -> currencyNamePlural
    55:55:java.lang.String currencyNameSingular() -> currencyNameSingular
    60:60:boolean hasAccount(java.lang.String) -> hasAccount
    65:67:boolean hasAccount(org.bukkit.OfflinePlayer) -> hasAccount
    72:72:boolean hasAccount(java.lang.String,java.lang.String) -> hasAccount
    77:77:boolean hasAccount(org.bukkit.OfflinePlayer,java.lang.String) -> hasAccount
    82:82:double getBalance(java.lang.String) -> getBalance
    87:97:double getBalance(org.bukkit.OfflinePlayer) -> getBalance
    102:102:double getBalance(java.lang.String,java.lang.String) -> getBalance
    107:107:double getBalance(org.bukkit.OfflinePlayer,java.lang.String) -> getBalance
    112:112:boolean has(java.lang.String,double) -> has
    117:117:boolean has(org.bukkit.OfflinePlayer,double) -> has
    122:122:boolean has(java.lang.String,java.lang.String,double) -> has
    127:127:boolean has(org.bukkit.OfflinePlayer,java.lang.String,double) -> has
    133:133:net.milkbowl.vault.economy.EconomyResponse withdrawPlayer(java.lang.String,double) -> withdrawPlayer
    138:161:net.milkbowl.vault.economy.EconomyResponse withdrawPlayer(org.bukkit.OfflinePlayer,double) -> withdrawPlayer
    166:166:net.milkbowl.vault.economy.EconomyResponse withdrawPlayer(java.lang.String,java.lang.String,double) -> withdrawPlayer
    171:171:net.milkbowl.vault.economy.EconomyResponse withdrawPlayer(org.bukkit.OfflinePlayer,java.lang.String,double) -> withdrawPlayer
    176:176:net.milkbowl.vault.economy.EconomyResponse depositPlayer(java.lang.String,double) -> depositPlayer
    181:206:net.milkbowl.vault.economy.EconomyResponse depositPlayer(org.bukkit.OfflinePlayer,double) -> depositPlayer
    211:211:net.milkbowl.vault.economy.EconomyResponse depositPlayer(java.lang.String,java.lang.String,double) -> depositPlayer
    216:216:net.milkbowl.vault.economy.EconomyResponse depositPlayer(org.bukkit.OfflinePlayer,java.lang.String,double) -> depositPlayer
    221:221:net.milkbowl.vault.economy.EconomyResponse createBank(java.lang.String,java.lang.String) -> createBank
    226:226:net.milkbowl.vault.economy.EconomyResponse createBank(java.lang.String,org.bukkit.OfflinePlayer) -> createBank
    231:231:net.milkbowl.vault.economy.EconomyResponse deleteBank(java.lang.String) -> deleteBank
    236:236:net.milkbowl.vault.economy.EconomyResponse bankBalance(java.lang.String) -> bankBalance
    241:241:net.milkbowl.vault.economy.EconomyResponse bankHas(java.lang.String,double) -> bankHas
    246:246:net.milkbowl.vault.economy.EconomyResponse bankWithdraw(java.lang.String,double) -> bankWithdraw
    251:251:net.milkbowl.vault.economy.EconomyResponse bankDeposit(java.lang.String,double) -> bankDeposit
    256:256:net.milkbowl.vault.economy.EconomyResponse isBankOwner(java.lang.String,java.lang.String) -> isBankOwner
    261:261:net.milkbowl.vault.economy.EconomyResponse isBankOwner(java.lang.String,org.bukkit.OfflinePlayer) -> isBankOwner
    266:266:net.milkbowl.vault.economy.EconomyResponse isBankMember(java.lang.String,java.lang.String) -> isBankMember
    271:271:net.milkbowl.vault.economy.EconomyResponse isBankMember(java.lang.String,org.bukkit.OfflinePlayer) -> isBankMember
    276:276:java.util.List getBanks() -> getBanks
    281:281:boolean createPlayerAccount(java.lang.String) -> createPlayerAccount
    286:286:boolean createPlayerAccount(org.bukkit.OfflinePlayer) -> createPlayerAccount
    291:291:boolean createPlayerAccount(java.lang.String,java.lang.String) -> createPlayerAccount
    296:296:boolean createPlayerAccount(org.bukkit.OfflinePlayer,java.lang.String) -> createPlayerAccount
    300:300:org.bukkit.OfflinePlayer getOfflinePlayer(java.lang.String) -> getOfflinePlayer
    16:16:void <init>(it.mikeslab.util.GSONUtil) -> <init>
    203:203:void lambda$depositPlayer$1(com.google.gson.JsonObject,com.google.gson.JsonObject) -> lambda$depositPlayer$1
    187:187:com.google.gson.JsonObject lambda$depositPlayer$0(com.google.gson.JsonObject) -> lambda$depositPlayer$0
    19:19:void <clinit>() -> <clinit>
net.kyori.adventure.audience.Audience -> net.kyori.adventure.a.a:
    129:129:net.kyori.adventure.audience.ForwardingAudience audience(java.lang.Iterable) -> a
    700:700:void openBook(net.kyori.adventure.inventory.Book) -> a
    129:129:java.lang.Iterable lambda$audience$0(java.lang.Iterable) -> b
net.kyori.adventure.audience.EmptyAudience -> net.kyori.adventure.a.b:
    net.kyori.adventure.audience.EmptyAudience INSTANCE -> a
    43:43:void <init>() -> <init>
    54:54:java.lang.Object getOrDefault(net.kyori.adventure.pointer.Pointer,java.lang.Object) -> a
    123:123:boolean equals(java.lang.Object) -> equals
    128:128:int hashCode() -> hashCode
    133:133:java.lang.String toString() -> toString
    44:44:void <clinit>() -> <clinit>
net.kyori.adventure.audience.ForwardingAudience -> net.kyori.adventure.a.c:
    java.lang.Iterable audiences() -> audiences
    73:73:net.kyori.adventure.pointer.Pointers pointers() -> a
    1049:1049:net.kyori.adventure.pointer.Pointers net.kyori.adventure.pointer.Pointers.empty():49:49 -> a
    1049:1049:net.kyori.adventure.pointer.Pointers pointers():73 -> a
    199:200:void openBook(net.kyori.adventure.inventory.Book) -> a
net.kyori.adventure.audience.ForwardingAudience$Single -> net.kyori.adventure.a.c$a:
    net.kyori.adventure.audience.Audience audience() -> audience
    226:226:java.lang.Iterable audiences() -> audiences
    237:237:java.lang.Object getOrDefault(net.kyori.adventure.pointer.Pointer,java.lang.Object) -> a
    260:260:net.kyori.adventure.pointer.Pointers pointers() -> a
    362:363:void openBook(net.kyori.adventure.inventory.Book) -> a
net.kyori.adventure.bossbar.BossBar -> net.kyori.adventure.b.a:
    net.kyori.adventure.text.Component name() -> a
net.kyori.adventure.bossbar.BossBar$Listener -> net.kyori.adventure.b.a$a:
    398:398:void bossBarNameChanged(net.kyori.adventure.bossbar.BossBar,net.kyori.adventure.text.Component,net.kyori.adventure.text.Component) -> a
net.kyori.adventure.builder.AbstractBuilder -> net.kyori.adventure.c.a:
    java.lang.Object build() -> build
net.kyori.adventure.chat.ChatType -> net.kyori.adventure.d.a:
    142:142:java.util.stream.Stream examinableProperties() -> examinableProperties
    52:100:void <clinit>() -> <clinit>
net.kyori.adventure.chat.ChatType$Bound -> net.kyori.adventure.d.a$a:
    net.kyori.adventure.chat.ChatType type() -> a
    net.kyori.adventure.text.Component name() -> b
    net.kyori.adventure.text.Component target() -> c
    185:188:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.chat.ChatTypeImpl -> net.kyori.adventure.d.b:
    net.kyori.adventure.key.Key key -> a
    35:37:void <init>(net.kyori.adventure.key.Key) -> <init>
    41:41:net.kyori.adventure.key.Key key() -> key
    46:46:java.lang.String toString() -> toString
net.kyori.adventure.chat.SignedMessage -> net.kyori.adventure.d.c:
    java.time.Instant timestamp() -> a
    long salt() -> b
    net.kyori.adventure.chat.SignedMessage$Signature signature() -> c
    net.kyori.adventure.text.Component unsignedContent() -> d
    java.lang.String message() -> e
    151:156:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.chat.SignedMessage$Signature -> net.kyori.adventure.d.c$a:
    byte[] bytes() -> a
    181:181:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.identity.Identified -> net.kyori.adventure.e.a:
net.kyori.adventure.identity.Identity -> net.kyori.adventure.e.b:
    net.kyori.adventure.pointer.Pointer NAME -> a
    net.kyori.adventure.pointer.Pointer UUID -> b
    net.kyori.adventure.pointer.Pointer DISPLAY_NAME -> c
    net.kyori.adventure.pointer.Pointer LOCALE -> d
    java.util.UUID uuid() -> a
    104:104:java.util.stream.Stream examinableProperties() -> examinableProperties
    50:68:void <clinit>() -> <clinit>
net.kyori.adventure.internal.properties.AdventureProperties -> net.kyori.adventure.f.a.a:
    net.kyori.adventure.internal.properties.AdventureProperties$Property SERVICE_LOAD_FAILURES_ARE_FATAL -> a
    net.kyori.adventure.internal.properties.AdventureProperties$Property TEXT_WARN_WHEN_LEGACY_FORMATTING_DETECTED -> b
    43:61:void <clinit>() -> <clinit>
    1077:1077:net.kyori.adventure.internal.properties.AdventureProperties$Property property(java.lang.String,java.util.function.Function,java.lang.Object):77:77 -> <clinit>
    1077:1077:void <clinit>():43 -> <clinit>
    2077:2077:net.kyori.adventure.internal.properties.AdventureProperties$Property property(java.lang.String,java.util.function.Function,java.lang.Object):77:77 -> <clinit>
    2077:2077:void <clinit>():49 -> <clinit>
    3077:3077:net.kyori.adventure.internal.properties.AdventureProperties$Property property(java.lang.String,java.util.function.Function,java.lang.Object):77:77 -> <clinit>
    3077:3077:void <clinit>():55 -> <clinit>
    4077:4077:net.kyori.adventure.internal.properties.AdventureProperties$Property property(java.lang.String,java.util.function.Function,java.lang.Object):77:77 -> <clinit>
    4077:4077:void <clinit>():61 -> <clinit>
net.kyori.adventure.internal.properties.AdventureProperties$Property -> net.kyori.adventure.f.a.a$a:
    java.lang.Object value() -> a
net.kyori.adventure.internal.properties.AdventurePropertiesImpl -> net.kyori.adventure.f.a.b:
    java.util.Properties PROPERTIES -> a
    67:67:java.lang.String systemPropertyName(java.lang.String) -> a
    71:71:net.kyori.adventure.internal.properties.AdventureProperties$Property property(java.lang.String,java.util.function.Function,java.lang.Object) -> a
    46:46:java.nio.file.Path lambda$static$1() -> b
    45:45:java.nio.file.Path lambda$static$0(java.lang.String) -> b
    38:38:java.util.Properties access$000() -> a
    41:55:void <clinit>() -> <clinit>
    1059:1060:void print(java.lang.Throwable):59:60 -> <clinit>
    1059:1060:void <clinit>():52 -> <clinit>
net.kyori.adventure.internal.properties.AdventurePropertiesImpl$PropertyImpl -> net.kyori.adventure.f.a.b$a:
    java.lang.String name -> a
    java.util.function.Function parser -> b
    java.lang.Object defaultValue -> c
    boolean valueCalculated -> d
    java.lang.Object value -> e
    81:85:void <init>(java.lang.String,java.util.function.Function,java.lang.Object) -> <init>
    89:100:java.lang.Object value() -> a
    105:105:boolean equals(java.lang.Object) -> equals
    110:110:int hashCode() -> hashCode
net.kyori.adventure.inventory.Book -> net.kyori.adventure.g.a:
    net.kyori.adventure.text.Component title() -> title
    net.kyori.adventure.text.Component author() -> author
    java.util.List pages() -> a
    163:166:net.kyori.adventure.inventory.Book$Builder toBuilder() -> toBuilder
    1085:1085:net.kyori.adventure.inventory.Book$Builder builder():85:85 -> toBuilder
    1085:1085:net.kyori.adventure.inventory.Book$Builder toBuilder():163 -> toBuilder
    50:50:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
net.kyori.adventure.inventory.Book$Builder -> net.kyori.adventure.g.a$a:
    net.kyori.adventure.inventory.Book$Builder title(net.kyori.adventure.text.Component) -> title
    net.kyori.adventure.inventory.Book$Builder author(net.kyori.adventure.text.Component) -> author
    net.kyori.adventure.inventory.Book$Builder pages(java.util.Collection) -> pages
    net.kyori.adventure.inventory.Book build() -> build
    174:174:java.lang.Object build() -> build
net.kyori.adventure.inventory.BookImpl -> net.kyori.adventure.g.b:
    net.kyori.adventure.text.Component title -> a
    net.kyori.adventure.text.Component author -> b
    java.util.List pages -> c
    43:47:void <init>(net.kyori.adventure.text.Component,net.kyori.adventure.text.Component,java.util.List) -> <init>
    51:51:net.kyori.adventure.text.Component title() -> title
    61:61:net.kyori.adventure.text.Component author() -> author
    71:71:java.util.List pages() -> a
    81:84:java.util.stream.Stream examinableProperties() -> examinableProperties
    90:95:boolean equals(java.lang.Object) -> equals
    100:103:int hashCode() -> hashCode
    108:108:java.lang.String toString() -> toString
net.kyori.adventure.inventory.BookImpl$BuilderImpl -> net.kyori.adventure.g.b$a:
    net.kyori.adventure.text.Component title -> a
    net.kyori.adventure.text.Component author -> b
    java.util.List pages -> c
    111:114:void <init>() -> <init>
    118:119:net.kyori.adventure.inventory.Book$Builder title(net.kyori.adventure.text.Component) -> title
    124:125:net.kyori.adventure.inventory.Book$Builder author(net.kyori.adventure.text.Component) -> author
    136:137:net.kyori.adventure.inventory.Book$Builder pages(java.util.Collection) -> pages
    148:148:net.kyori.adventure.inventory.Book build() -> build
    111:111:java.lang.Object build() -> build
net.kyori.adventure.key.InvalidKeyException -> net.kyori.adventure.h.a:
    40:43:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
net.kyori.adventure.key.Key -> net.kyori.adventure.h.b:
    88:88:net.kyori.adventure.key.Key key(java.lang.String) -> a
    1108:1111:net.kyori.adventure.key.Key key(java.lang.String,char):108:111 -> a
    1108:1111:net.kyori.adventure.key.Key key(java.lang.String):88 -> a
    137:137:net.kyori.adventure.key.Key key(java.lang.String,java.lang.String) -> a
    177:182:boolean parseableNamespace(java.lang.String) -> b
    1209:1209:boolean allowedInNamespace(char):209:209 -> b
    1209:1209:boolean parseableNamespace(java.lang.String):178 -> b
    193:198:boolean parseableValue(java.lang.String) -> c
    1220:1220:boolean allowedInValue(char):220:220 -> c
    1220:1220:boolean parseableValue(java.lang.String):194 -> c
    java.lang.String namespace() -> namespace
    java.lang.String value() -> value
    java.lang.String asString() -> asString
    250:252:java.util.stream.Stream examinableProperties() -> examinableProperties
    258:258:int compareTo(net.kyori.adventure.key.Key) -> a
    2149:2149:java.util.Comparator comparator():149:149 -> a
    2149:2149:int compareTo(net.kyori.adventure.key.Key):258 -> a
    263:263:net.kyori.adventure.key.Key key() -> key
    59:59:int compareTo(java.lang.Object) -> compareTo
net.kyori.adventure.key.KeyImpl -> net.kyori.adventure.h.c:
    java.util.Comparator COMPARATOR -> a
    java.lang.String NAMESPACE_PATTERN -> b
    java.lang.String VALUE_PATTERN -> c
    java.lang.String namespace -> d
    java.lang.String value -> e
    43:48:void <init>(java.lang.String,java.lang.String) -> <init>
    51:51:boolean allowedInNamespace(char) -> a
    55:55:boolean allowedInValue(char) -> b
    60:60:java.lang.String namespace() -> namespace
    65:65:java.lang.String value() -> value
    70:70:java.lang.String asString() -> asString
    74:74:java.lang.String asString(java.lang.String,java.lang.String) -> b
    79:79:java.lang.String toString() -> toString
    84:86:java.util.stream.Stream examinableProperties() -> examinableProperties
    92:95:boolean equals(java.lang.Object) -> equals
    100:102:int hashCode() -> hashCode
    107:107:int compareTo(net.kyori.adventure.key.Key) -> a
    34:34:int compareTo(java.lang.Object) -> compareTo
    1107:1107:int compareTo(net.kyori.adventure.key.Key):107:107 -> compareTo
    1107:1107:int compareTo(java.lang.Object):34 -> compareTo
    35:35:void <clinit>() -> <clinit>
    void toJson$11(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> a
    2000:2000:void toJsonBody$11(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> a
    2000:2000:void toJson$11(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> a
    void <init>() -> <init>
    void fromJson$11(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    3000:3000:void fromJsonField$11(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    3000:3000:void fromJson$11(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.key.Keyed -> net.kyori.adventure.h.d:
    net.kyori.adventure.key.Key key() -> key
net.kyori.adventure.key.OptimizedKeyImplTypeAdapter -> net.kyori.adventure.h.e:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.nbt.AbstractBinaryTag -> net.kyori.adventure.i.a:
    29:29:void <init>() -> <init>
    32:32:java.lang.String examinableName() -> c_
    37:37:java.lang.String toString() -> toString
net.kyori.adventure.nbt.ArrayBinaryTag -> net.kyori.adventure.i.b:
net.kyori.adventure.nbt.ArrayBinaryTagImpl -> net.kyori.adventure.i.c:
    26:26:void <init>() -> <init>
net.kyori.adventure.nbt.BinaryTag -> net.kyori.adventure.i.d:
    net.kyori.adventure.nbt.BinaryTagType type() -> b
net.kyori.adventure.nbt.BinaryTagIO -> net.kyori.adventure.i.e:
    99:99:net.kyori.adventure.nbt.BinaryTagIO$Writer writer() -> a
    49:50:void <clinit>() -> <clinit>
net.kyori.adventure.nbt.BinaryTagIO$Compression -> net.kyori.adventure.i.e$a:
    net.kyori.adventure.nbt.BinaryTagIO$Compression NONE -> a
    501:501:void <init>() -> <init>
    java.io.OutputStream compress(java.io.OutputStream) -> a
    507:549:void <clinit>() -> <clinit>
net.kyori.adventure.nbt.BinaryTagIO$Compression$1 -> net.kyori.adventure.i.e$a$1:
    507:507:void <init>() -> <init>
    515:515:java.io.OutputStream compress(java.io.OutputStream) -> a
    520:520:java.lang.String toString() -> toString
net.kyori.adventure.nbt.BinaryTagIO$Compression$2 -> net.kyori.adventure.i.e$a$2:
    528:528:void <init>() -> <init>
    536:536:java.io.OutputStream compress(java.io.OutputStream) -> a
    541:541:java.lang.String toString() -> toString
net.kyori.adventure.nbt.BinaryTagIO$Compression$3 -> net.kyori.adventure.i.e$a$3:
    549:549:void <init>() -> <init>
    557:557:java.io.OutputStream compress(java.io.OutputStream) -> a
    562:562:java.lang.String toString() -> toString
net.kyori.adventure.nbt.BinaryTagIO$Writer -> net.kyori.adventure.i.e$b:
    411:412:void write(net.kyori.adventure.nbt.CompoundBinaryTag,java.io.OutputStream) -> a
    void write(net.kyori.adventure.nbt.CompoundBinaryTag,java.io.OutputStream,net.kyori.adventure.nbt.BinaryTagIO$Compression) -> a
net.kyori.adventure.nbt.BinaryTagScope -> net.kyori.adventure.i.f:
    void close() -> close
net.kyori.adventure.nbt.BinaryTagScope$NoOp -> net.kyori.adventure.i.f$a:
    net.kyori.adventure.nbt.BinaryTagScope$NoOp INSTANCE -> a
    35:36:void <init>() -> <init>
    41:41:void close() -> close
    33:33:void <clinit>() -> <clinit>
net.kyori.adventure.nbt.BinaryTagType -> net.kyori.adventure.i.g:
    java.util.List TYPES -> a
    41:41:void <init>() -> <init>
    byte id() -> a
    boolean numeric() -> b
    net.kyori.adventure.nbt.BinaryTag read(java.io.DataInput) -> a
    void write(net.kyori.adventure.nbt.BinaryTag,java.io.DataOutput) -> a
    76:77:void writeUntyped(net.kyori.adventure.nbt.BinaryTagType,net.kyori.adventure.nbt.BinaryTag,java.io.DataOutput) -> a
    80:86:net.kyori.adventure.nbt.BinaryTagType of(byte) -> a
    90:90:net.kyori.adventure.nbt.BinaryTagType register(java.lang.Class,byte,net.kyori.adventure.nbt.BinaryTagType$Reader,net.kyori.adventure.nbt.BinaryTagType$Writer) -> a
    94:94:net.kyori.adventure.nbt.BinaryTagType registerNumeric(java.lang.Class,byte,net.kyori.adventure.nbt.BinaryTagType$Reader,net.kyori.adventure.nbt.BinaryTagType$Writer) -> b
    98:99:net.kyori.adventure.nbt.BinaryTagType register(net.kyori.adventure.nbt.BinaryTagType) -> b
    122:122:boolean test(net.kyori.adventure.nbt.BinaryTagType) -> a
    41:41:boolean test(java.lang.Object) -> test
    42:42:void <clinit>() -> <clinit>
net.kyori.adventure.nbt.BinaryTagType$Impl -> net.kyori.adventure.i.g$a:
    java.lang.Class type -> a
    byte id -> b
    net.kyori.adventure.nbt.BinaryTagType$Reader reader -> c
    net.kyori.adventure.nbt.BinaryTagType$Writer writer -> d
    131:136:void <init>(java.lang.Class,byte,net.kyori.adventure.nbt.BinaryTagType$Reader,net.kyori.adventure.nbt.BinaryTagType$Writer) -> <init>
    140:140:net.kyori.adventure.nbt.BinaryTag read(java.io.DataInput) -> a
    145:146:void write(net.kyori.adventure.nbt.BinaryTag,java.io.DataOutput) -> a
    150:150:byte id() -> a
    155:155:boolean numeric() -> b
    160:160:java.lang.String toString() -> toString
    125:125:boolean test(java.lang.Object) -> test
net.kyori.adventure.nbt.BinaryTagType$Impl$Numeric -> net.kyori.adventure.i.g$a$a:
    165:166:void <init>(java.lang.Class,byte,net.kyori.adventure.nbt.BinaryTagType$Reader,net.kyori.adventure.nbt.BinaryTagType$Writer) -> <init>
    170:170:boolean numeric() -> b
    175:175:java.lang.String toString() -> toString
    163:163:boolean test(java.lang.Object) -> test
net.kyori.adventure.nbt.BinaryTagType$Reader -> net.kyori.adventure.i.g$b:
    net.kyori.adventure.nbt.BinaryTag read(java.io.DataInput) -> read
net.kyori.adventure.nbt.BinaryTagType$Writer -> net.kyori.adventure.i.g$c:
    void write(net.kyori.adventure.nbt.BinaryTag,java.io.DataOutput) -> write
net.kyori.adventure.nbt.BinaryTagTypes -> net.kyori.adventure.i.h:
    net.kyori.adventure.nbt.BinaryTagType END -> a
    net.kyori.adventure.nbt.BinaryTagType BYTE -> b
    net.kyori.adventure.nbt.BinaryTagType SHORT -> c
    net.kyori.adventure.nbt.BinaryTagType INT -> d
    net.kyori.adventure.nbt.BinaryTagType LONG -> e
    net.kyori.adventure.nbt.BinaryTagType FLOAT -> f
    net.kyori.adventure.nbt.BinaryTagType DOUBLE -> g
    net.kyori.adventure.nbt.BinaryTagType BYTE_ARRAY -> h
    net.kyori.adventure.nbt.BinaryTagType STRING -> i
    net.kyori.adventure.nbt.BinaryTagType LIST -> j
    net.kyori.adventure.nbt.BinaryTagType COMPOUND -> k
    net.kyori.adventure.nbt.BinaryTagType INT_ARRAY -> l
    net.kyori.adventure.nbt.BinaryTagType LONG_ARRAY -> m
    199:205:void lambda$static$24(net.kyori.adventure.nbt.LongArrayBinaryTag,java.io.DataOutput) -> a
    190:197:net.kyori.adventure.nbt.LongArrayBinaryTag lambda$static$23(java.io.DataInput) -> a
    175:181:void lambda$static$22(net.kyori.adventure.nbt.IntArrayBinaryTag,java.io.DataOutput) -> a
    166:173:net.kyori.adventure.nbt.IntArrayBinaryTag lambda$static$21(java.io.DataInput) -> b
    145:157:void lambda$static$20(net.kyori.adventure.nbt.CompoundBinaryTag,java.io.DataOutput) -> a
    134:143:net.kyori.adventure.nbt.CompoundBinaryTag lambda$static$19(java.io.DataInput) -> c
    120:126:void lambda$static$18(net.kyori.adventure.nbt.ListBinaryTag,java.io.DataOutput) -> a
    110:118:net.kyori.adventure.nbt.ListBinaryTag lambda$static$17(java.io.DataInput) -> d
    102:102:void lambda$static$16(net.kyori.adventure.nbt.StringBinaryTag,java.io.DataOutput) -> a
    102:102:net.kyori.adventure.nbt.StringBinaryTag lambda$static$15(java.io.DataInput) -> e
    93:96:void lambda$static$14(net.kyori.adventure.nbt.ByteArrayBinaryTag,java.io.DataOutput) -> a
    86:91:net.kyori.adventure.nbt.ByteArrayBinaryTag lambda$static$13(java.io.DataInput) -> f
    78:78:void lambda$static$12(net.kyori.adventure.nbt.DoubleBinaryTag,java.io.DataOutput) -> a
    78:78:net.kyori.adventure.nbt.DoubleBinaryTag lambda$static$11(java.io.DataInput) -> g
    72:72:void lambda$static$10(net.kyori.adventure.nbt.FloatBinaryTag,java.io.DataOutput) -> a
    72:72:net.kyori.adventure.nbt.FloatBinaryTag lambda$static$9(java.io.DataInput) -> h
    66:66:void lambda$static$8(net.kyori.adventure.nbt.LongBinaryTag,java.io.DataOutput) -> a
    66:66:net.kyori.adventure.nbt.LongBinaryTag lambda$static$7(java.io.DataInput) -> i
    60:60:void lambda$static$6(net.kyori.adventure.nbt.IntBinaryTag,java.io.DataOutput) -> a
    60:60:net.kyori.adventure.nbt.IntBinaryTag lambda$static$5(java.io.DataInput) -> j
    54:54:void lambda$static$4(net.kyori.adventure.nbt.ShortBinaryTag,java.io.DataOutput) -> a
    54:54:net.kyori.adventure.nbt.ShortBinaryTag lambda$static$3(java.io.DataInput) -> k
    48:48:void lambda$static$2(net.kyori.adventure.nbt.ByteBinaryTag,java.io.DataOutput) -> a
    48:48:net.kyori.adventure.nbt.ByteBinaryTag lambda$static$1(java.io.DataInput) -> l
    42:42:net.kyori.adventure.nbt.EndBinaryTag lambda$static$0(java.io.DataInput) -> m
    42:189:void <clinit>() -> <clinit>
net.kyori.adventure.nbt.BinaryTagWriterImpl -> net.kyori.adventure.i.i:
    net.kyori.adventure.nbt.BinaryTagIO$Writer INSTANCE -> a
    38:38:void <init>() -> <init>
    50:53:void write(net.kyori.adventure.nbt.CompoundBinaryTag,java.io.OutputStream,net.kyori.adventure.nbt.BinaryTagIO$Compression) -> a
    1054:1054:java.io.OutputStream net.kyori.adventure.nbt.IOStreamUtil.closeShield(java.io.OutputStream):54:54 -> a
    1054:1054:void write(net.kyori.adventure.nbt.CompoundBinaryTag,java.io.OutputStream,net.kyori.adventure.nbt.BinaryTagIO$Compression):50 -> a
    1057:1060:void write(net.kyori.adventure.nbt.CompoundBinaryTag,java.io.DataOutput):57:60 -> a
    1057:1060:void write(net.kyori.adventure.nbt.CompoundBinaryTag,java.io.OutputStream,net.kyori.adventure.nbt.BinaryTagIO$Compression):51 -> a
    39:39:void <clinit>() -> <clinit>
net.kyori.adventure.nbt.ByteArrayBinaryTag -> net.kyori.adventure.i.j:
    42:42:net.kyori.adventure.nbt.ByteArrayBinaryTag of(byte[]) -> a
    47:47:net.kyori.adventure.nbt.BinaryTagType type() -> b
    byte[] value() -> c
net.kyori.adventure.nbt.ByteArrayBinaryTagImpl -> net.kyori.adventure.i.k:
    byte[] value -> a
    38:40:void <init>(byte[]) -> <init>
    44:44:byte[] value() -> c
    60:60:byte[] value(net.kyori.adventure.nbt.ByteArrayBinaryTag) -> a
    65:68:boolean equals(java.lang.Object) -> equals
    73:73:int hashCode() -> hashCode
    78:78:java.util.stream.Stream examinableProperties() -> examinableProperties
    83:83:java.util.Iterator iterator() -> iterator
net.kyori.adventure.nbt.ByteArrayBinaryTagImpl$1 -> net.kyori.adventure.i.k$1:
    int index -> a
    net.kyori.adventure.nbt.ByteArrayBinaryTagImpl this$0 -> b
    83:83:void <init>(net.kyori.adventure.nbt.ByteArrayBinaryTagImpl) -> <init>
    88:88:boolean hasNext() -> hasNext
    83:83:java.lang.Object next() -> next
    1093:1093:java.lang.Byte next():93:93 -> next
    1093:1093:java.lang.Object next():83 -> next
net.kyori.adventure.nbt.ByteBinaryTag -> net.kyori.adventure.i.l:
    net.kyori.adventure.nbt.ByteBinaryTag ZERO -> a
    net.kyori.adventure.nbt.ByteBinaryTag ONE -> b
    56:61:net.kyori.adventure.nbt.ByteBinaryTag of(byte) -> a
    67:67:net.kyori.adventure.nbt.BinaryTagType type() -> b
    byte value() -> c
    39:46:void <clinit>() -> <clinit>
net.kyori.adventure.nbt.ByteBinaryTagImpl -> net.kyori.adventure.i.m:
    byte value -> c
    36:38:void <init>(byte) -> <init>
    42:42:byte value() -> c
    47:47:byte byteValue() -> d
    62:62:int intValue() -> e
    77:80:boolean equals(java.lang.Object) -> equals
    85:85:int hashCode() -> hashCode
    90:90:java.util.stream.Stream examinableProperties() -> examinableProperties
    1163:1163:net.kyori.examination.ExaminableProperty net.kyori.examination.ExaminableProperty.of(java.lang.String,byte):163:163 -> examinableProperties
    1163:1163:java.util.stream.Stream examinableProperties():90 -> examinableProperties
net.kyori.adventure.nbt.CharBuffer -> net.kyori.adventure.i.n:
    java.lang.CharSequence sequence -> a
    int index -> b
    33:35:void <init>(java.lang.CharSequence) -> <init>
    43:43:char peek() -> a
    47:47:char peek(int) -> a
    56:56:char take() -> b
    60:61:boolean advance() -> c
    65:65:boolean hasMore() -> d
    80:96:java.lang.CharSequence takeUntil(char) -> a
    109:117:net.kyori.adventure.nbt.CharBuffer expect(char) -> b
    129:134:boolean takeIf(char) -> c
    138:139:net.kyori.adventure.nbt.CharBuffer skipWhitespace() -> e
    143:143:net.kyori.adventure.nbt.StringTagParseException makeError(java.lang.String) -> a
net.kyori.adventure.nbt.CompoundBinaryTag -> net.kyori.adventure.i.o:
    45:45:net.kyori.adventure.nbt.CompoundBinaryTag empty() -> c
    69:69:net.kyori.adventure.nbt.CompoundBinaryTag$Builder builder() -> d
    74:74:net.kyori.adventure.nbt.BinaryTagType type() -> b
    byte getByte(java.lang.String,byte) -> a
    291:291:java.lang.String getString(java.lang.String) -> a
    java.lang.String getString(java.lang.String,java.lang.String) -> a
    364:364:net.kyori.adventure.nbt.CompoundBinaryTag getCompound(java.lang.String) -> b
    1045:1045:net.kyori.adventure.nbt.CompoundBinaryTag empty():45:45 -> b
    1045:1045:net.kyori.adventure.nbt.CompoundBinaryTag getCompound(java.lang.String):364 -> b
    net.kyori.adventure.nbt.CompoundBinaryTag getCompound(java.lang.String,net.kyori.adventure.nbt.CompoundBinaryTag) -> a
net.kyori.adventure.nbt.CompoundBinaryTag$Builder -> net.kyori.adventure.i.o$a:
    net.kyori.adventure.nbt.CompoundBinaryTag build() -> a
net.kyori.adventure.nbt.CompoundBinaryTagImpl -> net.kyori.adventure.i.p:
    net.kyori.adventure.nbt.CompoundBinaryTag EMPTY -> a
    java.util.Map tags -> b
    int hashCode -> c
    46:49:void <init>(java.util.Map) -> <init>
    52:53:boolean contains(java.lang.String,net.kyori.adventure.nbt.BinaryTagType) -> a
    100:103:byte getByte(java.lang.String,byte) -> a
    164:167:java.lang.String getString(java.lang.String,java.lang.String) -> a
    191:194:net.kyori.adventure.nbt.CompoundBinaryTag getCompound(java.lang.String,net.kyori.adventure.nbt.CompoundBinaryTag) -> a
    237:237:boolean equals(java.lang.Object) -> equals
    242:242:int hashCode() -> hashCode
    247:247:java.util.stream.Stream examinableProperties() -> examinableProperties
    253:253:java.util.Iterator iterator() -> iterator
    258:259:void forEach(java.util.function.Consumer) -> forEach
    40:40:java.lang.Object put(java.lang.String,net.kyori.adventure.nbt.BinaryTag) -> a
    1068:1068:net.kyori.adventure.nbt.CompoundBinaryTag put(java.lang.String,net.kyori.adventure.nbt.BinaryTag):68:68 -> a
    1068:1068:java.lang.Object put(java.lang.String,net.kyori.adventure.nbt.BinaryTag):40 -> a
    1230:1232:net.kyori.adventure.nbt.CompoundBinaryTag edit(java.util.function.Consumer):230:232 -> a
    1230:1232:net.kyori.adventure.nbt.CompoundBinaryTag put(java.lang.String,net.kyori.adventure.nbt.BinaryTag):68 -> a
    1230:1232:java.lang.Object put(java.lang.String,net.kyori.adventure.nbt.BinaryTag):40 -> a
    68:68:void lambda$put$0(java.lang.String,net.kyori.adventure.nbt.BinaryTag,java.util.Map) -> a
    42:42:void <clinit>() -> <clinit>
net.kyori.adventure.nbt.CompoundTagBuilder -> net.kyori.adventure.i.q:
    java.util.Map tags -> a
    32:32:void <init>() -> <init>
    76:77:net.kyori.adventure.nbt.CompoundBinaryTag build() -> a
    32:32:java.lang.Object put(java.lang.String,net.kyori.adventure.nbt.BinaryTag) -> a
    1044:1045:net.kyori.adventure.nbt.CompoundBinaryTag$Builder put(java.lang.String,net.kyori.adventure.nbt.BinaryTag):44:45 -> a
    1044:1045:java.lang.Object put(java.lang.String,net.kyori.adventure.nbt.BinaryTag):32 -> a
    2036:2039:java.util.Map tags():36:39 -> a
    2036:2039:net.kyori.adventure.nbt.CompoundBinaryTag$Builder put(java.lang.String,net.kyori.adventure.nbt.BinaryTag):44 -> a
    2036:2039:java.lang.Object put(java.lang.String,net.kyori.adventure.nbt.BinaryTag):32 -> a
net.kyori.adventure.nbt.CompoundTagSetter -> net.kyori.adventure.i.r:
    java.lang.Object put(java.lang.String,net.kyori.adventure.nbt.BinaryTag) -> a
    110:110:java.lang.Object putByte(java.lang.String,byte) -> b
    194:194:java.lang.Object putString(java.lang.String,java.lang.String) -> b
net.kyori.adventure.nbt.DoubleBinaryTag -> net.kyori.adventure.i.s:
    42:42:net.kyori.adventure.nbt.DoubleBinaryTag of(double) -> a
    47:47:net.kyori.adventure.nbt.BinaryTagType type() -> b
    double value() -> c
net.kyori.adventure.nbt.DoubleBinaryTagImpl -> net.kyori.adventure.i.t:
    double value -> a
    36:38:void <init>(double) -> <init>
    42:42:double value() -> c
    47:47:byte byteValue() -> d
    62:62:int intValue() -> e
    77:80:boolean equals(java.lang.Object) -> equals
    85:85:int hashCode() -> hashCode
    90:90:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.nbt.EndBinaryTag -> net.kyori.adventure.i.u:
    41:41:net.kyori.adventure.nbt.EndBinaryTag get() -> c
    46:46:net.kyori.adventure.nbt.BinaryTagType type() -> b
net.kyori.adventure.nbt.EndBinaryTagImpl -> net.kyori.adventure.i.v:
    net.kyori.adventure.nbt.EndBinaryTagImpl INSTANCE -> a
    26:26:void <init>() -> <init>
    31:31:boolean equals(java.lang.Object) -> equals
    36:36:int hashCode() -> hashCode
    27:27:void <clinit>() -> <clinit>
net.kyori.adventure.nbt.FloatBinaryTag -> net.kyori.adventure.i.w:
    42:42:net.kyori.adventure.nbt.FloatBinaryTag of(float) -> a
    47:47:net.kyori.adventure.nbt.BinaryTagType type() -> b
    float value() -> c
net.kyori.adventure.nbt.FloatBinaryTagImpl -> net.kyori.adventure.i.x:
    float value -> a
    36:38:void <init>(float) -> <init>
    42:42:float value() -> c
    47:47:byte byteValue() -> d
    62:62:int intValue() -> e
    77:80:boolean equals(java.lang.Object) -> equals
    85:85:int hashCode() -> hashCode
    90:90:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.nbt.IOStreamUtil -> net.kyori.adventure.i.y:
    int index -> a
    org.bson.BsonValue id -> b
    1036:1039:void com.mongodb.bulk.BulkWriteUpsert.<init>(int,org.bson.BsonValue):36:39 -> <init>
    1047:1047:int com.mongodb.bulk.BulkWriteUpsert.getIndex():47:47 -> a
    1056:1056:org.bson.BsonValue com.mongodb.bulk.BulkWriteUpsert.getId():56:56 -> b
    1061:1077:boolean com.mongodb.bulk.BulkWriteUpsert.equals(java.lang.Object):61:77 -> equals
    1082:1084:int com.mongodb.bulk.BulkWriteUpsert.hashCode():82:84 -> hashCode
    1089:1089:java.lang.String com.mongodb.bulk.BulkWriteUpsert.toString():89:89 -> toString
net.kyori.adventure.nbt.IOStreamUtil$2 -> net.kyori.adventure.i.y$1:
    java.io.OutputStream val$stream -> a
    54:54:void <init>(java.io.OutputStream) -> <init>
    57:58:void write(int) -> write
    62:63:void write(byte[]) -> write
    67:68:void write(byte[],int,int) -> write
net.kyori.adventure.nbt.IntArrayBinaryTag -> net.kyori.adventure.i.z:
    47:47:net.kyori.adventure.nbt.IntArrayBinaryTag of(int[]) -> a
    52:52:net.kyori.adventure.nbt.BinaryTagType type() -> b
    int[] value() -> c
    java.util.PrimitiveIterator$OfInt iterator() -> d
    java.util.Spliterator$OfInt spliterator() -> e
    38:38:java.util.Spliterator spliterator() -> spliterator
    38:38:java.util.Iterator iterator() -> iterator
net.kyori.adventure.nbt.IntArrayBinaryTagImpl -> net.kyori.adventure.i.A:
    int[] value -> a
    42:44:void <init>(int[]) -> <init>
    48:48:int[] value() -> c
    64:64:java.util.PrimitiveIterator$OfInt iterator() -> d
    84:84:java.util.Spliterator$OfInt spliterator() -> e
    101:101:int[] value(net.kyori.adventure.nbt.IntArrayBinaryTag) -> a
    106:109:boolean equals(java.lang.Object) -> equals
    114:114:int hashCode() -> hashCode
    119:119:java.util.stream.Stream examinableProperties() -> examinableProperties
    1370:1370:net.kyori.examination.ExaminableProperty net.kyori.examination.ExaminableProperty.of(java.lang.String,int[]):370:370 -> examinableProperties
    1370:1370:java.util.stream.Stream examinableProperties():119 -> examinableProperties
    38:38:java.util.Spliterator spliterator() -> spliterator
    2084:2084:java.util.Spliterator$OfInt spliterator():84:84 -> spliterator
    2084:2084:java.util.Spliterator spliterator():38 -> spliterator
    38:38:java.util.Iterator iterator() -> iterator
net.kyori.adventure.nbt.IntArrayBinaryTagImpl$1 -> net.kyori.adventure.i.A$1:
    int index -> a
    net.kyori.adventure.nbt.IntArrayBinaryTagImpl this$0 -> b
    64:64:void <init>(net.kyori.adventure.nbt.IntArrayBinaryTagImpl) -> <init>
    69:69:boolean hasNext() -> hasNext
    74:77:int nextInt() -> nextInt
net.kyori.adventure.nbt.IntBinaryTag -> net.kyori.adventure.i.B:
    42:42:net.kyori.adventure.nbt.IntBinaryTag of(int) -> a
    47:47:net.kyori.adventure.nbt.BinaryTagType type() -> b
    int value() -> c
net.kyori.adventure.nbt.IntBinaryTagImpl -> net.kyori.adventure.i.C:
    int value -> a
    36:38:void <init>(int) -> <init>
    42:42:int value() -> c
    47:47:byte byteValue() -> d
    62:62:int intValue() -> e
    77:80:boolean equals(java.lang.Object) -> equals
    85:85:int hashCode() -> hashCode
    90:90:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.nbt.ListBinaryTag -> net.kyori.adventure.i.D:
    46:46:net.kyori.adventure.nbt.ListBinaryTag empty() -> c
    70:70:net.kyori.adventure.nbt.ListBinaryTag$Builder builder() -> d
    83:84:net.kyori.adventure.nbt.ListBinaryTag$Builder builder(net.kyori.adventure.nbt.BinaryTagType) -> a
    99:101:net.kyori.adventure.nbt.ListBinaryTag of(net.kyori.adventure.nbt.BinaryTagType,java.util.List) -> a
    1046:1046:net.kyori.adventure.nbt.ListBinaryTag empty():46:46 -> a
    1046:1046:net.kyori.adventure.nbt.ListBinaryTag of(net.kyori.adventure.nbt.BinaryTagType,java.util.List):99 -> a
    106:106:net.kyori.adventure.nbt.BinaryTagType type() -> b
    net.kyori.adventure.nbt.BinaryTagType elementType() -> e
    int size() -> f
net.kyori.adventure.nbt.ListBinaryTag$Builder -> net.kyori.adventure.i.D$a:
    net.kyori.adventure.nbt.ListBinaryTag build() -> a
net.kyori.adventure.nbt.ListBinaryTagImpl -> net.kyori.adventure.i.E:
    net.kyori.adventure.nbt.ListBinaryTag EMPTY -> a
    java.util.List tags -> b
    net.kyori.adventure.nbt.BinaryTagType elementType -> c
    int hashCode -> d
    48:52:void <init>(net.kyori.adventure.nbt.BinaryTagType,java.util.List) -> <init>
    56:56:net.kyori.adventure.nbt.BinaryTagType elementType() -> e
    61:61:int size() -> f
    113:116:void noAddEnd(net.kyori.adventure.nbt.BinaryTag) -> a
    133:136:void mustBeSameType(net.kyori.adventure.nbt.BinaryTag,net.kyori.adventure.nbt.BinaryTagType) -> a
    156:157:java.util.Iterator iterator() -> iterator
    177:178:void forEach(java.util.function.Consumer) -> forEach
    182:182:java.util.Spliterator spliterator() -> spliterator
    187:187:boolean equals(java.lang.Object) -> equals
    192:192:int hashCode() -> hashCode
    197:199:java.util.stream.Stream examinableProperties() -> examinableProperties
    41:41:java.lang.Object add(net.kyori.adventure.nbt.BinaryTag) -> b
    1091:1095:net.kyori.adventure.nbt.ListBinaryTag add(net.kyori.adventure.nbt.BinaryTag):91:95 -> b
    1091:1095:java.lang.Object add(net.kyori.adventure.nbt.BinaryTag):41 -> b
    1139:1146:net.kyori.adventure.nbt.ListBinaryTag edit(java.util.function.Consumer,net.kyori.adventure.nbt.BinaryTagType):139:146 -> b
    1139:1146:net.kyori.adventure.nbt.ListBinaryTag add(net.kyori.adventure.nbt.BinaryTag):95 -> b
    1139:1146:java.lang.Object add(net.kyori.adventure.nbt.BinaryTag):41 -> b
    95:95:void lambda$add$2(net.kyori.adventure.nbt.BinaryTag,java.util.List) -> a
    43:43:void <clinit>() -> <clinit>
net.kyori.adventure.nbt.ListBinaryTagImpl$1 -> net.kyori.adventure.i.E$1:
    java.util.Iterator val$iterator -> a
    157:157:void <init>(net.kyori.adventure.nbt.ListBinaryTagImpl,java.util.Iterator) -> <init>
    160:160:boolean hasNext() -> hasNext
    170:171:void forEachRemaining(java.util.function.Consumer) -> forEachRemaining
    157:157:java.lang.Object next() -> next
    1165:1165:net.kyori.adventure.nbt.BinaryTag next():165:165 -> next
    1165:1165:java.lang.Object next():157 -> next
net.kyori.adventure.nbt.ListTagBuilder -> net.kyori.adventure.i.F:
    java.util.List tags -> a
    net.kyori.adventure.nbt.BinaryTagType elementType -> b
    36:37:void <init>() -> <init>
    39:41:void <init>(net.kyori.adventure.nbt.BinaryTagType) -> <init>
    69:70:net.kyori.adventure.nbt.ListBinaryTag build() -> a
    31:31:java.lang.Object add(net.kyori.adventure.nbt.BinaryTag) -> b
    1045:1056:net.kyori.adventure.nbt.ListBinaryTag$Builder add(net.kyori.adventure.nbt.BinaryTag):45:56 -> b
    1045:1056:java.lang.Object add(net.kyori.adventure.nbt.BinaryTag):31 -> b
net.kyori.adventure.nbt.ListTagSetter -> net.kyori.adventure.i.G:
    java.lang.Object add(net.kyori.adventure.nbt.BinaryTag) -> b
net.kyori.adventure.nbt.LongArrayBinaryTag -> net.kyori.adventure.i.H:
    47:47:net.kyori.adventure.nbt.LongArrayBinaryTag of(long[]) -> a
    52:52:net.kyori.adventure.nbt.BinaryTagType type() -> b
    long[] value() -> c
    java.util.PrimitiveIterator$OfLong iterator() -> d
    java.util.Spliterator$OfLong spliterator() -> e
    38:38:java.util.Spliterator spliterator() -> spliterator
    38:38:java.util.Iterator iterator() -> iterator
net.kyori.adventure.nbt.LongArrayBinaryTagImpl -> net.kyori.adventure.i.I:
    long[] value -> a
    42:44:void <init>(long[]) -> <init>
    48:48:long[] value() -> c
    64:64:java.util.PrimitiveIterator$OfLong iterator() -> d
    84:84:java.util.Spliterator$OfLong spliterator() -> e
    101:101:long[] value(net.kyori.adventure.nbt.LongArrayBinaryTag) -> a
    106:109:boolean equals(java.lang.Object) -> equals
    114:114:int hashCode() -> hashCode
    119:119:java.util.stream.Stream examinableProperties() -> examinableProperties
    1416:1416:net.kyori.examination.ExaminableProperty net.kyori.examination.ExaminableProperty.of(java.lang.String,long[]):416:416 -> examinableProperties
    1416:1416:java.util.stream.Stream examinableProperties():119 -> examinableProperties
    38:38:java.util.Spliterator spliterator() -> spliterator
    2084:2084:java.util.Spliterator$OfLong spliterator():84:84 -> spliterator
    2084:2084:java.util.Spliterator spliterator():38 -> spliterator
    38:38:java.util.Iterator iterator() -> iterator
net.kyori.adventure.nbt.LongArrayBinaryTagImpl$1 -> net.kyori.adventure.i.I$1:
    int index -> a
    net.kyori.adventure.nbt.LongArrayBinaryTagImpl this$0 -> b
    64:64:void <init>(net.kyori.adventure.nbt.LongArrayBinaryTagImpl) -> <init>
    69:69:boolean hasNext() -> hasNext
    74:77:long nextLong() -> nextLong
net.kyori.adventure.nbt.LongBinaryTag -> net.kyori.adventure.i.J:
    42:42:net.kyori.adventure.nbt.LongBinaryTag of(long) -> a
    47:47:net.kyori.adventure.nbt.BinaryTagType type() -> b
    long value() -> c
net.kyori.adventure.nbt.LongBinaryTagImpl -> net.kyori.adventure.i.K:
    long value -> a
    36:38:void <init>(long) -> <init>
    42:42:long value() -> c
    47:47:byte byteValue() -> d
    62:62:int intValue() -> e
    77:80:boolean equals(java.lang.Object) -> equals
    85:85:int hashCode() -> hashCode
    90:90:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.nbt.NumberBinaryTag -> net.kyori.adventure.i.L:
    byte byteValue() -> d
    int intValue() -> e
net.kyori.adventure.nbt.ShortBinaryTag -> net.kyori.adventure.i.M:
    42:42:net.kyori.adventure.nbt.ShortBinaryTag of(short) -> a
    47:47:net.kyori.adventure.nbt.BinaryTagType type() -> b
    short value() -> c
net.kyori.adventure.nbt.ShortBinaryTagImpl -> net.kyori.adventure.i.N:
    short value -> a
    36:38:void <init>(short) -> <init>
    42:42:short value() -> c
    47:47:byte byteValue() -> d
    62:62:int intValue() -> e
    77:80:boolean equals(java.lang.Object) -> equals
    85:85:int hashCode() -> hashCode
    90:90:java.util.stream.Stream examinableProperties() -> examinableProperties
    1439:1439:net.kyori.examination.ExaminableProperty net.kyori.examination.ExaminableProperty.of(java.lang.String,short):439:439 -> examinableProperties
    1439:1439:java.util.stream.Stream examinableProperties():90 -> examinableProperties
net.kyori.adventure.nbt.StringBinaryTag -> net.kyori.adventure.i.O:
    42:42:net.kyori.adventure.nbt.StringBinaryTag of(java.lang.String) -> a
    47:47:net.kyori.adventure.nbt.BinaryTagType type() -> b
    java.lang.String value() -> c
net.kyori.adventure.nbt.StringBinaryTagImpl -> net.kyori.adventure.i.P:
    java.lang.String value -> a
    36:38:void <init>(java.lang.String) -> <init>
    42:42:java.lang.String value() -> c
    47:50:boolean equals(java.lang.Object) -> equals
    55:55:int hashCode() -> hashCode
    60:60:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.nbt.StringTagParseException -> net.kyori.adventure.i.Q:
    int position -> a
    37:40:void <init>(java.lang.String,java.lang.CharSequence,int) -> <init>
    46:46:java.lang.String getMessage() -> getMessage
net.kyori.adventure.nbt.TagStringIO -> net.kyori.adventure.i.R:
    net.kyori.adventure.nbt.TagStringIO INSTANCE -> a
    boolean acceptLegacy -> b
    boolean emitLegacy -> c
    java.lang.String indent -> d
    46:46:net.kyori.adventure.nbt.TagStringIO get() -> a
    63:67:void <init>(net.kyori.adventure.nbt.TagStringIO$Builder) -> <init>
    1134:1134:boolean net.kyori.adventure.nbt.TagStringIO$Builder.access$000(net.kyori.adventure.nbt.TagStringIO$Builder):134:134 -> <init>
    1134:1134:void <init>(net.kyori.adventure.nbt.TagStringIO$Builder):64 -> <init>
    2134:2134:boolean net.kyori.adventure.nbt.TagStringIO$Builder.access$100(net.kyori.adventure.nbt.TagStringIO$Builder):134:134 -> <init>
    2134:2134:void <init>(net.kyori.adventure.nbt.TagStringIO$Builder):65 -> <init>
    3134:3134:java.lang.String net.kyori.adventure.nbt.TagStringIO$Builder.access$200(net.kyori.adventure.nbt.TagStringIO$Builder):134:134 -> <init>
    3134:3134:void <init>(net.kyori.adventure.nbt.TagStringIO$Builder):66 -> <init>
    82:91:net.kyori.adventure.nbt.CompoundBinaryTag asCompound(java.lang.String) -> a
    3343:3344:void net.kyori.adventure.nbt.TagStringReader.legacy(boolean):343:344 -> a
    3343:3344:net.kyori.adventure.nbt.CompoundBinaryTag asCompound(java.lang.String):84 -> a
    104:109:java.lang.String asString(net.kyori.adventure.nbt.CompoundBinaryTag) -> a
    4051:4052:net.kyori.adventure.nbt.TagStringWriter net.kyori.adventure.nbt.TagStringWriter.legacy(boolean):51:52 -> a
    4051:4052:java.lang.String asString(net.kyori.adventure.nbt.CompoundBinaryTag):106 -> a
    37:37:void <clinit>() -> <clinit>
net.kyori.adventure.nbt.TagStringIO$Builder -> net.kyori.adventure.i.R$a:
    boolean acceptLegacy -> a
    boolean emitLegacy -> c
    java.lang.String indent -> b
    135:140:void <init>() -> <init>
net.kyori.adventure.nbt.TagStringReader -> net.kyori.adventure.i.S:
    byte[] EMPTY_BYTE_ARRAY -> b
    int[] EMPTY_INT_ARRAY -> c
    long[] EMPTY_LONG_ARRAY -> d
    net.kyori.adventure.nbt.CharBuffer buffer -> e
    boolean acceptLegacy -> a
    int depth -> f
    41:43:void <init>(net.kyori.adventure.nbt.CharBuffer) -> <init>
    46:58:net.kyori.adventure.nbt.CompoundBinaryTag compound() -> a
    62:80:net.kyori.adventure.nbt.ListBinaryTag list() -> b
    108:129:byte[] byteArray() -> c
    152:169:long[] longArray() -> d
    173:201:java.lang.String key() -> e
    205:231:net.kyori.adventure.nbt.BinaryTag tag() -> f
    1069:1069:boolean net.kyori.adventure.nbt.CharBuffer.hasMore(int):69:69 -> f
    1069:1069:net.kyori.adventure.nbt.BinaryTag tag():216 -> f
    1091:1103:net.kyori.adventure.nbt.BinaryTag array(char):91:103 -> f
    1091:1103:net.kyori.adventure.nbt.BinaryTag tag():217 -> f
    1133:1148:int[] intArray():133:148 -> f
    1133:1148:net.kyori.adventure.nbt.BinaryTag array(char):99 -> f
    1133:1148:net.kyori.adventure.nbt.BinaryTag tag():217 -> f
    242:309:net.kyori.adventure.nbt.BinaryTag scalar() -> g
    314:318:boolean separatorOrCompleteWith(char) -> a
    328:339:java.lang.String unescape(java.lang.String) -> a
    33:35:void <clinit>() -> <clinit>
net.kyori.adventure.nbt.TagStringWriter -> net.kyori.adventure.i.T:
    java.lang.Appendable out -> b
    java.lang.String indent -> c
    int level -> d
    boolean needsSeparator -> e
    boolean legacy -> a
    45:48:void <init>(java.lang.Appendable,java.lang.String) -> <init>
    58:84:net.kyori.adventure.nbt.TagStringWriter writeTag(net.kyori.adventure.nbt.BinaryTag) -> a
    90:96:net.kyori.adventure.nbt.TagStringWriter writeCompound(net.kyori.adventure.nbt.CompoundBinaryTag) -> a
    100:116:net.kyori.adventure.nbt.TagStringWriter writeList(net.kyori.adventure.nbt.ListBinaryTag) -> a
    120:132:net.kyori.adventure.nbt.TagStringWriter writeByteArray(net.kyori.adventure.nbt.ByteArrayBinaryTag) -> a
    136:148:net.kyori.adventure.nbt.TagStringWriter writeIntArray(net.kyori.adventure.nbt.IntArrayBinaryTag) -> a
    1234:1234:net.kyori.adventure.nbt.TagStringWriter endArray():234:234 -> a
    1234:1234:net.kyori.adventure.nbt.TagStringWriter writeIntArray(net.kyori.adventure.nbt.IntArrayBinaryTag):147 -> a
    152:163:net.kyori.adventure.nbt.TagStringWriter writeLongArray(net.kyori.adventure.nbt.LongArrayBinaryTag) -> a
    169:172:net.kyori.adventure.nbt.TagStringWriter beginCompound() -> a
    176:180:net.kyori.adventure.nbt.TagStringWriter endCompound() -> b
    184:188:net.kyori.adventure.nbt.TagStringWriter key(java.lang.String) -> a
    192:201:net.kyori.adventure.nbt.TagStringWriter value(java.lang.String,char) -> a
    205:208:net.kyori.adventure.nbt.TagStringWriter beginList() -> c
    212:218:net.kyori.adventure.nbt.TagStringWriter endList(boolean) -> a
    222:230:net.kyori.adventure.nbt.TagStringWriter beginArray(char) -> a
    234:234:net.kyori.adventure.nbt.TagStringWriter endArray() -> d
    238:253:void writeMaybeQuoted(java.lang.String,boolean) -> a
    256:264:java.lang.String escape(java.lang.String,char) -> b
    268:275:void printAndResetSeparator(boolean) -> b
    281:281:boolean breakListElement(net.kyori.adventure.nbt.BinaryTagType) -> a
    289:289:boolean prettyPrinting() -> e
    293:299:void newlineIndent() -> f
    302:306:java.lang.Appendable appendSeparator(char) -> b
    311:317:void close() -> close
net.kyori.adventure.nbt.Tokens -> net.kyori.adventure.i.U:
    java.lang.String NEWLINE -> a
    68:68:boolean id(char) -> a
    84:84:boolean numeric(char) -> b
    53:53:void <clinit>() -> <clinit>
net.kyori.adventure.nbt.TrackingDataInput -> net.kyori.adventure.i.V:
    44:47:net.kyori.adventure.nbt.BinaryTagScope enter(java.io.DataInput) -> a
    1074:1074:net.kyori.adventure.nbt.TrackingDataInput enter():74:74 -> a
    1074:1074:net.kyori.adventure.nbt.BinaryTagScope enter(java.io.DataInput):45 -> a
    52:55:net.kyori.adventure.nbt.BinaryTagScope enter(java.io.DataInput,long) -> a
    90:92:void readFully(byte[]) -> readFully
    96:98:void readFully(byte[],int,int) -> readFully
    102:102:int skipBytes(int) -> skipBytes
    107:108:boolean readBoolean() -> readBoolean
    113:114:byte readByte() -> readByte
    119:120:int readUnsignedByte() -> readUnsignedByte
    125:126:short readShort() -> readShort
    131:132:int readUnsignedShort() -> readUnsignedShort
    137:138:char readChar() -> readChar
    143:144:int readInt() -> readInt
    149:150:long readLong() -> readLong
    155:156:float readFloat() -> readFloat
    161:162:double readDouble() -> readDouble
    167:171:java.lang.String readLine() -> readLine
    176:178:java.lang.String readUTF() -> readUTF
    183:184:void close() -> close
    1078:1080:void exit():78:80 -> close
    1078:1080:void close():183 -> close
net.kyori.adventure.nbt.api.BinaryTagHolder -> net.kyori.adventure.i.a.a:
    64:64:net.kyori.adventure.nbt.api.BinaryTagHolder binaryTagHolder(java.lang.String) -> a
    java.lang.String string() -> a
    java.lang.Object get(net.kyori.adventure.util.Codec) -> a
net.kyori.adventure.nbt.api.BinaryTagHolderImpl -> net.kyori.adventure.i.a.b:
    java.lang.String string -> a
    34:36:void <init>(java.lang.String) -> <init>
    40:40:java.lang.String string() -> a
    45:45:java.lang.Object get(net.kyori.adventure.util.Codec) -> a
    50:50:int hashCode() -> hashCode
    55:59:boolean equals(java.lang.Object) -> equals
    64:64:java.lang.String toString() -> toString
net.kyori.adventure.permission.PermissionChecker -> net.kyori.adventure.j.a:
    net.kyori.adventure.pointer.Pointer POINTER -> a
    net.kyori.adventure.util.TriState value(java.lang.String) -> value
    70:70:boolean test(java.lang.String) -> a
    38:38:boolean test(java.lang.Object) -> test
    44:44:void <clinit>() -> <clinit>
net.kyori.adventure.platform.AudienceProvider -> net.kyori.adventure.platform.a:
net.kyori.adventure.platform.AudienceProvider$Builder -> net.kyori.adventure.platform.a$a:
    net.kyori.adventure.platform.AudienceProvider$Builder componentRenderer(net.kyori.adventure.text.renderer.ComponentRenderer) -> a
    net.kyori.adventure.platform.AudienceProvider$Builder partition(java.util.function.Function) -> a
    201:202:net.kyori.adventure.platform.AudienceProvider$Builder componentRenderer(java.util.function.Function,net.kyori.adventure.text.renderer.ComponentRenderer) -> a
net.kyori.adventure.platform.bukkit.BukkitAudience -> net.kyori.adventure.platform.bukkit.a:
    java.lang.ThreadLocal PLUGIN -> a
    java.util.function.Function VIA -> c
    java.util.Collection CHAT -> d
    java.util.Collection ACTION_BAR -> e
    java.util.Collection TITLE -> f
    java.util.Collection SOUND -> g
    java.util.Collection ENTITY_SOUND -> h
    java.util.Collection BOOK -> i
    java.util.Collection BOSS_BAR -> j
    java.util.Collection TAB_LIST -> k
    java.util.Collection POINTERS -> l
    java.util.Locale locale -> b
    102:104:void <init>(org.bukkit.plugin.Plugin,net.kyori.adventure.platform.facet.FacetAudienceProvider,java.util.Collection) -> <init>
    114:114:java.util.Locale locale() -> b
    119:120:void contributePointers(net.kyori.adventure.pointer.Pointers$Builder) -> a
    94:94:net.kyori.adventure.platform.facet.Facet$Pointers lambda$static$30() -> d
    93:93:net.kyori.adventure.platform.facet.Facet$Pointers lambda$static$29() -> e
    92:92:net.kyori.adventure.platform.facet.Facet$Pointers lambda$static$28() -> f
    89:89:net.kyori.adventure.platform.facet.Facet$TabList lambda$static$27() -> g
    88:88:net.kyori.adventure.platform.facet.Facet$TabList lambda$static$26() -> h
    87:87:net.kyori.adventure.platform.facet.Facet$TabList lambda$static$25() -> i
    86:86:net.kyori.adventure.platform.facet.Facet$TabList lambda$static$24() -> j
    84:84:net.kyori.adventure.platform.facet.Facet$BossBar$Builder lambda$static$23() -> k
    83:83:net.kyori.adventure.platform.facet.Facet$BossBar$Builder lambda$static$22() -> l
    82:82:net.kyori.adventure.platform.facet.Facet$BossBar$Builder lambda$static$21() -> m
    81:81:net.kyori.adventure.platform.facet.Facet$BossBar$Builder lambda$static$20() -> n
    80:80:net.kyori.adventure.platform.facet.Facet$BossBar$Builder lambda$static$19() -> o
    78:78:net.kyori.adventure.platform.facet.Facet$Book lambda$static$18() -> p
    77:77:net.kyori.adventure.platform.facet.Facet$Book lambda$static$17() -> q
    76:76:net.kyori.adventure.platform.facet.Facet$Book lambda$static$16() -> r
    72:72:net.kyori.adventure.platform.facet.Facet$EntitySound lambda$static$15() -> s
    71:71:net.kyori.adventure.platform.facet.Facet$EntitySound lambda$static$14() -> t
    69:69:net.kyori.adventure.platform.facet.Facet$Sound lambda$static$13() -> u
    68:68:net.kyori.adventure.platform.facet.Facet$Sound lambda$static$12() -> v
    66:66:net.kyori.adventure.platform.facet.Facet$Title lambda$static$11() -> w
    65:65:net.kyori.adventure.platform.facet.Facet$Title lambda$static$10() -> x
    63:63:net.kyori.adventure.platform.facet.Facet$Title lambda$static$9() -> y
    61:61:net.kyori.adventure.platform.facet.Facet$ActionBar lambda$static$8() -> z
    60:60:net.kyori.adventure.platform.facet.Facet$ActionBar lambda$static$7() -> A
    59:59:net.kyori.adventure.platform.facet.Facet$ActionBar lambda$static$6() -> B
    57:57:net.kyori.adventure.platform.facet.Facet$ActionBar lambda$static$5() -> C
    56:56:net.kyori.adventure.platform.facet.Facet$ActionBar lambda$static$4() -> D
    54:54:net.kyori.adventure.platform.facet.Facet$Chat lambda$static$3() -> E
    53:53:net.kyori.adventure.platform.facet.Facet$Chat lambda$static$2() -> F
    52:52:net.kyori.adventure.platform.facet.Facet$Chat lambda$static$1() -> G
    49:49:net.kyori.adventure.platform.facet.Facet$Chat lambda$static$0() -> H
    46:91:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.BukkitAudiences -> net.kyori.adventure.platform.bukkit.BukkitAudiences:
    53:53:net.kyori.adventure.platform.bukkit.BukkitAudiences create(org.bukkit.plugin.Plugin) -> create
    66:66:net.kyori.adventure.platform.bukkit.BukkitAudiences$Builder builder(org.bukkit.plugin.Plugin) -> builder
    77:77:net.kyori.adventure.sound.Sound$Emitter asEmitter(org.bukkit.entity.Entity) -> asEmitter
    net.kyori.adventure.audience.Audience sender(org.bukkit.command.CommandSender) -> sender
    net.kyori.adventure.audience.Audience player(org.bukkit.entity.Player) -> player
    net.kyori.adventure.audience.Audience filter(java.util.function.Predicate) -> filter
net.kyori.adventure.platform.bukkit.BukkitAudiences$Builder -> net.kyori.adventure.platform.bukkit.BukkitAudiences$Builder:
net.kyori.adventure.platform.bukkit.BukkitAudiencesImpl -> net.kyori.adventure.platform.bukkit.b:
    java.util.Map INSTANCES -> d
    org.bukkit.plugin.Plugin plugin -> e
    85:85:net.kyori.adventure.platform.bukkit.BukkitAudiencesImpl$Builder builder(org.bukkit.plugin.Plugin) -> a
    89:89:net.kyori.adventure.platform.bukkit.BukkitAudiences instanceFor(org.bukkit.plugin.Plugin) -> b
    95:113:void <init>(org.bukkit.plugin.Plugin,net.kyori.adventure.text.renderer.ComponentRenderer) -> <init>
    1243:1269:void registerLocaleEvent(org.bukkit.event.EventPriority,java.util.function.BiConsumer):243:269 -> <init>
    1243:1269:void <init>(org.bukkit.plugin.Plugin,net.kyori.adventure.text.renderer.ComponentRenderer):109 -> <init>
    117:126:net.kyori.adventure.audience.Audience sender(org.bukkit.command.CommandSender) -> sender
    2096:2096:net.kyori.adventure.audience.Audience net.kyori.adventure.audience.Audience.empty():96:96 -> sender
    2096:2096:net.kyori.adventure.audience.Audience sender(org.bukkit.command.CommandSender):124 -> sender
    131:131:net.kyori.adventure.audience.Audience player(org.bukkit.entity.Player) -> player
    136:136:net.kyori.adventure.platform.bukkit.BukkitAudience createAudience(java.util.Collection) -> b
    141:143:void close() -> close
    229:231:void registerEvent(java.lang.Class,org.bukkit.event.EventPriority,java.util.function.Consumer) -> a
    74:74:net.kyori.adventure.platform.facet.FacetAudience createAudience(java.util.Collection) -> a
    258:267:void lambda$registerLocaleEvent$6(java.lang.invoke.MethodHandle,java.lang.Class,java.util.function.BiConsumer,org.bukkit.event.player.PlayerEvent) -> a
    2278:2284:java.util.Locale toLocale(java.lang.String):278:284 -> a
    2278:2284:void lambda$registerLocaleEvent$6(java.lang.invoke.MethodHandle,java.lang.Class,java.util.function.BiConsumer,org.bukkit.event.player.PlayerEvent):266 -> a
    3059:3068:java.util.Locale net.kyori.adventure.translation.Translator.parseLocale(java.lang.String):59:68 -> a
    3059:3068:java.util.Locale toLocale(java.lang.String):279 -> a
    3059:3068:void lambda$registerLocaleEvent$6(java.lang.invoke.MethodHandle,java.lang.Class,java.util.function.BiConsumer,org.bukkit.event.player.PlayerEvent):266 -> a
    230:230:void lambda$registerEvent$5(java.util.function.Consumer,org.bukkit.event.Listener,org.bukkit.event.Event) -> a
    110:112:void lambda$new$4(org.bukkit.entity.Player,java.util.Locale) -> a
    3107:3111:void net.kyori.adventure.platform.bukkit.BukkitAudience.locale(java.util.Locale):107:111 -> a
    3107:3111:void lambda$new$4(org.bukkit.entity.Player,java.util.Locale):111 -> a
    108:108:void lambda$new$3(org.bukkit.event.player.PlayerQuitEvent) -> a
    106:106:void lambda$new$2(org.bukkit.event.player.PlayerJoinEvent) -> a
    79:79:void lambda$static$1(java.lang.String,java.lang.Throwable) -> a
    78:78:void lambda$static$0(java.lang.String) -> a
    75:75:java.util.Map access$000() -> b
    75:75:java.util.Locale access$100() -> c
    78:82:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.BukkitAudiencesImpl$Builder -> net.kyori.adventure.platform.bukkit.b$a:
    org.bukkit.plugin.Plugin plugin -> a
    net.kyori.adventure.text.renderer.ComponentRenderer componentRenderer -> b
    154:157:void <init>(org.bukkit.plugin.Plugin) -> <init>
    1075:1075:net.kyori.adventure.text.renderer.TranslatableComponentRenderer net.kyori.adventure.translation.GlobalTranslator.renderer():75:75 -> <init>
    1075:1075:void <init>(org.bukkit.plugin.Plugin):156 -> <init>
    173:173:net.kyori.adventure.platform.bukkit.BukkitAudiences build() -> a
    150:150:net.kyori.adventure.platform.AudienceProvider$Builder partition(java.util.function.Function) -> a
    1167:1168:net.kyori.adventure.platform.bukkit.BukkitAudiences$Builder partition(java.util.function.Function):167:168 -> a
    1167:1168:net.kyori.adventure.platform.AudienceProvider$Builder partition(java.util.function.Function):150 -> a
    150:150:net.kyori.adventure.platform.AudienceProvider$Builder componentRenderer(net.kyori.adventure.text.renderer.ComponentRenderer) -> a
    2161:2162:net.kyori.adventure.platform.bukkit.BukkitAudiencesImpl$Builder componentRenderer(net.kyori.adventure.text.renderer.ComponentRenderer):161:162 -> a
    2161:2162:net.kyori.adventure.platform.AudienceProvider$Builder componentRenderer(net.kyori.adventure.text.renderer.ComponentRenderer):150 -> a
    174:175:net.kyori.adventure.platform.bukkit.BukkitAudiences lambda$build$1(java.lang.String) -> a
    2192:2214:void softDepend(java.lang.String):192:214 -> a
    2192:2214:net.kyori.adventure.platform.bukkit.BukkitAudiences lambda$build$1(java.lang.String):174 -> a
    156:156:java.util.Locale lambda$new$0(net.kyori.adventure.pointer.Pointered) -> a
net.kyori.adventure.platform.bukkit.BukkitComponentSerializer -> net.kyori.adventure.platform.bukkit.BukkitComponentSerializer:
    boolean IS_1_16 -> a
    java.util.Collection TRANSLATORS -> b
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer LEGACY_SERIALIZER -> c
    net.kyori.adventure.text.serializer.gson.GsonComponentSerializer GSON_SERIALIZER -> d
    net.kyori.adventure.text.flattener.ComponentFlattener FLATTENER -> e
    46:47:void <init>() -> <init>
    90:90:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer legacy() -> legacy
    102:102:net.kyori.adventure.text.serializer.gson.GsonComponentSerializer gson() -> gson
    49:81:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.BukkitEmitter -> net.kyori.adventure.platform.bukkit.c:
    32:34:void <init>(org.bukkit.entity.Entity) -> <init>
net.kyori.adventure.platform.bukkit.BukkitFacet -> net.kyori.adventure.platform.bukkit.d:
    64:65:void <init>(java.lang.Class) -> <init>
net.kyori.adventure.platform.bukkit.BukkitFacet$BossBar -> net.kyori.adventure.platform.bukkit.d$a:
    org.bukkit.boss.BossBar bar -> a
    228:234:void <init>(java.util.Collection) -> <init>
    244:247:void bossBarNameChanged(net.kyori.adventure.bossbar.BossBar,net.kyori.adventure.text.Component,net.kyori.adventure.text.Component) -> a
    346:346:boolean isEmpty() -> a
    351:352:void close() -> close
    224:224:void removeViewer(java.lang.Object) -> a
    1341:1342:void removeViewer(org.bukkit.entity.Player):341:342 -> a
    1341:1342:void removeViewer(java.lang.Object):224 -> a
net.kyori.adventure.platform.bukkit.BukkitFacet$BossBarBuilder -> net.kyori.adventure.platform.bukkit.d$b:
    boolean SUPPORTED -> a
    210:211:void <init>() -> <init>
    215:215:boolean isSupported() -> isSupported
    207:207:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.BukkitFacet$Chat -> net.kyori.adventure.platform.bukkit.d$c:
    80:81:void <init>() -> <init>
net.kyori.adventure.platform.bukkit.BukkitFacet$CommandSenderPointers -> net.kyori.adventure.platform.bukkit.d$d:
    390:391:void <init>() -> <init>
    387:387:void contributePointers(java.lang.Object,net.kyori.adventure.pointer.Pointers$Builder) -> a
    1396:1405:void contributePointers(org.bukkit.command.CommandSender,net.kyori.adventure.pointer.Pointers$Builder):396:405 -> a
    1396:1405:void contributePointers(java.lang.Object,net.kyori.adventure.pointer.Pointers$Builder):387 -> a
    399:402:net.kyori.adventure.util.TriState lambda$contributePointers$0(org.bukkit.command.CommandSender,java.lang.String) -> a
net.kyori.adventure.platform.bukkit.BukkitFacet$ConsoleCommandSenderPointers -> net.kyori.adventure.platform.bukkit.d$e:
    410:411:void <init>() -> <init>
    408:408:void contributePointers(java.lang.Object,net.kyori.adventure.pointer.Pointers$Builder) -> a
    1415:1416:void contributePointers$2e7e211f(net.kyori.adventure.pointer.Pointers$Builder):415:416 -> a
    1415:1416:void contributePointers(java.lang.Object,net.kyori.adventure.pointer.Pointers$Builder):408 -> a
net.kyori.adventure.platform.bukkit.BukkitFacet$Message -> net.kyori.adventure.platform.bukkit.d$f:
    69:70:void <init>(java.lang.Class) -> <init>
    74:74:java.lang.String createMessage$3bdbf07a(net.kyori.adventure.text.Component) -> a
    67:67:java.lang.Object createMessage(java.lang.Object,net.kyori.adventure.text.Component) -> createMessage
net.kyori.adventure.platform.bukkit.BukkitFacet$PlayerPointers -> net.kyori.adventure.platform.bukkit.d$g:
    422:423:void <init>() -> <init>
    419:419:void contributePointers(java.lang.Object,net.kyori.adventure.pointer.Pointers$Builder) -> a
    1427:1431:void contributePointers(org.bukkit.entity.Player,net.kyori.adventure.pointer.Pointers$Builder):427:431 -> a
    1427:1431:void contributePointers(java.lang.Object,net.kyori.adventure.pointer.Pointers$Builder):419 -> a
    430:430:net.kyori.adventure.key.Key lambda$contributePointers$1(org.bukkit.entity.Player) -> a
    428:428:net.kyori.adventure.text.Component lambda$contributePointers$0(org.bukkit.entity.Player) -> b
net.kyori.adventure.platform.bukkit.BukkitFacet$Position -> net.kyori.adventure.platform.bukkit.d$h:
    91:92:void <init>() -> <init>
net.kyori.adventure.platform.bukkit.BukkitFacet$Sound -> net.kyori.adventure.platform.bukkit.d$i:
    105:105:void <init>() -> <init>
    106:108:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.BukkitFacet$SoundWithCategory -> net.kyori.adventure.platform.bukkit.d$j:
    boolean SUPPORTED -> a
    146:146:void <init>() -> <init>
    151:151:boolean isSupported() -> isSupported
    147:147:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.BukkitFacet$TabList -> net.kyori.adventure.platform.bukkit.d$k:
    boolean SUPPORTED -> a
    367:368:void <init>() -> <init>
    372:372:boolean isSupported() -> isSupported
    364:364:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.BukkitFacet$ViaHook -> net.kyori.adventure.platform.bukkit.d$l:
    355:355:void <init>() -> <init>
    355:355:java.lang.Object apply(java.lang.Object) -> apply
    1358:1358:com.viaversion.viaversion.api.connection.UserConnection apply(org.bukkit.entity.Player):358:358 -> apply
    1358:1358:java.lang.Object apply(java.lang.Object):355 -> apply
net.kyori.adventure.platform.bukkit.CraftBukkitAccess -> net.kyori.adventure.platform.bukkit.e:
    java.lang.Class CLASS_CHAT_COMPONENT -> a
    java.lang.Class CLASS_REGISTRY -> b
    java.lang.Class CLASS_SERVER_LEVEL -> c
    java.lang.Class CLASS_LEVEL -> d
    java.lang.Class CLASS_REGISTRY_ACCESS -> e
    java.lang.Class CLASS_RESOURCE_KEY -> f
    java.lang.Class CLASS_RESOURCE_LOCATION -> g
    java.lang.Class CLASS_NMS_ENTITY -> h
    java.lang.Class CLASS_BUILT_IN_REGISTRIES -> i
    java.lang.Class CLASS_HOLDER -> j
    java.lang.Class CLASS_WRITABLE_REGISTRY -> k
    43:80:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.CraftBukkitAccess$Chat1_19_3 -> net.kyori.adventure.platform.bukkit.e$a:
    java.lang.invoke.MethodHandle NEW_RESOURCE_LOCATION -> a
    java.lang.invoke.MethodHandle RESOURCE_KEY_CREATE -> b
    java.lang.invoke.MethodHandle SERVER_LEVEL_GET_REGISTRY_ACCESS -> c
    java.lang.invoke.MethodHandle LEVEL_GET_REGISTRY_ACCESS -> d
    java.lang.invoke.MethodHandle ACTUAL_GET_REGISTRY_ACCESS -> e
    java.lang.invoke.MethodHandle REGISTRY_ACCESS_GET_REGISTRY_OPTIONAL -> f
    java.lang.invoke.MethodHandle REGISTRY_GET_OPTIONAL -> g
    java.lang.invoke.MethodHandle DISGUISED_CHAT_PACKET_CONSTRUCTOR -> h
    java.lang.invoke.MethodHandle CHAT_TYPE_BOUND_NETWORK_CONSTRUCTOR -> i
    java.lang.Object CHAT_TYPE_RESOURCE_KEY -> j
    145:145:boolean isSupported() -> a
    87:139:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.CraftBukkitAccess$EntitySound -> net.kyori.adventure.platform.bukkit.e$b:
    java.lang.Class CLASS_CLIENTBOUND_ENTITY_SOUND -> a
    java.lang.Class CLASS_SOUND_SOURCE -> b
    java.lang.Class CLASS_SOUND_EVENT -> c
    java.lang.invoke.MethodHandle SOUND_SOURCE_GET_NAME -> d
    193:193:boolean isSupported() -> a
    150:187:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.CraftBukkitAccess$EntitySound_1_19_3 -> net.kyori.adventure.platform.bukkit.e$c:
    java.lang.invoke.MethodHandle NEW_RESOURCE_LOCATION -> a
    java.lang.invoke.MethodHandle REGISTRY_GET_OPTIONAL -> b
    java.lang.invoke.MethodHandle REGISTRY_WRAP_AS_HOLDER -> c
    java.lang.invoke.MethodHandle SOUND_EVENT_CREATE_VARIABLE_RANGE -> d
    java.lang.invoke.MethodHandle NEW_CLIENTBOUND_ENTITY_SOUND -> e
    java.lang.Object SOUND_EVENT_REGISTRY -> f
    238:238:boolean isSupported() -> a
    199:232:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.CraftBukkitFacet -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet:
    java.lang.Class CLASS_NMS_ENTITY -> c
    java.lang.Class CLASS_CRAFT_ENTITY -> d
    java.lang.invoke.MethodHandle CRAFT_ENTITY_GET_HANDLE -> e
    java.lang.Class CLASS_CRAFT_PLAYER -> a
    java.lang.invoke.MethodHandle CRAFT_PLAYER_GET_HANDLE -> b
    java.lang.invoke.MethodHandle ENTITY_PLAYER_GET_CONNECTION -> f
    java.lang.invoke.MethodHandle PLAYER_CONNECTION_SEND_PACKET -> g
    boolean SUPPORTED -> h
    java.lang.Class CLASS_CHAT_COMPONENT -> i
    java.lang.Class CLASS_MESSAGE_TYPE -> j
    java.lang.Object MESSAGE_TYPE_CHAT -> k
    java.lang.invoke.MethodHandle LEGACY_CHAT_PACKET_CONSTRUCTOR -> l
    java.lang.invoke.MethodHandle CHAT_PACKET_CONSTRUCTOR -> m
    java.lang.Class CLASS_TITLE_PACKET -> n
    java.lang.Class CLASS_TITLE_ACTION -> o
    java.lang.invoke.MethodHandle CONSTRUCTOR_TITLE_MESSAGE -> p
    java.lang.invoke.MethodHandle CONSTRUCTOR_TITLE_TIMES -> q
    java.lang.Object TITLE_ACTION_ACTIONBAR -> r
    115:116:void <init>(java.lang.Class) -> <init>
    120:120:boolean isSupported() -> isSupported
    113:113:java.lang.invoke.MethodHandle access$000() -> b
    113:113:java.lang.invoke.MethodHandle access$100() -> c
    113:113:java.lang.invoke.MethodHandle access$200() -> d
    113:113:java.lang.Class access$500() -> e
    113:113:java.lang.Object access$600() -> f
    113:113:java.lang.invoke.MethodHandle access$700() -> g
    113:113:java.lang.invoke.MethodHandle access$800() -> h
    113:113:java.lang.Class access$900() -> i
    113:113:java.lang.invoke.MethodHandle access$1000() -> j
    113:113:java.lang.Class access$1100() -> k
    113:113:java.lang.invoke.MethodHandle access$1200() -> l
    123:364:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$AbstractBook -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$AbstractBook:
    org.bukkit.Material BOOK_TYPE -> c
    org.bukkit.inventory.ItemStack BOOK_STACK -> d
    java.lang.Class CLASS_NBT_TAG_COMPOUND -> e
    java.lang.Class CLASS_NBT_IO -> f
    java.lang.invoke.MethodHandle NBT_IO_DESERIALIZE -> g
    java.lang.Class CLASS_CRAFT_ITEMSTACK -> h
    java.lang.Class CLASS_MC_ITEMSTACK -> i
    java.lang.invoke.MethodHandle MC_ITEMSTACK_SET_TAG -> j
    java.lang.invoke.MethodHandle CRAFT_ITEMSTACK_NMS_COPY -> k
    java.lang.invoke.MethodHandle CRAFT_ITEMSTACK_CRAFT_MIRROR -> l
    776:776:void <init>() -> <init>
    void sendOpenPacket(org.bukkit.entity.Player) -> a
    785:785:boolean isSupported() -> isSupported
    793:793:java.lang.String createMessage(org.bukkit.entity.Player,net.kyori.adventure.text.Component) -> createMessage
    799:799:org.bukkit.inventory.ItemStack createBook(java.lang.String,java.lang.String,java.lang.Iterable) -> createBook
    1823:1832:net.kyori.adventure.nbt.CompoundBinaryTag tagFor(java.lang.String,java.lang.String,java.lang.Iterable):823:832 -> createBook
    1823:1832:org.bukkit.inventory.ItemStack createBook(java.lang.String,java.lang.String,java.lang.Iterable):799 -> createBook
    805:815:void openBook(org.bukkit.entity.Player,org.bukkit.inventory.ItemStack) -> openBook
    878:884:java.lang.Object createTag(net.kyori.adventure.nbt.CompoundBinaryTag) -> a
    900:911:org.bukkit.inventory.ItemStack applyTag(org.bukkit.inventory.ItemStack,net.kyori.adventure.nbt.CompoundBinaryTag) -> a
    776:776:java.lang.Object createMessage(org.bukkit.command.CommandSender,net.kyori.adventure.text.Component) -> createMessage
    776:776:java.lang.Object createMessage(java.lang.Object,net.kyori.adventure.text.Component) -> createMessage
    776:776:void openBook(java.lang.Object,java.lang.Object) -> openBook
    776:776:java.lang.Object createBook(java.lang.String,java.lang.String,java.lang.Iterable) -> createBook
    778:897:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$AbstractBook$TrustedByteArrayOutputStream -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$AbstractBook$a:
    871:871:void <init>() -> <init>
    873:873:java.io.InputStream toInputStream() -> a
    871:871:void <init>(byte) -> <init>
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$ActionBar -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$a:
    387:387:void <init>() -> <init>
    390:390:boolean isSupported() -> isSupported
    397:400:java.lang.Object createMessage(org.bukkit.entity.Player,net.kyori.adventure.text.Component) -> a
    387:387:java.lang.Object createMessage(org.bukkit.command.CommandSender,net.kyori.adventure.text.Component) -> createMessage
    387:387:java.lang.Object createMessage(java.lang.Object,net.kyori.adventure.text.Component) -> createMessage
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$ActionBarLegacy -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$b:
    405:405:void <init>() -> <init>
    408:408:boolean isSupported() -> isSupported
    415:420:java.lang.Object createMessage(org.bukkit.entity.Player,net.kyori.adventure.text.Component) -> a
    405:405:java.lang.Object createMessage(org.bukkit.command.CommandSender,net.kyori.adventure.text.Component) -> createMessage
    405:405:java.lang.Object createMessage(java.lang.Object,net.kyori.adventure.text.Component) -> createMessage
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$ActionBar_1_17 -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$c:
    java.lang.Class CLASS_SET_ACTION_BAR_TEXT_PACKET -> c
    java.lang.invoke.MethodHandle CONSTRUCTOR_ACTION_BAR -> d
    366:366:void <init>() -> <init>
    372:372:boolean isSupported() -> isSupported
    379:382:java.lang.Object createMessage(org.bukkit.entity.Player,net.kyori.adventure.text.Component) -> a
    366:366:java.lang.Object createMessage(org.bukkit.command.CommandSender,net.kyori.adventure.text.Component) -> createMessage
    366:366:java.lang.Object createMessage(java.lang.Object,net.kyori.adventure.text.Component) -> createMessage
    367:368:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$Book1_13 -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$d:
    java.lang.Class CLASS_BYTE_BUF -> c
    java.lang.Class CLASS_PACKET_CUSTOM_PAYLOAD -> d
    java.lang.Class CLASS_FRIENDLY_BYTE_BUF -> e
    java.lang.Class CLASS_RESOURCE_LOCATION -> f
    java.lang.Object PACKET_TYPE_BOOK_OPEN -> g
    java.lang.invoke.MethodHandle NEW_PACKET_CUSTOM_PAYLOAD -> h
    java.lang.invoke.MethodHandle NEW_FRIENDLY_BYTE_BUF -> i
    941:941:void <init>() -> <init>
    965:965:boolean isSupported() -> isSupported
    970:974:void sendOpenPacket(org.bukkit.entity.Player) -> a
    942:961:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$BookPost1_13 -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$e:
    java.lang.Class CLASS_ENUM_HAND -> c
    java.lang.Object HAND_MAIN -> d
    java.lang.Class PACKET_OPEN_BOOK -> e
    java.lang.invoke.MethodHandle NEW_PACKET_OPEN_BOOK -> f
    916:916:void <init>() -> <init>
    932:932:boolean isSupported() -> isSupported
    937:938:void sendOpenPacket(org.bukkit.entity.Player) -> a
    917:928:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$BookPre1_13 -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$f:
    java.lang.Class CLASS_BYTE_BUF -> c
    java.lang.Class CLASS_PACKET_CUSTOM_PAYLOAD -> d
    java.lang.Class CLASS_PACKET_DATA_SERIALIZER -> e
    java.lang.invoke.MethodHandle NEW_PACKET_CUSTOM_PAYLOAD -> f
    java.lang.invoke.MethodHandle NEW_PACKET_BYTE_BUF -> g
    978:978:void <init>() -> <init>
    989:989:boolean isSupported() -> isSupported
    994:998:void sendOpenPacket(org.bukkit.entity.Player) -> a
    980:985:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$BossBar -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$BossBar:
    java.lang.Class CLASS_CRAFT_BOSS_BAR -> b
    java.lang.Class CLASS_BOSS_BAR_ACTION -> c
    java.lang.Object BOSS_BAR_ACTION_TITLE -> d
    java.lang.invoke.MethodHandle CRAFT_BOSS_BAR_HANDLE -> e
    java.lang.invoke.MethodHandle NMS_BOSS_BATTLE_SET_NAME -> f
    java.lang.invoke.MethodHandle NMS_BOSS_BATTLE_SEND_UPDATE -> g
    1104:1105:void <init>(java.util.Collection) -> <init>
    1110:1119:void bossBarNameChanged(net.kyori.adventure.bossbar.BossBar,net.kyori.adventure.text.Component,net.kyori.adventure.text.Component) -> a
    1001:1001:java.lang.Class access$1800() -> b
    1001:1001:java.lang.invoke.MethodHandle access$1900() -> c
    1001:1001:java.lang.invoke.MethodHandle access$2000() -> d
    1001:1001:java.lang.invoke.MethodHandle access$2100() -> e
    1001:1001:void <init>(java.util.Collection,byte) -> <init>
    1002:1084:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$BossBar$Builder -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$BossBar$Builder:
    1088:1089:void <init>() -> <init>
    1093:1094:boolean isSupported() -> isSupported
    1099:1099:net.kyori.adventure.platform.bukkit.CraftBukkitFacet$BossBar createBossBar(java.util.Collection) -> createBossBar
    1086:1086:net.kyori.adventure.platform.facet.Facet$BossBar createBossBar(java.util.Collection) -> createBossBar
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$BossBarWither -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$BossBarWither:
    boolean initialized -> d
    1347:1353:void <init>(java.util.Collection) -> <init>
    1363:1367:org.bukkit.Location createPosition(org.bukkit.entity.Player) -> a
    1372:1372:boolean isEmpty() -> a
    1334:1334:void <init>(java.util.Collection,byte) -> <init>
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$BossBarWither$Builder -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$BossBarWither$Builder:
    1337:1338:void <init>() -> <init>
    1343:1343:net.kyori.adventure.platform.bukkit.CraftBukkitFacet$BossBarWither createBossBar(java.util.Collection) -> createBossBar
    1335:1335:boolean isSupported() -> isSupported
    1335:1335:net.kyori.adventure.platform.facet.Facet$BossBar createBossBar(java.util.Collection) -> createBossBar
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$Chat -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$g:
    333:333:void <init>() -> <init>
    336:336:boolean isSupported() -> isSupported
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$Chat1_19_3 -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$h:
    300:300:void <init>() -> <init>
    303:303:boolean isSupported() -> isSupported
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$EntitySound -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$i:
    java.lang.Class CLASS_CLIENTBOUND_CUSTOM_SOUND -> c
    java.lang.Class CLASS_VEC3 -> d
    java.lang.invoke.MethodHandle NEW_CLIENTBOUND_ENTITY_SOUND -> e
    java.lang.invoke.MethodHandle NEW_RESOURCE_LOCATION -> f
    java.lang.invoke.MethodHandle REGISTRY_GET_OPTIONAL -> g
    java.lang.Object REGISTRY_SOUND_EVENT -> h
    499:499:void <init>() -> <init>
    579:579:boolean isSupported() -> isSupported
    500:575:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$EntitySound_1_19_3 -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$j:
    466:466:void <init>() -> <init>
    470:470:boolean isSupported() -> isSupported
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$FakeEntity -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$k:
    java.lang.Class CLASS_CRAFT_WORLD -> d
    java.lang.Class CLASS_NMS_LIVING_ENTITY -> e
    java.lang.Class CLASS_DATA_WATCHER -> f
    java.lang.invoke.MethodHandle CRAFT_WORLD_CREATE_ENTITY -> g
    java.lang.invoke.MethodHandle NMS_ENTITY_GET_BUKKIT_ENTITY -> h
    java.lang.invoke.MethodHandle NMS_ENTITY_GET_DATA_WATCHER -> i
    java.lang.invoke.MethodHandle NMS_ENTITY_SET_LOCATION -> j
    java.lang.invoke.MethodHandle NMS_ENTITY_SET_INVISIBLE -> k
    java.lang.invoke.MethodHandle DATA_WATCHER_WATCH -> l
    java.lang.Class CLASS_SPAWN_LIVING_PACKET -> m
    java.lang.invoke.MethodHandle NEW_SPAWN_LIVING_PACKET -> n
    java.lang.Class CLASS_ENTITY_DESTROY_PACKET -> o
    java.lang.invoke.MethodHandle NEW_ENTITY_DESTROY_PACKET -> p
    java.lang.Class CLASS_ENTITY_METADATA_PACKET -> q
    java.lang.invoke.MethodHandle NEW_ENTITY_METADATA_PACKET -> r
    java.lang.Class CLASS_ENTITY_TELEPORT_PACKET -> s
    java.lang.invoke.MethodHandle NEW_ENTITY_TELEPORT_PACKET -> t
    java.lang.Class CLASS_ENTITY_WITHER -> u
    java.lang.Class CLASS_WORLD -> v
    java.lang.Class CLASS_WORLD_SERVER -> w
    java.lang.invoke.MethodHandle CRAFT_WORLD_GET_HANDLE -> x
    java.lang.invoke.MethodHandle NEW_ENTITY_WITHER -> y
    boolean SUPPORTED -> z
    org.bukkit.entity.Entity entity -> A
    java.lang.Object entityHandle -> B
    java.util.Set viewers -> c
    1157:1158:void <init>(java.lang.Class,org.bukkit.Location) -> <init>
    1161:1189:void <init>(org.bukkit.plugin.Plugin,java.lang.Class,org.bukkit.Location) -> <init>
    1193:1193:boolean isSupported() -> isSupported
    1198:1202:void onPlayerMove(org.bukkit.event.player.PlayerMoveEvent) -> a
    1207:1214:java.lang.Object createSpawnPacket() -> a
    1219:1222:java.lang.Object createDespawnPacket() -> m
    1228:1232:java.lang.Object createMetadataPacket() -> n
    1238:1241:java.lang.Object createLocationPacket() -> o
    1246:1249:void broadcastPacket(java.lang.Object) -> b
    1254:1254:org.bukkit.Location createPosition(org.bukkit.entity.Player) -> a
    1265:1282:void teleport(org.bukkit.entity.Player,org.bukkit.Location) -> a
    1287:1296:void metadata(int,java.lang.Object) -> a
    1300:1307:void invisible(boolean) -> a
    1321:1323:void name(net.kyori.adventure.text.Component) -> a
    1327:1331:void close() -> close
    1122:1122:void teleport(java.lang.Object,java.lang.Object) -> a
    1123:1150:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$PacketFacet -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$l:
    188:189:void <init>() -> <init>
    192:199:void sendPacket(org.bukkit.entity.Player,java.lang.Object) -> sendPacket
    202:203:void sendMessage(org.bukkit.command.CommandSender,java.lang.Object) -> sendMessage
    209:212:java.lang.Object createMessage(org.bukkit.command.CommandSender,net.kyori.adventure.text.Component) -> createMessage
    185:185:java.lang.Object createMessage(java.lang.Object,net.kyori.adventure.text.Component) -> createMessage
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$TabList -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$m:
    java.lang.Class CLIENTBOUND_TAB_LIST_PACKET -> e
    java.lang.invoke.MethodHandle CLIENTBOUND_TAB_LIST_PACKET_CTOR_PRE_1_17 -> f
    java.lang.invoke.MethodHandle CLIENTBOUND_TAB_LIST_PACKET_CTOR -> g
    java.lang.invoke.MethodHandle CLIENTBOUND_TAB_LIST_PACKET_SET_HEADER -> c
    java.lang.invoke.MethodHandle CLIENTBOUND_TAB_LIST_PACKET_SET_FOOTER -> d
    1376:1376:void <init>() -> <init>
    1398:1404:java.lang.invoke.MethodHandle first(java.lang.invoke.MethodHandle[]) -> a
    1409:1409:boolean isSupported() -> isSupported
    1377:1394:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$Title -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$n:
    699:699:void <init>() -> <init>
    702:702:boolean isSupported() -> isSupported
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$Title_1_17 -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$o:
    java.lang.Class PACKET_SET_TITLE -> c
    java.lang.Class PACKET_SET_SUBTITLE -> d
    java.lang.Class PACKET_SET_TITLE_ANIMATION -> e
    java.lang.Class PACKET_CLEAR_TITLES -> f
    java.lang.invoke.MethodHandle CONSTRUCTOR_SET_TITLE -> g
    java.lang.invoke.MethodHandle CONSTRUCTOR_SET_SUBTITLE -> h
    java.lang.invoke.MethodHandle CONSTRUCTOR_SET_TITLE_ANIMATION -> i
    java.lang.invoke.MethodHandle CONSTRUCTOR_CLEAR_TITLES -> j
    611:611:void <init>() -> <init>
    625:625:boolean isSupported() -> isSupported
    613:621:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.CraftBukkitFacet$Translator -> net.kyori.adventure.platform.bukkit.CraftBukkitFacet$p:
    java.lang.Class CLASS_LANGUAGE -> a
    java.lang.invoke.MethodHandle LANGUAGE_GET_INSTANCE -> b
    java.lang.invoke.MethodHandle LANGUAGE_GET_OR_DEFAULT -> c
    1485:1488:java.lang.invoke.MethodHandle unreflectUnchecked(java.lang.reflect.Method) -> a
    1493:1494:void <init>() -> <init>
    1498:1498:boolean isSupported() -> isSupported
    1504:1507:java.lang.String valueOrDefault$54993ecd(java.lang.String) -> a
    1452:1452:java.lang.String valueOrDefault(java.lang.Object,java.lang.String) -> a
    1475:1476:boolean lambda$static$1(java.lang.reflect.Method) -> b
    1467:1469:boolean lambda$static$0(java.lang.reflect.Method) -> c
    1453:1481:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.MinecraftComponentSerializer -> net.kyori.adventure.platform.bukkit.MinecraftComponentSerializer:
    net.kyori.adventure.platform.bukkit.MinecraftComponentSerializer INSTANCE -> a
    java.lang.Class CLASS_JSON_DESERIALIZER -> b
    java.lang.Class CLASS_CHAT_COMPONENT -> c
    java.util.concurrent.atomic.AtomicReference INITIALIZATION_ERROR -> d
    java.lang.Object MC_TEXT_GSON -> e
    java.lang.invoke.MethodHandle TEXT_SERIALIZER_DESERIALIZE -> f
    java.lang.invoke.MethodHandle TEXT_SERIALIZER_SERIALIZE -> g
    boolean SUPPORTED -> h
    62:62:void <init>() -> <init>
    72:72:boolean isSupported() -> isSupported
    82:82:net.kyori.adventure.platform.bukkit.MinecraftComponentSerializer get() -> get
    165:174:net.kyori.adventure.text.Component deserialize(java.lang.Object) -> deserialize
    180:193:java.lang.Object serialize(net.kyori.adventure.text.Component) -> serialize
    140:140:boolean lambda$static$8(java.lang.reflect.Method) -> a
    139:139:boolean lambda$static$7(java.lang.reflect.Method) -> b
    138:138:boolean lambda$static$6(java.lang.reflect.Method) -> c
    134:134:boolean lambda$static$5(java.lang.reflect.Method) -> d
    133:133:boolean lambda$static$4(java.lang.reflect.Method) -> e
    132:132:boolean lambda$static$3(java.lang.reflect.Method) -> f
    123:123:boolean lambda$static$2(java.lang.reflect.Field) -> a
    122:122:boolean lambda$static$1(java.lang.reflect.Field) -> b
    107:115:boolean lambda$static$0(java.lang.Class) -> a
    63:161:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.MinecraftReflection -> net.kyori.adventure.platform.bukkit.f:
    java.lang.invoke.MethodHandles$Lookup LOOKUP -> a
    java.lang.String VERSION -> b
    75:84:java.lang.Class findClass(java.lang.String[]) -> a
    95:95:java.lang.Class needClass(java.lang.String[]) -> b
    105:105:boolean hasClass(java.lang.String[]) -> c
    118:118:java.lang.invoke.MethodHandle findMethod(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class[]) -> a
    131:143:java.lang.invoke.MethodHandle findMethod(java.lang.Class,java.lang.String[],java.lang.Class,java.lang.Class[]) -> a
    157:157:java.lang.invoke.MethodHandle searchMethod(java.lang.Class,java.lang.Integer,java.lang.String,java.lang.Class,java.lang.Class[]) -> a
    171:200:java.lang.invoke.MethodHandle searchMethod(java.lang.Class,java.lang.Integer,java.lang.String[],java.lang.Class,java.lang.Class[]) -> a
    213:213:java.lang.invoke.MethodHandle findStaticMethod(java.lang.Class,java.lang.String,java.lang.Class,java.lang.Class[]) -> b
    227:239:java.lang.invoke.MethodHandle findStaticMethod(java.lang.Class,java.lang.String[],java.lang.Class,java.lang.Class[]) -> b
    251:261:boolean hasField(java.lang.Class,java.lang.Class,java.lang.String[]) -> a
    273:273:boolean hasMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> a
    285:298:boolean hasMethod(java.lang.Class,java.lang.String[],java.lang.Class[]) -> a
    309:317:java.lang.invoke.MethodHandle findConstructor(java.lang.Class,java.lang.Class[]) -> a
    330:332:java.lang.reflect.Field needField(java.lang.Class,java.lang.String) -> a
    343:343:java.lang.reflect.Field findField(java.lang.Class,java.lang.String[]) -> a
    355:373:java.lang.reflect.Field findField(java.lang.Class,java.lang.Class,java.lang.String[]) -> b
    383:388:java.lang.invoke.MethodHandle findSetterOf(java.lang.reflect.Field) -> a
    416:416:java.lang.Object findEnum(java.lang.Class,java.lang.String) -> b
    429:442:java.lang.Object findEnum(java.lang.Class,java.lang.String,int) -> a
    451:451:boolean isCraftBukkit() -> b
    471:476:java.lang.Class findCraftClass(java.lang.String) -> a
    1461:1461:java.lang.String findCraftClassName(java.lang.String):461:461 -> a
    1461:1461:java.lang.Class findCraftClass(java.lang.String):471 -> a
    488:492:java.lang.Class findCraftClass(java.lang.String,java.lang.Class) -> a
    513:513:java.lang.String findNmsClassName(java.lang.String) -> b
    523:528:java.lang.Class findNmsClass(java.lang.String) -> c
    549:549:java.lang.String findMcClassName(java.lang.String) -> d
    559:568:java.lang.Class findMcClass(java.lang.String[]) -> d
    588:588:java.lang.invoke.MethodHandles$Lookup lookup() -> a
    47:66:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.PaperFacet -> net.kyori.adventure.platform.bukkit.g:
    boolean SUPPORTED -> b
    java.lang.Class NATIVE_COMPONENT_CLASS -> a
    java.lang.Class NATIVE_GSON_COMPONENT_SERIALIZER_CLASS -> c
    java.lang.Class NATIVE_GSON_COMPONENT_SERIALIZER_IMPL_CLASS -> d
    java.lang.invoke.MethodHandle NATIVE_GSON_COMPONENT_SERIALIZER_GSON_GETTER -> e
    java.lang.invoke.MethodHandle NATIVE_GSON_COMPONENT_SERIALIZER_DESERIALIZE_METHOD -> f
    56:60:java.lang.invoke.MethodHandle findNativeDeserializeMethod() -> c
    70:70:boolean isSupported() -> isSupported
    46:46:java.lang.invoke.MethodHandle access$000() -> a
    46:46:java.lang.invoke.MethodHandle access$100() -> b
    47:52:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.PaperFacet$TabList -> net.kyori.adventure.platform.bukkit.g$a:
    boolean SUPPORTED -> e
    java.lang.invoke.MethodHandle NATIVE_GSON_COMPONENT_SERIALIZER_DESERIALIZE_METHOD_BOUND -> f
    130:130:void <init>() -> <init>
    135:143:java.lang.invoke.MethodHandle createBoundNativeDeserializeMethodHandle() -> a
    148:148:boolean isSupported() -> isSupported
    162:165:java.lang.Object createMessage$564ebdb7(net.kyori.adventure.text.Component) -> a
    130:130:java.lang.Object createMessage(java.lang.Object,net.kyori.adventure.text.Component) -> createMessage
    130:130:java.lang.Object createMessage(org.bukkit.command.CommandSender,net.kyori.adventure.text.Component) -> createMessage
    131:132:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.SpigotFacet -> net.kyori.adventure.platform.bukkit.h:
    boolean SUPPORTED -> a
    64:64:boolean isSupported() -> isSupported
    56:68:void <clinit>() -> <clinit>
net.kyori.adventure.platform.bukkit.SpigotFacet$Translator -> net.kyori.adventure.platform.bukkit.h$a:
    boolean SUPPORTED -> a
    180:181:void <init>() -> <init>
    185:185:boolean isSupported() -> isSupported
    176:176:java.lang.String valueOrDefault(java.lang.Object,java.lang.String) -> a
    1190:1190:java.lang.String valueOrDefault$54993ecd(java.lang.String):190:190 -> a
    1190:1190:java.lang.String valueOrDefault(java.lang.Object,java.lang.String):176 -> a
    177:177:void <clinit>() -> <clinit>
net.kyori.adventure.platform.facet.Facet -> net.kyori.adventure.platform.a.a:
    67:86:java.util.Collection of(java.util.function.Supplier[]) -> a
    100:115:net.kyori.adventure.platform.facet.Facet of(java.util.Collection,java.lang.Object) -> a
    127:127:boolean isSupported() -> isSupported
    140:140:boolean isApplicable(java.lang.Object) -> isApplicable
net.kyori.adventure.platform.facet.Facet$ActionBar -> net.kyori.adventure.platform.a.a$a:
net.kyori.adventure.platform.facet.Facet$Book -> net.kyori.adventure.platform.a.a$b:
    java.lang.Object createBook(java.lang.String,java.lang.String,java.lang.Iterable) -> createBook
    void openBook(java.lang.Object,java.lang.Object) -> openBook
net.kyori.adventure.platform.facet.Facet$BossBar -> net.kyori.adventure.platform.a.a$c:
    void removeViewer(java.lang.Object) -> a
    boolean isEmpty() -> a
    void close() -> close
net.kyori.adventure.platform.facet.Facet$BossBar$Builder -> net.kyori.adventure.platform.a.a$c$a:
net.kyori.adventure.platform.facet.Facet$BossBarEntity -> net.kyori.adventure.platform.a.a$d:
    687:688:void bossBarNameChanged(net.kyori.adventure.bossbar.BossBar,net.kyori.adventure.text.Component,net.kyori.adventure.text.Component) -> a
    697:698:void removeViewer(java.lang.Object) -> a
net.kyori.adventure.platform.facet.Facet$BossBarPacket -> net.kyori.adventure.platform.a.b:
net.kyori.adventure.platform.facet.Facet$Chat -> net.kyori.adventure.platform.a.a$e:
net.kyori.adventure.platform.facet.Facet$EntitySound -> net.kyori.adventure.platform.a.a$f:
net.kyori.adventure.platform.facet.Facet$FakeEntity -> net.kyori.adventure.platform.a.a$g:
    void teleport(java.lang.Object,java.lang.Object) -> a
    void name(net.kyori.adventure.text.Component) -> a
net.kyori.adventure.platform.facet.Facet$Message -> net.kyori.adventure.platform.a.a$h:
    java.lang.Object createMessage(java.lang.Object,net.kyori.adventure.text.Component) -> createMessage
net.kyori.adventure.platform.facet.Facet$Pointers -> net.kyori.adventure.platform.a.a$i:
    void contributePointers(java.lang.Object,net.kyori.adventure.pointer.Pointers$Builder) -> a
net.kyori.adventure.platform.facet.Facet$Position -> net.kyori.adventure.platform.a.c:
net.kyori.adventure.platform.facet.Facet$Sound -> net.kyori.adventure.platform.a.a$j:
net.kyori.adventure.platform.facet.Facet$TabList -> net.kyori.adventure.platform.a.a$k:
net.kyori.adventure.platform.facet.Facet$Title -> net.kyori.adventure.platform.a.a$l:
net.kyori.adventure.platform.facet.FacetAudience -> net.kyori.adventure.platform.a.d:
    net.kyori.adventure.platform.facet.FacetAudienceProvider provider -> a
    java.util.Set viewers -> b
    java.lang.Object viewer -> c
    net.kyori.adventure.pointer.Pointers pointers -> d
    net.kyori.adventure.platform.facet.Facet$Book book -> e
    net.kyori.adventure.platform.facet.Facet$BossBar$Builder bossBar -> f
    java.util.Map bossBars -> g
    java.util.Collection pointerProviders -> h
    117:135:void <init>(net.kyori.adventure.platform.facet.FacetAudienceProvider,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection) -> <init>
    1144:1148:void addViewer(java.lang.Object):144:148 -> <init>
    1144:1148:void <init>(net.kyori.adventure.platform.facet.FacetAudienceProvider,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection,java.util.Collection):121 -> <init>
    157:166:void removeViewer(java.lang.Object) -> a
    174:185:void refresh() -> c
    291:310:void openBook(net.kyori.adventure.inventory.Book) -> a
    1519:1521:java.lang.Object createMessage(net.kyori.adventure.text.Component,net.kyori.adventure.platform.facet.Facet$Message):519:521 -> a
    1519:1521:void openBook(net.kyori.adventure.inventory.Book):297 -> a
    313:318:java.lang.String toPlain(net.kyori.adventure.text.Component) -> a
    2061:2061:net.kyori.adventure.text.flattener.ComponentFlattener net.kyori.adventure.text.flattener.ComponentFlattener.basic():61:61 -> a
    2061:2061:java.lang.String toPlain(net.kyori.adventure.text.Component):317 -> a
    424:437:void hideBossBar(net.kyori.adventure.bossbar.BossBar) -> a
    476:496:net.kyori.adventure.pointer.Pointers pointers() -> a
    3049:3049:net.kyori.adventure.pointer.Pointers net.kyori.adventure.pointer.Pointers.empty():49:49 -> a
    3049:3049:net.kyori.adventure.pointer.Pointers pointers():480 -> a
    3061:3061:net.kyori.adventure.pointer.Pointers$Builder net.kyori.adventure.pointer.Pointers.builder():61:61 -> a
    3061:3061:net.kyori.adventure.pointer.Pointers pointers():481 -> a
    501:501:void contributePointers(net.kyori.adventure.pointer.Pointers$Builder) -> a
    505:516:void close() -> close
net.kyori.adventure.platform.facet.FacetAudienceProvider -> net.kyori.adventure.platform.a.e:
    java.util.Locale DEFAULT_LOCALE -> a
    net.kyori.adventure.text.renderer.ComponentRenderer componentRenderer -> b
    net.kyori.adventure.audience.Audience console -> d
    java.util.Map viewers -> c
    java.util.Map players -> e
    java.util.Set consoles -> f
    net.kyori.adventure.platform.facet.FacetAudience empty -> g
    boolean closed -> h
    78:100:void <init>(net.kyori.adventure.text.renderer.ComponentRenderer) -> <init>
    109:120:void addViewer(java.lang.Object) -> a
    129:139:void removeViewer(java.lang.Object) -> b
    net.kyori.adventure.platform.facet.FacetAudience createAudience(java.util.Collection) -> a
    166:166:java.lang.Iterable audiences() -> audiences
    176:176:net.kyori.adventure.audience.Audience console() -> d
    186:186:net.kyori.adventure.audience.Audience player(java.util.UUID) -> a
    1190:1193:net.kyori.adventure.platform.facet.FacetAudience empty():190:193 -> a
    1190:1193:net.kyori.adventure.audience.Audience player(java.util.UUID):186 -> a
    204:206:net.kyori.adventure.audience.Audience filter(java.util.function.Predicate) -> filter
    1257:1257:java.lang.Iterable filter(java.lang.Iterable,java.util.function.Predicate,java.util.function.Function):257:257 -> filter
    1257:1257:net.kyori.adventure.audience.Audience filter(java.util.function.Predicate):205 -> filter
    234:238:void close() -> close
    206:206:boolean lambda$filter$1(java.util.function.Predicate,java.util.Map$Entry) -> a
    112:112:net.kyori.adventure.platform.facet.FacetAudience lambda$addViewer$0(java.lang.Object) -> c
    65:65:java.util.Set access$000(net.kyori.adventure.platform.facet.FacetAudienceProvider) -> a
    67:67:void <clinit>() -> <clinit>
net.kyori.adventure.platform.facet.FacetAudienceProvider$1 -> net.kyori.adventure.platform.a.e$1:
    net.kyori.adventure.platform.facet.FacetAudienceProvider this$0 -> a
    83:83:void <init>(net.kyori.adventure.platform.facet.FacetAudienceProvider) -> <init>
    86:86:java.lang.Iterable audiences() -> audiences
    91:94:net.kyori.adventure.pointer.Pointers pointers() -> a
    1049:1049:net.kyori.adventure.pointer.Pointers net.kyori.adventure.pointer.Pointers.empty():49:49 -> a
    1049:1049:net.kyori.adventure.pointer.Pointers pointers():94 -> a
net.kyori.adventure.platform.facet.FacetAudienceProvider$2 -> net.kyori.adventure.platform.a.e$2:
    java.lang.Iterable val$input -> a
    java.util.function.Predicate val$filter -> b
    java.util.function.Function val$transformer -> c
    257:257:void <init>(java.lang.Iterable,java.util.function.Predicate,java.util.function.Function) -> <init>
    264:264:java.util.Iterator iterator() -> iterator
    303:308:void forEach(java.util.function.Consumer) -> forEach
net.kyori.adventure.platform.facet.FacetAudienceProvider$2$1 -> net.kyori.adventure.platform.a.e$2$1:
    java.util.Iterator parent -> a
    java.lang.Object next -> b
    net.kyori.adventure.platform.facet.FacetAudienceProvider$2 this$0 -> c
    264:282:void <init>(net.kyori.adventure.platform.facet.FacetAudienceProvider$2) -> <init>
    269:277:void populate() -> a
    286:286:boolean hasNext() -> hasNext
    291:296:java.lang.Object next() -> next
net.kyori.adventure.platform.facet.FacetBase -> net.kyori.adventure.platform.a.f:
    java.lang.Class viewerClass -> a
    40:42:void <init>(java.lang.Class) -> <init>
    46:46:boolean isSupported() -> isSupported
    51:51:boolean isApplicable(java.lang.Object) -> isApplicable
net.kyori.adventure.platform.facet.FacetComponentFlattener -> net.kyori.adventure.platform.a.g:
    java.util.regex.Pattern LOCALIZATION_PATTERN -> a
    64:110:net.kyori.adventure.text.flattener.ComponentFlattener get(java.lang.Object,java.util.Collection) -> a
    1061:1061:net.kyori.adventure.text.flattener.ComponentFlattener net.kyori.adventure.text.flattener.ComponentFlattener.basic():61:61 -> a
    1061:1061:net.kyori.adventure.text.flattener.ComponentFlattener get(java.lang.Object,java.util.Collection):65 -> a
    67:108:void lambda$get$0(net.kyori.adventure.platform.facet.FacetComponentFlattener$Translator,java.lang.Object,net.kyori.adventure.text.TranslatableComponent,java.util.function.Consumer) -> a
    2052:2052:net.kyori.adventure.translation.GlobalTranslator net.kyori.adventure.translation.GlobalTranslator.translator():52:52 -> a
    2052:2052:void lambda$get$0(net.kyori.adventure.platform.facet.FacetComponentFlattener$Translator,java.lang.Object,net.kyori.adventure.text.TranslatableComponent,java.util.function.Consumer):68 -> a
    2087:2087:net.kyori.adventure.text.Component net.kyori.adventure.translation.GlobalTranslator.render(net.kyori.adventure.text.Component,java.util.Locale):87:87 -> a
    2087:2087:void lambda$get$0(net.kyori.adventure.platform.facet.FacetComponentFlattener$Translator,java.lang.Object,net.kyori.adventure.text.TranslatableComponent,java.util.function.Consumer):70 -> a
    3075:3075:net.kyori.adventure.text.renderer.TranslatableComponentRenderer net.kyori.adventure.translation.GlobalTranslator.renderer():75:75 -> a
    3075:3075:net.kyori.adventure.text.Component net.kyori.adventure.translation.GlobalTranslator.render(net.kyori.adventure.text.Component,java.util.Locale):87 -> a
    3075:3075:void lambda$get$0(net.kyori.adventure.platform.facet.FacetComponentFlattener$Translator,java.lang.Object,net.kyori.adventure.text.TranslatableComponent,java.util.function.Consumer):70 -> a
    47:47:void <clinit>() -> <clinit>
net.kyori.adventure.platform.facet.FacetComponentFlattener$Translator -> net.kyori.adventure.platform.a.g$a:
    java.lang.String valueOrDefault(java.lang.Object,java.lang.String) -> a
net.kyori.adventure.platform.facet.FacetPointers -> net.kyori.adventure.platform.a.h:
    net.kyori.adventure.pointer.Pointer WORLD -> a
    net.kyori.adventure.pointer.Pointer TYPE -> b
    41:43:void <clinit>() -> <clinit>
net.kyori.adventure.platform.facet.FacetPointers$Type -> net.kyori.adventure.platform.a.h$a:
    net.kyori.adventure.platform.facet.FacetPointers$Type PLAYER -> a
    net.kyori.adventure.platform.facet.FacetPointers$Type CONSOLE -> b
    net.kyori.adventure.platform.facet.FacetPointers$Type OTHER -> c
    net.kyori.adventure.platform.facet.FacetPointers$Type[] $VALUES -> d
    50:50:net.kyori.adventure.platform.facet.FacetPointers$Type[] values() -> values
    50:50:net.kyori.adventure.platform.facet.FacetPointers$Type valueOf(java.lang.String) -> valueOf
    50:50:void <init>(java.lang.String,int) -> <init>
    50:53:void <clinit>() -> <clinit>
net.kyori.adventure.platform.facet.Knob -> net.kyori.adventure.platform.a.i:
    java.lang.String NAMESPACE -> d
    boolean DEBUG -> a
    java.util.function.Consumer OUT -> b
    java.util.function.BiConsumer ERR -> c
    69:70:boolean isEnabled(java.lang.String,boolean) -> a
    82:85:void logError(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
    95:98:void logMessage(java.lang.String,java.lang.Object[]) -> a
    52:56:void lambda$static$0(java.lang.String,java.lang.Throwable) -> a
    44:50:void <clinit>() -> <clinit>
net.kyori.adventure.platform.viaversion.ViaFacet -> net.kyori.adventure.platform.b.a:
    boolean SUPPORTED -> a
    java.util.function.Function connectionFunction -> b
    int minProtocol -> c
    79:82:void <init>(java.lang.Class,java.util.function.Function,int) -> <init>
    86:86:boolean isSupported() -> isSupported
    94:96:boolean isApplicable(java.lang.Object) -> isApplicable
    100:100:com.viaversion.viaversion.api.connection.UserConnection findConnection(java.lang.Object) -> b
    104:108:int findProtocol(java.lang.Object) -> a
    114:118:java.lang.String createMessage(java.lang.Object,net.kyori.adventure.text.Component) -> a
    57:57:java.lang.Object createMessage(java.lang.Object,net.kyori.adventure.text.Component) -> createMessage
    64:73:void <clinit>() -> <clinit>
net.kyori.adventure.platform.viaversion.ViaFacet$ActionBar -> net.kyori.adventure.platform.b.a$a:
    198:199:void <init>(java.lang.Class,java.util.function.Function) -> <init>
net.kyori.adventure.platform.viaversion.ViaFacet$ActionBarTitle -> net.kyori.adventure.platform.b.a$b:
    214:215:void <init>(java.lang.Class,java.util.function.Function) -> <init>
net.kyori.adventure.platform.viaversion.ViaFacet$BossBar -> net.kyori.adventure.platform.b.a$c:
    342:346:void bossBarNameChanged(net.kyori.adventure.bossbar.BossBar,net.kyori.adventure.text.Component,net.kyori.adventure.text.Component) -> a
    408:411:void removeViewer(java.lang.Object) -> a
    415:415:boolean isEmpty() -> a
    420:422:void close() -> close
net.kyori.adventure.platform.viaversion.ViaFacet$BossBar$Builder -> net.kyori.adventure.platform.b.a$c$a:
    313:314:void <init>(java.lang.Class,java.util.function.Function) -> <init>
    311:311:java.lang.Object createMessage(java.lang.Object,net.kyori.adventure.text.Component) -> createMessage
net.kyori.adventure.platform.viaversion.ViaFacet$BossBar$Builder1_9_To_1_15 -> net.kyori.adventure.platform.b.a$c$b:
    324:325:void <init>(java.lang.Class,java.util.function.Function) -> <init>
    322:322:java.lang.Object createMessage(java.lang.Object,net.kyori.adventure.text.Component) -> createMessage
net.kyori.adventure.platform.viaversion.ViaFacet$Chat -> net.kyori.adventure.platform.b.a$d:
    183:184:void <init>(java.lang.Class,java.util.function.Function) -> <init>
net.kyori.adventure.platform.viaversion.ViaFacet$ProtocolBased -> net.kyori.adventure.platform.b.a$e:
    java.lang.Class protocolClass -> a
    java.lang.Class packetClass -> b
    int packetId -> c
    129:153:void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.lang.Class,java.util.function.Function) -> <init>
    157:157:boolean isSupported() -> isSupported
    122:122:java.lang.Object createMessage(java.lang.Object,net.kyori.adventure.text.Component) -> createMessage
net.kyori.adventure.platform.viaversion.ViaFacet$TabList -> net.kyori.adventure.platform.b.a$f:
    428:429:void <init>(java.lang.Class,java.util.function.Function) -> <init>
net.kyori.adventure.platform.viaversion.ViaFacet$Title -> net.kyori.adventure.platform.b.a$g:
    228:229:void <init>(java.lang.String,java.lang.String,int,java.lang.Class,java.util.function.Function) -> <init>
    232:233:void <init>(java.lang.Class,java.util.function.Function) -> <init>
net.kyori.adventure.pointer.Pointer -> net.kyori.adventure.k.a:
    49:49:net.kyori.adventure.pointer.Pointer pointer(java.lang.Class,net.kyori.adventure.key.Key) -> a
    java.lang.Class type() -> b
    net.kyori.adventure.key.Key key() -> c
    70:72:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.pointer.PointerImpl -> net.kyori.adventure.k.b:
    java.lang.Class type -> a
    net.kyori.adventure.key.Key key -> b
    35:38:void <init>(java.lang.Class,net.kyori.adventure.key.Key) -> <init>
    42:42:java.lang.Class type() -> b
    47:47:net.kyori.adventure.key.Key key() -> c
    52:52:java.lang.String toString() -> toString
    57:60:boolean equals(java.lang.Object) -> equals
    65:67:int hashCode() -> hashCode
net.kyori.adventure.pointer.Pointered -> net.kyori.adventure.k.c:
    65:65:java.lang.Object getOrDefault(net.kyori.adventure.pointer.Pointer,java.lang.Object) -> a
    91:91:net.kyori.adventure.pointer.Pointers pointers() -> a
    1049:1049:net.kyori.adventure.pointer.Pointers net.kyori.adventure.pointer.Pointers.empty():49:49 -> a
    1049:1049:net.kyori.adventure.pointer.Pointers pointers():91 -> a
net.kyori.adventure.pointer.Pointers -> net.kyori.adventure.k.d:
    java.util.Optional get(net.kyori.adventure.pointer.Pointer) -> a
    88:88:java.lang.Object getOrDefault(net.kyori.adventure.pointer.Pointer,java.lang.Object) -> a
net.kyori.adventure.pointer.Pointers$Builder -> net.kyori.adventure.k.d$a:
    137:137:net.kyori.adventure.pointer.Pointers$Builder withStatic(net.kyori.adventure.pointer.Pointer,java.lang.Object) -> a
    net.kyori.adventure.pointer.Pointers$Builder withDynamic(net.kyori.adventure.pointer.Pointer,java.util.function.Supplier) -> a
    137:137:java.lang.Object lambda$withStatic$0(java.lang.Object) -> a
net.kyori.adventure.pointer.PointersImpl -> net.kyori.adventure.k.e:
    net.kyori.adventure.pointer.Pointers EMPTY -> a
    java.util.Map pointers -> b
    59:61:void <init>(net.kyori.adventure.pointer.PointersImpl$BuilderImpl) -> <init>
    1086:1086:java.util.Map net.kyori.adventure.pointer.PointersImpl$BuilderImpl.access$000(net.kyori.adventure.pointer.PointersImpl$BuilderImpl):86:86 -> <init>
    1086:1086:void <init>(net.kyori.adventure.pointer.PointersImpl$BuilderImpl):60 -> <init>
    66:71:java.util.Optional get(net.kyori.adventure.pointer.Pointer) -> a
    34:34:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    2083:2083:net.kyori.adventure.pointer.Pointers$Builder toBuilder():83:83 -> toBuilder
    2083:2083:net.kyori.adventure.util.Buildable$Builder toBuilder():34 -> toBuilder
    34:34:java.util.Map access$100(net.kyori.adventure.pointer.PointersImpl) -> a
    35:35:void <clinit>() -> <clinit>
net.kyori.adventure.pointer.PointersImpl$1 -> net.kyori.adventure.k.e$1:
    35:35:void <init>() -> <init>
    38:38:java.util.Optional get(net.kyori.adventure.pointer.Pointer) -> a
    53:53:java.lang.String toString() -> toString
    35:35:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    1048:1048:net.kyori.adventure.pointer.Pointers$Builder toBuilder():48:48 -> toBuilder
    1048:1048:net.kyori.adventure.util.Buildable$Builder toBuilder():35 -> toBuilder
net.kyori.adventure.pointer.PointersImpl$BuilderImpl -> net.kyori.adventure.k.e$a:
    java.util.Map pointers -> a
    89:91:void <init>() -> <init>
    93:95:void <init>(net.kyori.adventure.pointer.PointersImpl) -> <init>
    99:100:net.kyori.adventure.pointer.Pointers$Builder withDynamic(net.kyori.adventure.pointer.Pointer,java.util.function.Supplier) -> a
    86:86:java.lang.Object build() -> build
    1105:1105:net.kyori.adventure.pointer.Pointers build():105:105 -> build
    1105:1105:java.lang.Object build():86 -> build
net.kyori.adventure.sound.Sound -> net.kyori.adventure.l.a:
    java.lang.Iterable sources() -> b
net.kyori.adventure.sound.Sound$Emitter -> net.kyori.adventure.l.a$a:
net.kyori.adventure.sound.Sound$Source -> net.kyori.adventure.l.a$b:
    net.kyori.adventure.sound.Sound$Source MASTER -> a
    net.kyori.adventure.sound.Sound$Source MUSIC -> b
    net.kyori.adventure.sound.Sound$Source RECORD -> c
    net.kyori.adventure.sound.Sound$Source WEATHER -> d
    net.kyori.adventure.sound.Sound$Source BLOCK -> e
    net.kyori.adventure.sound.Sound$Source HOSTILE -> f
    net.kyori.adventure.sound.Sound$Source NEUTRAL -> g
    net.kyori.adventure.sound.Sound$Source PLAYER -> h
    net.kyori.adventure.sound.Sound$Source AMBIENT -> i
    net.kyori.adventure.sound.Sound$Source VOICE -> j
    java.lang.String name -> k
    net.kyori.adventure.sound.Sound$Source[] $VALUES -> l
    234:234:net.kyori.adventure.sound.Sound$Source[] values() -> values
    234:234:net.kyori.adventure.sound.Sound$Source valueOf(java.lang.String) -> valueOf
    254:256:void <init>(java.lang.String,int,java.lang.String) -> <init>
    251:251:java.lang.String lambda$static$0(net.kyori.adventure.sound.Sound$Source) -> a
    234:251:void <clinit>() -> <clinit>
net.kyori.adventure.sound.Sound$Source$Provider -> net.kyori.adventure.l.a$b$a:
    java.lang.Object execute(com.mongodb.internal.operation.ReadOperation,com.mongodb.ReadPreference,com.mongodb.ReadConcern,com.mongodb.client.ClientSession) -> a
    java.lang.Object execute(com.mongodb.internal.operation.WriteOperation,com.mongodb.ReadConcern,com.mongodb.client.ClientSession) -> a
net.kyori.adventure.sound.Sound$Type -> net.kyori.adventure.l.a$c:
    void open() -> a
    void write(java.util.List) -> a
    1074:1074:boolean com.mongodb.connection.Stream.supportsAdditionalTimeout():74:74 -> c
    1096:1096:org.bson.ByteBuf com.mongodb.connection.Stream.read(int,int):96:96 -> a
    void close() -> d
net.kyori.adventure.text.AbstractComponent -> net.kyori.adventure.text.a:
    java.util.List children -> a
    net.kyori.adventure.text.format.Style style -> b
    50:53:void <init>(java.util.List,net.kyori.adventure.text.format.Style) -> <init>
    57:57:java.util.List children() -> b
    62:62:net.kyori.adventure.text.format.Style style() -> c
    67:71:boolean equals(java.lang.Object) -> equals
    76:78:int hashCode() -> hashCode
    void toJsonBody$21(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> a
    void <init>() -> <init>
    void fromJsonField$21(com.google.gson.Gson,com.google.gson.stream.JsonReader,int) -> a
net.kyori.adventure.text.AbstractComponentBuilder -> net.kyori.adventure.text.b:
    java.util.List children -> a
    net.kyori.adventure.text.format.Style style -> b
    net.kyori.adventure.text.format.Style$Builder styleBuilder -> c
    52:62:void <init>() -> <init>
    52:72:void <init>(net.kyori.adventure.text.BuildableComponent) -> <init>
    77:80:net.kyori.adventure.text.ComponentBuilder append(net.kyori.adventure.text.Component) -> a
    109:121:net.kyori.adventure.text.ComponentBuilder append(java.lang.Iterable) -> a
    125:128:void prepareChildren() -> d
    206:208:net.kyori.adventure.text.ComponentBuilder style(net.kyori.adventure.text.format.Style) -> a
    235:236:net.kyori.adventure.text.ComponentBuilder colorIfAbsent(net.kyori.adventure.text.format.TextColor) -> a
    242:243:net.kyori.adventure.text.ComponentBuilder decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> a
    256:257:net.kyori.adventure.text.ComponentBuilder clickEvent(net.kyori.adventure.text.event.ClickEvent) -> a
    263:264:net.kyori.adventure.text.ComponentBuilder hoverEvent(net.kyori.adventure.text.event.HoverEventSource) -> a
    277:278:net.kyori.adventure.text.ComponentBuilder mergeStyle(net.kyori.adventure.text.Component,java.util.Set) -> a
    290:298:net.kyori.adventure.text.format.Style$Builder styleBuilder() -> e
    302:302:boolean hasStyle() -> a
    306:311:net.kyori.adventure.text.format.Style buildStyle() -> b
    50:50:net.kyori.adventure.text.format.StyleSetter decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> b
net.kyori.adventure.text.AbstractComponentchildrenTypeToken -> net.kyori.adventure.text.c:
    void <init>() -> <init>
net.kyori.adventure.text.AbstractNBTComponentBuilder -> net.kyori.adventure.text.d:
    java.lang.String nbtPath -> b
    boolean interpret -> c
    net.kyori.adventure.text.Component separator -> d
    33:37:void <init>() -> <init>
    33:44:void <init>(net.kyori.adventure.text.NBTComponent) -> <init>
    49:50:net.kyori.adventure.text.NBTComponentBuilder nbtPath(java.lang.String) -> a
    56:57:net.kyori.adventure.text.NBTComponentBuilder interpret(boolean) -> a
    63:64:net.kyori.adventure.text.NBTComponentBuilder separator(net.kyori.adventure.text.ComponentLike) -> a
net.kyori.adventure.text.BlockNBTComponent -> net.kyori.adventure.text.e:
    net.kyori.adventure.text.BlockNBTComponent$Pos pos() -> d
    126:130:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.text.BlockNBTComponent$Builder -> net.kyori.adventure.text.e$a:
    net.kyori.adventure.text.BlockNBTComponent$Builder pos(net.kyori.adventure.text.BlockNBTComponent$Pos) -> a
net.kyori.adventure.text.BlockNBTComponent$LocalPos -> net.kyori.adventure.text.e$b:
    double left() -> b
    double up() -> c
    double forwards() -> d
net.kyori.adventure.text.BlockNBTComponent$Pos -> net.kyori.adventure.text.e$c:
    226:244:net.kyori.adventure.text.BlockNBTComponent$Pos fromString(java.lang.String) -> a
    1273:1273:net.kyori.adventure.text.BlockNBTComponent$LocalPos net.kyori.adventure.text.BlockNBTComponent$LocalPos.localPos(double,double,double):273:273 -> a
    1273:1273:net.kyori.adventure.text.BlockNBTComponent$Pos fromString(java.lang.String):228 -> a
    1333:1333:net.kyori.adventure.text.BlockNBTComponent$WorldPos net.kyori.adventure.text.BlockNBTComponent$WorldPos.worldPos(net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate,net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate,net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate):333:333 -> a
    1333:1333:net.kyori.adventure.text.BlockNBTComponent$Pos fromString(java.lang.String):237 -> a
    java.lang.String asString() -> e
net.kyori.adventure.text.BlockNBTComponent$WorldPos -> net.kyori.adventure.text.e$d:
    net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate x() -> b
    net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate y() -> c
    net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate z() -> d
net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate -> net.kyori.adventure.text.e$d$a:
    390:390:net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate absolute(int) -> a
    401:401:net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate relative(int) -> b
    413:413:net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate coordinate(int,net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate$Type) -> a
    int value() -> b
    net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate$Type type() -> c
net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate$Type -> net.kyori.adventure.text.e$d$a$a:
    net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate$Type ABSOLUTE -> a
    net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate$Type RELATIVE -> b
    net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate$Type[] $VALUES -> c
    452:452:net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate$Type[] values() -> values
    452:452:net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate$Type valueOf(java.lang.String) -> valueOf
    452:452:void <init>(java.lang.String,int) -> <init>
    452:464:void <clinit>() -> <clinit>
net.kyori.adventure.text.BlockNBTComponentImpl -> net.kyori.adventure.text.f:
    net.kyori.adventure.text.BlockNBTComponent$Pos pos -> g
    43:49:net.kyori.adventure.text.BlockNBTComponent create(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String,boolean,net.kyori.adventure.text.ComponentLike,net.kyori.adventure.text.BlockNBTComponent$Pos) -> a
    54:56:void <init>(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String,boolean,net.kyori.adventure.text.Component,net.kyori.adventure.text.BlockNBTComponent$Pos) -> <init>
    72:72:net.kyori.adventure.text.Component separator() -> e
    82:82:net.kyori.adventure.text.BlockNBTComponent$Pos pos() -> d
    102:106:boolean equals(java.lang.Object) -> equals
    111:113:int hashCode() -> hashCode
    118:118:java.lang.String toString() -> toString
    123:123:net.kyori.adventure.text.BlockNBTComponent$Builder toBuilder() -> y
    39:39:net.kyori.adventure.text.ComponentBuilder toBuilder() -> f
    39:39:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    39:39:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style) -> a
    1097:1097:net.kyori.adventure.text.BlockNBTComponent style(net.kyori.adventure.text.format.Style):97:97 -> a
    1097:1097:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style):39 -> a
    39:39:net.kyori.adventure.text.Component children(java.util.List) -> a
    2092:2092:net.kyori.adventure.text.BlockNBTComponent children(java.util.List):92:92 -> a
    2092:2092:net.kyori.adventure.text.Component children(java.util.List):39 -> a
    void toJson$12(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> b
    3000:3000:void toJsonBody$12(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> b
    3000:3000:void toJson$12(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> b
    void <init>() -> <init>
    void fromJson$12(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    4000:4000:void fromJsonField$12(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    4000:4000:void fromJson$12(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.BlockNBTComponentImpl$BuilderImpl -> net.kyori.adventure.text.f$a:
    net.kyori.adventure.text.BlockNBTComponent$Pos pos -> e
    129:130:void <init>() -> <init>
    133:135:void <init>(net.kyori.adventure.text.BlockNBTComponent) -> <init>
    139:140:net.kyori.adventure.text.BlockNBTComponent$Builder pos(net.kyori.adventure.text.BlockNBTComponent$Pos) -> a
    145:147:net.kyori.adventure.text.BlockNBTComponent build() -> d
    126:126:net.kyori.adventure.text.BuildableComponent build() -> c
    126:126:java.lang.Object build() -> build
net.kyori.adventure.text.BlockNBTComponentImpl$LocalPosImpl -> net.kyori.adventure.text.f$b:
    double left -> a
    double up -> b
    double forwards -> c
    156:160:void <init>(double,double,double) -> <init>
    164:164:double left() -> b
    169:169:double up() -> c
    174:174:double forwards() -> d
    179:182:java.util.stream.Stream examinableProperties() -> examinableProperties
    188:193:boolean equals(java.lang.Object) -> equals
    1164:1164:double left():164:164 -> equals
    1164:1164:boolean equals(java.lang.Object):191 -> equals
    1169:1169:double up():169:169 -> equals
    1169:1169:boolean equals(java.lang.Object):192 -> equals
    1174:1174:double forwards():174:174 -> equals
    1174:1174:boolean equals(java.lang.Object):193 -> equals
    198:201:int hashCode() -> hashCode
    206:206:java.lang.String toString() -> toString
    211:211:java.lang.String asString() -> e
    void toJson$2(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> a
    2000:2000:void toJsonBody$2(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> a
    2000:2000:void toJson$2(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> a
    void <init>() -> <init>
    void fromJson$2(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    3000:3000:void fromJsonField$2(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    3000:3000:void fromJson$2(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.BlockNBTComponentImpl$Tokens -> net.kyori.adventure.text.f$c:
    java.util.regex.Pattern LOCAL_PATTERN -> a
    java.util.regex.Pattern WORLD_PATTERN -> b
    340:346:net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate deserializeCoordinate(java.lang.String,java.lang.String) -> a
    351:351:java.lang.String serializeLocal(double) -> a
    355:355:java.lang.String serializeCoordinate(net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate) -> a
    329:330:void <clinit>() -> <clinit>
net.kyori.adventure.text.BlockNBTComponentImpl$WorldPosImpl -> net.kyori.adventure.text.f$d:
    net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate x -> a
    net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate y -> b
    net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate z -> c
    220:224:void <init>(net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate,net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate,net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate) -> <init>
    228:228:net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate x() -> b
    233:233:net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate y() -> c
    238:238:net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate z() -> d
    243:246:java.util.stream.Stream examinableProperties() -> examinableProperties
    252:257:boolean equals(java.lang.Object) -> equals
    262:265:int hashCode() -> hashCode
    270:270:java.lang.String toString() -> toString
    275:275:java.lang.String asString() -> e
    1228:1228:net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate x():228:228 -> e
    1228:1228:java.lang.String asString():275 -> e
    1233:1233:net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate y():233:233 -> e
    1233:1233:java.lang.String asString():275 -> e
    1238:1238:net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate z():238:238 -> e
    1238:1238:java.lang.String asString():275 -> e
    void toJson$3(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> a
    2000:2000:void toJsonBody$3(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> a
    2000:2000:void toJson$3(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> a
    void <init>() -> <init>
    void fromJson$3(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    3000:3000:void fromJsonField$3(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    3000:3000:void fromJson$3(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.BlockNBTComponentImpl$WorldPosImpl$CoordinateImpl -> net.kyori.adventure.text.f$d$a:
    int value -> a
    net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate$Type type -> b
    282:285:void <init>(int,net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate$Type) -> <init>
    289:289:int value() -> b
    294:294:net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate$Type type() -> c
    299:301:java.util.stream.Stream examinableProperties() -> examinableProperties
    307:311:boolean equals(java.lang.Object) -> equals
    1289:1289:int value():289:289 -> equals
    1289:1289:boolean equals(java.lang.Object):310 -> equals
    1294:1294:net.kyori.adventure.text.BlockNBTComponent$WorldPos$Coordinate$Type type():294:294 -> equals
    1294:1294:boolean equals(java.lang.Object):311 -> equals
    316:318:int hashCode() -> hashCode
    323:323:java.lang.String toString() -> toString
    void toJson$10(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> a
    2000:2000:void toJsonBody$10(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> a
    2000:2000:void toJson$10(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> a
    void <init>() -> <init>
    void fromJson$10(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    3000:3000:void fromJsonField$10(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    3000:3000:void fromJson$10(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.BuildableComponent -> net.kyori.adventure.text.g:
    net.kyori.adventure.text.ComponentBuilder toBuilder() -> f
    36:36:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
net.kyori.adventure.text.Component -> net.kyori.adventure.text.h:
    java.util.function.Predicate IS_NOT_EMPTY -> c
    137:137:net.kyori.adventure.text.TextComponent empty() -> g
    147:147:net.kyori.adventure.text.TextComponent newline() -> h
    279:279:net.kyori.adventure.text.BlockNBTComponent$Builder blockNBT() -> i
    350:350:net.kyori.adventure.text.EntityNBTComponent$Builder entityNBT() -> j
    392:392:net.kyori.adventure.text.KeybindComponent$Builder keybind() -> k
    416:416:net.kyori.adventure.text.KeybindComponent keybind(java.lang.String) -> a
    3441:3441:net.kyori.adventure.text.KeybindComponent keybind(java.lang.String,net.kyori.adventure.text.format.Style):441:441 -> a
    3441:3441:net.kyori.adventure.text.KeybindComponent keybind(java.lang.String):416 -> a
    553:553:net.kyori.adventure.text.ScoreComponent$Builder score() -> l
    578:578:net.kyori.adventure.text.ScoreComponent score(java.lang.String,java.lang.String) -> a
    3594:3594:net.kyori.adventure.text.ScoreComponent score(java.lang.String,java.lang.String,java.lang.String):594:594 -> a
    3594:3594:net.kyori.adventure.text.ScoreComponent score(java.lang.String,java.lang.String):578 -> a
    611:611:net.kyori.adventure.text.SelectorComponent$Builder selector() -> m
    648:648:net.kyori.adventure.text.SelectorComponent selector(java.lang.String,net.kyori.adventure.text.ComponentLike) -> a
    665:665:net.kyori.adventure.text.StorageNBTComponent$Builder storageNBT() -> n
    736:736:net.kyori.adventure.text.TextComponent$Builder text() -> o
    772:773:net.kyori.adventure.text.TextComponent text(java.lang.String) -> b
    4137:4137:net.kyori.adventure.text.TextComponent empty():137:137 -> b
    4137:4137:net.kyori.adventure.text.TextComponent text(java.lang.String):772 -> b
    786:786:net.kyori.adventure.text.TextComponent text(java.lang.String,net.kyori.adventure.text.format.Style) -> a
    799:799:net.kyori.adventure.text.TextComponent text(java.lang.String,net.kyori.adventure.text.format.TextColor) -> a
    1242:1242:net.kyori.adventure.text.TranslatableComponent$Builder translatable() -> p
    1534:1534:net.kyori.adventure.text.TranslatableComponent translatable(java.lang.String,java.lang.String,java.util.List,net.kyori.adventure.text.format.StyleBuilderApplicable[]) -> a
    1757:1757:net.kyori.adventure.text.TranslatableComponent translatable(java.lang.String,java.util.List) -> a
    java.util.List children() -> b
    net.kyori.adventure.text.Component children(java.util.List) -> a
    1951:1951:net.kyori.adventure.text.Component append(net.kyori.adventure.text.Component) -> a
    1962:1967:net.kyori.adventure.text.Component append(net.kyori.adventure.text.ComponentLike) -> a
    5137:5137:net.kyori.adventure.text.TextComponent empty():137:137 -> a
    5137:5137:net.kyori.adventure.text.Component append(net.kyori.adventure.text.ComponentLike):1965 -> a
    6072:6076:java.util.List net.kyori.adventure.util.MonkeyBars.addOne(java.util.List,java.lang.Object):72:76 -> a
    6072:6076:net.kyori.adventure.text.Component append(net.kyori.adventure.text.ComponentLike):1967 -> a
    net.kyori.adventure.text.format.Style style() -> c
    net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style) -> a
    2060:2060:net.kyori.adventure.text.Component style(java.util.function.Consumer) -> a
    2097:2097:net.kyori.adventure.text.Component mergeStyle(net.kyori.adventure.text.Component) -> b
    2123:2123:net.kyori.adventure.text.Component mergeStyle(net.kyori.adventure.text.Component,java.util.Set) -> a
    2157:2157:net.kyori.adventure.text.format.TextColor color() -> q
    2170:2170:net.kyori.adventure.text.Component color(net.kyori.adventure.text.format.TextColor) -> a
    2183:2184:net.kyori.adventure.text.Component colorIfAbsent(net.kyori.adventure.text.format.TextColor) -> b
    2210:2210:net.kyori.adventure.text.Component decorate(net.kyori.adventure.text.format.TextDecoration) -> a
    2239:2239:net.kyori.adventure.text.Component decoration(net.kyori.adventure.text.format.TextDecoration,boolean) -> a
    2256:2256:net.kyori.adventure.text.Component decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> a
    2313:2313:net.kyori.adventure.text.event.ClickEvent clickEvent() -> r
    2337:2337:net.kyori.adventure.text.event.HoverEvent hoverEvent() -> s
    2385:2385:boolean hasStyling() -> t
    2410:2414:net.kyori.adventure.text.Component replaceText(net.kyori.adventure.text.TextReplacementConfig) -> a
    7054:7054:net.kyori.adventure.text.TextReplacementRenderer$State net.kyori.adventure.text.TextReplacementConfigImpl.createState():54:54 -> a
    7054:7054:net.kyori.adventure.text.Component replaceText(net.kyori.adventure.text.TextReplacementConfig):2414 -> a
    2424:2424:net.kyori.adventure.text.Component compact() -> u
    2652:2652:net.kyori.adventure.text.Component asComponent() -> v
    2657:2657:net.kyori.adventure.text.event.HoverEvent asHoverEvent(java.util.function.UnaryOperator) -> asHoverEvent
    2662:2664:java.util.stream.Stream examinableProperties() -> examinableProperties
    109:109:net.kyori.adventure.text.format.StyleSetter decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> b
    109:109:net.kyori.adventure.text.format.StyleSetter decoration(net.kyori.adventure.text.format.TextDecoration,boolean) -> b
    109:109:net.kyori.adventure.text.format.StyleSetter decorate(net.kyori.adventure.text.format.TextDecoration) -> b
    128:128:boolean lambda$static$1(net.kyori.adventure.text.Component) -> c
    7137:7137:net.kyori.adventure.text.TextComponent empty():137:137 -> c
    7137:7137:boolean lambda$static$1(net.kyori.adventure.text.Component):128 -> c
    122:122:boolean lambda$static$0(net.kyori.adventure.text.Component,net.kyori.adventure.text.Component) -> a
    116:128:void <clinit>() -> <clinit>
net.kyori.adventure.text.ComponentBuilder -> net.kyori.adventure.text.i:
    net.kyori.adventure.text.ComponentBuilder append(net.kyori.adventure.text.Component) -> a
    net.kyori.adventure.text.ComponentBuilder append(java.lang.Iterable) -> a
    net.kyori.adventure.text.ComponentBuilder style(net.kyori.adventure.text.format.Style) -> a
    net.kyori.adventure.text.ComponentBuilder colorIfAbsent(net.kyori.adventure.text.format.TextColor) -> a
    270:270:net.kyori.adventure.text.ComponentBuilder decorate(net.kyori.adventure.text.format.TextDecoration) -> a
    298:298:net.kyori.adventure.text.ComponentBuilder decoration(net.kyori.adventure.text.format.TextDecoration,boolean) -> a
    net.kyori.adventure.text.ComponentBuilder decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> a
    net.kyori.adventure.text.ComponentBuilder clickEvent(net.kyori.adventure.text.event.ClickEvent) -> a
    net.kyori.adventure.text.ComponentBuilder hoverEvent(net.kyori.adventure.text.event.HoverEventSource) -> a
    net.kyori.adventure.text.ComponentBuilder mergeStyle(net.kyori.adventure.text.Component,java.util.Set) -> a
    net.kyori.adventure.text.BuildableComponent build() -> c
    450:450:net.kyori.adventure.text.Component asComponent() -> v
    52:52:java.lang.Object build() -> build
    52:52:net.kyori.adventure.text.format.StyleSetter decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> b
    52:52:net.kyori.adventure.text.format.StyleSetter decoration(net.kyori.adventure.text.format.TextDecoration,boolean) -> b
    52:52:net.kyori.adventure.text.format.StyleSetter decorate(net.kyori.adventure.text.format.TextDecoration) -> b
net.kyori.adventure.text.ComponentCompaction -> net.kyori.adventure.text.j:
    int code -> a
    java.lang.String codeName -> b
    java.lang.String message -> c
    org.bson.BsonDocument details -> d
    java.util.Set errorLabels -> e
    44:155:net.kyori.adventure.text.Component compact(net.kyori.adventure.text.Component,net.kyori.adventure.text.format.Style) -> a
    1192:1192:net.kyori.adventure.text.format.Style simplifyStyleForBlank$1a796233(net.kyori.adventure.text.format.Style):192:192 -> a
    1192:1192:net.kyori.adventure.text.Component compact(net.kyori.adventure.text.Component,net.kyori.adventure.text.format.Style):55 -> a
    2192:2192:net.kyori.adventure.text.format.Style simplifyStyleForBlank$1a796233(net.kyori.adventure.text.format.Style):192:192 -> a
    2192:2192:net.kyori.adventure.text.Component compact(net.kyori.adventure.text.Component,net.kyori.adventure.text.format.Style):152 -> a
    165:177:boolean isBlank(net.kyori.adventure.text.Component) -> a
    216:216:net.kyori.adventure.text.TextComponent joinText(net.kyori.adventure.text.TextComponent,net.kyori.adventure.text.TextComponent) -> a
    3066:3072:void com.mongodb.bulk.WriteConcernError.<init>(int,java.lang.String,java.lang.String,org.bson.BsonDocument,java.util.Set):66:72 -> <init>
    3080:3080:int com.mongodb.bulk.WriteConcernError.getCode():80:80 -> a
    3100:3100:java.lang.String com.mongodb.bulk.WriteConcernError.getMessage():100:100 -> b
    3122:3124:void com.mongodb.bulk.WriteConcernError.addLabel(java.lang.String):122:124 -> a
    3136:3136:java.util.Set com.mongodb.bulk.WriteConcernError.getErrorLabels():136:136 -> c
    3141:3166:boolean com.mongodb.bulk.WriteConcernError.equals(java.lang.Object):141:166 -> equals
    3171:3176:int com.mongodb.bulk.WriteConcernError.hashCode():171:176 -> hashCode
    3181:3181:java.lang.String com.mongodb.bulk.WriteConcernError.toString():181:181 -> toString
net.kyori.adventure.text.ComponentLike -> net.kyori.adventure.text.k:
    51:51:java.util.List asComponents(java.util.List) -> b
    65:91:java.util.List asComponents(java.util.List,java.util.function.Predicate) -> a
    102:102:net.kyori.adventure.text.Component unbox(net.kyori.adventure.text.ComponentLike) -> b
    net.kyori.adventure.text.Component asComponent() -> v
net.kyori.adventure.text.EntityNBTComponent -> net.kyori.adventure.text.l:
    java.lang.String selector() -> d
    67:71:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.text.EntityNBTComponent$Builder -> net.kyori.adventure.text.l$a:
    net.kyori.adventure.text.EntityNBTComponent$Builder selector(java.lang.String) -> b
net.kyori.adventure.text.EntityNBTComponentImpl -> net.kyori.adventure.text.m:
    java.lang.String selector -> g
    39:45:net.kyori.adventure.text.EntityNBTComponent create(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String,boolean,net.kyori.adventure.text.ComponentLike,java.lang.String) -> a
    50:52:void <init>(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String,boolean,net.kyori.adventure.text.Component,java.lang.String) -> <init>
    68:68:net.kyori.adventure.text.Component separator() -> e
    78:78:java.lang.String selector() -> d
    99:103:boolean equals(java.lang.Object) -> equals
    1078:1078:java.lang.String selector():78:78 -> equals
    1078:1078:boolean equals(java.lang.Object):103 -> equals
    108:110:int hashCode() -> hashCode
    115:115:java.lang.String toString() -> toString
    120:120:net.kyori.adventure.text.EntityNBTComponent$Builder toBuilder() -> y
    35:35:net.kyori.adventure.text.ComponentBuilder toBuilder() -> f
    35:35:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    35:35:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style) -> a
    1094:1094:net.kyori.adventure.text.EntityNBTComponent style(net.kyori.adventure.text.format.Style):94:94 -> a
    1094:1094:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style):35 -> a
    35:35:net.kyori.adventure.text.Component children(java.util.List) -> a
    2089:2089:net.kyori.adventure.text.EntityNBTComponent children(java.util.List):89:89 -> a
    2089:2089:net.kyori.adventure.text.Component children(java.util.List):35 -> a
    void toJson$18(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> b
    3000:3000:void toJsonBody$18(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> b
    3000:3000:void toJson$18(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> b
    void <init>() -> <init>
    void fromJson$18(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    4000:4000:void fromJsonField$18(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    4000:4000:void fromJson$18(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.EntityNBTComponentImpl$BuilderImpl -> net.kyori.adventure.text.m$a:
    java.lang.String selector -> e
    126:127:void <init>() -> <init>
    130:132:void <init>(net.kyori.adventure.text.EntityNBTComponent) -> <init>
    136:137:net.kyori.adventure.text.EntityNBTComponent$Builder selector(java.lang.String) -> b
    142:144:net.kyori.adventure.text.EntityNBTComponent build() -> d
    123:123:net.kyori.adventure.text.BuildableComponent build() -> c
    123:123:java.lang.Object build() -> build
net.kyori.adventure.text.KeybindComponent -> net.kyori.adventure.text.n:
    java.lang.String keybind() -> d
    77:81:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.text.KeybindComponent$Builder -> net.kyori.adventure.text.n$a:
    net.kyori.adventure.text.KeybindComponent$Builder keybind(java.lang.String) -> a
net.kyori.adventure.text.KeybindComponentImpl -> net.kyori.adventure.text.o:
    java.lang.String keybind -> d
    39:42:net.kyori.adventure.text.KeybindComponent create(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String) -> a
    47:49:void <init>(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String) -> <init>
    53:53:java.lang.String keybind() -> d
    74:78:boolean equals(java.lang.Object) -> equals
    83:85:int hashCode() -> hashCode
    90:90:java.lang.String toString() -> toString
    95:95:net.kyori.adventure.text.KeybindComponent$Builder toBuilder() -> e
    35:35:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style) -> a
    1069:1069:net.kyori.adventure.text.KeybindComponent style(net.kyori.adventure.text.format.Style):69:69 -> a
    1069:1069:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style):35 -> a
    35:35:net.kyori.adventure.text.Component children(java.util.List) -> a
    2064:2064:net.kyori.adventure.text.KeybindComponent children(java.util.List):64:64 -> a
    2064:2064:net.kyori.adventure.text.Component children(java.util.List):35 -> a
    35:35:net.kyori.adventure.text.ComponentBuilder toBuilder() -> f
    35:35:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    void toJson$16(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> b
    3000:3000:void toJsonBody$16(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> b
    3000:3000:void toJson$16(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> b
    void <init>() -> <init>
    void fromJson$16(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    4000:4000:void fromJsonField$16(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    4000:4000:void fromJson$16(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.KeybindComponentImpl$BuilderImpl -> net.kyori.adventure.text.o$a:
    java.lang.String keybind -> b
    101:102:void <init>() -> <init>
    105:107:void <init>(net.kyori.adventure.text.KeybindComponent) -> <init>
    111:112:net.kyori.adventure.text.KeybindComponent$Builder keybind(java.lang.String) -> a
    117:118:net.kyori.adventure.text.KeybindComponent build() -> d
    98:98:net.kyori.adventure.text.BuildableComponent build() -> c
    98:98:java.lang.Object build() -> build
net.kyori.adventure.text.NBTComponent -> net.kyori.adventure.text.p:
    java.lang.String nbtPath() -> w
    boolean interpret() -> x
    net.kyori.adventure.text.Component separator() -> e
    110:116:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.text.NBTComponentBuilder -> net.kyori.adventure.text.q:
    net.kyori.adventure.text.NBTComponentBuilder nbtPath(java.lang.String) -> a
    net.kyori.adventure.text.NBTComponentBuilder interpret(boolean) -> a
    net.kyori.adventure.text.NBTComponentBuilder separator(net.kyori.adventure.text.ComponentLike) -> a
net.kyori.adventure.text.NBTComponentImpl -> net.kyori.adventure.text.r:
    boolean INTERPRET_DEFAULT -> g
    java.lang.String nbtPath -> d
    boolean interpret -> e
    net.kyori.adventure.text.Component separator -> f
    39:43:void <init>(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String,boolean,net.kyori.adventure.text.Component) -> <init>
    47:47:java.lang.String nbtPath() -> w
    52:52:boolean interpret() -> x
    57:61:boolean equals(java.lang.Object) -> equals
    66:70:int hashCode() -> hashCode
    void toJsonBody$22(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> c
    void <init>() -> <init>
    void fromJsonField$22(com.google.gson.Gson,com.google.gson.stream.JsonReader,int) -> b
net.kyori.adventure.text.OptimizedBlockNBTComponent$WorldPos$Coordinate$TypeTypeAdapter -> net.kyori.adventure.text.s:
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> a
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> b
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.OptimizedBlockNBTComponentImpl$LocalPosImplTypeAdapter -> net.kyori.adventure.text.t:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.OptimizedBlockNBTComponentImpl$WorldPosImpl$CoordinateImplTypeAdapter -> net.kyori.adventure.text.u:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.OptimizedBlockNBTComponentImpl$WorldPosImplTypeAdapter -> net.kyori.adventure.text.v:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.OptimizedBlockNBTComponentImplTypeAdapter -> net.kyori.adventure.text.w:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.OptimizedEntityNBTComponentImplTypeAdapter -> net.kyori.adventure.text.x:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.OptimizedKeybindComponentImplTypeAdapter -> net.kyori.adventure.text.y:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.OptimizedScoreComponentImplTypeAdapter -> net.kyori.adventure.text.z:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.OptimizedSelectorComponentImplTypeAdapter -> net.kyori.adventure.text.A:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.OptimizedStorageNBTComponentImplTypeAdapter -> net.kyori.adventure.text.B:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.OptimizedTextComponentImplTypeAdapter -> net.kyori.adventure.text.C:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.OptimizedTranslatableComponentImplTypeAdapter -> net.kyori.adventure.text.D:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.PatternReplacementResult -> net.kyori.adventure.text.E:
    net.kyori.adventure.text.PatternReplacementResult REPLACE -> a
    net.kyori.adventure.text.PatternReplacementResult CONTINUE -> b
    net.kyori.adventure.text.PatternReplacementResult STOP -> c
    net.kyori.adventure.text.PatternReplacementResult[] $VALUES -> d
    31:31:net.kyori.adventure.text.PatternReplacementResult[] values() -> values
    31:31:net.kyori.adventure.text.PatternReplacementResult valueOf(java.lang.String) -> valueOf
    31:31:void <init>(java.lang.String,int) -> <init>
    31:49:void <clinit>() -> <clinit>
net.kyori.adventure.text.ScopedComponent -> net.kyori.adventure.text.F:
    53:53:net.kyori.adventure.text.Component style(java.util.function.Consumer) -> a
    65:65:net.kyori.adventure.text.Component mergeStyle(net.kyori.adventure.text.Component) -> b
    77:77:net.kyori.adventure.text.Component append(net.kyori.adventure.text.Component) -> a
    83:83:net.kyori.adventure.text.Component append(net.kyori.adventure.text.ComponentLike) -> a
    95:95:net.kyori.adventure.text.Component mergeStyle(net.kyori.adventure.text.Component,java.util.Set) -> a
    101:101:net.kyori.adventure.text.Component color(net.kyori.adventure.text.format.TextColor) -> a
    107:107:net.kyori.adventure.text.Component colorIfAbsent(net.kyori.adventure.text.format.TextColor) -> b
    113:113:net.kyori.adventure.text.Component decorate(net.kyori.adventure.text.format.TextDecoration) -> a
    119:119:net.kyori.adventure.text.Component decoration(net.kyori.adventure.text.format.TextDecoration,boolean) -> a
    125:125:net.kyori.adventure.text.Component decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> a
    43:43:net.kyori.adventure.text.format.StyleSetter decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> b
    43:43:net.kyori.adventure.text.format.StyleSetter decoration(net.kyori.adventure.text.format.TextDecoration,boolean) -> b
    43:43:net.kyori.adventure.text.format.StyleSetter decorate(net.kyori.adventure.text.format.TextDecoration) -> b
net.kyori.adventure.text.ScoreComponent -> net.kyori.adventure.text.G:
    java.lang.String name() -> d
    java.lang.String objective() -> e
    java.lang.String value() -> w
    115:121:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.text.ScoreComponent$Builder -> net.kyori.adventure.text.G$a:
    net.kyori.adventure.text.ScoreComponent$Builder name(java.lang.String) -> a
    net.kyori.adventure.text.ScoreComponent$Builder objective(java.lang.String) -> b
    net.kyori.adventure.text.ScoreComponent$Builder value(java.lang.String) -> c
net.kyori.adventure.text.ScoreComponentImpl -> net.kyori.adventure.text.H:
    java.lang.String name -> d
    java.lang.String objective -> e
    java.lang.String value -> f
    42:46:net.kyori.adventure.text.ScoreComponent create(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String,java.lang.String,java.lang.String) -> a
    52:56:void <init>(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String,java.lang.String,java.lang.String) -> <init>
    60:60:java.lang.String name() -> d
    71:71:java.lang.String objective() -> e
    83:83:java.lang.String value() -> w
    106:112:boolean equals(java.lang.Object) -> equals
    117:121:int hashCode() -> hashCode
    126:126:java.lang.String toString() -> toString
    131:131:net.kyori.adventure.text.ScoreComponent$Builder toBuilder() -> x
    35:35:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style) -> a
    1100:1100:net.kyori.adventure.text.ScoreComponent style(net.kyori.adventure.text.format.Style):100:100 -> a
    1100:1100:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style):35 -> a
    35:35:net.kyori.adventure.text.Component children(java.util.List) -> a
    2095:2095:net.kyori.adventure.text.ScoreComponent children(java.util.List):95:95 -> a
    2095:2095:net.kyori.adventure.text.Component children(java.util.List):35 -> a
    35:35:net.kyori.adventure.text.ComponentBuilder toBuilder() -> f
    35:35:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    void toJson$4(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> b
    3000:3000:void toJsonBody$4(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> b
    3000:3000:void toJson$4(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> b
    void <init>() -> <init>
    void fromJson$4(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    4000:4000:void fromJsonField$4(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    4000:4000:void fromJson$4(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.ScoreComponentImpl$BuilderImpl -> net.kyori.adventure.text.H$a:
    java.lang.String name -> b
    java.lang.String objective -> c
    java.lang.String value -> d
    139:140:void <init>() -> <init>
    144:148:void <init>(net.kyori.adventure.text.ScoreComponent) -> <init>
    152:153:net.kyori.adventure.text.ScoreComponent$Builder name(java.lang.String) -> a
    158:159:net.kyori.adventure.text.ScoreComponent$Builder objective(java.lang.String) -> b
    165:166:net.kyori.adventure.text.ScoreComponent$Builder value(java.lang.String) -> c
    171:173:net.kyori.adventure.text.ScoreComponent build() -> d
    134:134:net.kyori.adventure.text.BuildableComponent build() -> c
    134:134:java.lang.Object build() -> build
net.kyori.adventure.text.SelectorComponent -> net.kyori.adventure.text.I:
    java.lang.String pattern() -> d
    net.kyori.adventure.text.Component separator() -> e
    85:90:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.text.SelectorComponent$Builder -> net.kyori.adventure.text.I$a:
    net.kyori.adventure.text.SelectorComponent$Builder pattern(java.lang.String) -> a
    net.kyori.adventure.text.SelectorComponent$Builder separator(net.kyori.adventure.text.ComponentLike) -> a
net.kyori.adventure.text.SelectorComponentImpl -> net.kyori.adventure.text.J:
    java.lang.String pattern -> d
    net.kyori.adventure.text.Component separator -> e
    40:44:net.kyori.adventure.text.SelectorComponent create(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String,net.kyori.adventure.text.ComponentLike) -> a
    49:52:void <init>(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String,net.kyori.adventure.text.Component) -> <init>
    56:56:java.lang.String pattern() -> d
    67:67:net.kyori.adventure.text.Component separator() -> e
    87:91:boolean equals(java.lang.Object) -> equals
    96:99:int hashCode() -> hashCode
    104:104:java.lang.String toString() -> toString
    109:109:net.kyori.adventure.text.SelectorComponent$Builder toBuilder() -> w
    35:35:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style) -> a
    1082:1082:net.kyori.adventure.text.SelectorComponent style(net.kyori.adventure.text.format.Style):82:82 -> a
    1082:1082:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style):35 -> a
    35:35:net.kyori.adventure.text.Component children(java.util.List) -> a
    2077:2077:net.kyori.adventure.text.SelectorComponent children(java.util.List):77:77 -> a
    2077:2077:net.kyori.adventure.text.Component children(java.util.List):35 -> a
    35:35:net.kyori.adventure.text.ComponentBuilder toBuilder() -> f
    35:35:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    void toJson$0(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> b
    3000:3000:void toJsonBody$0(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> b
    3000:3000:void toJson$0(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> b
    void <init>() -> <init>
    void fromJson$0(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    4000:4000:void fromJsonField$0(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    4000:4000:void fromJson$0(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.SelectorComponentImpl$BuilderImpl -> net.kyori.adventure.text.J$a:
    java.lang.String pattern -> b
    net.kyori.adventure.text.Component separator -> c
    116:117:void <init>() -> <init>
    120:123:void <init>(net.kyori.adventure.text.SelectorComponent) -> <init>
    127:128:net.kyori.adventure.text.SelectorComponent$Builder pattern(java.lang.String) -> a
    133:134:net.kyori.adventure.text.SelectorComponent$Builder separator(net.kyori.adventure.text.ComponentLike) -> a
    139:140:net.kyori.adventure.text.SelectorComponent build() -> d
    112:112:net.kyori.adventure.text.BuildableComponent build() -> c
    112:112:java.lang.Object build() -> build
net.kyori.adventure.text.StorageNBTComponent -> net.kyori.adventure.text.K:
    net.kyori.adventure.key.Key storage() -> d
    68:72:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.text.StorageNBTComponent$Builder -> net.kyori.adventure.text.K$a:
    net.kyori.adventure.text.StorageNBTComponent$Builder storage(net.kyori.adventure.key.Key) -> a
net.kyori.adventure.text.StorageNBTComponentImpl -> net.kyori.adventure.text.L:
    net.kyori.adventure.key.Key storage -> g
    40:46:net.kyori.adventure.text.StorageNBTComponent create(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String,boolean,net.kyori.adventure.text.ComponentLike,net.kyori.adventure.key.Key) -> a
    51:53:void <init>(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String,boolean,net.kyori.adventure.text.Component,net.kyori.adventure.key.Key) -> <init>
    69:69:net.kyori.adventure.text.Component separator() -> e
    79:79:net.kyori.adventure.key.Key storage() -> d
    100:104:boolean equals(java.lang.Object) -> equals
    1079:1079:net.kyori.adventure.key.Key storage():79:79 -> equals
    1079:1079:boolean equals(java.lang.Object):104 -> equals
    109:111:int hashCode() -> hashCode
    116:116:java.lang.String toString() -> toString
    121:121:net.kyori.adventure.text.StorageNBTComponent$Builder toBuilder() -> y
    36:36:net.kyori.adventure.text.ComponentBuilder toBuilder() -> f
    36:36:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    36:36:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style) -> a
    1095:1095:net.kyori.adventure.text.StorageNBTComponent style(net.kyori.adventure.text.format.Style):95:95 -> a
    1095:1095:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style):36 -> a
    36:36:net.kyori.adventure.text.Component children(java.util.List) -> a
    2090:2090:net.kyori.adventure.text.StorageNBTComponent children(java.util.List):90:90 -> a
    2090:2090:net.kyori.adventure.text.Component children(java.util.List):36 -> a
    void toJson$8(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> b
    3000:3000:void toJsonBody$8(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> b
    3000:3000:void toJson$8(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> b
    void <init>() -> <init>
    void fromJson$8(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    4000:4000:void fromJsonField$8(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    4000:4000:void fromJson$8(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.StorageNBTComponentImpl$BuilderImpl -> net.kyori.adventure.text.L$a:
    net.kyori.adventure.key.Key storage -> e
    127:128:void <init>() -> <init>
    131:133:void <init>(net.kyori.adventure.text.StorageNBTComponent) -> <init>
    137:138:net.kyori.adventure.text.StorageNBTComponent$Builder storage(net.kyori.adventure.key.Key) -> a
    143:145:net.kyori.adventure.text.StorageNBTComponent build() -> d
    124:124:net.kyori.adventure.text.BuildableComponent build() -> c
    124:124:java.lang.Object build() -> build
net.kyori.adventure.text.TextComponent -> net.kyori.adventure.text.M:
    java.lang.String content() -> d
    net.kyori.adventure.text.TextComponent content(java.lang.String) -> c
    78:82:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.text.TextComponent$Builder -> net.kyori.adventure.text.M$a:
    net.kyori.adventure.text.TextComponent$Builder content(java.lang.String) -> a
net.kyori.adventure.text.TextComponentImpl -> net.kyori.adventure.text.N:
    boolean WARN_WHEN_LEGACY_FORMATTING_DETECTED -> f
    char SECTION_CHAR -> g
    net.kyori.adventure.text.TextComponent EMPTY -> d
    net.kyori.adventure.text.TextComponent NEWLINE -> e
    net.kyori.adventure.text.TextComponent SPACE -> h
    java.lang.String content -> i
    49:55:net.kyori.adventure.text.TextComponent create(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String) -> a
    1137:1137:net.kyori.adventure.text.TextComponent net.kyori.adventure.text.Component.empty():137:137 -> a
    1137:1137:net.kyori.adventure.text.TextComponent create(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String):50 -> a
    60:60:net.kyori.adventure.text.TextComponent createDirect(java.lang.String) -> d
    66:75:void <init>(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String) -> <init>
    2079:2082:com.mongodb.spi.dns.DnsException warnWhenLegacyFormattingDetected$2c174cbc():79:82 -> <init>
    2079:2082:void <init>(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String):70 -> <init>
    87:87:java.lang.String content() -> d
    92:93:net.kyori.adventure.text.TextComponent content(java.lang.String) -> c
    108:112:boolean equals(java.lang.Object) -> equals
    117:119:int hashCode() -> hashCode
    124:124:java.lang.String toString() -> toString
    129:129:net.kyori.adventure.text.TextComponent$Builder toBuilder() -> e
    39:39:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style) -> a
    2103:2103:net.kyori.adventure.text.TextComponent style(net.kyori.adventure.text.format.Style):103:103 -> a
    2103:2103:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style):39 -> a
    39:39:net.kyori.adventure.text.Component children(java.util.List) -> a
    3098:3098:net.kyori.adventure.text.TextComponent children(java.util.List):98:98 -> a
    3098:3098:net.kyori.adventure.text.Component children(java.util.List):39 -> a
    39:39:net.kyori.adventure.text.ComponentBuilder toBuilder() -> f
    39:39:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    40:46:void <clinit>() -> <clinit>
    void toJson$17(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> b
    4000:4000:void toJsonBody$17(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> b
    4000:4000:void toJson$17(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> b
    void <init>() -> <init>
    void fromJson$17(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    5000:5000:void fromJsonField$17(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    5000:5000:void fromJson$17(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.TextComponentImpl$BuilderImpl -> net.kyori.adventure.text.N$a:
    java.lang.String content -> b
    138:141:void <init>() -> <init>
    138:146:void <init>(net.kyori.adventure.text.TextComponent) -> <init>
    150:151:net.kyori.adventure.text.TextComponent$Builder content(java.lang.String) -> a
    161:164:net.kyori.adventure.text.TextComponent build() -> d
    1168:1168:boolean isEmpty():168:168 -> d
    1168:1168:net.kyori.adventure.text.TextComponent build():161 -> d
    132:132:net.kyori.adventure.text.BuildableComponent build() -> c
    132:132:java.lang.Object build() -> build
net.kyori.adventure.text.TextReplacementConfig -> net.kyori.adventure.text.O:
net.kyori.adventure.text.TextReplacementConfig$Builder -> net.kyori.adventure.text.O$a:
    91:91:net.kyori.adventure.text.TextReplacementConfig$Builder matchLiteral(java.lang.String) -> a
    net.kyori.adventure.text.TextReplacementConfig$Builder match(java.util.regex.Pattern) -> a
    183:184:net.kyori.adventure.text.TextReplacementConfig$Builder replacement(java.lang.String) -> b
    209:210:net.kyori.adventure.text.TextReplacementConfig$Builder replacement(java.util.function.Function) -> a
    net.kyori.adventure.text.TextReplacementConfig$Builder replacement(java.util.function.BiFunction) -> a
    210:210:net.kyori.adventure.text.ComponentLike lambda$replacement$4(java.util.function.Function,java.util.regex.MatchResult,net.kyori.adventure.text.TextComponent$Builder) -> a
    184:184:net.kyori.adventure.text.ComponentLike lambda$replacement$2(java.lang.String,net.kyori.adventure.text.TextComponent$Builder) -> a
net.kyori.adventure.text.TextReplacementConfig$Condition -> net.kyori.adventure.text.O$b:
    net.kyori.adventure.text.PatternReplacementResult shouldReplace(java.util.regex.MatchResult,int,int) -> shouldReplace
net.kyori.adventure.text.TextReplacementConfigImpl -> net.kyori.adventure.text.P:
    java.util.regex.Pattern matchPattern -> a
    java.util.function.BiFunction replacement -> b
    net.kyori.adventure.text.TextReplacementConfig$Condition continuer -> c
    42:46:void <init>(net.kyori.adventure.text.TextReplacementConfigImpl$Builder) -> <init>
    64:67:java.util.stream.Stream examinableProperties() -> examinableProperties
    73:73:java.lang.String toString() -> toString
    37:37:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    1059:1059:net.kyori.adventure.text.TextReplacementConfig$Builder toBuilder():59:59 -> toBuilder
    1059:1059:net.kyori.adventure.util.Buildable$Builder toBuilder():37 -> toBuilder
net.kyori.adventure.text.TextReplacementConfigImpl$Builder -> net.kyori.adventure.text.P$a:
    java.util.regex.Pattern matchPattern -> a
    java.util.function.BiFunction replacement -> b
    net.kyori.adventure.text.TextReplacementConfig$Condition continuer -> c
    79:82:void <init>() -> <init>
    79:88:void <init>(net.kyori.adventure.text.TextReplacementConfigImpl) -> <init>
    1037:1037:java.util.regex.Pattern net.kyori.adventure.text.TextReplacementConfigImpl.access$000(net.kyori.adventure.text.TextReplacementConfigImpl):37:37 -> <init>
    1037:1037:void <init>(net.kyori.adventure.text.TextReplacementConfigImpl):85 -> <init>
    2037:2037:java.util.function.BiFunction net.kyori.adventure.text.TextReplacementConfigImpl.access$100(net.kyori.adventure.text.TextReplacementConfigImpl):37:37 -> <init>
    2037:2037:void <init>(net.kyori.adventure.text.TextReplacementConfigImpl):86 -> <init>
    3037:3037:net.kyori.adventure.text.TextReplacementConfig$Condition net.kyori.adventure.text.TextReplacementConfigImpl.access$200(net.kyori.adventure.text.TextReplacementConfigImpl):37:37 -> <init>
    3037:3037:void <init>(net.kyori.adventure.text.TextReplacementConfigImpl):87 -> <init>
    76:76:net.kyori.adventure.text.TextReplacementConfig$Builder replacement(java.util.function.BiFunction) -> a
    3104:3105:net.kyori.adventure.text.TextReplacementConfigImpl$Builder replacement(java.util.function.BiFunction):104:105 -> a
    3104:3105:net.kyori.adventure.text.TextReplacementConfig$Builder replacement(java.util.function.BiFunction):76 -> a
    76:76:net.kyori.adventure.text.TextReplacementConfig$Builder match(java.util.regex.Pattern) -> a
    4092:4093:net.kyori.adventure.text.TextReplacementConfigImpl$Builder match(java.util.regex.Pattern):92:93 -> a
    4092:4093:net.kyori.adventure.text.TextReplacementConfig$Builder match(java.util.regex.Pattern):76 -> a
    76:76:java.lang.Object build() -> build
    4110:4112:net.kyori.adventure.text.TextReplacementConfig build():110:112 -> build
    4110:4112:java.lang.Object build():76 -> build
    79:79:net.kyori.adventure.text.PatternReplacementResult lambda$new$0(java.util.regex.MatchResult,int,int) -> a
net.kyori.adventure.text.TextReplacementRenderer -> net.kyori.adventure.text.Q:
    net.kyori.adventure.text.TextReplacementRenderer INSTANCE -> a
    44:45:void <init>() -> <init>
    49:196:net.kyori.adventure.text.Component render(net.kyori.adventure.text.Component,net.kyori.adventure.text.TextReplacementRenderer$State) -> a
    41:41:net.kyori.adventure.text.Component render(net.kyori.adventure.text.Component,java.lang.Object) -> render
    162:162:void lambda$render$0(net.kyori.adventure.text.event.HoverEvent,net.kyori.adventure.text.format.Style$Builder) -> a
    42:42:void <clinit>() -> <clinit>
net.kyori.adventure.text.TextReplacementRenderer$State -> net.kyori.adventure.text.Q$a:
    java.util.regex.Pattern pattern -> a
    java.util.function.BiFunction replacement -> b
    net.kyori.adventure.text.TextReplacementConfig$Condition continuer -> c
    boolean running -> d
    int matchCount -> e
    int replaceCount -> f
    boolean firstMatch -> g
    203:212:void <init>(java.util.regex.Pattern,java.util.function.BiFunction,net.kyori.adventure.text.TextReplacementConfig$Condition) -> <init>
net.kyori.adventure.text.TranslatableComponent -> net.kyori.adventure.text.R:
    java.lang.String key() -> d
    java.util.List args() -> e
    net.kyori.adventure.text.TranslatableComponent args(java.util.List) -> c
    java.lang.String fallback() -> w
    149:155:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.text.TranslatableComponent$Builder -> net.kyori.adventure.text.R$a:
    net.kyori.adventure.text.TranslatableComponent$Builder key(java.lang.String) -> a
    net.kyori.adventure.text.TranslatableComponent$Builder args(java.util.List) -> a
    net.kyori.adventure.text.TranslatableComponent$Builder fallback(java.lang.String) -> b
net.kyori.adventure.text.TranslatableComponentImpl -> net.kyori.adventure.text.S:
    java.lang.String key -> d
    java.lang.String fallback -> e
    java.util.List args -> f
    46:51:net.kyori.adventure.text.TranslatableComponent create(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String,java.lang.String,java.util.List) -> a
    60:64:void <init>(java.util.List,net.kyori.adventure.text.format.Style,java.lang.String,java.lang.String,java.util.List) -> <init>
    68:68:java.lang.String key() -> d
    79:79:java.util.List args() -> e
    89:89:net.kyori.adventure.text.TranslatableComponent args(java.util.List) -> c
    94:94:java.lang.String fallback() -> w
    114:118:boolean equals(java.lang.Object) -> equals
    123:127:int hashCode() -> hashCode
    132:132:java.lang.String toString() -> toString
    137:137:net.kyori.adventure.text.TranslatableComponent$Builder toBuilder() -> x
    39:39:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style) -> a
    1109:1109:net.kyori.adventure.text.TranslatableComponent style(net.kyori.adventure.text.format.Style):109:109 -> a
    1109:1109:net.kyori.adventure.text.Component style(net.kyori.adventure.text.format.Style):39 -> a
    39:39:net.kyori.adventure.text.Component children(java.util.List) -> a
    2104:2104:net.kyori.adventure.text.TranslatableComponent children(java.util.List):104:104 -> a
    2104:2104:net.kyori.adventure.text.Component children(java.util.List):39 -> a
    39:39:net.kyori.adventure.text.ComponentBuilder toBuilder() -> f
    39:39:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    void toJson$7(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> b
    3000:3000:void toJsonBody$7(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> b
    3000:3000:void toJson$7(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> b
    void <init>() -> <init>
    void fromJson$7(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    4000:4000:void fromJsonField$7(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    4000:4000:void fromJson$7(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.TranslatableComponentImpl$BuilderImpl -> net.kyori.adventure.text.S$a:
    java.lang.String key -> b
    java.lang.String fallback -> c
    java.util.List args -> d
    143:146:void <init>() -> <init>
    143:153:void <init>(net.kyori.adventure.text.TranslatableComponent) -> <init>
    157:158:net.kyori.adventure.text.TranslatableComponent$Builder key(java.lang.String) -> a
    188:189:net.kyori.adventure.text.TranslatableComponent$Builder args(java.util.List) -> a
    1051:1051:java.util.List net.kyori.adventure.text.ComponentLike.asComponents(java.util.List):51:51 -> a
    1051:1051:net.kyori.adventure.text.TranslatableComponent$Builder args(java.util.List):188 -> a
    194:195:net.kyori.adventure.text.TranslatableComponent$Builder fallback(java.lang.String) -> b
    200:201:net.kyori.adventure.text.TranslatableComponent build() -> d
    140:140:net.kyori.adventure.text.BuildableComponent build() -> c
    140:140:java.lang.Object build() -> build
net.kyori.adventure.text.TranslatableComponentImplargsTypeToken -> net.kyori.adventure.text.T:
    void <init>() -> <init>
net.kyori.adventure.text.event.ClickEvent -> net.kyori.adventure.text.a.a:
    net.kyori.adventure.text.event.ClickEvent$Action action -> a
    java.lang.String value -> b
    191:191:net.kyori.adventure.text.event.ClickEvent clickEvent(net.kyori.adventure.text.event.ClickEvent$Action,java.lang.String) -> a
    197:200:void <init>(net.kyori.adventure.text.event.ClickEvent$Action,java.lang.String) -> <init>
    224:225:void styleApply(net.kyori.adventure.text.format.Style$Builder) -> a
    229:232:boolean equals(java.lang.Object) -> equals
    237:239:int hashCode() -> hashCode
    244:246:java.util.stream.Stream examinableProperties() -> examinableProperties
    252:252:java.lang.String toString() -> toString
    void toJson$1(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> a
    1000:1000:void toJsonBody$1(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> a
    1000:1000:void toJson$1(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> a
    void <init>() -> <init>
    void fromJson$1(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    2000:2000:void fromJsonField$1(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    2000:2000:void fromJson$1(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.event.ClickEvent$Action -> net.kyori.adventure.text.a.a$a:
    net.kyori.adventure.text.event.ClickEvent$Action OPEN_URL -> a
    net.kyori.adventure.text.event.ClickEvent$Action OPEN_FILE -> b
    net.kyori.adventure.text.event.ClickEvent$Action RUN_COMMAND -> c
    net.kyori.adventure.text.event.ClickEvent$Action SUGGEST_COMMAND -> d
    net.kyori.adventure.text.event.ClickEvent$Action CHANGE_PAGE -> e
    net.kyori.adventure.text.event.ClickEvent$Action COPY_TO_CLIPBOARD -> f
    net.kyori.adventure.util.Index NAMES -> g
    java.lang.String name -> i
    boolean readable -> h
    net.kyori.adventure.text.event.ClickEvent$Action[] $VALUES -> j
    260:260:net.kyori.adventure.text.event.ClickEvent$Action[] values() -> values
    260:260:net.kyori.adventure.text.event.ClickEvent$Action valueOf(java.lang.String) -> valueOf
    315:318:void <init>(java.lang.String,int,java.lang.String,boolean) -> <init>
    333:333:java.lang.String toString() -> toString
    306:306:java.lang.String lambda$static$0(net.kyori.adventure.text.event.ClickEvent$Action) -> a
    260:306:void <clinit>() -> <clinit>
net.kyori.adventure.text.event.HoverEvent -> net.kyori.adventure.text.a.b:
    net.kyori.adventure.text.event.HoverEvent$Action action -> a
    java.lang.Object value -> b
    77:77:net.kyori.adventure.text.event.HoverEvent showText(net.kyori.adventure.text.Component) -> a
    222:222:net.kyori.adventure.text.event.HoverEvent hoverEvent(net.kyori.adventure.text.event.HoverEvent$Action,java.lang.Object) -> a
    228:231:void <init>(net.kyori.adventure.text.event.HoverEvent$Action,java.lang.Object) -> <init>
    274:277:net.kyori.adventure.text.event.HoverEvent withRenderedValue(net.kyori.adventure.text.renderer.ComponentRenderer,java.lang.Object) -> a
    282:282:net.kyori.adventure.text.event.HoverEvent asHoverEvent() -> g_
    287:288:net.kyori.adventure.text.event.HoverEvent asHoverEvent(java.util.function.UnaryOperator) -> asHoverEvent
    293:294:void styleApply(net.kyori.adventure.text.format.Style$Builder) -> a
    298:301:boolean equals(java.lang.Object) -> equals
    306:308:int hashCode() -> hashCode
    313:315:java.util.stream.Stream examinableProperties() -> examinableProperties
    321:321:java.lang.String toString() -> toString
net.kyori.adventure.text.event.HoverEvent$Action -> net.kyori.adventure.text.a.b$a:
    net.kyori.adventure.text.event.HoverEvent$Action SHOW_TEXT -> a
    net.kyori.adventure.text.event.HoverEvent$Action SHOW_ITEM -> b
    net.kyori.adventure.text.event.HoverEvent$Action SHOW_ENTITY -> c
    net.kyori.adventure.util.Index NAMES -> d
    java.lang.String name -> g
    java.lang.Class type -> e
    boolean readable -> f
    net.kyori.adventure.text.event.HoverEvent$Action$Renderer renderer -> h
    719:724:void <init>(java.lang.String,java.lang.Class,boolean,net.kyori.adventure.text.event.HoverEvent$Action$Renderer) -> <init>
    749:749:java.lang.String toString() -> toString
    708:708:java.lang.String lambda$static$0(net.kyori.adventure.text.event.HoverEvent$Action) -> b
    667:667:net.kyori.adventure.text.event.HoverEvent$Action$Renderer access$000(net.kyori.adventure.text.event.HoverEvent$Action) -> a
    673:708:void <clinit>() -> <clinit>
net.kyori.adventure.text.event.HoverEvent$Action$1 -> net.kyori.adventure.text.a.b$a$1:
    673:673:void <init>() -> <init>
    673:673:java.lang.Object render(net.kyori.adventure.text.renderer.ComponentRenderer,java.lang.Object,java.lang.Object) -> a
    1676:1676:net.kyori.adventure.text.Component render(net.kyori.adventure.text.renderer.ComponentRenderer,java.lang.Object,net.kyori.adventure.text.Component):676:676 -> a
    1676:1676:java.lang.Object render(net.kyori.adventure.text.renderer.ComponentRenderer,java.lang.Object,java.lang.Object):673 -> a
net.kyori.adventure.text.event.HoverEvent$Action$2 -> net.kyori.adventure.text.a.b$a$2:
    684:684:void <init>() -> <init>
    684:684:java.lang.Object render(net.kyori.adventure.text.renderer.ComponentRenderer,java.lang.Object,java.lang.Object) -> a
    1687:1687:net.kyori.adventure.text.event.HoverEvent$ShowItem render$3e999ca4(net.kyori.adventure.text.event.HoverEvent$ShowItem):687:687 -> a
    1687:1687:java.lang.Object render(net.kyori.adventure.text.renderer.ComponentRenderer,java.lang.Object,java.lang.Object):684 -> a
net.kyori.adventure.text.event.HoverEvent$Action$3 -> net.kyori.adventure.text.a.b$a$3:
    695:695:void <init>() -> <init>
    695:695:java.lang.Object render(net.kyori.adventure.text.renderer.ComponentRenderer,java.lang.Object,java.lang.Object) -> a
    1698:1699:net.kyori.adventure.text.event.HoverEvent$ShowEntity render(net.kyori.adventure.text.renderer.ComponentRenderer,java.lang.Object,net.kyori.adventure.text.event.HoverEvent$ShowEntity):698:699 -> a
    1698:1699:java.lang.Object render(net.kyori.adventure.text.renderer.ComponentRenderer,java.lang.Object,java.lang.Object):695 -> a
    2626:2627:net.kyori.adventure.text.event.HoverEvent$ShowEntity net.kyori.adventure.text.event.HoverEvent$ShowEntity.name(net.kyori.adventure.text.Component):626:627 -> a
    2626:2627:net.kyori.adventure.text.event.HoverEvent$ShowEntity render(net.kyori.adventure.text.renderer.ComponentRenderer,java.lang.Object,net.kyori.adventure.text.event.HoverEvent$ShowEntity):699 -> a
    2626:2627:java.lang.Object render(net.kyori.adventure.text.renderer.ComponentRenderer,java.lang.Object,java.lang.Object):695 -> a
net.kyori.adventure.text.event.HoverEvent$Action$Renderer -> net.kyori.adventure.text.a.b$a$a:
    java.lang.Object render(net.kyori.adventure.text.renderer.ComponentRenderer,java.lang.Object,java.lang.Object) -> a
net.kyori.adventure.text.event.HoverEvent$ShowEntity -> net.kyori.adventure.text.a.b$b:
    net.kyori.adventure.key.Key type -> a
    java.util.UUID id -> b
    net.kyori.adventure.text.Component name -> c
    506:506:net.kyori.adventure.text.event.HoverEvent$ShowEntity of(net.kyori.adventure.key.Key,java.util.UUID) -> a
    531:531:net.kyori.adventure.text.event.HoverEvent$ShowEntity of(net.kyori.adventure.key.Key,java.util.UUID,net.kyori.adventure.text.Component) -> a
    547:551:void <init>(net.kyori.adventure.key.Key,java.util.UUID,net.kyori.adventure.text.Component) -> <init>
    632:635:boolean equals(java.lang.Object) -> equals
    640:643:int hashCode() -> hashCode
    648:651:java.util.stream.Stream examinableProperties() -> examinableProperties
    657:657:java.lang.String toString() -> toString
    492:492:net.kyori.adventure.text.Component access$100(net.kyori.adventure.text.event.HoverEvent$ShowEntity) -> a
net.kyori.adventure.text.event.HoverEvent$ShowItem -> net.kyori.adventure.text.a.b$c:
    net.kyori.adventure.key.Key item -> a
    int count -> b
    net.kyori.adventure.nbt.api.BinaryTagHolder nbt -> c
    343:343:net.kyori.adventure.text.event.HoverEvent$ShowItem of(net.kyori.adventure.key.Key,int) -> a
    368:368:net.kyori.adventure.text.event.HoverEvent$ShowItem of(net.kyori.adventure.key.Key,int,net.kyori.adventure.nbt.api.BinaryTagHolder) -> a
    384:388:void <init>(net.kyori.adventure.key.Key,int,net.kyori.adventure.nbt.api.BinaryTagHolder) -> <init>
    458:461:boolean equals(java.lang.Object) -> equals
    466:469:int hashCode() -> hashCode
    474:477:java.util.stream.Stream examinableProperties() -> examinableProperties
    483:483:java.lang.String toString() -> toString
net.kyori.adventure.text.event.HoverEventSource -> net.kyori.adventure.text.a.c:
    46:46:net.kyori.adventure.text.event.HoverEvent unbox(net.kyori.adventure.text.event.HoverEventSource) -> a
    56:56:net.kyori.adventure.text.event.HoverEvent asHoverEvent() -> g_
    net.kyori.adventure.text.event.HoverEvent asHoverEvent(java.util.function.UnaryOperator) -> asHoverEvent
net.kyori.adventure.text.event.OptimizedClickEvent$ActionTypeAdapter -> net.kyori.adventure.text.a.d:
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> a
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> b
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.event.OptimizedClickEventTypeAdapter -> net.kyori.adventure.text.a.e:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.flattener.ComponentFlattener -> net.kyori.adventure.text.b.a:
    void flatten(net.kyori.adventure.text.Component,net.kyori.adventure.text.flattener.FlattenerListener) -> a
net.kyori.adventure.text.flattener.ComponentFlattener$Builder -> net.kyori.adventure.text.b.a$a:
    net.kyori.adventure.text.flattener.ComponentFlattener$Builder mapper(java.lang.Class,java.util.function.Function) -> a
    net.kyori.adventure.text.flattener.ComponentFlattener$Builder complexMapper(java.lang.Class,java.util.function.BiConsumer) -> a
    net.kyori.adventure.text.flattener.ComponentFlattener$Builder unknownMapper(java.util.function.Function) -> a
net.kyori.adventure.text.flattener.ComponentFlattenerImpl -> net.kyori.adventure.text.b.b:
    net.kyori.adventure.text.flattener.ComponentFlattener BASIC -> a
    java.util.Map flatteners -> b
    java.util.Map complexFlatteners -> c
    java.util.concurrent.ConcurrentMap propagatedFlatteners -> d
    java.util.function.Function unknownHandler -> e
    67:74:void <init>(java.util.Map,java.util.Map,java.util.function.Function) -> <init>
    78:79:void flatten(net.kyori.adventure.text.Component,net.kyori.adventure.text.flattener.FlattenerListener) -> a
    82:106:void flatten0(net.kyori.adventure.text.Component,net.kyori.adventure.text.flattener.FlattenerListener,int) -> a
    110:137:net.kyori.adventure.text.flattener.ComponentFlattenerImpl$Handler flattener(net.kyori.adventure.text.Component) -> a
    46:46:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    1143:1143:net.kyori.adventure.text.flattener.ComponentFlattener$Builder toBuilder():143:143 -> toBuilder
    1143:1143:net.kyori.adventure.util.Buildable$Builder toBuilder():46 -> toBuilder
    135:135:void lambda$flattener$9(net.kyori.adventure.text.Component,net.kyori.adventure.text.flattener.FlattenerListener,int) -> b
    112:131:net.kyori.adventure.text.flattener.ComponentFlattenerImpl$Handler lambda$flattener$8(java.lang.Class) -> a
    127:127:void lambda$flattener$7(java.util.Map$Entry,net.kyori.adventure.text.Component,net.kyori.adventure.text.flattener.FlattenerListener,int) -> a
    127:127:void lambda$flattener$6(net.kyori.adventure.text.flattener.FlattenerListener,int,net.kyori.adventure.text.Component) -> a
    123:123:void lambda$flattener$5(java.util.function.BiConsumer,net.kyori.adventure.text.Component,net.kyori.adventure.text.flattener.FlattenerListener,int) -> a
    123:123:void lambda$flattener$4(net.kyori.adventure.text.flattener.FlattenerListener,int,net.kyori.adventure.text.Component) -> b
    117:117:void lambda$flattener$3(java.util.Map$Entry,net.kyori.adventure.text.Component,net.kyori.adventure.text.flattener.FlattenerListener,int) -> b
    113:113:void lambda$flattener$2(java.util.function.Function,net.kyori.adventure.text.Component,net.kyori.adventure.text.flattener.FlattenerListener,int) -> a
    54:55:java.lang.String lambda$static$1(net.kyori.adventure.text.TranslatableComponent) -> a
    49:49:java.lang.String lambda$static$0(net.kyori.adventure.text.KeybindComponent) -> a
    48:61:void <clinit>() -> <clinit>
net.kyori.adventure.text.flattener.ComponentFlattenerImpl$BuilderImpl -> net.kyori.adventure.text.b.b$a:
    java.util.Map flatteners -> a
    java.util.Map complexFlatteners -> b
    java.util.function.Function unknownHandler -> c
    159:162:void <init>() -> <init>
    164:168:void <init>(java.util.Map,java.util.Map,java.util.function.Function) -> <init>
    177:183:net.kyori.adventure.text.flattener.ComponentFlattener$Builder mapper(java.lang.Class,java.util.function.Function) -> a
    188:194:net.kyori.adventure.text.flattener.ComponentFlattener$Builder complexMapper(java.lang.Class,java.util.function.BiConsumer) -> a
    198:205:void validateNoneInHierarchy(java.lang.Class) -> a
    208:212:void testHierarchy(java.lang.Class,java.lang.Class) -> a
    216:217:net.kyori.adventure.text.flattener.ComponentFlattener$Builder unknownMapper(java.util.function.Function) -> a
    154:154:java.lang.Object build() -> build
    1172:1172:net.kyori.adventure.text.flattener.ComponentFlattener build():172:172 -> build
    1172:1172:java.lang.Object build():154 -> build
net.kyori.adventure.text.flattener.ComponentFlattenerImpl$Handler -> net.kyori.adventure.text.b.b$b:
    net.kyori.adventure.text.flattener.ComponentFlattenerImpl$Handler NONE -> a
    void handle(net.kyori.adventure.text.Component,net.kyori.adventure.text.flattener.FlattenerListener,int) -> handle
    149:149:void lambda$static$0(net.kyori.adventure.text.Component,net.kyori.adventure.text.flattener.FlattenerListener,int) -> a
    149:149:void <clinit>() -> <clinit>
net.kyori.adventure.text.flattener.FlattenerListener -> net.kyori.adventure.text.b.c:
    43:43:void pushStyle(net.kyori.adventure.text.format.Style) -> a
    void component(java.lang.String) -> component
    62:62:void popStyle$53aaeff9() -> a
net.kyori.adventure.text.format.DecorationMap -> net.kyori.adventure.text.c.a:
    net.kyori.adventure.text.format.TextDecoration[] DECORATIONS -> a
    net.kyori.adventure.text.format.TextDecoration$State[] STATES -> d
    int MAP_SIZE -> e
    net.kyori.adventure.text.format.TextDecoration$State[] EMPTY_STATE_ARRAY -> f
    net.kyori.adventure.text.format.DecorationMap EMPTY -> b
    net.kyori.adventure.text.format.DecorationMap$KeySet KEY_SET -> g
    int bitSet -> c
    net.kyori.adventure.text.format.DecorationMap$EntrySet entrySet -> h
    net.kyori.adventure.text.format.DecorationMap$Values values -> i
    92:97:net.kyori.adventure.text.format.DecorationMap fromMap(java.util.Map) -> a
    110:110:net.kyori.adventure.text.format.DecorationMap withBitSet(int) -> a
    115:115:int offset(net.kyori.adventure.text.format.TextDecoration) -> a
    121:126:void <init>(int) -> <init>
    138:139:java.util.stream.Stream examinableProperties() -> examinableProperties
    144:147:net.kyori.adventure.text.format.TextDecoration$State get(java.lang.Object) -> a
    153:153:boolean containsKey(java.lang.Object) -> containsKey
    158:158:int size() -> size
    163:163:boolean isEmpty() -> isEmpty
    168:176:java.util.Set entrySet() -> entrySet
    181:181:java.util.Set keySet() -> keySet
    186:194:java.util.Collection values() -> values
    199:201:boolean equals(java.lang.Object) -> equals
    206:206:int hashCode() -> hashCode
    80:80:java.lang.Object get(java.lang.Object) -> get
    139:139:net.kyori.examination.ExaminableProperty lambda$examinableProperties$0(net.kyori.adventure.text.format.TextDecoration) -> b
    81:81:net.kyori.adventure.text.format.DecorationMap$KeySet access$000() -> b
    81:81:int access$100() -> c
    81:81:net.kyori.adventure.text.format.TextDecoration$State[] access$200() -> d
    82:89:void <clinit>() -> <clinit>
net.kyori.adventure.text.format.DecorationMap$EntrySet -> net.kyori.adventure.text.c.a$a:
    net.kyori.adventure.text.format.DecorationMap this$0 -> a
    209:209:void <init>(net.kyori.adventure.text.format.DecorationMap) -> <init>
    212:212:java.util.Iterator iterator() -> iterator
    233:233:int size() -> size
net.kyori.adventure.text.format.DecorationMap$EntrySet$1 -> net.kyori.adventure.text.c.a$a$1:
    java.util.Iterator decorations -> a
    java.util.Iterator states -> b
    net.kyori.adventure.text.format.DecorationMap$EntrySet this$1 -> c
    212:214:void <init>(net.kyori.adventure.text.format.DecorationMap$EntrySet) -> <init>
    218:218:boolean hasNext() -> hasNext
    212:212:java.lang.Object next() -> next
    1223:1226:java.util.Map$Entry next():223:226 -> next
    1223:1226:java.lang.Object next():212 -> next
net.kyori.adventure.text.format.DecorationMap$KeySet -> net.kyori.adventure.text.c.a$b:
    281:281:void <init>() -> <init>
    285:285:boolean contains(java.lang.Object) -> contains
    290:290:boolean isEmpty() -> isEmpty
    295:295:java.lang.Object[] toArray() -> toArray
    301:308:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    313:313:java.util.Iterator iterator() -> iterator
    318:318:int size() -> size
net.kyori.adventure.text.format.DecorationMap$Values -> net.kyori.adventure.text.c.a$c:
    net.kyori.adventure.text.format.DecorationMap this$0 -> a
    237:237:void <init>(net.kyori.adventure.text.format.DecorationMap) -> <init>
    240:240:java.util.Iterator iterator() -> iterator
    245:245:boolean isEmpty() -> isEmpty
    250:254:java.lang.Object[] toArray() -> toArray
    260:267:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    272:272:boolean contains(java.lang.Object) -> contains
    277:277:int size() -> size
net.kyori.adventure.text.format.MutableStyleSetter -> net.kyori.adventure.text.c.b:
net.kyori.adventure.text.format.NamedTextColor -> net.kyori.adventure.text.c.c:
    int BLACK_VALUE -> r
    int DARK_BLUE_VALUE -> s
    int DARK_GREEN_VALUE -> t
    int DARK_AQUA_VALUE -> u
    int DARK_RED_VALUE -> v
    int DARK_PURPLE_VALUE -> w
    int GOLD_VALUE -> x
    int GRAY_VALUE -> y
    int DARK_GRAY_VALUE -> z
    int BLUE_VALUE -> A
    int GREEN_VALUE -> B
    int AQUA_VALUE -> C
    int RED_VALUE -> D
    int LIGHT_PURPLE_VALUE -> E
    int YELLOW_VALUE -> F
    int WHITE_VALUE -> G
    net.kyori.adventure.text.format.NamedTextColor BLACK -> a
    net.kyori.adventure.text.format.NamedTextColor DARK_BLUE -> b
    net.kyori.adventure.text.format.NamedTextColor DARK_GREEN -> c
    net.kyori.adventure.text.format.NamedTextColor DARK_AQUA -> d
    net.kyori.adventure.text.format.NamedTextColor DARK_RED -> e
    net.kyori.adventure.text.format.NamedTextColor DARK_PURPLE -> f
    net.kyori.adventure.text.format.NamedTextColor GOLD -> g
    net.kyori.adventure.text.format.NamedTextColor GRAY -> h
    net.kyori.adventure.text.format.NamedTextColor DARK_GRAY -> i
    net.kyori.adventure.text.format.NamedTextColor BLUE -> j
    net.kyori.adventure.text.format.NamedTextColor GREEN -> k
    net.kyori.adventure.text.format.NamedTextColor AQUA -> l
    net.kyori.adventure.text.format.NamedTextColor RED -> m
    net.kyori.adventure.text.format.NamedTextColor LIGHT_PURPLE -> n
    net.kyori.adventure.text.format.NamedTextColor YELLOW -> o
    net.kyori.adventure.text.format.NamedTextColor WHITE -> p
    java.util.List VALUES -> H
    net.kyori.adventure.util.Index NAMES -> q
    java.lang.String name -> I
    int value -> J
    net.kyori.adventure.util.HSVLike hsv -> K
    175:192:net.kyori.adventure.text.format.NamedTextColor namedColor(int) -> a
    236:255:net.kyori.adventure.text.format.NamedTextColor nearestTo(net.kyori.adventure.text.format.TextColor) -> a
    1292:1292:net.kyori.adventure.util.HSVLike asHSV():292:292 -> a
    1292:1292:net.kyori.adventure.text.format.NamedTextColor nearestTo(net.kyori.adventure.text.format.TextColor):246 -> a
    2269:2272:float distance(net.kyori.adventure.util.HSVLike,net.kyori.adventure.util.HSVLike):269:272 -> a
    2269:2272:net.kyori.adventure.text.format.NamedTextColor nearestTo(net.kyori.adventure.text.format.TextColor):246 -> a
    279:283:void <init>(java.lang.String,int) -> <init>
    287:287:int value() -> b
    292:292:net.kyori.adventure.util.HSVLike asHSV() -> c
    297:297:java.lang.String toString() -> toString
    302:304:java.util.stream.Stream examinableProperties() -> examinableProperties
    165:165:java.lang.String lambda$static$0(net.kyori.adventure.text.format.NamedTextColor) -> a
    67:165:void <clinit>() -> <clinit>
    void toJson$9(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> a
    3000:3000:void toJsonBody$9(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> a
    3000:3000:void toJson$9(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> a
    void <init>() -> <init>
    void fromJson$9(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    4000:4000:void fromJsonField$9(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    4000:4000:void fromJson$9(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.format.OptimizedNamedTextColorTypeAdapter -> net.kyori.adventure.text.c.d:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.format.OptimizedStyleImplTypeAdapter -> net.kyori.adventure.text.c.e:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.format.OptimizedTextColorImplTypeAdapter -> net.kyori.adventure.text.c.f:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.format.Style -> net.kyori.adventure.text.c.g:
    80:80:net.kyori.adventure.text.format.Style empty() -> b
    90:90:net.kyori.adventure.text.format.Style$Builder style() -> c
    101:101:net.kyori.adventure.text.format.Style style(java.util.function.Consumer) -> a
    1090:1090:net.kyori.adventure.text.format.Style$Builder style():90:90 -> a
    1090:1090:net.kyori.adventure.text.format.Style style(java.util.function.Consumer):101 -> a
    2051:2054:java.lang.Object net.kyori.adventure.builder.AbstractBuilder.configureAndBuild(net.kyori.adventure.builder.AbstractBuilder,java.util.function.Consumer):51:54 -> a
    2051:2054:net.kyori.adventure.text.format.Style style(java.util.function.Consumer):101 -> a
    112:112:net.kyori.adventure.text.format.Style style(net.kyori.adventure.text.format.TextColor) -> a
    2080:2080:net.kyori.adventure.text.format.Style empty():80:80 -> a
    2080:2080:net.kyori.adventure.text.format.Style style(net.kyori.adventure.text.format.TextColor):112 -> a
    168:177:net.kyori.adventure.text.format.Style style(net.kyori.adventure.text.format.StyleBuilderApplicable[]) -> a
    3080:3080:net.kyori.adventure.text.format.Style empty():80:80 -> a
    3080:3080:net.kyori.adventure.text.format.Style style(net.kyori.adventure.text.format.StyleBuilderApplicable[]):169 -> a
    3090:3090:net.kyori.adventure.text.format.Style$Builder style():90:90 -> a
    3090:3090:net.kyori.adventure.text.format.Style style(net.kyori.adventure.text.format.StyleBuilderApplicable[]):170 -> a
    205:205:net.kyori.adventure.text.format.Style edit(java.util.function.Consumer) -> b
    217:217:net.kyori.adventure.text.format.Style edit(java.util.function.Consumer,net.kyori.adventure.text.format.Style$Merge$Strategy) -> a
    net.kyori.adventure.key.Key font() -> d
    net.kyori.adventure.text.format.TextColor color() -> e
    net.kyori.adventure.text.format.Style color(net.kyori.adventure.text.format.TextColor) -> b
    net.kyori.adventure.text.format.TextDecoration$State decoration(net.kyori.adventure.text.format.TextDecoration) -> a
    313:313:net.kyori.adventure.text.format.Style decorate(net.kyori.adventure.text.format.TextDecoration) -> c
    327:327:net.kyori.adventure.text.format.Style decoration(net.kyori.adventure.text.format.TextDecoration,boolean) -> a
    net.kyori.adventure.text.format.Style decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> a
    net.kyori.adventure.text.event.ClickEvent clickEvent() -> f
    net.kyori.adventure.text.event.HoverEvent hoverEvent() -> g
    net.kyori.adventure.text.format.Style hoverEvent(net.kyori.adventure.text.event.HoverEventSource) -> a
    java.lang.String insertion() -> h
    456:456:net.kyori.adventure.text.format.Style merge(net.kyori.adventure.text.format.Style,net.kyori.adventure.text.format.Style$Merge$Strategy) -> a
    518:518:net.kyori.adventure.text.format.Style merge(net.kyori.adventure.text.format.Style,java.util.Set) -> a
    net.kyori.adventure.text.format.Style merge(net.kyori.adventure.text.format.Style,net.kyori.adventure.text.format.Style$Merge$Strategy,java.util.Set) -> a
    net.kyori.adventure.text.format.Style unmerge(net.kyori.adventure.text.format.Style) -> a
    boolean isEmpty() -> i
    net.kyori.adventure.text.format.Style$Builder toBuilder() -> j
    63:63:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    63:63:net.kyori.adventure.text.format.StyleSetter decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> b
    63:63:net.kyori.adventure.text.format.StyleSetter decoration(net.kyori.adventure.text.format.TextDecoration,boolean) -> b
    63:63:net.kyori.adventure.text.format.StyleSetter decorate(net.kyori.adventure.text.format.TextDecoration) -> b
    218:225:void lambda$edit$0(net.kyori.adventure.text.format.Style$Merge$Strategy,java.util.function.Consumer,net.kyori.adventure.text.format.Style$Builder) -> a
    71:71:void <clinit>() -> <clinit>
net.kyori.adventure.text.format.Style$Builder -> net.kyori.adventure.text.c.g$a:
    net.kyori.adventure.text.format.Style$Builder font(net.kyori.adventure.key.Key) -> a
    net.kyori.adventure.text.format.Style$Builder color(net.kyori.adventure.text.format.TextColor) -> a
    net.kyori.adventure.text.format.Style$Builder colorIfAbsent(net.kyori.adventure.text.format.TextColor) -> b
    724:724:net.kyori.adventure.text.format.Style$Builder decorate(net.kyori.adventure.text.format.TextDecoration) -> a
    752:752:net.kyori.adventure.text.format.Style$Builder decoration(net.kyori.adventure.text.format.TextDecoration,boolean) -> a
    net.kyori.adventure.text.format.Style$Builder decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> a
    net.kyori.adventure.text.format.Style$Builder clickEvent(net.kyori.adventure.text.event.ClickEvent) -> a
    net.kyori.adventure.text.format.Style$Builder hoverEvent(net.kyori.adventure.text.event.HoverEventSource) -> a
    net.kyori.adventure.text.format.Style$Builder insertion(java.lang.String) -> a
    852:852:net.kyori.adventure.text.format.Style$Builder merge(net.kyori.adventure.text.format.Style,net.kyori.adventure.text.format.Style$Merge$Strategy) -> a
    894:894:net.kyori.adventure.text.format.Style$Builder merge(net.kyori.adventure.text.format.Style,java.util.Set) -> a
    net.kyori.adventure.text.format.Style$Builder merge(net.kyori.adventure.text.format.Style,net.kyori.adventure.text.format.Style$Merge$Strategy,java.util.Set) -> a
    net.kyori.adventure.text.format.Style build() -> a
    679:679:java.lang.Object build() -> build
    679:679:net.kyori.adventure.text.format.StyleSetter decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> b
    679:679:net.kyori.adventure.text.format.StyleSetter decoration(net.kyori.adventure.text.format.TextDecoration,boolean) -> b
    679:679:net.kyori.adventure.text.format.StyleSetter decorate(net.kyori.adventure.text.format.TextDecoration) -> b
net.kyori.adventure.text.format.Style$Merge -> net.kyori.adventure.text.c.g$b:
    net.kyori.adventure.text.format.Style$Merge COLOR -> a
    net.kyori.adventure.text.format.Style$Merge DECORATIONS -> b
    net.kyori.adventure.text.format.Style$Merge EVENTS -> c
    net.kyori.adventure.text.format.Style$Merge INSERTION -> d
    net.kyori.adventure.text.format.Style$Merge FONT -> e
    java.util.Set ALL -> f
    net.kyori.adventure.text.format.Style$Merge[] $VALUES -> g
    563:563:net.kyori.adventure.text.format.Style$Merge[] values() -> values
    563:563:net.kyori.adventure.text.format.Style$Merge valueOf(java.lang.String) -> valueOf
    563:563:void <init>(java.lang.String,int) -> <init>
    605:605:java.util.Set all() -> a
    626:626:java.util.Set merges(net.kyori.adventure.text.format.Style$Merge[]) -> a
    1055:1057:java.util.Set net.kyori.adventure.util.MonkeyBars.enumSet(java.lang.Class,java.lang.Enum[]):55:57 -> a
    1055:1057:java.util.Set merges(net.kyori.adventure.text.format.Style$Merge[]):626 -> a
    644:644:boolean hasAll(java.util.Set) -> a
    563:596:void <clinit>() -> <clinit>
net.kyori.adventure.text.format.Style$Merge$Strategy -> net.kyori.adventure.text.c.g$b$a:
    net.kyori.adventure.text.format.Style$Merge$Strategy ALWAYS -> a
    net.kyori.adventure.text.format.Style$Merge$Strategy NEVER -> b
    net.kyori.adventure.text.format.Style$Merge$Strategy IF_ABSENT_ON_TARGET -> c
    net.kyori.adventure.text.format.Style$Merge$Strategy[] $VALUES -> d
    652:652:net.kyori.adventure.text.format.Style$Merge$Strategy[] values() -> values
    652:652:net.kyori.adventure.text.format.Style$Merge$Strategy valueOf(java.lang.String) -> valueOf
    652:652:void <init>(java.lang.String,int) -> <init>
    652:670:void <clinit>() -> <clinit>
net.kyori.adventure.text.format.StyleBuilderApplicable -> net.kyori.adventure.text.c.h:
    void styleApply(net.kyori.adventure.text.format.Style$Builder) -> a
net.kyori.adventure.text.format.StyleImpl -> net.kyori.adventure.text.c.i:
    net.kyori.adventure.text.format.StyleImpl EMPTY -> a
    net.kyori.adventure.key.Key font -> b
    net.kyori.adventure.text.format.TextColor color -> c
    net.kyori.adventure.text.format.DecorationMap decorations -> d
    net.kyori.adventure.text.event.ClickEvent clickEvent -> e
    net.kyori.adventure.text.event.HoverEvent hoverEvent -> f
    java.lang.String insertion -> g
    59:66:void <init>(net.kyori.adventure.key.Key,net.kyori.adventure.text.format.TextColor,java.util.Map,net.kyori.adventure.text.event.ClickEvent,net.kyori.adventure.text.event.HoverEvent,java.lang.String) -> <init>
    70:70:net.kyori.adventure.key.Key font() -> d
    81:81:net.kyori.adventure.text.format.TextColor color() -> e
    86:87:net.kyori.adventure.text.format.Style color(net.kyori.adventure.text.format.TextColor) -> b
    101:105:net.kyori.adventure.text.format.TextDecoration$State decoration(net.kyori.adventure.text.format.TextDecoration) -> a
    110:112:net.kyori.adventure.text.format.Style decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> a
    1129:1133:net.kyori.adventure.text.format.DecorationMap net.kyori.adventure.text.format.DecorationMap.with(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State):129:133 -> a
    1129:1133:net.kyori.adventure.text.format.Style decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State):112 -> a
    140:140:net.kyori.adventure.text.event.ClickEvent clickEvent() -> f
    150:150:net.kyori.adventure.text.event.HoverEvent hoverEvent() -> g
    155:155:net.kyori.adventure.text.format.Style hoverEvent(net.kyori.adventure.text.event.HoverEventSource) -> a
    160:160:java.lang.String insertion() -> h
    171:183:net.kyori.adventure.text.format.Style merge(net.kyori.adventure.text.format.Style,net.kyori.adventure.text.format.Style$Merge$Strategy,java.util.Set) -> a
    188:222:net.kyori.adventure.text.format.Style unmerge(net.kyori.adventure.text.format.Style) -> a
    227:230:boolean nothingToMerge(net.kyori.adventure.text.format.Style,net.kyori.adventure.text.format.Style$Merge$Strategy,java.util.Set) -> b
    235:235:boolean isEmpty() -> i
    240:240:net.kyori.adventure.text.format.Style$Builder toBuilder() -> j
    245:252:java.util.stream.Stream examinableProperties() -> examinableProperties
    259:259:java.lang.String toString() -> toString
    264:272:boolean equals(java.lang.Object) -> equals
    277:283:int hashCode() -> hashCode
    42:42:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    42:42:net.kyori.adventure.text.format.StyleSetter decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> b
    43:43:void <clinit>() -> <clinit>
    void toJson$6(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> a
    2000:2000:void toJsonBody$6(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> a
    2000:2000:void toJson$6(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> a
    void <init>() -> <init>
    void fromJson$6(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    3000:3000:void fromJsonField$6(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    3000:3000:void fromJson$6(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.format.StyleImpl$BuilderImpl -> net.kyori.adventure.text.c.i$a:
    net.kyori.adventure.key.Key font -> a
    net.kyori.adventure.text.format.TextColor color -> b
    java.util.Map decorations -> c
    net.kyori.adventure.text.event.ClickEvent clickEvent -> d
    net.kyori.adventure.text.event.HoverEvent hoverEvent -> e
    java.lang.String insertion -> f
    294:296:void <init>() -> <init>
    298:305:void <init>(net.kyori.adventure.text.format.StyleImpl) -> <init>
    309:310:net.kyori.adventure.text.format.Style$Builder font(net.kyori.adventure.key.Key) -> a
    315:316:net.kyori.adventure.text.format.Style$Builder color(net.kyori.adventure.text.format.TextColor) -> a
    321:324:net.kyori.adventure.text.format.Style$Builder colorIfAbsent(net.kyori.adventure.text.format.TextColor) -> b
    329:332:net.kyori.adventure.text.format.Style$Builder decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> a
    350:351:net.kyori.adventure.text.format.Style$Builder clickEvent(net.kyori.adventure.text.event.ClickEvent) -> a
    356:357:net.kyori.adventure.text.format.Style$Builder hoverEvent(net.kyori.adventure.text.event.HoverEventSource) -> a
    362:363:net.kyori.adventure.text.format.Style$Builder insertion(java.lang.String) -> a
    368:433:net.kyori.adventure.text.format.Style$Builder merge(net.kyori.adventure.text.format.Style,net.kyori.adventure.text.format.Style$Merge$Strategy,java.util.Set) -> a
    1315:1316:net.kyori.adventure.text.format.Style$Builder color(net.kyori.adventure.text.format.TextColor):315:316 -> a
    1315:1316:net.kyori.adventure.text.format.Style$Builder merge(net.kyori.adventure.text.format.Style,net.kyori.adventure.text.format.Style$Merge$Strategy,java.util.Set):380 -> a
    1337:1345:net.kyori.adventure.text.format.Style$Builder decorationIfAbsent(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State):337:345 -> a
    1337:1345:net.kyori.adventure.text.format.Style$Builder merge(net.kyori.adventure.text.format.Style,net.kyori.adventure.text.format.Style$Merge$Strategy,java.util.Set):393 -> a
    1350:1351:net.kyori.adventure.text.format.Style$Builder clickEvent(net.kyori.adventure.text.event.ClickEvent):350:351 -> a
    1350:1351:net.kyori.adventure.text.format.Style$Builder merge(net.kyori.adventure.text.format.Style,net.kyori.adventure.text.format.Style$Merge$Strategy,java.util.Set):403 -> a
    1362:1363:net.kyori.adventure.text.format.Style$Builder insertion(java.lang.String):362:363 -> a
    1362:1363:net.kyori.adventure.text.format.Style$Builder merge(net.kyori.adventure.text.format.Style,net.kyori.adventure.text.format.Style$Merge$Strategy,java.util.Set):419 -> a
    2309:2310:net.kyori.adventure.text.format.Style$Builder font(net.kyori.adventure.key.Key):309:310 -> a
    2309:2310:net.kyori.adventure.text.format.Style$Builder merge(net.kyori.adventure.text.format.Style,net.kyori.adventure.text.format.Style$Merge$Strategy,java.util.Set):428 -> a
    438:441:net.kyori.adventure.text.format.StyleImpl build() -> b
    2445:2446:boolean isEmpty():445:446 -> b
    2445:2446:net.kyori.adventure.text.format.StyleImpl build():438 -> b
    286:286:net.kyori.adventure.text.format.Style build() -> a
    286:286:java.lang.Object build() -> build
    286:286:net.kyori.adventure.text.format.StyleSetter decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> b
    446:446:boolean lambda$isEmpty$0(net.kyori.adventure.text.format.TextDecoration$State) -> a
net.kyori.adventure.text.format.StyleImplhoverEventTypeToken -> net.kyori.adventure.text.c.j:
    void <init>() -> <init>
net.kyori.adventure.text.format.StyleSetter -> net.kyori.adventure.text.c.k:
    84:84:net.kyori.adventure.text.format.StyleSetter decorate(net.kyori.adventure.text.format.TextDecoration) -> b
    112:112:net.kyori.adventure.text.format.StyleSetter decoration(net.kyori.adventure.text.format.TextDecoration,boolean) -> b
    net.kyori.adventure.text.format.StyleSetter decoration(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> b
net.kyori.adventure.text.format.TextColor -> net.kyori.adventure.text.c.l:
    55:57:net.kyori.adventure.text.format.TextColor color(int) -> b
    81:106:net.kyori.adventure.text.format.TextColor color(net.kyori.adventure.util.HSVLike) -> a
    120:120:net.kyori.adventure.text.format.TextColor color(int,int,int) -> a
    133:133:net.kyori.adventure.text.format.TextColor color(float,float,float) -> a
    144:152:net.kyori.adventure.text.format.TextColor fromHexString(java.lang.String) -> a
    int value() -> b
    202:202:java.lang.String asHexString() -> d
    213:213:int red() -> e
    224:224:int green() -> f
    235:235:int blue() -> g
    250:260:net.kyori.adventure.text.format.TextColor lerp(float,net.kyori.adventure.util.RGBLike,net.kyori.adventure.util.RGBLike) -> a
    266:267:void styleApply(net.kyori.adventure.text.format.Style$Builder) -> a
    271:271:int compareTo(net.kyori.adventure.text.format.TextColor) -> b
    276:276:java.util.stream.Stream examinableProperties() -> examinableProperties
    46:46:int compareTo(java.lang.Object) -> compareTo
net.kyori.adventure.text.format.TextColorImpl -> net.kyori.adventure.text.c.m:
    int value -> a
    33:35:void <init>(int) -> <init>
    39:39:int value() -> b
    44:47:boolean equals(java.lang.Object) -> equals
    52:52:int hashCode() -> hashCode
    57:57:java.lang.String toString() -> toString
    void toJson$20(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> a
    1000:1000:void toJsonBody$20(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> a
    1000:1000:void toJson$20(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> a
    void <init>() -> <init>
    void fromJson$20(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    2000:2000:void fromJsonField$20(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    2000:2000:void fromJson$20(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.format.TextDecoration -> net.kyori.adventure.text.c.n:
    net.kyori.adventure.text.format.TextDecoration OBFUSCATED -> a
    net.kyori.adventure.text.format.TextDecoration BOLD -> b
    net.kyori.adventure.text.format.TextDecoration STRIKETHROUGH -> c
    net.kyori.adventure.text.format.TextDecoration UNDERLINED -> d
    net.kyori.adventure.text.format.TextDecoration ITALIC -> e
    net.kyori.adventure.util.Index NAMES -> f
    java.lang.String name -> g
    net.kyori.adventure.text.format.TextDecoration[] $VALUES -> h
    39:39:net.kyori.adventure.text.format.TextDecoration[] values() -> values
    39:39:net.kyori.adventure.text.format.TextDecoration valueOf(java.lang.String) -> valueOf
    79:81:void <init>(java.lang.String,int,java.lang.String) -> <init>
    117:117:net.kyori.adventure.text.format.TextDecorationAndState withState(boolean) -> a
    144:145:void styleApply(net.kyori.adventure.text.format.Style$Builder) -> a
    149:149:java.lang.String toString() -> toString
    76:76:java.lang.String lambda$static$0(net.kyori.adventure.text.format.TextDecoration) -> a
    39:76:void <clinit>() -> <clinit>
net.kyori.adventure.text.format.TextDecoration$State -> net.kyori.adventure.text.c.n$a:
    net.kyori.adventure.text.format.TextDecoration$State NOT_SET -> a
    net.kyori.adventure.text.format.TextDecoration$State FALSE -> b
    net.kyori.adventure.text.format.TextDecoration$State TRUE -> c
    java.lang.String name -> d
    net.kyori.adventure.text.format.TextDecoration$State[] $VALUES -> e
    157:157:net.kyori.adventure.text.format.TextDecoration$State[] values() -> values
    157:157:net.kyori.adventure.text.format.TextDecoration$State valueOf(java.lang.String) -> valueOf
    179:181:void <init>(java.lang.String,int,java.lang.String) -> <init>
    185:185:java.lang.String toString() -> toString
    196:196:net.kyori.adventure.text.format.TextDecoration$State byBoolean(boolean) -> a
    157:175:void <clinit>() -> <clinit>
net.kyori.adventure.text.format.TextDecorationAndState -> net.kyori.adventure.text.c.o:
    net.kyori.adventure.text.format.TextDecoration decoration() -> b
    net.kyori.adventure.text.format.TextDecoration$State state() -> c
    57:58:void styleApply(net.kyori.adventure.text.format.Style$Builder) -> a
    62:64:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.text.format.TextDecorationAndStateImpl -> net.kyori.adventure.text.c.p:
    net.kyori.adventure.text.format.TextDecoration decoration -> a
    net.kyori.adventure.text.format.TextDecoration$State state -> b
    36:41:void <init>(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.TextDecoration$State) -> <init>
    45:45:net.kyori.adventure.text.format.TextDecoration decoration() -> b
    50:50:net.kyori.adventure.text.format.TextDecoration$State state() -> c
    55:55:java.lang.String toString() -> toString
    60:63:boolean equals(java.lang.Object) -> equals
    68:70:int hashCode() -> hashCode
net.kyori.adventure.text.format.TextFormat -> net.kyori.adventure.text.c.q:
net.kyori.adventure.text.minimessage.ArgumentQueueImpl -> net.kyori.adventure.text.minimessage.a:
    net.kyori.adventure.text.minimessage.Context context -> b
    java.util.List args -> a
    int ptr -> c
    38:43:void <init>(net.kyori.adventure.text.minimessage.Context,java.util.List) -> <init>
    47:50:net.kyori.adventure.text.minimessage.tag.Tag$Argument pop() -> pop
    55:59:net.kyori.adventure.text.minimessage.tag.Tag$Argument popOr(java.lang.String) -> popOr
    64:68:net.kyori.adventure.text.minimessage.tag.Tag$Argument popOr(java.util.function.Supplier) -> popOr
    73:73:net.kyori.adventure.text.minimessage.tag.Tag$Argument peek() -> peek
    78:78:boolean hasNext() -> hasNext
    83:84:void reset() -> reset
    88:88:java.lang.String toString() -> toString
net.kyori.adventure.text.minimessage.Context -> net.kyori.adventure.text.minimessage.Context:
    net.kyori.adventure.text.Component deserialize(java.lang.String) -> deserialize
    net.kyori.adventure.text.Component deserialize(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> deserialize
    net.kyori.adventure.text.Component deserialize(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver[]) -> deserialize
    net.kyori.adventure.text.minimessage.ParsingException newException(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue) -> newException
    net.kyori.adventure.text.minimessage.ParsingException newException(java.lang.String) -> newException
    net.kyori.adventure.text.minimessage.ParsingException newException(java.lang.String,java.lang.Throwable,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue) -> newException
net.kyori.adventure.text.minimessage.ContextImpl -> net.kyori.adventure.text.minimessage.b:
    net.kyori.adventure.text.minimessage.internal.parser.Token[] EMPTY_TOKEN_ARRAY -> g
    boolean strict -> a
    java.util.function.Consumer debugOutput -> b
    java.lang.String message -> c
    net.kyori.adventure.text.minimessage.MiniMessage miniMessage -> h
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver tagResolver -> d
    java.util.function.UnaryOperator preProcessor -> e
    java.util.function.UnaryOperator postProcessor -> f
    66:74:void <init>(boolean,java.util.function.Consumer,java.lang.String,net.kyori.adventure.text.minimessage.MiniMessage,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver,java.util.function.UnaryOperator,java.util.function.UnaryOperator) -> <init>
    85:85:net.kyori.adventure.text.minimessage.ContextImpl of(boolean,java.util.function.Consumer,java.lang.String,net.kyori.adventure.text.minimessage.MiniMessageImpl,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver,java.util.function.UnaryOperator,java.util.function.UnaryOperator) -> a
    118:118:net.kyori.adventure.text.Component deserialize(java.lang.String) -> deserialize
    123:124:net.kyori.adventure.text.Component deserialize(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> deserialize
    129:130:net.kyori.adventure.text.Component deserialize(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver[]) -> deserialize
    135:135:net.kyori.adventure.text.minimessage.ParsingException newException(java.lang.String) -> newException
    140:140:net.kyori.adventure.text.minimessage.ParsingException newException(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue) -> newException
    145:145:net.kyori.adventure.text.minimessage.ParsingException newException(java.lang.String,java.lang.Throwable,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue) -> newException
    149:153:net.kyori.adventure.text.minimessage.internal.parser.Token[] tagsToTokens(java.util.List) -> a
    48:48:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.MiniMessage -> net.kyori.adventure.text.minimessage.MiniMessage:
    54:54:net.kyori.adventure.text.minimessage.MiniMessage miniMessage() -> miniMessage
    java.lang.String escapeTags(java.lang.String) -> escapeTags
    java.lang.String escapeTags(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> escapeTags
    93:93:java.lang.String escapeTags(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver[]) -> escapeTags
    java.lang.String stripTags(java.lang.String) -> stripTags
    java.lang.String stripTags(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> stripTags
    132:132:java.lang.String stripTags(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver[]) -> stripTags
    net.kyori.adventure.text.Component deserialize(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> deserialize
    158:158:net.kyori.adventure.text.Component deserialize(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver[]) -> deserialize
    net.kyori.adventure.text.minimessage.tree.Node$Root deserializeToTree(java.lang.String) -> deserializeToTree
    net.kyori.adventure.text.minimessage.tree.Node$Root deserializeToTree(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> deserializeToTree
    196:196:net.kyori.adventure.text.minimessage.tree.Node$Root deserializeToTree(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver[]) -> deserializeToTree
    206:206:net.kyori.adventure.text.minimessage.MiniMessage$Builder builder() -> builder
net.kyori.adventure.text.minimessage.MiniMessage$Builder -> net.kyori.adventure.text.minimessage.MiniMessage$Builder:
    net.kyori.adventure.text.minimessage.MiniMessage$Builder tags(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> tags
    net.kyori.adventure.text.minimessage.MiniMessage$Builder editTags(java.util.function.Consumer) -> editTags
    net.kyori.adventure.text.minimessage.MiniMessage$Builder strict(boolean) -> strict
    net.kyori.adventure.text.minimessage.MiniMessage$Builder debug(java.util.function.Consumer) -> debug
    net.kyori.adventure.text.minimessage.MiniMessage$Builder postProcessor(java.util.function.UnaryOperator) -> postProcessor
    net.kyori.adventure.text.minimessage.MiniMessage$Builder preProcessor(java.util.function.UnaryOperator) -> preProcessor
    net.kyori.adventure.text.minimessage.MiniMessage build() -> build
    214:214:java.lang.Object build() -> build
net.kyori.adventure.text.minimessage.MiniMessage$Provider -> net.kyori.adventure.text.minimessage.MiniMessage$Provider:
    net.kyori.adventure.text.minimessage.MiniMessage miniMessage() -> miniMessage
    java.util.function.Consumer builder() -> builder
net.kyori.adventure.text.minimessage.MiniMessageImpl -> net.kyori.adventure.text.minimessage.c:
    java.util.Optional SERVICE -> d
    java.util.function.Consumer BUILDER -> a
    java.util.function.UnaryOperator DEFAULT_NO_OP -> b
    java.util.function.UnaryOperator DEFAULT_COMPACTING_METHOD -> c
    boolean strict -> e
    java.util.function.Consumer debugOutput -> f
    java.util.function.UnaryOperator postProcessor -> g
    java.util.function.UnaryOperator preProcessor -> h
    net.kyori.adventure.text.minimessage.MiniMessageParser parser -> i
    69:75:void <init>(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver,boolean,java.util.function.Consumer,java.util.function.UnaryOperator,java.util.function.UnaryOperator) -> <init>
    84:84:net.kyori.adventure.text.Component deserialize(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> deserialize
    89:89:net.kyori.adventure.text.minimessage.tree.Node$Root deserializeToTree(java.lang.String) -> deserializeToTree
    94:94:net.kyori.adventure.text.minimessage.tree.Node$Root deserializeToTree(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> deserializeToTree
    119:119:java.lang.String escapeTags(java.lang.String) -> escapeTags
    124:124:java.lang.String escapeTags(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> escapeTags
    129:129:java.lang.String stripTags(java.lang.String) -> stripTags
    134:134:java.lang.String stripTags(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> stripTags
    138:142:net.kyori.adventure.text.minimessage.ContextImpl newContext(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> a
    45:45:java.lang.Object serialize(net.kyori.adventure.text.Component) -> serialize
    1099:1099:java.lang.String serialize(net.kyori.adventure.text.Component):99:99 -> serialize
    1099:1099:java.lang.Object serialize(net.kyori.adventure.text.Component):45 -> serialize
    1103:1114:net.kyori.adventure.text.minimessage.internal.serializer.SerializableResolver serialResolver(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver):103:114 -> serialize
    1103:1114:java.lang.String serialize(net.kyori.adventure.text.Component):99 -> serialize
    1103:1114:java.lang.Object serialize(net.kyori.adventure.text.Component):45 -> serialize
    45:45:net.kyori.adventure.text.Component deserialize(java.lang.Object) -> deserialize
    2079:2079:net.kyori.adventure.text.Component deserialize(java.lang.String):79:79 -> deserialize
    2079:2079:net.kyori.adventure.text.Component deserialize(java.lang.Object):45 -> deserialize
    49:49:java.util.function.Consumer lambda$static$1() -> b
    51:51:void lambda$static$0(net.kyori.adventure.text.minimessage.MiniMessage$Builder) -> a
    45:45:java.util.Optional access$000() -> a
    46:61:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.MiniMessageImpl$BuilderImpl -> net.kyori.adventure.text.minimessage.c$a:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver tagResolver -> a
    boolean strict -> b
    java.util.function.Consumer debug -> c
    java.util.function.UnaryOperator postProcessor -> d
    java.util.function.UnaryOperator preProcessor -> e
    147:155:void <init>() -> <init>
    168:169:net.kyori.adventure.text.minimessage.MiniMessage$Builder tags(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> tags
    174:178:net.kyori.adventure.text.minimessage.MiniMessage$Builder editTags(java.util.function.Consumer) -> editTags
    183:184:net.kyori.adventure.text.minimessage.MiniMessage$Builder strict(boolean) -> strict
    189:190:net.kyori.adventure.text.minimessage.MiniMessage$Builder debug(java.util.function.Consumer) -> debug
    195:196:net.kyori.adventure.text.minimessage.MiniMessage$Builder postProcessor(java.util.function.UnaryOperator) -> postProcessor
    201:202:net.kyori.adventure.text.minimessage.MiniMessage$Builder preProcessor(java.util.function.UnaryOperator) -> preProcessor
    207:207:net.kyori.adventure.text.minimessage.MiniMessage build() -> build
    146:146:java.lang.Object build() -> build
net.kyori.adventure.text.minimessage.MiniMessageImpl$Instances -> net.kyori.adventure.text.minimessage.c$b:
    net.kyori.adventure.text.minimessage.MiniMessage INSTANCE -> a
    57:57:net.kyori.adventure.text.minimessage.MiniMessage lambda$static$0() -> a
    55:57:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.MiniMessageParser -> net.kyori.adventure.text.minimessage.d:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver tagResolver -> a
    54:56:void <init>() -> <init>
    58:60:void <init>(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> <init>
    63:65:java.lang.String escapeTokens(net.kyori.adventure.text.minimessage.ContextImpl) -> a
    1097:1097:java.lang.String net.kyori.adventure.text.minimessage.ContextImpl.message():97:97 -> a
    1097:1097:java.lang.String escapeTokens(net.kyori.adventure.text.minimessage.ContextImpl):63 -> a
    69:70:void escapeTokens(java.lang.StringBuilder,net.kyori.adventure.text.minimessage.ContextImpl) -> a
    2097:2097:java.lang.String net.kyori.adventure.text.minimessage.ContextImpl.message():97:97 -> a
    2097:2097:void escapeTokens(java.lang.StringBuilder,net.kyori.adventure.text.minimessage.ContextImpl):69 -> a
    73:87:void escapeTokens(java.lang.StringBuilder,java.lang.String,net.kyori.adventure.text.minimessage.ContextImpl) -> a
    90:92:java.lang.String stripTokens(net.kyori.adventure.text.minimessage.ContextImpl) -> b
    3097:3097:java.lang.String net.kyori.adventure.text.minimessage.ContextImpl.message():97:97 -> b
    3097:3097:java.lang.String stripTokens(net.kyori.adventure.text.minimessage.ContextImpl):90 -> b
    4096:4097:void processTokens(java.lang.StringBuilder,net.kyori.adventure.text.minimessage.ContextImpl,java.util.function.BiConsumer):96:97 -> b
    4096:4097:java.lang.String stripTokens(net.kyori.adventure.text.minimessage.ContextImpl):91 -> b
    5097:5097:java.lang.String net.kyori.adventure.text.minimessage.ContextImpl.message():97:97 -> b
    5097:5097:void processTokens(java.lang.StringBuilder,net.kyori.adventure.text.minimessage.ContextImpl,java.util.function.BiConsumer):96 -> b
    5097:5097:java.lang.String stripTokens(net.kyori.adventure.text.minimessage.ContextImpl):91 -> b
    100:126:void processTokens(java.lang.StringBuilder,java.lang.String,net.kyori.adventure.text.minimessage.ContextImpl,java.util.function.BiConsumer) -> a
    5105:5105:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver net.kyori.adventure.text.minimessage.ContextImpl.extraTags():105:105 -> a
    5105:5105:void processTokens(java.lang.StringBuilder,java.lang.String,net.kyori.adventure.text.minimessage.ContextImpl,java.util.function.BiConsumer):100 -> a
    129:205:net.kyori.adventure.text.minimessage.internal.parser.node.RootNode parseToTree(net.kyori.adventure.text.minimessage.ContextImpl) -> c
    6105:6105:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver net.kyori.adventure.text.minimessage.ContextImpl.extraTags():105:105 -> c
    6105:6105:net.kyori.adventure.text.minimessage.internal.parser.node.RootNode parseToTree(net.kyori.adventure.text.minimessage.ContextImpl):129 -> c
    6113:6113:java.util.function.UnaryOperator net.kyori.adventure.text.minimessage.ContextImpl.preProcessor():113:113 -> c
    6113:6113:net.kyori.adventure.text.minimessage.internal.parser.node.RootNode parseToTree(net.kyori.adventure.text.minimessage.ContextImpl):130 -> c
    7097:7097:java.lang.String net.kyori.adventure.text.minimessage.ContextImpl.message():97:97 -> c
    7097:7097:net.kyori.adventure.text.minimessage.internal.parser.node.RootNode parseToTree(net.kyori.adventure.text.minimessage.ContextImpl):130 -> c
    8093:8093:java.util.function.Consumer net.kyori.adventure.text.minimessage.ContextImpl.debugOutput():93:93 -> c
    8093:8093:net.kyori.adventure.text.minimessage.internal.parser.node.RootNode parseToTree(net.kyori.adventure.text.minimessage.ContextImpl):131 -> c
    8101:8102:void net.kyori.adventure.text.minimessage.ContextImpl.message(java.lang.String):101:102 -> c
    8101:8102:net.kyori.adventure.text.minimessage.internal.parser.node.RootNode parseToTree(net.kyori.adventure.text.minimessage.ContextImpl):196 -> c
    9089:9089:boolean net.kyori.adventure.text.minimessage.ContextImpl.strict():89:89 -> c
    9089:9089:net.kyori.adventure.text.minimessage.internal.parser.node.RootNode parseToTree(net.kyori.adventure.text.minimessage.ContextImpl):198 -> c
    209:210:net.kyori.adventure.text.Component parseFormat(net.kyori.adventure.text.minimessage.ContextImpl) -> d
    9109:9109:java.util.function.UnaryOperator net.kyori.adventure.text.minimessage.ContextImpl.postProcessor():109:109 -> d
    9109:9109:net.kyori.adventure.text.Component parseFormat(net.kyori.adventure.text.minimessage.ContextImpl):210 -> d
    214:260:net.kyori.adventure.text.Component treeToComponent(net.kyori.adventure.text.minimessage.internal.parser.node.ElementNode,net.kyori.adventure.text.minimessage.ContextImpl) -> a
    10093:10093:java.util.function.Consumer net.kyori.adventure.text.minimessage.ContextImpl.debugOutput():93:93 -> a
    10093:10093:net.kyori.adventure.text.Component treeToComponent(net.kyori.adventure.text.minimessage.internal.parser.node.ElementNode,net.kyori.adventure.text.minimessage.ContextImpl):251 -> a
    11060:11060:net.kyori.examination.string.MultiLineStringExaminer net.kyori.examination.string.MultiLineStringExaminer.simpleEscaping():60:60 -> a
    11060:11060:net.kyori.adventure.text.Component treeToComponent(net.kyori.adventure.text.minimessage.internal.parser.node.ElementNode,net.kyori.adventure.text.minimessage.ContextImpl):256 -> a
    264:268:void visitModifying(net.kyori.adventure.text.minimessage.tag.Modifying,net.kyori.adventure.text.minimessage.internal.parser.node.ElementNode,int) -> a
    271:275:net.kyori.adventure.text.Component handleModifying(net.kyori.adventure.text.minimessage.tag.Modifying,net.kyori.adventure.text.Component,int) -> a
    191:192:boolean lambda$parseToTree$4(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver,java.lang.String) -> a
    184:186:net.kyori.adventure.text.minimessage.tag.Tag lambda$parseToTree$3(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver,net.kyori.adventure.text.minimessage.ContextImpl,java.lang.String,java.util.List,net.kyori.adventure.text.minimessage.internal.parser.Token) -> a
    142:178:net.kyori.adventure.text.minimessage.tag.Tag lambda$parseToTree$2(java.util.function.Consumer,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver,net.kyori.adventure.text.minimessage.ContextImpl,java.lang.String,java.util.List,net.kyori.adventure.text.minimessage.internal.parser.Token) -> a
    91:91:void lambda$stripTokens$1(net.kyori.adventure.text.minimessage.internal.parser.Token,java.lang.StringBuilder) -> a
    74:86:void lambda$escapeTokens$0(java.lang.String,net.kyori.adventure.text.minimessage.ContextImpl,net.kyori.adventure.text.minimessage.internal.parser.Token,java.lang.StringBuilder) -> a
net.kyori.adventure.text.minimessage.MiniMessageParser$1 -> net.kyori.adventure.text.minimessage.d$1:
    int[] $SwitchMap$net$kyori$adventure$text$minimessage$internal$parser$TokenType -> a
    103:103:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.MiniMessageSerializer -> net.kyori.adventure.text.minimessage.e:
    53:65:java.lang.String serialize(net.kyori.adventure.text.Component,net.kyori.adventure.text.minimessage.internal.serializer.SerializableResolver,boolean) -> a
    1139:1140:void net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector.mark():139:140 -> a
    1139:1140:java.lang.String serialize(net.kyori.adventure.text.Component,net.kyori.adventure.text.minimessage.internal.serializer.SerializableResolver,boolean):56 -> a
    70:82:void visit(net.kyori.adventure.text.Component,net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector,net.kyori.adventure.text.minimessage.internal.serializer.SerializableResolver,boolean) -> a
    1340:1350:void net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector.flushClaims(net.kyori.adventure.text.Component):340:350 -> a
    1340:1350:void visit(net.kyori.adventure.text.Component,net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector,net.kyori.adventure.text.minimessage.internal.serializer.SerializableResolver,boolean):71 -> a
    2139:2140:void net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector.mark():139:140 -> a
    2139:2140:void visit(net.kyori.adventure.text.Component,net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector,net.kyori.adventure.text.minimessage.internal.serializer.SerializableResolver,boolean):75 -> a
    3029:3029:void com.mongodb.client.gridfs.codecs.GridFSFileCodecProvider.<init>():29:29 -> <init>
    3034:3037:org.bson.codecs.Codec com.mongodb.client.gridfs.codecs.GridFSFileCodecProvider.get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry):34:37 -> a
    3043:3043:java.lang.String com.mongodb.client.gridfs.codecs.GridFSFileCodecProvider.toString():43:43 -> toString
net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector -> net.kyori.adventure.text.minimessage.e$a:
    char[] TEXT_ESCAPES -> c
    char[] TAG_TOKENS -> d
    char[] SINGLE_QUOTED_ESCAPES -> e
    char[] DOUBLE_QUOTED_ESCAPES -> f
    net.kyori.adventure.text.minimessage.internal.serializer.SerializableResolver resolver -> g
    boolean strict -> h
    java.lang.StringBuilder consumer -> i
    java.lang.String[] activeTags -> j
    int tagLevel -> k
    net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector$TagState tagState -> l
    net.kyori.adventure.text.minimessage.internal.serializer.Emitable componentClaim -> a
    java.util.Set claimedStyleElements -> b
    109:312:void <init>(net.kyori.adventure.text.minimessage.internal.serializer.SerializableResolver,boolean,java.lang.StringBuilder) -> <init>
    121:125:void pushActiveTag(java.lang.String) -> a
    128:135:java.lang.String popTag(boolean) -> a
    143:150:void popToMark() -> a
    153:159:void popAll() -> b
    162:166:void completeTag() -> c
    182:186:net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter selfClosingTag(java.lang.String) -> selfClosingTag
    191:196:net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter argument(java.lang.String) -> argument
    201:206:net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter argument(java.lang.String,net.kyori.adventure.text.minimessage.internal.serializer.QuotingOverride) -> argument
    211:212:net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter argument(net.kyori.adventure.text.Component) -> argument
    217:220:net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector text(java.lang.String) -> b
    224:254:void escapeTagContent(java.lang.String,net.kyori.adventure.text.minimessage.internal.serializer.QuotingOverride) -> a
    257:285:void appendEscaping(java.lang.StringBuilder,java.lang.String,char[],boolean) -> a
    295:307:void emitClose(java.lang.String) -> c
    316:319:void style(java.lang.String,net.kyori.adventure.text.minimessage.internal.serializer.Emitable) -> style
    323:326:boolean component(net.kyori.adventure.text.minimessage.internal.serializer.Emitable) -> component
    331:331:boolean componentClaimed() -> componentClaimed
    336:336:boolean styleClaimed(java.lang.String) -> styleClaimed
    84:84:net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter pop() -> pop
    1289:1290:net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector pop():289:290 -> pop
    1289:1290:net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter pop():84 -> pop
    84:84:net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter text(java.lang.String) -> text
    84:84:net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter tag(java.lang.String) -> tag
    2172:2177:net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector tag(java.lang.String):172:177 -> tag
    2172:2177:net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter tag(java.lang.String):84 -> tag
    101:104:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector$TagState -> net.kyori.adventure.text.minimessage.e$a$a:
    net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector$TagState TEXT -> a
    net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector$TagState MID -> b
    net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector$TagState MID_SELF_CLOSING -> c
    boolean isTag -> d
    net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector$TagState[] $VALUES -> e
    85:85:net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector$TagState[] values() -> values
    85:85:net.kyori.adventure.text.minimessage.MiniMessageSerializer$Collector$TagState valueOf(java.lang.String) -> valueOf
    92:94:void <init>(java.lang.String,int,boolean) -> <init>
    85:88:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.ParsingException -> net.kyori.adventure.text.minimessage.ParsingException:
    int LOCATION_UNKNOWN -> LOCATION_UNKNOWN
    72:73:void <init>(java.lang.String,java.lang.Throwable,boolean,boolean) -> <init>
    java.lang.String originalText() -> originalText
    java.lang.String detailMessage() -> detailMessage
    int startIndex() -> startIndex
    int endIndex() -> endIndex
net.kyori.adventure.text.minimessage.internal.TagInternals -> net.kyori.adventure.text.minimessage.internal.TagInternals:
    java.util.regex.Pattern TAG_NAME_PATTERN -> a
    41:42:void <init>() -> <init>
    52:55:void assertValidTagName(java.lang.String) -> assertValidTagName
    66:66:boolean sanitizeAndCheckValidTagName(java.lang.String) -> sanitizeAndCheckValidTagName
    78:79:void sanitizeAndAssertValidTagName(java.lang.String) -> sanitizeAndAssertValidTagName
    39:39:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.internal.parser.ParsingExceptionImpl -> net.kyori.adventure.text.minimessage.internal.parser.ParsingExceptionImpl:
    java.lang.String originalText -> a
    net.kyori.adventure.text.minimessage.internal.parser.Token[] tokens -> b
    57:60:void <init>(java.lang.String,java.lang.String,net.kyori.adventure.text.minimessage.internal.parser.Token[]) -> <init>
    79:82:void <init>(java.lang.String,java.lang.String,java.lang.Throwable,boolean,net.kyori.adventure.text.minimessage.internal.parser.Token[]) -> <init>
    86:92:java.lang.String getMessage() -> getMessage
    97:97:java.lang.String detailMessage() -> detailMessage
    108:108:java.lang.String originalText() -> originalText
    118:118:net.kyori.adventure.text.minimessage.internal.parser.Token[] tokens() -> tokens
    128:129:void tokens(net.kyori.adventure.text.minimessage.internal.parser.Token[]) -> tokens
    132:145:java.lang.String arrow() -> a
    150:151:int startIndex() -> startIndex
    156:157:int endIndex() -> endIndex
net.kyori.adventure.text.minimessage.internal.parser.Token -> net.kyori.adventure.text.minimessage.internal.parser.Token:
    int startIndex -> a
    int endIndex -> b
    net.kyori.adventure.text.minimessage.internal.parser.TokenType type -> c
    java.util.List childTokens -> d
    44:58:void <init>(int,int,net.kyori.adventure.text.minimessage.internal.parser.TokenType) -> <init>
    67:67:int startIndex() -> startIndex
    77:77:int endIndex() -> endIndex
    87:87:net.kyori.adventure.text.minimessage.internal.parser.TokenType type() -> type
    97:97:java.util.List childTokens() -> childTokens
    107:108:void childTokens(java.util.List) -> childTokens
    118:118:java.lang.CharSequence get(java.lang.CharSequence) -> get
    123:126:java.util.stream.Stream examinableProperties() -> examinableProperties
    132:135:boolean equals(java.lang.Object) -> equals
    140:140:int hashCode() -> hashCode
    145:145:java.lang.String toString() -> toString
net.kyori.adventure.text.minimessage.internal.parser.TokenParser -> net.kyori.adventure.text.minimessage.internal.parser.TokenParser:
    char TAG_START -> TAG_START
    char TAG_END -> TAG_END
    char CLOSE_TAG -> CLOSE_TAG
    char SEPARATOR -> SEPARATOR
    char ESCAPE -> ESCAPE
    66:67:void <init>() -> <init>
    89:92:net.kyori.adventure.text.minimessage.internal.parser.node.RootNode parse(net.kyori.adventure.text.minimessage.internal.parser.TokenParser$TagProvider,java.util.function.Predicate,java.lang.String,java.lang.String,boolean) -> parse
    1394:1539:net.kyori.adventure.text.minimessage.internal.parser.node.RootNode buildTree(net.kyori.adventure.text.minimessage.internal.parser.TokenParser$TagProvider,java.util.function.Predicate,java.util.List,java.lang.String,java.lang.String,boolean):394:539 -> parse
    1394:1539:net.kyori.adventure.text.minimessage.internal.parser.node.RootNode parse(net.kyori.adventure.text.minimessage.internal.parser.TokenParser$TagProvider,java.util.function.Predicate,java.lang.String,java.lang.String,boolean):92 -> parse
    104:117:java.lang.String resolvePreProcessTags(java.lang.String,net.kyori.adventure.text.minimessage.internal.parser.TokenParser$TagProvider) -> resolvePreProcessTags
    129:133:java.util.List tokenize(java.lang.String,boolean) -> tokenize
    2294:2381:void parseSecondPass(java.lang.String,java.util.List):294:381 -> tokenize
    2294:2381:java.util.List tokenize(java.lang.String,boolean):132 -> tokenize
    151:287:void parseString(java.lang.String,boolean,net.kyori.adventure.text.minimessage.internal.parser.match.MatchedTokenConsumer) -> parseString
    551:563:boolean tagCloses(java.util.List,java.util.List) -> a
    576:576:boolean boundsCheck(java.lang.String,int,int) -> a
    586:598:void insert(net.kyori.adventure.text.minimessage.internal.parser.Token,net.kyori.adventure.text.minimessage.internal.parser.Token) -> a
    616:658:java.lang.String unescape(java.lang.String,int,int,java.util.function.IntPredicate) -> unescape
net.kyori.adventure.text.minimessage.internal.parser.TokenParser$1 -> net.kyori.adventure.text.minimessage.internal.parser.TokenParser$1:
    int[] $SwitchMap$net$kyori$adventure$text$minimessage$internal$parser$TokenParser$FirstPassState -> a
    int[] $SwitchMap$net$kyori$adventure$text$minimessage$internal$parser$TokenParser$SecondPassState -> b
    int[] $SwitchMap$net$kyori$adventure$text$minimessage$internal$parser$TokenType -> c
    188:399:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.internal.parser.TokenParser$FirstPassState -> net.kyori.adventure.text.minimessage.internal.parser.TokenParser$a:
    net.kyori.adventure.text.minimessage.internal.parser.TokenParser$FirstPassState NORMAL -> a
    net.kyori.adventure.text.minimessage.internal.parser.TokenParser$FirstPassState TAG -> b
    net.kyori.adventure.text.minimessage.internal.parser.TokenParser$FirstPassState STRING -> c
    net.kyori.adventure.text.minimessage.internal.parser.TokenParser$FirstPassState[] $VALUES -> d
    136:136:net.kyori.adventure.text.minimessage.internal.parser.TokenParser$FirstPassState[] values() -> values
    136:136:net.kyori.adventure.text.minimessage.internal.parser.TokenParser$FirstPassState valueOf(java.lang.String) -> valueOf
    136:136:void <init>(java.lang.String,int) -> <init>
    136:139:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.internal.parser.TokenParser$SecondPassState -> net.kyori.adventure.text.minimessage.internal.parser.TokenParser$b:
    net.kyori.adventure.text.minimessage.internal.parser.TokenParser$SecondPassState NORMAL -> a
    net.kyori.adventure.text.minimessage.internal.parser.TokenParser$SecondPassState STRING -> b
    net.kyori.adventure.text.minimessage.internal.parser.TokenParser$SecondPassState[] $VALUES -> c
    600:600:net.kyori.adventure.text.minimessage.internal.parser.TokenParser$SecondPassState[] values() -> values
    600:600:net.kyori.adventure.text.minimessage.internal.parser.TokenParser$SecondPassState valueOf(java.lang.String) -> valueOf
    600:600:void <init>(java.lang.String,int) -> <init>
    600:602:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.internal.parser.TokenParser$TagProvider -> net.kyori.adventure.text.minimessage.internal.parser.TokenParser$TagProvider:
    net.kyori.adventure.text.minimessage.tag.Tag resolve(java.lang.String,java.util.List,net.kyori.adventure.text.minimessage.internal.parser.Token) -> resolve
    689:689:net.kyori.adventure.text.minimessage.tag.Tag resolve(java.lang.String) -> resolve
    700:703:net.kyori.adventure.text.minimessage.tag.Tag resolve(net.kyori.adventure.text.minimessage.internal.parser.node.TagNode) -> resolve
    717:717:java.lang.String sanitizePlaceholderName(java.lang.String) -> sanitizePlaceholderName
net.kyori.adventure.text.minimessage.internal.parser.TokenType -> net.kyori.adventure.text.minimessage.internal.parser.TokenType:
    net.kyori.adventure.text.minimessage.internal.parser.TokenType TEXT -> TEXT
    net.kyori.adventure.text.minimessage.internal.parser.TokenType OPEN_TAG -> OPEN_TAG
    net.kyori.adventure.text.minimessage.internal.parser.TokenType OPEN_CLOSE_TAG -> OPEN_CLOSE_TAG
    net.kyori.adventure.text.minimessage.internal.parser.TokenType CLOSE_TAG -> CLOSE_TAG
    net.kyori.adventure.text.minimessage.internal.parser.TokenType TAG_VALUE -> TAG_VALUE
    net.kyori.adventure.text.minimessage.internal.parser.TokenType[] $VALUES -> a
    31:31:net.kyori.adventure.text.minimessage.internal.parser.TokenType[] values() -> values
    31:31:net.kyori.adventure.text.minimessage.internal.parser.TokenType valueOf(java.lang.String) -> valueOf
    31:31:void <init>(java.lang.String,int) -> <init>
    31:36:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.internal.parser.match.MatchedTokenConsumer -> net.kyori.adventure.text.minimessage.internal.parser.match.MatchedTokenConsumer:
    java.lang.String input -> a
    int lastIndex -> b
    40:50:void <init>(java.lang.String) -> <init>
    62:63:void accept(int,int,net.kyori.adventure.text.minimessage.internal.parser.TokenType) -> accept
    java.lang.Object result() -> result
    80:80:int lastEndIndex() -> lastEndIndex
net.kyori.adventure.text.minimessage.internal.parser.match.StringResolvingMatchedTokenConsumer -> net.kyori.adventure.text.minimessage.internal.parser.match.StringResolvingMatchedTokenConsumer:
    java.lang.StringBuilder builder -> b
    net.kyori.adventure.text.minimessage.internal.parser.TokenParser$TagProvider tagProvider -> c
    63:66:void <init>(java.lang.String,net.kyori.adventure.text.minimessage.internal.parser.TokenParser$TagProvider) -> <init>
    70:105:void accept(int,int,net.kyori.adventure.text.minimessage.internal.parser.TokenType) -> accept
    109:109:java.lang.String result() -> result
    48:48:java.lang.Object result() -> result
net.kyori.adventure.text.minimessage.internal.parser.match.TokenListProducingMatchedTokenConsumer -> net.kyori.adventure.text.minimessage.internal.parser.match.TokenListProducingMatchedTokenConsumer:
    java.util.List result -> b
    39:49:void <init>(java.lang.String) -> <init>
    53:60:void accept(int,int,net.kyori.adventure.text.minimessage.internal.parser.TokenType) -> accept
    64:64:java.util.List result() -> result
    38:38:java.lang.Object result() -> result
net.kyori.adventure.text.minimessage.internal.parser.node.ElementNode -> net.kyori.adventure.text.minimessage.internal.parser.node.ElementNode:
    net.kyori.adventure.text.minimessage.internal.parser.node.ElementNode parent -> a
    net.kyori.adventure.text.minimessage.internal.parser.Token token -> b
    java.lang.String sourceMessage -> c
    java.util.List children -> d
    45:59:void <init>(net.kyori.adventure.text.minimessage.internal.parser.node.ElementNode,net.kyori.adventure.text.minimessage.internal.parser.Token,java.lang.String) -> <init>
    69:69:net.kyori.adventure.text.minimessage.internal.parser.node.ElementNode parent() -> parent
    79:79:net.kyori.adventure.text.minimessage.internal.parser.Token token() -> token
    89:89:java.lang.String sourceMessage() -> sourceMessage
    100:100:java.util.List children() -> children
    110:110:java.util.List unsafeChildren() -> unsafeChildren
    122:136:void addChild(net.kyori.adventure.text.minimessage.internal.parser.node.ElementNode) -> addChild
    147:153:java.lang.StringBuilder buildToString(java.lang.StringBuilder,int) -> buildToString
    157:159:char[] ident(int) -> a
    164:164:java.lang.String toString() -> toString
    41:41:net.kyori.adventure.text.minimessage.tree.Node parent() -> parent
net.kyori.adventure.text.minimessage.internal.parser.node.RootNode -> net.kyori.adventure.text.minimessage.internal.parser.node.RootNode:
    java.lang.String beforePreprocessing -> a
    45:47:void <init>(java.lang.String,java.lang.String) -> <init>
    51:51:java.lang.String input() -> input
net.kyori.adventure.text.minimessage.internal.parser.node.TagNode -> net.kyori.adventure.text.minimessage.internal.parser.node.TagNode:
    java.util.List parts -> a
    net.kyori.adventure.text.minimessage.tag.Tag tag -> b
    43:67:void <init>(net.kyori.adventure.text.minimessage.internal.parser.node.ElementNode,net.kyori.adventure.text.minimessage.internal.parser.Token,java.lang.String,net.kyori.adventure.text.minimessage.internal.parser.TokenParser$TagProvider) -> <init>
    1074:1082:java.util.List genParts(net.kyori.adventure.text.minimessage.internal.parser.Token,java.lang.String,net.kyori.adventure.text.minimessage.internal.parser.TokenParser$TagProvider):74:82 -> <init>
    1074:1082:void <init>(net.kyori.adventure.text.minimessage.internal.parser.node.ElementNode,net.kyori.adventure.text.minimessage.internal.parser.Token,java.lang.String,net.kyori.adventure.text.minimessage.internal.parser.TokenParser$TagProvider):61 -> <init>
    92:92:java.util.List parts() -> parts
    102:102:java.lang.String name() -> name
    107:107:net.kyori.adventure.text.minimessage.internal.parser.Token token() -> token
    117:117:net.kyori.adventure.text.minimessage.tag.Tag tag() -> tag
    127:128:void tag(net.kyori.adventure.text.minimessage.tag.Tag) -> tag
    132:150:java.lang.StringBuilder buildToString(java.lang.StringBuilder,int) -> buildToString
net.kyori.adventure.text.minimessage.internal.parser.node.TagPart -> net.kyori.adventure.text.minimessage.internal.parser.node.TagPart:
    java.lang.String value -> a
    net.kyori.adventure.text.minimessage.internal.parser.Token token -> b
    52:58:void <init>(java.lang.String,net.kyori.adventure.text.minimessage.internal.parser.Token,net.kyori.adventure.text.minimessage.internal.parser.TokenParser$TagProvider) -> <init>
    68:68:java.lang.String value() -> value
    78:78:net.kyori.adventure.text.minimessage.internal.parser.Token token() -> token
    91:109:java.lang.String unquoteAndEscape(java.lang.String,int,int) -> unquoteAndEscape
    114:114:java.lang.String toString() -> toString
    109:109:boolean lambda$unquoteAndEscape$0(char,int) -> a
net.kyori.adventure.text.minimessage.internal.parser.node.TextNode -> net.kyori.adventure.text.minimessage.internal.parser.node.TextNode:
    38:38:boolean isEscape(int) -> b
    54:55:void <init>(net.kyori.adventure.text.minimessage.internal.parser.node.ElementNode,net.kyori.adventure.text.minimessage.internal.parser.Token,java.lang.String) -> <init>
    59:59:java.lang.String valueName() -> a
net.kyori.adventure.text.minimessage.internal.parser.node.ValueNode -> net.kyori.adventure.text.minimessage.internal.parser.node.ValueNode:
    java.lang.String value -> a
    50:52:void <init>(net.kyori.adventure.text.minimessage.internal.parser.node.ElementNode,net.kyori.adventure.text.minimessage.internal.parser.Token,java.lang.String,java.lang.String) -> <init>
    java.lang.String valueName() -> a
    63:63:java.lang.String value() -> value
    68:68:net.kyori.adventure.text.minimessage.internal.parser.Token token() -> token
    73:75:java.lang.StringBuilder buildToString(java.lang.StringBuilder,int) -> buildToString
net.kyori.adventure.text.minimessage.internal.serializer.ClaimConsumer -> net.kyori.adventure.text.minimessage.internal.serializer.ClaimConsumer:
    void style(java.lang.String,net.kyori.adventure.text.minimessage.internal.serializer.Emitable) -> style
    boolean component(net.kyori.adventure.text.minimessage.internal.serializer.Emitable) -> component
    boolean styleClaimed(java.lang.String) -> styleClaimed
    boolean componentClaimed() -> componentClaimed
net.kyori.adventure.text.minimessage.internal.serializer.ComponentClaimingResolverImpl -> net.kyori.adventure.text.minimessage.internal.serializer.a:
    java.util.Set names -> a
    java.util.function.BiFunction handler -> b
    java.util.function.Function componentClaim -> c
    43:47:void <init>(java.util.Set,java.util.function.BiFunction,java.util.function.Function) -> <init>
    51:53:net.kyori.adventure.text.minimessage.tag.Tag resolve(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> resolve
    58:58:boolean has(java.lang.String) -> has
    63:63:net.kyori.adventure.text.minimessage.internal.serializer.Emitable claimComponent(net.kyori.adventure.text.Component) -> claimComponent
net.kyori.adventure.text.minimessage.internal.serializer.Emitable -> net.kyori.adventure.text.minimessage.internal.serializer.Emitable:
    void emit(net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> emit
net.kyori.adventure.text.minimessage.internal.serializer.QuotingOverride -> net.kyori.adventure.text.minimessage.internal.serializer.QuotingOverride:
    net.kyori.adventure.text.minimessage.internal.serializer.QuotingOverride UNQUOTED -> UNQUOTED
    net.kyori.adventure.text.minimessage.internal.serializer.QuotingOverride QUOTED -> QUOTED
    net.kyori.adventure.text.minimessage.internal.serializer.QuotingOverride[] $VALUES -> a
    33:33:net.kyori.adventure.text.minimessage.internal.serializer.QuotingOverride[] values() -> values
    33:33:net.kyori.adventure.text.minimessage.internal.serializer.QuotingOverride valueOf(java.lang.String) -> valueOf
    33:33:void <init>(java.lang.String,int) -> <init>
    33:47:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.internal.serializer.SerializableResolver -> net.kyori.adventure.text.minimessage.internal.serializer.SerializableResolver:
    59:59:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver claimingComponent(java.lang.String,java.util.function.BiFunction,java.util.function.Function) -> claimingComponent
    72:77:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver claimingComponent(java.util.Set,java.util.function.BiFunction,java.util.function.Function) -> claimingComponent
    90:90:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver claimingStyle(java.lang.String,java.util.function.BiFunction,net.kyori.adventure.text.minimessage.internal.serializer.StyleClaim) -> claimingStyle
    103:108:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver claimingStyle(java.util.Set,java.util.function.BiFunction,net.kyori.adventure.text.minimessage.internal.serializer.StyleClaim) -> claimingStyle
    void handle(net.kyori.adventure.text.Component,net.kyori.adventure.text.minimessage.internal.serializer.ClaimConsumer) -> handle
net.kyori.adventure.text.minimessage.internal.serializer.SerializableResolver$Single -> net.kyori.adventure.text.minimessage.internal.serializer.SerializableResolver$Single:
    128:141:void handle(net.kyori.adventure.text.Component,net.kyori.adventure.text.minimessage.internal.serializer.ClaimConsumer) -> handle
    153:153:net.kyori.adventure.text.minimessage.internal.serializer.StyleClaim claimStyle() -> claimStyle
    168:168:net.kyori.adventure.text.minimessage.internal.serializer.Emitable claimComponent(net.kyori.adventure.text.Component) -> claimComponent
net.kyori.adventure.text.minimessage.internal.serializer.StyleClaim -> net.kyori.adventure.text.minimessage.internal.serializer.StyleClaim:
    53:53:net.kyori.adventure.text.minimessage.internal.serializer.StyleClaim claim(java.lang.String,java.util.function.Function,java.util.function.BiConsumer) -> claim
    68:72:net.kyori.adventure.text.minimessage.internal.serializer.StyleClaim claim(java.lang.String,java.util.function.Function,java.util.function.Predicate,java.util.function.BiConsumer) -> claim
    java.lang.String claimKey() -> claimKey
    net.kyori.adventure.text.minimessage.internal.serializer.Emitable apply(net.kyori.adventure.text.format.Style) -> apply
    53:53:boolean lambda$claim$0(java.lang.Object) -> a
net.kyori.adventure.text.minimessage.internal.serializer.StyleClaimImpl -> net.kyori.adventure.text.minimessage.internal.serializer.b:
    java.lang.String claimKey -> a
    java.util.function.Function lens -> b
    java.util.function.Predicate filter -> c
    java.util.function.BiConsumer emitable -> d
    40:45:void <init>(java.lang.String,java.util.function.Function,java.util.function.Predicate,java.util.function.BiConsumer) -> <init>
    49:49:java.lang.String claimKey() -> claimKey
    54:57:net.kyori.adventure.text.minimessage.internal.serializer.Emitable apply(net.kyori.adventure.text.format.Style) -> apply
    62:62:int hashCode() -> hashCode
    67:70:boolean equals(java.lang.Object) -> equals
    57:57:void lambda$apply$0(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
net.kyori.adventure.text.minimessage.internal.serializer.StyleClaimingResolverImpl -> net.kyori.adventure.text.minimessage.internal.serializer.c:
    java.util.Set names -> a
    java.util.function.BiFunction handler -> b
    net.kyori.adventure.text.minimessage.internal.serializer.StyleClaim styleClaim -> c
    41:45:void <init>(java.util.Set,java.util.function.BiFunction,net.kyori.adventure.text.minimessage.internal.serializer.StyleClaim) -> <init>
    49:51:net.kyori.adventure.text.minimessage.tag.Tag resolve(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> resolve
    56:56:boolean has(java.lang.String) -> has
    61:61:net.kyori.adventure.text.minimessage.internal.serializer.StyleClaim claimStyle() -> claimStyle
net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter -> net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter:
    net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter tag(java.lang.String) -> tag
    net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter selfClosingTag(java.lang.String) -> selfClosingTag
    65:68:net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter arguments(java.lang.String[]) -> arguments
    net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter argument(java.lang.String) -> argument
    net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter argument(java.lang.String,net.kyori.adventure.text.minimessage.internal.serializer.QuotingOverride) -> argument
    net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter argument(net.kyori.adventure.text.Component) -> argument
    net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter text(java.lang.String) -> text
    net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter pop() -> pop
net.kyori.adventure.text.minimessage.tag.AbstractTag -> net.kyori.adventure.text.minimessage.tag.a:
    29:29:void <init>() -> <init>
    32:32:java.lang.String toString() -> toString
net.kyori.adventure.text.minimessage.tag.CallbackStylingTagImpl -> net.kyori.adventure.text.minimessage.tag.b:
    java.util.function.Consumer styles -> a
    37:39:void <init>(java.util.function.Consumer) -> <init>
    43:43:net.kyori.adventure.text.Component value() -> value
    48:48:int hashCode() -> hashCode
    53:56:boolean equals(java.lang.Object) -> equals
    61:61:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.text.minimessage.tag.Inserting -> net.kyori.adventure.text.minimessage.tag.Inserting:
    net.kyori.adventure.text.Component value() -> value
    54:54:boolean allowsChildren() -> allowsChildren
net.kyori.adventure.text.minimessage.tag.InsertingImpl -> net.kyori.adventure.text.minimessage.tag.c:
    boolean allowsChildren -> a
    net.kyori.adventure.text.Component value -> b
    37:40:void <init>(boolean,net.kyori.adventure.text.Component) -> <init>
    44:44:boolean allowsChildren() -> allowsChildren
    49:49:net.kyori.adventure.text.Component value() -> value
    54:54:int hashCode() -> hashCode
    59:62:boolean equals(java.lang.Object) -> equals
    67:69:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.text.minimessage.tag.Modifying -> net.kyori.adventure.text.minimessage.tag.Modifying:
    46:46:void visit(net.kyori.adventure.text.minimessage.tree.Node,int) -> visit
    56:56:void postVisit() -> postVisit
    net.kyori.adventure.text.Component apply(net.kyori.adventure.text.Component,int) -> apply
net.kyori.adventure.text.minimessage.tag.ParserDirective -> net.kyori.adventure.text.minimessage.tag.ParserDirective:
    net.kyori.adventure.text.minimessage.tag.Tag RESET -> RESET
    44:44:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.ParserDirective$1 -> net.kyori.adventure.text.minimessage.tag.ParserDirective$1:
    44:44:void <init>() -> <init>
    47:47:java.lang.String toString() -> toString
net.kyori.adventure.text.minimessage.tag.PreProcess -> net.kyori.adventure.text.minimessage.tag.PreProcess:
    java.lang.String value() -> value
net.kyori.adventure.text.minimessage.tag.PreProcessTagImpl -> net.kyori.adventure.text.minimessage.tag.d:
    java.lang.String value -> a
    35:37:void <init>(java.lang.String) -> <init>
    41:41:java.lang.String value() -> value
    46:46:int hashCode() -> hashCode
    51:54:boolean equals(java.lang.Object) -> equals
    59:59:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.text.minimessage.tag.StylingTagImpl -> net.kyori.adventure.text.minimessage.tag.e:
    net.kyori.adventure.text.format.StyleBuilderApplicable[] styles -> a
    38:40:void <init>(net.kyori.adventure.text.format.StyleBuilderApplicable[]) -> <init>
    44:44:net.kyori.adventure.text.Component value() -> value
    49:49:int hashCode() -> hashCode
    54:57:boolean equals(java.lang.Object) -> equals
    62:62:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.text.minimessage.tag.Tag -> net.kyori.adventure.text.minimessage.tag.Tag:
    58:58:net.kyori.adventure.text.minimessage.tag.PreProcess preProcessParsed(java.lang.String) -> preProcessParsed
    71:71:net.kyori.adventure.text.minimessage.tag.Tag inserting(net.kyori.adventure.text.Component) -> inserting
    84:84:net.kyori.adventure.text.minimessage.tag.Tag inserting(net.kyori.adventure.text.ComponentLike) -> inserting
    97:97:net.kyori.adventure.text.minimessage.tag.Tag selfClosingInserting(net.kyori.adventure.text.Component) -> selfClosingInserting
    110:110:net.kyori.adventure.text.minimessage.tag.Tag selfClosingInserting(net.kyori.adventure.text.ComponentLike) -> selfClosingInserting
    121:121:net.kyori.adventure.text.minimessage.tag.Tag styling(java.util.function.Consumer) -> styling
    132:138:net.kyori.adventure.text.minimessage.tag.Tag styling(net.kyori.adventure.text.format.StyleBuilderApplicable[]) -> styling
net.kyori.adventure.text.minimessage.tag.Tag$Argument -> net.kyori.adventure.text.minimessage.tag.Tag$Argument:
    java.lang.String value() -> value
    165:165:java.lang.String lowerValue() -> lowerValue
    175:175:boolean isTrue() -> isTrue
    185:185:boolean isFalse() -> isFalse
    198:200:java.util.OptionalInt asInt() -> asInt
    214:216:java.util.OptionalDouble asDouble() -> asDouble
net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue -> net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue:
    net.kyori.adventure.text.minimessage.tag.Tag$Argument pop() -> pop
    net.kyori.adventure.text.minimessage.tag.Tag$Argument popOr(java.lang.String) -> popOr
    net.kyori.adventure.text.minimessage.tag.Tag$Argument popOr(java.util.function.Supplier) -> popOr
    net.kyori.adventure.text.minimessage.tag.Tag$Argument peek() -> peek
    boolean hasNext() -> hasNext
    void reset() -> reset
net.kyori.adventure.text.minimessage.tag.resolver.CachingTagResolver -> net.kyori.adventure.text.minimessage.tag.resolver.a:
    net.kyori.adventure.text.minimessage.tag.Tag NULL_REPLACEMENT -> a
    java.util.Map cache -> b
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$WithoutArguments resolver -> c
    42:47:void <init>(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$WithoutArguments) -> <init>
    50:50:net.kyori.adventure.text.minimessage.tag.Tag query(java.lang.String) -> a
    58:59:net.kyori.adventure.text.minimessage.tag.Tag resolve(java.lang.String) -> resolve
    64:64:boolean has(java.lang.String) -> has
    69:72:boolean contributeToMap(java.util.Map) -> a
    78:81:void handle(net.kyori.adventure.text.Component,net.kyori.adventure.text.minimessage.internal.serializer.ClaimConsumer) -> handle
    85:92:boolean equals(java.lang.Object) -> equals
    97:97:int hashCode() -> hashCode
    51:52:net.kyori.adventure.text.minimessage.tag.Tag lambda$query$1(java.lang.String) -> b
    39:39:net.kyori.adventure.text.Component lambda$static$0() -> a
    38:38:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.resolver.EmptyTagResolver -> net.kyori.adventure.text.minimessage.tag.resolver.b:
    net.kyori.adventure.text.minimessage.tag.resolver.EmptyTagResolver INSTANCE -> a
    38:39:void <init>() -> <init>
    43:43:net.kyori.adventure.text.minimessage.tag.Tag resolve(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> resolve
    48:48:boolean has(java.lang.String) -> has
    53:53:boolean contributeToMap(java.util.Map) -> a
    58:58:void handle(net.kyori.adventure.text.Component,net.kyori.adventure.text.minimessage.internal.serializer.ClaimConsumer) -> handle
    36:36:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.resolver.Formatter -> net.kyori.adventure.text.minimessage.tag.resolver.Formatter:
    44:45:void <init>() -> <init>
    62:62:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver number(java.lang.String,java.lang.Number) -> number
    96:96:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver date(java.lang.String,java.time.temporal.TemporalAccessor) -> date
    115:115:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver choice(java.lang.String,java.lang.Number) -> choice
    135:135:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver booleanChoice(java.lang.String,boolean) -> booleanChoice
    136:138:net.kyori.adventure.text.minimessage.tag.Tag lambda$booleanChoice$3(boolean,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    116:118:net.kyori.adventure.text.minimessage.tag.Tag lambda$choice$2(java.lang.Number,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    97:98:net.kyori.adventure.text.minimessage.tag.Tag lambda$date$1(java.time.temporal.TemporalAccessor,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    64:79:net.kyori.adventure.text.minimessage.tag.Tag lambda$number$0(java.lang.Number,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> b
net.kyori.adventure.text.minimessage.tag.resolver.MapTagResolver -> net.kyori.adventure.text.minimessage.tag.resolver.c:
    java.util.Map tagMap -> a
    35:37:void <init>(java.util.Map) -> <init>
    41:41:net.kyori.adventure.text.minimessage.tag.Tag resolve(java.lang.String) -> resolve
    46:47:boolean contributeToMap(java.util.Map) -> a
    52:59:boolean equals(java.lang.Object) -> equals
    64:64:int hashCode() -> hashCode
net.kyori.adventure.text.minimessage.tag.resolver.MappableResolver -> net.kyori.adventure.text.minimessage.tag.resolver.d:
    boolean contributeToMap(java.util.Map) -> a
net.kyori.adventure.text.minimessage.tag.resolver.Placeholder -> net.kyori.adventure.text.minimessage.tag.resolver.Placeholder:
    42:43:void <init>() -> <init>
    56:56:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Single parsed(java.lang.String,java.lang.String) -> parsed
    68:69:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Single unparsed(java.lang.String,java.lang.String) -> unparsed
    83:83:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Single component(java.lang.String,net.kyori.adventure.text.ComponentLike) -> component
    97:97:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Single styling(java.lang.String,net.kyori.adventure.text.format.StyleBuilderApplicable[]) -> styling
net.kyori.adventure.text.minimessage.tag.resolver.SequentialTagResolver -> net.kyori.adventure.text.minimessage.tag.resolver.e:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver[] resolvers -> a
    39:41:void <init>(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver[]) -> <init>
    45:72:net.kyori.adventure.text.minimessage.tag.Tag resolve(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> resolve
    77:82:boolean has(java.lang.String) -> has
    87:92:void handle(net.kyori.adventure.text.Component,net.kyori.adventure.text.minimessage.internal.serializer.ClaimConsumer) -> handle
    96:103:boolean equals(java.lang.Object) -> equals
    108:108:int hashCode() -> hashCode
net.kyori.adventure.text.minimessage.tag.resolver.SingleResolver -> net.kyori.adventure.text.minimessage.tag.resolver.f:
    java.lang.String key -> a
    net.kyori.adventure.text.minimessage.tag.Tag tag -> b
    35:38:void <init>(java.lang.String,net.kyori.adventure.text.minimessage.tag.Tag) -> <init>
    42:42:java.lang.String key() -> key
    47:47:net.kyori.adventure.text.minimessage.tag.Tag tag() -> tag
    52:53:boolean contributeToMap(java.util.Map) -> a
    58:58:int hashCode() -> hashCode
    63:74:boolean equals(java.lang.Object) -> equals
net.kyori.adventure.text.minimessage.tag.resolver.TagResolver -> net.kyori.adventure.text.minimessage.tag.resolver.TagResolver:
    61:61:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder builder() -> builder
    73:73:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver standard() -> standard
    83:83:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver empty() -> empty
    95:98:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Single resolver(java.lang.String,net.kyori.adventure.text.minimessage.tag.Tag) -> resolver
    111:111:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver resolver(java.lang.String,java.util.function.BiFunction) -> resolver
    123:129:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver resolver(java.util.Set,java.util.function.BiFunction) -> resolver
    154:157:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver resolver(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver[]) -> resolver
    173:179:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver resolver(java.lang.Iterable) -> resolver
    196:199:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver caching(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$WithoutArguments) -> caching
    210:210:java.util.stream.Collector toTagResolver() -> toTagResolver
    net.kyori.adventure.text.minimessage.tag.Tag resolve(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> resolve
    boolean has(java.lang.String) -> has
net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$1 -> net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$1:
    java.util.Set val$names -> a
    java.util.function.BiFunction val$handler -> b
    129:129:void <init>(java.util.Set,java.util.function.BiFunction) -> <init>
    132:134:net.kyori.adventure.text.minimessage.tag.Tag resolve(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> resolve
    139:139:boolean has(java.lang.String) -> has
net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder -> net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder tag(java.lang.String,net.kyori.adventure.text.minimessage.tag.Tag) -> tag
    341:341:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder tag(java.lang.String,java.util.function.BiFunction) -> tag
    353:353:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder tag(java.util.Set,java.util.function.BiFunction) -> tag
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder resolver(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> resolver
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder resolvers(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver[]) -> resolvers
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder resolvers(java.lang.Iterable) -> resolvers
    391:391:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder caching(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$WithoutArguments) -> caching
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver build() -> build
net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Single -> net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Single:
    java.lang.String key() -> key
    net.kyori.adventure.text.minimessage.tag.Tag tag() -> tag
    264:267:net.kyori.adventure.text.minimessage.tag.Tag resolve(java.lang.String) -> resolve
    272:272:boolean has(java.lang.String) -> has
net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$WithoutArguments -> net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$WithoutArguments:
    net.kyori.adventure.text.minimessage.tag.Tag resolve(java.lang.String) -> resolve
    301:301:boolean has(java.lang.String) -> has
    306:310:net.kyori.adventure.text.minimessage.tag.Tag resolve(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> resolve
net.kyori.adventure.text.minimessage.tag.resolver.TagResolverBuilderImpl -> net.kyori.adventure.text.minimessage.tag.resolver.g:
    java.util.stream.Collector COLLECTOR -> a
    java.util.Map replacements -> b
    java.util.List resolvers -> c
    39:48:void <init>() -> <init>
    52:57:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder tag(java.lang.String,net.kyori.adventure.text.minimessage.tag.Tag) -> tag
    62:68:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder resolver(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> resolver
    73:73:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder resolvers(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver[]) -> resolvers
    77:88:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder resolvers(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver[],boolean) -> a
    93:97:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder resolvers(java.lang.Iterable) -> resolvers
    101:110:boolean single(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver,boolean) -> a
    114:118:void popMap() -> a
    121:124:boolean consumePotentialMappable(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> a
    130:138:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver build() -> build
    43:43:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder lambda$static$0(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Builder) -> a
    40:40:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.AbstractColorChangingTag -> net.kyori.adventure.text.minimessage.tag.standard.a:
    net.kyori.adventure.text.flattener.ComponentFlattener LENGTH_CALCULATOR -> a
    boolean visited -> b
    int size -> c
    int disableApplyingColorDepth -> d
    56:65:void <init>() -> <init>
    68:68:int size() -> b
    73:87:void visit(net.kyori.adventure.text.minimessage.tree.Node,int) -> visit
    92:94:void postVisit() -> postVisit
    98:138:net.kyori.adventure.text.Component apply(net.kyori.adventure.text.Component,int) -> apply
    void init() -> c
    void advanceColor() -> d
    net.kyori.adventure.text.format.TextColor color() -> e
    165:165:java.lang.String toString() -> toString
    84:84:void lambda$visit$1(java.lang.String) -> a
    60:60:java.lang.String lambda$static$0(net.kyori.adventure.text.Component) -> a
    58:61:void <clinit>() -> <clinit>
    1048:1048:net.kyori.adventure.text.flattener.ComponentFlattener$Builder net.kyori.adventure.text.flattener.ComponentFlattener.builder():48:48 -> <clinit>
    1048:1048:void <clinit>():58 -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.ClickTag -> net.kyori.adventure.text.minimessage.tag.standard.b:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> a
    60:67:net.kyori.adventure.text.minimessage.tag.Tag create(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    60:60:java.lang.String lambda$create$1() -> a
    50:53:void lambda$static$0(net.kyori.adventure.text.event.ClickEvent,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    1209:1209:net.kyori.adventure.text.event.ClickEvent$Action net.kyori.adventure.text.event.ClickEvent.action():209:209 -> a
    1209:1209:void lambda$static$0(net.kyori.adventure.text.event.ClickEvent,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):51 -> a
    1219:1219:java.lang.String net.kyori.adventure.text.event.ClickEvent.value():219:219 -> a
    1219:1219:void lambda$static$0(net.kyori.adventure.text.event.ClickEvent,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):52 -> a
    46:49:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.ColorTagResolver -> net.kyori.adventure.text.minimessage.tag.standard.c:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver INSTANCE -> a
    net.kyori.adventure.text.minimessage.internal.serializer.StyleClaim STYLE -> b
    java.util.Map COLOR_ALIASES -> c
    71:71:boolean isColorOrAbbreviation(java.lang.String) -> a
    74:75:void <init>() -> <init>
    79:91:net.kyori.adventure.text.minimessage.tag.Tag resolve(java.lang.String,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> resolve
    96:107:net.kyori.adventure.text.format.TextColor resolveColor(java.lang.String,net.kyori.adventure.text.minimessage.Context) -> a
    112:115:boolean has(java.lang.String) -> has
    120:120:net.kyori.adventure.text.minimessage.internal.serializer.StyleClaim claimStyle() -> claimStyle
    56:61:void lambda$static$0(net.kyori.adventure.text.format.TextColor,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    52:68:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.DecorationTag -> net.kyori.adventure.text.minimessage.tag.standard.d:
    java.util.Map RESOLVERS -> a
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> b
    67:79:java.util.Map$Entry resolvers(net.kyori.adventure.text.format.TextDecoration,java.lang.String,java.lang.String[]) -> a
    1113:1115:net.kyori.adventure.text.minimessage.internal.serializer.StyleClaim claim(net.kyori.adventure.text.format.TextDecoration,java.util.function.BiConsumer):113:115 -> a
    1113:1115:java.util.Map$Entry resolvers(net.kyori.adventure.text.format.TextDecoration,java.lang.String,java.lang.String[]):77 -> a
    117:117:boolean lambda$claim$6(net.kyori.adventure.text.format.TextDecoration$State) -> a
    116:116:net.kyori.adventure.text.format.TextDecoration$State lambda$claim$5(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.format.Style) -> a
    93:93:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver lambda$static$4(net.kyori.adventure.text.minimessage.tag.resolver.TagResolver,net.kyori.adventure.text.minimessage.tag.resolver.TagResolver) -> a
    92:92:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver lambda$static$3(java.util.Map$Entry) -> a
    79:79:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Single lambda$resolvers$2(net.kyori.adventure.text.format.TextDecoration,java.lang.String) -> a
    2109:2109:net.kyori.adventure.text.minimessage.tag.Tag createNegated(net.kyori.adventure.text.format.TextDecoration):109:109 -> a
    2109:2109:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver$Single lambda$resolvers$2(net.kyori.adventure.text.format.TextDecoration,java.lang.String):79 -> a
    77:77:void lambda$resolvers$1(java.lang.String,java.lang.String,net.kyori.adventure.text.format.TextDecoration$State,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    2123:2128:void emit$5da73188(java.lang.String,net.kyori.adventure.text.format.TextDecoration$State,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):123:128 -> a
    2123:2128:void lambda$resolvers$1(java.lang.String,java.lang.String,net.kyori.adventure.text.format.TextDecoration$State,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):77 -> a
    76:76:net.kyori.adventure.text.minimessage.tag.Tag lambda$resolvers$0(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    3103:3105:net.kyori.adventure.text.minimessage.tag.Tag create$301cc3bf(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue):103:105 -> a
    3103:3105:net.kyori.adventure.text.minimessage.tag.Tag lambda$resolvers$0(net.kyori.adventure.text.format.TextDecoration,net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context):76 -> a
    83:97:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.FontTag -> net.kyori.adventure.text.minimessage.tag.standard.e:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> a
    58:70:net.kyori.adventure.text.minimessage.tag.Tag create(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    74:80:void emit(net.kyori.adventure.key.Key,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    70:70:void lambda$create$0(net.kyori.adventure.key.Key,net.kyori.adventure.text.format.Style$Builder) -> a
    47:50:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.GradientTag -> net.kyori.adventure.text.minimessage.tag.standard.f:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> a
    int index -> b
    int colorIndex -> c
    float factorStep -> d
    net.kyori.adventure.text.format.TextColor[] colors -> e
    float phase -> f
    boolean negativePhase -> g
    62:91:net.kyori.adventure.text.minimessage.tag.Tag create(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    53:109:void <init>(float,java.util.List) -> <init>
    113:120:void init() -> c
    125:130:void advanceColor() -> d
    134:144:net.kyori.adventure.text.format.TextColor color() -> e
    150:152:java.util.stream.Stream examinableProperties() -> examinableProperties
    158:164:boolean equals(java.lang.Object) -> equals
    169:171:int hashCode() -> hashCode
    51:51:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.HoverTag -> net.kyori.adventure.text.minimessage.tag.standard.g:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> a
    63:70:net.kyori.adventure.text.minimessage.tag.Tag create(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    75:78:void emit(net.kyori.adventure.text.event.HoverEvent,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    1240:1240:net.kyori.adventure.text.event.HoverEvent$Action net.kyori.adventure.text.event.HoverEvent.action():240:240 -> a
    1240:1240:void emit(net.kyori.adventure.text.event.HoverEvent,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):75 -> a
    2240:2240:net.kyori.adventure.text.event.HoverEvent$Action net.kyori.adventure.text.event.HoverEvent.action():240:240 -> a
    2240:2240:void emit(net.kyori.adventure.text.event.HoverEvent,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):76 -> a
    2250:2250:java.lang.Object net.kyori.adventure.text.event.HoverEvent.value():250:250 -> a
    2250:2250:void emit(net.kyori.adventure.text.event.HoverEvent,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):77 -> a
    82:91:net.kyori.adventure.text.minimessage.tag.standard.HoverTag$ActionHandler actionHandler(net.kyori.adventure.text.event.HoverEvent$Action) -> a
    185:188:java.lang.String compactAsString(net.kyori.adventure.key.Key) -> a
    52:55:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.HoverTag$ActionHandler -> net.kyori.adventure.text.minimessage.tag.standard.g$a:
    java.lang.Object parse(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
net.kyori.adventure.text.minimessage.tag.standard.HoverTag$ShowEntity -> net.kyori.adventure.text.minimessage.tag.standard.g$b:
    net.kyori.adventure.text.minimessage.tag.standard.HoverTag$ShowEntity INSTANCE -> a
    155:156:void <init>() -> <init>
    161:169:net.kyori.adventure.text.event.HoverEvent$ShowEntity parse(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> b
    152:152:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    1175:1181:void emit(net.kyori.adventure.text.event.HoverEvent$ShowEntity,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):175:181 -> a
    1175:1181:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):152 -> a
    1560:1560:net.kyori.adventure.key.Key net.kyori.adventure.text.event.HoverEvent$ShowEntity.type():560:560 -> a
    1560:1560:void emit(net.kyori.adventure.text.event.HoverEvent$ShowEntity,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):175 -> a
    1560:1560:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):152 -> a
    1593:1593:java.util.UUID net.kyori.adventure.text.event.HoverEvent$ShowEntity.id():593:593 -> a
    1593:1593:void emit(net.kyori.adventure.text.event.HoverEvent$ShowEntity,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):176 -> a
    1593:1593:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):152 -> a
    1615:1615:net.kyori.adventure.text.Component net.kyori.adventure.text.event.HoverEvent$ShowEntity.name():615:615 -> a
    1615:1615:void emit(net.kyori.adventure.text.event.HoverEvent$ShowEntity,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):178 -> a
    1615:1615:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):152 -> a
    2615:2615:net.kyori.adventure.text.Component net.kyori.adventure.text.event.HoverEvent$ShowEntity.name():615:615 -> a
    2615:2615:void emit(net.kyori.adventure.text.event.HoverEvent$ShowEntity,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):179 -> a
    2615:2615:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):152 -> a
    152:152:java.lang.Object parse(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    153:153:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.HoverTag$ShowItem -> net.kyori.adventure.text.minimessage.tag.standard.g$c:
    net.kyori.adventure.text.minimessage.tag.standard.HoverTag$ShowItem INSTANCE -> a
    120:121:void <init>() -> <init>
    126:134:net.kyori.adventure.text.event.HoverEvent$ShowItem parse(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> b
    117:117:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    1140:1149:void emit(net.kyori.adventure.text.event.HoverEvent$ShowItem,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):140:149 -> a
    1140:1149:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):117 -> a
    1397:1397:net.kyori.adventure.key.Key net.kyori.adventure.text.event.HoverEvent$ShowItem.item():397:397 -> a
    1397:1397:void emit(net.kyori.adventure.text.event.HoverEvent$ShowItem,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):140 -> a
    1397:1397:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):117 -> a
    1419:1419:int net.kyori.adventure.text.event.HoverEvent$ShowItem.count():419:419 -> a
    1419:1419:void emit(net.kyori.adventure.text.event.HoverEvent$ShowItem,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):142 -> a
    1419:1419:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):117 -> a
    1441:1441:net.kyori.adventure.nbt.api.BinaryTagHolder net.kyori.adventure.text.event.HoverEvent$ShowItem.nbt():441:441 -> a
    1441:1441:void emit(net.kyori.adventure.text.event.HoverEvent$ShowItem,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):142 -> a
    1441:1441:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):117 -> a
    2419:2419:int net.kyori.adventure.text.event.HoverEvent$ShowItem.count():419:419 -> a
    2419:2419:void emit(net.kyori.adventure.text.event.HoverEvent$ShowItem,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):143 -> a
    2419:2419:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):117 -> a
    2441:2441:net.kyori.adventure.nbt.api.BinaryTagHolder net.kyori.adventure.text.event.HoverEvent$ShowItem.nbt():441:441 -> a
    2441:2441:void emit(net.kyori.adventure.text.event.HoverEvent$ShowItem,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):145 -> a
    2441:2441:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):117 -> a
    3441:3441:net.kyori.adventure.nbt.api.BinaryTagHolder net.kyori.adventure.text.event.HoverEvent$ShowItem.nbt():441:441 -> a
    3441:3441:void emit(net.kyori.adventure.text.event.HoverEvent$ShowItem,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):146 -> a
    3441:3441:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):117 -> a
    117:117:java.lang.Object parse(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    127:127:net.kyori.adventure.text.minimessage.ParsingException lambda$parse$0(net.kyori.adventure.text.minimessage.Context) -> a
    117:117:net.kyori.adventure.text.minimessage.tag.standard.HoverTag$ShowItem access$100() -> a
    118:118:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.HoverTag$ShowText -> net.kyori.adventure.text.minimessage.tag.standard.g$d:
    net.kyori.adventure.text.minimessage.tag.standard.HoverTag$ShowText INSTANCE -> a
    103:104:void <init>() -> <init>
    100:100:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    1113:1114:void emit(net.kyori.adventure.text.Component,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):113:114 -> a
    1113:1114:void emit(java.lang.Object,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter):100 -> a
    100:100:java.lang.Object parse(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    2108:2108:net.kyori.adventure.text.Component parse(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context):108:108 -> a
    2108:2108:java.lang.Object parse(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context):100 -> a
    100:100:net.kyori.adventure.text.minimessage.tag.standard.HoverTag$ShowText access$000() -> a
    101:101:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.InsertionTag -> net.kyori.adventure.text.minimessage.tag.standard.h:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> a
    54:55:net.kyori.adventure.text.minimessage.tag.Tag create(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    59:60:void emit(java.lang.String,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    55:55:void lambda$create$0(java.lang.String,net.kyori.adventure.text.format.Style$Builder) -> a
    44:47:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.KeybindTag -> net.kyori.adventure.text.minimessage.tag.standard.i:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> a
    51:51:net.kyori.adventure.text.minimessage.tag.Tag create(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    55:59:net.kyori.adventure.text.minimessage.internal.serializer.Emitable emit(net.kyori.adventure.text.Component) -> a
    59:59:void lambda$emit$0(java.lang.String,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    45:45:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.NbtTag -> net.kyori.adventure.text.minimessage.tag.standard.j:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> a
    67:103:net.kyori.adventure.text.minimessage.tag.Tag resolve(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    109:122:net.kyori.adventure.text.minimessage.internal.serializer.Emitable emit(net.kyori.adventure.text.Component) -> a
    123:136:void lambda$emit$0(net.kyori.adventure.text.Component,java.lang.String,java.lang.String,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    56:57:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.NewlineTag -> net.kyori.adventure.text.minimessage.tag.standard.k:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> a
    55:55:net.kyori.adventure.text.minimessage.tag.Tag create(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    59:62:net.kyori.adventure.text.minimessage.internal.serializer.Emitable claimComponent(net.kyori.adventure.text.Component) -> a
    60:60:void lambda$claimComponent$0(net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    45:46:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.RainbowTag -> net.kyori.adventure.text.minimessage.tag.standard.l:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> a
    boolean reversed -> b
    int phase -> c
    int colorIndex -> d
    55:73:net.kyori.adventure.text.minimessage.tag.Tag create(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    52:79:void <init>(boolean,int) -> <init>
    83:86:void init() -> c
    90:99:void advanceColor() -> d
    103:105:net.kyori.adventure.text.format.TextColor color() -> e
    110:110:java.util.stream.Stream examinableProperties() -> examinableProperties
    115:118:boolean equals(java.lang.Object) -> equals
    123:123:int hashCode() -> hashCode
    47:47:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.ResetTag -> net.kyori.adventure.text.minimessage.tag.standard.m:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> a
    32:32:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.ScoreTag -> net.kyori.adventure.text.minimessage.tag.standard.n:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> a
    46:48:net.kyori.adventure.text.minimessage.tag.Tag create(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    52:56:net.kyori.adventure.text.minimessage.internal.serializer.Emitable emit(net.kyori.adventure.text.Component) -> a
    56:58:void lambda$emit$0(net.kyori.adventure.text.ScoreComponent,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    40:40:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.SelectorTag -> net.kyori.adventure.text.minimessage.tag.standard.o:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> a
    57:63:net.kyori.adventure.text.minimessage.tag.Tag create(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    67:70:net.kyori.adventure.text.minimessage.internal.serializer.Emitable claim(net.kyori.adventure.text.Component) -> a
    71:76:void lambda$claim$0(net.kyori.adventure.text.SelectorComponent,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    47:48:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.StandardTags -> net.kyori.adventure.text.minimessage.tag.standard.StandardTags:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver ALL -> a
    45:46:void <init>() -> <init>
    80:80:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver decorations(net.kyori.adventure.text.format.TextDecoration) -> decorations
    92:92:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver decorations() -> decorations
    104:104:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver color() -> color
    114:114:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver hoverEvent() -> hoverEvent
    124:124:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver clickEvent() -> clickEvent
    134:134:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver keybind() -> keybind
    146:146:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver translatable() -> translatable
    158:158:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver translatableFallback() -> translatableFallback
    168:168:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver insertion() -> insertion
    178:178:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver font() -> font
    188:188:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver gradient() -> gradient
    198:198:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver rainbow() -> rainbow
    208:208:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver transition() -> transition
    218:218:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver reset() -> reset
    230:230:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver newline() -> newline
    242:242:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver selector() -> selector
    252:252:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver score() -> score
    264:264:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver nbt() -> nbt
    277:277:net.kyori.adventure.text.minimessage.tag.resolver.TagResolver defaults() -> defaults
    281:281:java.util.Set names(java.lang.String[]) -> a
    48:68:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.TransitionTag -> net.kyori.adventure.text.minimessage.tag.standard.TransitionTag:
    java.lang.String TRANSITION -> TRANSITION
    net.kyori.adventure.text.format.TextColor[] colors -> b
    float phase -> c
    boolean negativePhase -> d
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> a
    60:98:net.kyori.adventure.text.minimessage.tag.Tag create(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    101:116:void <init>(float,java.util.List) -> <init>
    120:120:net.kyori.adventure.text.Component value() -> value
    1124:1138:net.kyori.adventure.text.format.TextColor color():124:138 -> value
    1124:1138:net.kyori.adventure.text.Component value():120 -> value
    143:145:java.util.stream.Stream examinableProperties() -> examinableProperties
    151:154:boolean equals(java.lang.Object) -> equals
    159:161:int hashCode() -> hashCode
    57:57:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.TranslatableFallbackTag -> net.kyori.adventure.text.minimessage.tag.standard.p:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> a
    61:73:net.kyori.adventure.text.minimessage.tag.Tag create(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    77:80:net.kyori.adventure.text.minimessage.internal.serializer.Emitable claim(net.kyori.adventure.text.Component) -> a
    81:87:void lambda$claim$0(net.kyori.adventure.text.TranslatableComponent,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    51:52:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tag.standard.TranslatableTag -> net.kyori.adventure.text.minimessage.tag.standard.q:
    net.kyori.adventure.text.minimessage.tag.resolver.TagResolver RESOLVER -> a
    60:71:net.kyori.adventure.text.minimessage.tag.Tag create(net.kyori.adventure.text.minimessage.tag.resolver.ArgumentQueue,net.kyori.adventure.text.minimessage.Context) -> a
    75:78:net.kyori.adventure.text.minimessage.internal.serializer.Emitable claim(net.kyori.adventure.text.Component) -> a
    79:84:void lambda$claim$0(net.kyori.adventure.text.TranslatableComponent,net.kyori.adventure.text.minimessage.internal.serializer.TokenEmitter) -> a
    50:51:void <clinit>() -> <clinit>
net.kyori.adventure.text.minimessage.tree.Node -> net.kyori.adventure.text.minimessage.tree.Node:
    java.lang.String toString() -> toString
    java.util.List children() -> children
    net.kyori.adventure.text.minimessage.tree.Node parent() -> parent
net.kyori.adventure.text.minimessage.tree.Node$Root -> net.kyori.adventure.text.minimessage.tree.Node$Root:
    java.lang.String input() -> input
net.kyori.adventure.text.renderer.AbstractComponentRenderer -> net.kyori.adventure.text.d.a:
    44:44:void <init>() -> <init>
    47:66:net.kyori.adventure.text.Component render(net.kyori.adventure.text.Component,java.lang.Object) -> render
    net.kyori.adventure.text.Component renderBlockNbt(net.kyori.adventure.text.BlockNBTComponent,java.lang.Object) -> a
    net.kyori.adventure.text.Component renderEntityNbt(net.kyori.adventure.text.EntityNBTComponent,java.lang.Object) -> a
    net.kyori.adventure.text.Component renderStorageNbt(net.kyori.adventure.text.StorageNBTComponent,java.lang.Object) -> a
    net.kyori.adventure.text.Component renderKeybind(net.kyori.adventure.text.KeybindComponent,java.lang.Object) -> a
    net.kyori.adventure.text.Component renderScore(net.kyori.adventure.text.ScoreComponent,java.lang.Object) -> a
    net.kyori.adventure.text.Component renderSelector(net.kyori.adventure.text.SelectorComponent,java.lang.Object) -> a
    net.kyori.adventure.text.Component renderText(net.kyori.adventure.text.TextComponent,java.lang.Object) -> a
    net.kyori.adventure.text.Component renderTranslatable(net.kyori.adventure.text.TranslatableComponent,java.lang.Object) -> a
net.kyori.adventure.text.renderer.ComponentRenderer -> net.kyori.adventure.text.d.b:
    net.kyori.adventure.text.Component render(net.kyori.adventure.text.Component,java.lang.Object) -> render
    56:56:net.kyori.adventure.text.renderer.ComponentRenderer mapContext(java.util.function.Function) -> a
    56:56:net.kyori.adventure.text.Component lambda$mapContext$0(java.util.function.Function,net.kyori.adventure.text.Component,java.lang.Object) -> a
net.kyori.adventure.text.renderer.TranslatableComponentRenderer -> net.kyori.adventure.text.d.c:
    java.util.Set MERGES -> a
    59:59:void <init>() -> <init>
    73:74:net.kyori.adventure.text.renderer.TranslatableComponentRenderer usingTranslationSource(net.kyori.adventure.translation.Translator) -> a
    java.text.MessageFormat translate(java.lang.String,java.lang.Object) -> a
    100:102:net.kyori.adventure.text.Component renderBlockNbt(net.kyori.adventure.text.BlockNBTComponent,java.lang.Object) -> a
    107:109:net.kyori.adventure.text.Component renderEntityNbt(net.kyori.adventure.text.EntityNBTComponent,java.lang.Object) -> a
    114:116:net.kyori.adventure.text.Component renderStorageNbt(net.kyori.adventure.text.StorageNBTComponent,java.lang.Object) -> a
    120:127:net.kyori.adventure.text.NBTComponentBuilder nbt(java.lang.Object,net.kyori.adventure.text.NBTComponentBuilder,net.kyori.adventure.text.NBTComponent) -> a
    132:133:net.kyori.adventure.text.Component renderKeybind(net.kyori.adventure.text.KeybindComponent,java.lang.Object) -> a
    139:143:net.kyori.adventure.text.Component renderScore(net.kyori.adventure.text.ScoreComponent,java.lang.Object) -> a
    148:149:net.kyori.adventure.text.Component renderSelector(net.kyori.adventure.text.SelectorComponent,java.lang.Object) -> a
    154:155:net.kyori.adventure.text.Component renderText(net.kyori.adventure.text.TextComponent,java.lang.Object) -> a
    161:204:net.kyori.adventure.text.Component renderTranslatable(net.kyori.adventure.text.TranslatableComponent,java.lang.Object) -> a
    208:209:net.kyori.adventure.text.BuildableComponent mergeStyleAndOptionallyDeepRender(net.kyori.adventure.text.Component,net.kyori.adventure.text.ComponentBuilder,java.lang.Object) -> a
    213:216:net.kyori.adventure.text.BuildableComponent optionallyRenderChildrenAppendAndBuild(java.util.List,net.kyori.adventure.text.ComponentBuilder,java.lang.Object) -> a
    220:226:void mergeStyle(net.kyori.adventure.text.Component,net.kyori.adventure.text.ComponentBuilder,java.lang.Object) -> b
    214:214:void lambda$optionallyRenderChildrenAppendAndBuild$0(net.kyori.adventure.text.ComponentBuilder,java.lang.Object,net.kyori.adventure.text.Component) -> a
    60:60:void <clinit>() -> <clinit>
net.kyori.adventure.text.renderer.TranslatableComponentRenderer$1 -> net.kyori.adventure.text.d.c$1:
    net.kyori.adventure.translation.Translator val$source -> a
    74:74:void <init>(net.kyori.adventure.translation.Translator) -> <init>
    74:74:net.kyori.adventure.text.Component renderTranslatable(net.kyori.adventure.text.TranslatableComponent,java.lang.Object) -> a
    1082:1084:net.kyori.adventure.text.Component renderTranslatable(net.kyori.adventure.text.TranslatableComponent,java.util.Locale):82:84 -> a
    1082:1084:net.kyori.adventure.text.Component renderTranslatable(net.kyori.adventure.text.TranslatableComponent,java.lang.Object):74 -> a
    74:74:java.text.MessageFormat translate(java.lang.String,java.lang.Object) -> a
    2077:2077:java.text.MessageFormat translate(java.lang.String,java.util.Locale):77:77 -> a
    2077:2077:java.text.MessageFormat translate(java.lang.String,java.lang.Object):74 -> a
net.kyori.adventure.text.serializer.ComponentSerializer -> net.kyori.adventure.text.e.a:
    net.kyori.adventure.text.Component deserialize(java.lang.Object) -> deserialize
    78:78:net.kyori.adventure.text.Component deserializeOrNull(java.lang.Object) -> a
    93:95:net.kyori.adventure.text.Component deserializeOr(java.lang.Object,net.kyori.adventure.text.Component) -> a
    java.lang.Object serialize(net.kyori.adventure.text.Component) -> serialize
net.kyori.adventure.text.serializer.bungeecord.BungeeComponentSerializer -> net.kyori.adventure.text.e.a.a:
    boolean SUPPORTED -> a
    net.kyori.adventure.text.serializer.gson.GsonComponentSerializer serializer -> b
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer legacySerializer -> c
    63:63:boolean isNative() -> a
    121:124:void <init>(net.kyori.adventure.text.serializer.gson.GsonComponentSerializer,net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer) -> <init>
    44:44:java.lang.Object serialize(net.kyori.adventure.text.Component) -> serialize
    1148:1153:net.md_5.bungee.api.chat.BaseComponent[] serialize(net.kyori.adventure.text.Component):148:153 -> serialize
    1148:1153:java.lang.Object serialize(net.kyori.adventure.text.Component):44 -> serialize
    44:44:net.kyori.adventure.text.Component deserialize(java.lang.Object) -> deserialize
    2137:2142:net.kyori.adventure.text.Component deserialize(net.md_5.bungee.api.chat.BaseComponent[]):137:142 -> deserialize
    2137:2142:net.kyori.adventure.text.Component deserialize(java.lang.Object):44 -> deserialize
    111:113:void lambda$inject$0(com.google.gson.GsonBuilder) -> a
    44:44:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer access$100(net.kyori.adventure.text.serializer.bungeecord.BungeeComponentSerializer) -> a
    44:44:net.kyori.adventure.text.serializer.gson.GsonComponentSerializer access$200(net.kyori.adventure.text.serializer.bungeecord.BungeeComponentSerializer) -> b
    45:52:void <clinit>() -> <clinit>
    3128:3133:void bind():128:133 -> <clinit>
    3128:3133:void <clinit>():48 -> <clinit>
    4110:4115:boolean inject(com.google.gson.Gson):110:115 -> <clinit>
    4110:4115:void bind():129 -> <clinit>
    4110:4115:void <clinit>():48 -> <clinit>
net.kyori.adventure.text.serializer.bungeecord.BungeeComponentSerializer$AdapterComponent -> net.kyori.adventure.text.e.a.a$a:
    net.kyori.adventure.text.Component component -> a
    java.lang.String legacy -> b
    net.kyori.adventure.text.serializer.bungeecord.BungeeComponentSerializer this$0 -> c
    162:164:void <init>(net.kyori.adventure.text.serializer.bungeecord.BungeeComponentSerializer,net.kyori.adventure.text.Component) -> <init>
    168:171:java.lang.String toLegacyText() -> toLegacyText
    176:176:net.md_5.bungee.api.chat.BaseComponent duplicate() -> duplicate
    181:182:void write(com.google.gson.stream.JsonWriter) -> a
    157:157:net.kyori.adventure.text.Component access$000(net.kyori.adventure.text.serializer.bungeecord.BungeeComponentSerializer$AdapterComponent) -> a
net.kyori.adventure.text.serializer.bungeecord.SelfSerializable -> net.kyori.adventure.text.e.a.b:
    void write(com.google.gson.stream.JsonWriter) -> a
net.kyori.adventure.text.serializer.bungeecord.SelfSerializable$AdapterFactory -> net.kyori.adventure.text.e.a.b$a:
    50:50:void <init>() -> <init>
    58:62:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    53:54:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.bungeecord.SelfSerializable$AdapterFactory$SelfSerializableTypeAdapter -> net.kyori.adventure.text.e.a.b$a$a:
    com.google.gson.reflect.TypeToken type -> a
    68:70:void <init>(com.google.gson.reflect.TypeToken) -> <init>
    74:75:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    79:79:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.serializer.gson.BlockNBTComponentPosSerializer -> net.kyori.adventure.text.e.b.a:
    com.google.gson.TypeAdapter INSTANCE -> a
    36:37:void <init>() -> <init>
    41:45:net.kyori.adventure.text.BlockNBTComponent$Pos read(com.google.gson.stream.JsonReader) -> a
    33:33:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    33:33:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1051:1052:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.BlockNBTComponent$Pos):51:52 -> write
    1051:1052:void write(com.google.gson.stream.JsonWriter,java.lang.Object):33 -> write
    34:34:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.gson.ClickEventActionSerializer -> net.kyori.adventure.text.e.b.b:
    com.google.gson.TypeAdapter INSTANCE -> a
    30:30:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.gson.ComponentSerializerImpl -> net.kyori.adventure.text.e.b.c:
    java.lang.reflect.Type COMPONENT_LIST_TYPE -> a
    com.google.gson.Gson gson -> b
    78:78:com.google.gson.TypeAdapter create(com.google.gson.Gson) -> a
    83:85:void <init>(com.google.gson.Gson) -> <init>
    89:221:net.kyori.adventure.text.BuildableComponent read(com.google.gson.stream.JsonReader) -> a
    225:231:java.lang.String readString(com.google.gson.stream.JsonReader) -> b
    236:239:net.kyori.adventure.text.NBTComponentBuilder nbt(net.kyori.adventure.text.NBTComponentBuilder,java.lang.String,boolean,net.kyori.adventure.text.Component) -> a
    244:322:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.Component) -> a
    325:329:void serializeSeparator(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.Component) -> b
    332:332:com.google.gson.JsonParseException notSureHowToDeserialize(java.lang.Object) -> a
    336:336:java.lang.IllegalArgumentException notSureHowToSerialize(net.kyori.adventure.text.Component) -> a
    56:56:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    56:56:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    75:75:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.gson.ComponentSerializerImpl$1 -> net.kyori.adventure.text.e.b.c$1:
    75:75:void <init>() -> <init>
net.kyori.adventure.text.serializer.gson.GsonComponentSerializer -> net.kyori.adventure.text.e.b.d:
    56:56:net.kyori.adventure.text.serializer.gson.GsonComponentSerializer gson() -> a
    69:69:net.kyori.adventure.text.serializer.gson.GsonComponentSerializer colorDownsamplingGson() -> b
    79:79:net.kyori.adventure.text.serializer.gson.GsonComponentSerializer$Builder builder() -> c
    com.google.gson.Gson serializer() -> d
    java.util.function.UnaryOperator populator() -> e
net.kyori.adventure.text.serializer.gson.GsonComponentSerializer$Builder -> net.kyori.adventure.text.e.b.d$a:
    net.kyori.adventure.text.serializer.gson.GsonComponentSerializer$Builder downsampleColors() -> a
    net.kyori.adventure.text.serializer.gson.GsonComponentSerializer$Builder legacyHoverEventSerializer(net.kyori.adventure.text.serializer.gson.LegacyHoverEventSerializer) -> a
    net.kyori.adventure.text.serializer.gson.GsonComponentSerializer$Builder emitLegacyHoverEvent() -> b
    net.kyori.adventure.text.serializer.gson.GsonComponentSerializer build() -> c
    121:121:java.lang.Object build() -> build
net.kyori.adventure.text.serializer.gson.GsonComponentSerializer$Provider -> net.kyori.adventure.text.e.b.d$b:
    net.kyori.adventure.text.serializer.gson.GsonComponentSerializer gson() -> a
    net.kyori.adventure.text.serializer.gson.GsonComponentSerializer gsonLegacy() -> b
    java.util.function.Consumer builder() -> c
net.kyori.adventure.text.serializer.gson.GsonComponentSerializerImpl -> net.kyori.adventure.text.e.b.e:
    java.util.Optional SERVICE -> b
    java.util.function.Consumer BUILDER -> a
    com.google.gson.Gson serializer -> c
    java.util.function.UnaryOperator populator -> d
    boolean downsampleColor -> e
    net.kyori.adventure.text.serializer.gson.LegacyHoverEventSerializer legacyHoverSerializer -> f
    boolean emitLegacyHover -> g
    61:73:void <init>(boolean,net.kyori.adventure.text.serializer.gson.LegacyHoverEventSerializer,boolean) -> <init>
    77:77:com.google.gson.Gson serializer() -> d
    82:82:java.util.function.UnaryOperator populator() -> e
    37:37:java.lang.Object serialize(net.kyori.adventure.text.Component) -> serialize
    1102:1102:java.lang.String serialize(net.kyori.adventure.text.Component):102:102 -> serialize
    1102:1102:java.lang.Object serialize(net.kyori.adventure.text.Component):37 -> serialize
    2077:2077:com.google.gson.Gson serializer():77:77 -> serialize
    2077:2077:java.lang.String serialize(net.kyori.adventure.text.Component):102 -> serialize
    2077:2077:java.lang.Object serialize(net.kyori.adventure.text.Component):37 -> serialize
    37:37:net.kyori.adventure.text.Component deserializeOr(java.lang.Object,net.kyori.adventure.text.Component) -> a
    2094:2097:net.kyori.adventure.text.Component deserializeOr(java.lang.String,net.kyori.adventure.text.Component):94:97 -> a
    2094:2097:net.kyori.adventure.text.Component deserializeOr(java.lang.Object,net.kyori.adventure.text.Component):37 -> a
    3077:3077:com.google.gson.Gson serializer():77:77 -> a
    3077:3077:net.kyori.adventure.text.Component deserializeOr(java.lang.String,net.kyori.adventure.text.Component):95 -> a
    3077:3077:net.kyori.adventure.text.Component deserializeOr(java.lang.Object,net.kyori.adventure.text.Component):37 -> a
    37:37:net.kyori.adventure.text.Component deserialize(java.lang.Object) -> deserialize
    3087:3089:net.kyori.adventure.text.Component deserialize(java.lang.String):87:89 -> deserialize
    3087:3089:net.kyori.adventure.text.Component deserialize(java.lang.Object):37 -> deserialize
    4077:4077:com.google.gson.Gson serializer():77:77 -> deserialize
    4077:4077:net.kyori.adventure.text.Component deserialize(java.lang.String):87 -> deserialize
    4077:4077:net.kyori.adventure.text.Component deserialize(java.lang.Object):37 -> deserialize
    37:37:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    4119:4119:net.kyori.adventure.text.serializer.gson.GsonComponentSerializer$Builder toBuilder():119:119 -> toBuilder
    4119:4119:net.kyori.adventure.util.Buildable$Builder toBuilder():37 -> toBuilder
    66:67:com.google.gson.GsonBuilder lambda$new$2(boolean,net.kyori.adventure.text.serializer.gson.LegacyHoverEventSerializer,boolean,com.google.gson.GsonBuilder) -> a
    41:41:java.util.function.Consumer lambda$static$1() -> g
    43:43:void lambda$static$0(net.kyori.adventure.text.serializer.gson.GsonComponentSerializer$Builder) -> a
    37:37:java.util.Optional access$000() -> f
    37:37:boolean access$100(net.kyori.adventure.text.serializer.gson.GsonComponentSerializerImpl) -> a
    37:37:boolean access$200(net.kyori.adventure.text.serializer.gson.GsonComponentSerializerImpl) -> b
    37:37:net.kyori.adventure.text.serializer.gson.LegacyHoverEventSerializer access$300(net.kyori.adventure.text.serializer.gson.GsonComponentSerializerImpl) -> c
    38:41:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.gson.GsonComponentSerializerImpl$BuilderImpl -> net.kyori.adventure.text.e.b.e$a:
    boolean downsampleColor -> a
    net.kyori.adventure.text.serializer.gson.LegacyHoverEventSerializer legacyHoverSerializer -> b
    boolean emitLegacyHover -> c
    123:129:void <init>() -> <init>
    132:136:void <init>(net.kyori.adventure.text.serializer.gson.GsonComponentSerializerImpl) -> <init>
    140:141:net.kyori.adventure.text.serializer.gson.GsonComponentSerializer$Builder downsampleColors() -> a
    146:147:net.kyori.adventure.text.serializer.gson.GsonComponentSerializer$Builder legacyHoverEventSerializer(net.kyori.adventure.text.serializer.gson.LegacyHoverEventSerializer) -> a
    152:153:net.kyori.adventure.text.serializer.gson.GsonComponentSerializer$Builder emitLegacyHoverEvent() -> b
    158:161:net.kyori.adventure.text.serializer.gson.GsonComponentSerializer build() -> c
    122:122:java.lang.Object build() -> build
net.kyori.adventure.text.serializer.gson.GsonComponentSerializerImpl$Instances -> net.kyori.adventure.text.e.b.e$b:
    net.kyori.adventure.text.serializer.gson.GsonComponentSerializer INSTANCE -> a
    net.kyori.adventure.text.serializer.gson.GsonComponentSerializer LEGACY_INSTANCE -> b
    52:52:net.kyori.adventure.text.serializer.gson.GsonComponentSerializer lambda$static$1() -> a
    49:49:net.kyori.adventure.text.serializer.gson.GsonComponentSerializer lambda$static$0() -> b
    47:52:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.gson.HoverEventActionSerializer -> net.kyori.adventure.text.e.b.f:
    com.google.gson.TypeAdapter INSTANCE -> a
    30:30:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.gson.IndexedSerializer -> net.kyori.adventure.text.e.b.g:
    java.lang.String name -> a
    net.kyori.adventure.util.Index map -> b
    boolean throwOnUnknownKey -> c
    39:39:com.google.gson.TypeAdapter strict(java.lang.String,net.kyori.adventure.util.Index) -> a
    43:43:com.google.gson.TypeAdapter lenient(java.lang.String,net.kyori.adventure.util.Index) -> b
    46:50:void <init>(java.lang.String,net.kyori.adventure.util.Index,boolean) -> <init>
    54:55:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    59:66:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.serializer.gson.KeySerializer -> net.kyori.adventure.text.e.b.h:
    com.google.gson.TypeAdapter INSTANCE -> a
    35:36:void <init>() -> <init>
    32:32:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1045:1045:net.kyori.adventure.key.Key read(com.google.gson.stream.JsonReader):45:45 -> read
    1045:1045:java.lang.Object read(com.google.gson.stream.JsonReader):32 -> read
    32:32:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    2040:2041:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.key.Key):40:41 -> write
    2040:2041:void write(com.google.gson.stream.JsonWriter,java.lang.Object):32 -> write
    33:33:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.gson.LegacyHoverEventSerializer -> net.kyori.adventure.text.e.b.i:
    net.kyori.adventure.text.event.HoverEvent$ShowItem deserializeShowItem(net.kyori.adventure.text.Component) -> a
    net.kyori.adventure.text.event.HoverEvent$ShowEntity deserializeShowEntity(net.kyori.adventure.text.Component,net.kyori.adventure.util.Codec$Decoder) -> a
    net.kyori.adventure.text.Component serializeShowItem(net.kyori.adventure.text.event.HoverEvent$ShowItem) -> a
    net.kyori.adventure.text.Component serializeShowEntity(net.kyori.adventure.text.event.HoverEvent$ShowEntity,net.kyori.adventure.util.Codec$Encoder) -> a
net.kyori.adventure.text.serializer.gson.OptimizedSerializerFactoryTypeAdapter -> net.kyori.adventure.text.e.b.j:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.serializer.gson.SerializerFactory -> net.kyori.adventure.text.e.b.k:
    java.lang.Class KEY_TYPE -> a
    java.lang.Class COMPONENT_TYPE -> b
    java.lang.Class STYLE_TYPE -> c
    java.lang.Class CLICK_ACTION_TYPE -> d
    java.lang.Class HOVER_ACTION_TYPE -> e
    java.lang.Class SHOW_ITEM_TYPE -> f
    java.lang.Class SHOW_ENTITY_TYPE -> g
    java.lang.Class COLOR_WRAPPER_TYPE -> h
    java.lang.Class COLOR_TYPE -> i
    java.lang.Class TEXT_DECORATION_TYPE -> k
    java.lang.Class BLOCK_NBT_POS_TYPE -> j
    boolean downsampleColors -> l
    net.kyori.adventure.text.serializer.gson.LegacyHoverEventSerializer legacyHoverSerializer -> m
    boolean emitLegacyHover -> n
    57:61:void <init>(boolean,net.kyori.adventure.text.serializer.gson.LegacyHoverEventSerializer,boolean) -> <init>
    66:90:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    41:51:void <clinit>() -> <clinit>
    void toJson$5(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> a
    1000:1000:void toJsonBody$5(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> a
    1000:1000:void toJson$5(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> a
    void <init>() -> <init>
    void fromJson$5(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    2000:2000:void fromJsonField$5(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    2000:2000:void fromJson$5(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.serializer.gson.ShowEntitySerializer -> net.kyori.adventure.text.e.b.l:
    com.google.gson.Gson gson -> a
    44:44:com.google.gson.TypeAdapter create(com.google.gson.Gson) -> a
    49:51:void <init>(com.google.gson.Gson) -> <init>
    38:38:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1055:1079:net.kyori.adventure.text.event.HoverEvent$ShowEntity read(com.google.gson.stream.JsonReader):55:79 -> read
    1055:1079:java.lang.Object read(com.google.gson.stream.JsonReader):38 -> read
    38:38:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1084:1099:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.event.HoverEvent$ShowEntity):84:99 -> write
    1084:1099:void write(com.google.gson.stream.JsonWriter,java.lang.Object):38 -> write
    1560:1560:net.kyori.adventure.key.Key net.kyori.adventure.text.event.HoverEvent$ShowEntity.type():560:560 -> write
    1560:1560:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.event.HoverEvent$ShowEntity):87 -> write
    1560:1560:void write(com.google.gson.stream.JsonWriter,java.lang.Object):38 -> write
    1593:1593:java.util.UUID net.kyori.adventure.text.event.HoverEvent$ShowEntity.id():593:593 -> write
    1593:1593:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.event.HoverEvent$ShowEntity):90 -> write
    1593:1593:void write(com.google.gson.stream.JsonWriter,java.lang.Object):38 -> write
    1615:1615:net.kyori.adventure.text.Component net.kyori.adventure.text.event.HoverEvent$ShowEntity.name():615:615 -> write
    1615:1615:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.event.HoverEvent$ShowEntity):92 -> write
    1615:1615:void write(com.google.gson.stream.JsonWriter,java.lang.Object):38 -> write
net.kyori.adventure.text.serializer.gson.ShowItemSerializer -> net.kyori.adventure.text.e.b.m:
    com.google.gson.Gson gson -> a
    44:44:com.google.gson.TypeAdapter create(com.google.gson.Gson) -> a
    49:51:void <init>(com.google.gson.Gson) -> <init>
    38:38:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1055:1088:net.kyori.adventure.text.event.HoverEvent$ShowItem read(com.google.gson.stream.JsonReader):55:88 -> read
    1055:1088:java.lang.Object read(com.google.gson.stream.JsonReader):38 -> read
    38:38:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1093:1111:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.event.HoverEvent$ShowItem):93:111 -> write
    1093:1111:void write(com.google.gson.stream.JsonWriter,java.lang.Object):38 -> write
    1397:1397:net.kyori.adventure.key.Key net.kyori.adventure.text.event.HoverEvent$ShowItem.item():397:397 -> write
    1397:1397:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.event.HoverEvent$ShowItem):96 -> write
    1397:1397:void write(com.google.gson.stream.JsonWriter,java.lang.Object):38 -> write
    1419:1419:int net.kyori.adventure.text.event.HoverEvent$ShowItem.count():419:419 -> write
    1419:1419:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.event.HoverEvent$ShowItem):98 -> write
    1419:1419:void write(com.google.gson.stream.JsonWriter,java.lang.Object):38 -> write
    1441:1441:net.kyori.adventure.nbt.api.BinaryTagHolder net.kyori.adventure.text.event.HoverEvent$ShowItem.nbt():441:441 -> write
    1441:1441:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.event.HoverEvent$ShowItem):104 -> write
    1441:1441:void write(com.google.gson.stream.JsonWriter,java.lang.Object):38 -> write
net.kyori.adventure.text.serializer.gson.StyleSerializer -> net.kyori.adventure.text.e.b.n:
    net.kyori.adventure.text.format.TextDecoration[] DECORATIONS -> a
    net.kyori.adventure.text.serializer.gson.LegacyHoverEventSerializer legacyHover -> b
    boolean emitLegacyHover -> c
    com.google.gson.Gson gson -> d
    boolean $assertionsDisabled -> e
    84:84:com.google.gson.TypeAdapter create(net.kyori.adventure.text.serializer.gson.LegacyHoverEventSerializer,boolean,com.google.gson.Gson) -> a
    91:95:void <init>(net.kyori.adventure.text.serializer.gson.LegacyHoverEventSerializer,boolean,com.google.gson.Gson) -> <init>
    188:188:boolean isNullOrEmpty(com.google.gson.JsonElement) -> a
    203:217:java.lang.Object legacyHoverEventContents(net.kyori.adventure.text.event.HoverEvent$Action,net.kyori.adventure.text.Component) -> a
    1221:1221:net.kyori.adventure.util.Codec$Decoder decoder():221:221 -> a
    1221:1221:java.lang.Object legacyHoverEventContents(net.kyori.adventure.text.event.HoverEvent$Action,net.kyori.adventure.text.Component):208 -> a
    49:49:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    2099:2184:net.kyori.adventure.text.format.Style read(com.google.gson.stream.JsonReader):99:184 -> read
    2099:2184:java.lang.Object read(com.google.gson.stream.JsonReader):49 -> read
    2192:2198:boolean readBoolean(com.google.gson.stream.JsonReader):192:198 -> read
    2192:2198:net.kyori.adventure.text.format.Style read(com.google.gson.stream.JsonReader):114 -> read
    2192:2198:java.lang.Object read(com.google.gson.stream.JsonReader):49 -> read
    2328:2328:boolean net.kyori.adventure.text.event.ClickEvent$Action.readable():328:328 -> read
    2328:2328:net.kyori.adventure.text.format.Style read(com.google.gson.stream.JsonReader):131 -> read
    2328:2328:java.lang.Object read(com.google.gson.stream.JsonReader):49 -> read
    2744:2744:boolean net.kyori.adventure.text.event.HoverEvent$Action.readable():744:744 -> read
    2744:2744:net.kyori.adventure.text.format.Style read(com.google.gson.stream.JsonReader):145 -> read
    2744:2744:java.lang.Object read(com.google.gson.stream.JsonReader):49 -> read
    3733:3733:java.lang.Class net.kyori.adventure.text.event.HoverEvent$Action.type():733:733 -> read
    3733:3733:net.kyori.adventure.text.format.Style read(com.google.gson.stream.JsonReader):149 -> read
    3733:3733:java.lang.Object read(com.google.gson.stream.JsonReader):49 -> read
    49:49:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    4230:4298:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):230:298 -> write
    4230:4298:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    5209:5209:net.kyori.adventure.text.event.ClickEvent$Action net.kyori.adventure.text.event.ClickEvent.action():209:209 -> write
    5209:5209:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):260 -> write
    5209:5209:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    5219:5219:java.lang.String net.kyori.adventure.text.event.ClickEvent.value():219:219 -> write
    5219:5219:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):262 -> write
    5219:5219:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    5240:5240:net.kyori.adventure.text.event.HoverEvent$Action net.kyori.adventure.text.event.HoverEvent.action():240:240 -> write
    5240:5240:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):271 -> write
    5240:5240:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    5250:5250:java.lang.Object net.kyori.adventure.text.event.HoverEvent.value():250:250 -> write
    5250:5250:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):275 -> write
    5250:5250:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    6250:6250:java.lang.Object net.kyori.adventure.text.event.HoverEvent.value():250:250 -> write
    6250:6250:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):277 -> write
    6250:6250:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    7250:7250:java.lang.Object net.kyori.adventure.text.event.HoverEvent.value():250:250 -> write
    7250:7250:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):279 -> write
    7250:7250:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    8250:8250:java.lang.Object net.kyori.adventure.text.event.HoverEvent.value():250:250 -> write
    8250:8250:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):281 -> write
    8250:8250:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    8301:8322:void serializeLegacyHoverEvent(net.kyori.adventure.text.event.HoverEvent,com.google.gson.stream.JsonWriter):301:322 -> write
    8301:8322:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):285 -> write
    8301:8322:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    9240:9240:net.kyori.adventure.text.event.HoverEvent$Action net.kyori.adventure.text.event.HoverEvent.action():240:240 -> write
    9240:9240:void serializeLegacyHoverEvent(net.kyori.adventure.text.event.HoverEvent,com.google.gson.stream.JsonWriter):301 -> write
    9240:9240:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):285 -> write
    9240:9240:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    9250:9250:java.lang.Object net.kyori.adventure.text.event.HoverEvent.value():250:250 -> write
    9250:9250:void serializeLegacyHoverEvent(net.kyori.adventure.text.event.HoverEvent,com.google.gson.stream.JsonWriter):302 -> write
    9250:9250:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):285 -> write
    9250:9250:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    10240:10240:net.kyori.adventure.text.event.HoverEvent$Action net.kyori.adventure.text.event.HoverEvent.action():240:240 -> write
    10240:10240:void serializeLegacyHoverEvent(net.kyori.adventure.text.event.HoverEvent,com.google.gson.stream.JsonWriter):306 -> write
    10240:10240:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):285 -> write
    10240:10240:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    10250:10250:java.lang.Object net.kyori.adventure.text.event.HoverEvent.value():250:250 -> write
    10250:10250:void serializeLegacyHoverEvent(net.kyori.adventure.text.event.HoverEvent,com.google.gson.stream.JsonWriter):307 -> write
    10250:10250:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):285 -> write
    10250:10250:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    11225:11225:net.kyori.adventure.util.Codec$Encoder encoder():225:225 -> write
    11225:11225:void serializeLegacyHoverEvent(net.kyori.adventure.text.event.HoverEvent,com.google.gson.stream.JsonWriter):307 -> write
    11225:11225:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):285 -> write
    11225:11225:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    11240:11240:net.kyori.adventure.text.event.HoverEvent$Action net.kyori.adventure.text.event.HoverEvent.action():240:240 -> write
    11240:11240:void serializeLegacyHoverEvent(net.kyori.adventure.text.event.HoverEvent,com.google.gson.stream.JsonWriter):308 -> write
    11240:11240:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):285 -> write
    11240:11240:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    11250:11250:java.lang.Object net.kyori.adventure.text.event.HoverEvent.value():250:250 -> write
    11250:11250:void serializeLegacyHoverEvent(net.kyori.adventure.text.event.HoverEvent,com.google.gson.stream.JsonWriter):309 -> write
    11250:11250:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.Style):285 -> write
    11250:11250:void write(com.google.gson.stream.JsonWriter,java.lang.Object):49 -> write
    225:225:java.lang.String lambda$encoder$1(net.kyori.adventure.text.Component) -> a
    221:221:net.kyori.adventure.text.Component lambda$decoder$0(java.lang.String) -> a
    49:70:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.gson.TextColorSerializer -> net.kyori.adventure.text.e.b.o:
    com.google.gson.TypeAdapter INSTANCE -> a
    com.google.gson.TypeAdapter DOWNSAMPLE_COLOR -> b
    boolean downsampleColor -> c
    42:44:void <init>(boolean) -> <init>
    70:73:net.kyori.adventure.text.format.TextColor fromString(java.lang.String) -> a
    36:36:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1063:1066:net.kyori.adventure.text.format.TextColor read(com.google.gson.stream.JsonReader):63:66 -> read
    1063:1066:java.lang.Object read(com.google.gson.stream.JsonReader):36 -> read
    36:36:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    2048:2055:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.TextColor):48:55 -> write
    2048:2055:void write(com.google.gson.stream.JsonWriter,java.lang.Object):36 -> write
    2058:2058:java.lang.String asUpperCaseHexString(net.kyori.adventure.text.format.TextColor):58:58 -> write
    2058:2058:void write(com.google.gson.stream.JsonWriter,net.kyori.adventure.text.format.TextColor):53 -> write
    2058:2058:void write(com.google.gson.stream.JsonWriter,java.lang.Object):36 -> write
    37:38:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.gson.TextColorWrapper -> net.kyori.adventure.text.e.b.p:
    net.kyori.adventure.text.format.TextColor color -> a
    net.kyori.adventure.text.format.TextDecoration decoration -> b
    44:48:void <init>(net.kyori.adventure.text.format.TextColor,net.kyori.adventure.text.format.TextDecoration,boolean) -> <init>
net.kyori.adventure.text.serializer.gson.TextColorWrapper$Serializer -> net.kyori.adventure.text.e.b.p$a:
    net.kyori.adventure.text.serializer.gson.TextColorWrapper$Serializer INSTANCE -> a
    53:54:void <init>() -> <init>
    50:50:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
    1063:1070:net.kyori.adventure.text.serializer.gson.TextColorWrapper read(com.google.gson.stream.JsonReader):63:70 -> read
    1063:1070:java.lang.Object read(com.google.gson.stream.JsonReader):50 -> read
    50:50:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    2058:2058:void write$6a50229b():58:58 -> write
    2058:2058:void write(com.google.gson.stream.JsonWriter,java.lang.Object):50 -> write
    51:51:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.gson.TextDecorationSerializer -> net.kyori.adventure.text.e.b.q:
    com.google.gson.TypeAdapter INSTANCE -> a
    30:30:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.gson.legacyimpl.NBTLegacyHoverEventSerializer -> net.kyori.adventure.text.e.b.a.a:
    43:43:net.kyori.adventure.text.serializer.gson.LegacyHoverEventSerializer get() -> a
net.kyori.adventure.text.serializer.gson.legacyimpl.NBTLegacyHoverEventSerializerImpl -> net.kyori.adventure.text.e.b.a.b:
    net.kyori.adventure.text.serializer.gson.legacyimpl.NBTLegacyHoverEventSerializerImpl INSTANCE -> a
    net.kyori.adventure.nbt.TagStringIO SNBT_IO -> b
    net.kyori.adventure.util.Codec SNBT_CODEC -> c
    java.lang.String ITEM_TYPE -> d
    java.lang.String ITEM_COUNT -> e
    java.lang.String ITEM_TAG -> f
    java.lang.String ENTITY_NAME -> g
    java.lang.String ENTITY_TYPE -> h
    java.lang.String ENTITY_ID -> i
    53:54:void <init>() -> <init>
    58:64:net.kyori.adventure.text.event.HoverEvent$ShowItem deserializeShowItem(net.kyori.adventure.text.Component) -> a
    1053:1053:net.kyori.adventure.nbt.api.BinaryTagHolder net.kyori.adventure.nbt.api.BinaryTagHolder.encode(java.lang.Object,net.kyori.adventure.util.Codec):53:53 -> a
    1053:1053:net.kyori.adventure.text.event.HoverEvent$ShowItem deserializeShowItem(net.kyori.adventure.text.Component):64 -> a
    70:75:net.kyori.adventure.text.event.HoverEvent$ShowEntity deserializeShowEntity(net.kyori.adventure.text.Component,net.kyori.adventure.util.Codec$Decoder) -> a
    80:83:void assertTextComponent(net.kyori.adventure.text.Component) -> b
    87:94:net.kyori.adventure.text.Component serializeShowItem(net.kyori.adventure.text.event.HoverEvent$ShowItem) -> a
    1397:1397:net.kyori.adventure.key.Key net.kyori.adventure.text.event.HoverEvent$ShowItem.item():397:397 -> a
    1397:1397:net.kyori.adventure.text.Component serializeShowItem(net.kyori.adventure.text.event.HoverEvent$ShowItem):88 -> a
    1419:1419:int net.kyori.adventure.text.event.HoverEvent$ShowItem.count():419:419 -> a
    1419:1419:net.kyori.adventure.text.Component serializeShowItem(net.kyori.adventure.text.event.HoverEvent$ShowItem):89 -> a
    1441:1441:net.kyori.adventure.nbt.api.BinaryTagHolder net.kyori.adventure.text.event.HoverEvent$ShowItem.nbt():441:441 -> a
    1441:1441:net.kyori.adventure.text.Component serializeShowItem(net.kyori.adventure.text.event.HoverEvent$ShowItem):90 -> a
    99:106:net.kyori.adventure.text.Component serializeShowEntity(net.kyori.adventure.text.event.HoverEvent$ShowEntity,net.kyori.adventure.util.Codec$Encoder) -> a
    1593:1593:java.util.UUID net.kyori.adventure.text.event.HoverEvent$ShowEntity.id():593:593 -> a
    1593:1593:net.kyori.adventure.text.Component serializeShowEntity(net.kyori.adventure.text.event.HoverEvent$ShowEntity,net.kyori.adventure.util.Codec$Encoder):100 -> a
    2560:2560:net.kyori.adventure.key.Key net.kyori.adventure.text.event.HoverEvent$ShowEntity.type():560:560 -> a
    2560:2560:net.kyori.adventure.text.Component serializeShowEntity(net.kyori.adventure.text.event.HoverEvent$ShowEntity,net.kyori.adventure.util.Codec$Encoder):101 -> a
    2615:2615:net.kyori.adventure.text.Component net.kyori.adventure.text.event.HoverEvent$ShowEntity.name():615:615 -> a
    2615:2615:net.kyori.adventure.text.Component serializeShowEntity(net.kyori.adventure.text.event.HoverEvent$ShowEntity,net.kyori.adventure.util.Codec$Encoder):102 -> a
    41:43:void <clinit>() -> <clinit>
    3052:3052:net.kyori.adventure.util.Codec net.kyori.adventure.util.Codec.codec(net.kyori.adventure.util.Codec$Decoder,net.kyori.adventure.util.Codec$Encoder):52:52 -> <clinit>
    3052:3052:void <clinit>():43 -> <clinit>
    void fromJson$14(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    4000:4000:void fromJsonField$14$56a2c6dd(com.google.gson.stream.JsonReader,int):0:0 -> a
    4000:4000:void fromJson$14(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.text.serializer.gson.legacyimpl.OptimizedNBTLegacyHoverEventSerializerImplTypeAdapter -> net.kyori.adventure.text.e.b.a.c:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    1000:1000:void net.kyori.adventure.text.serializer.gson.legacyimpl.NBTLegacyHoverEventSerializerImpl.toJson$14(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> write
    1000:1000:void write(com.google.gson.stream.JsonWriter,java.lang.Object):64 -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer -> net.kyori.adventure.text.e.c.a:
    62:62:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer legacySection() -> a
    115:115:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer$Builder builder() -> b
    net.kyori.adventure.text.TextComponent deserialize(java.lang.String) -> a
    java.lang.String serialize(net.kyori.adventure.text.Component) -> a
    50:50:java.lang.Object serialize(net.kyori.adventure.text.Component) -> serialize
    50:50:net.kyori.adventure.text.Component deserialize(java.lang.Object) -> deserialize
net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer$Builder -> net.kyori.adventure.text.e.c.a$a:
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer$Builder character(char) -> a
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer$Builder hexColors() -> a
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer$Builder useUnusualXRepeatedCharacterHexFormat() -> b
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer$Builder flattener(net.kyori.adventure.text.flattener.ComponentFlattener) -> a
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer build() -> c
    162:162:java.lang.Object build() -> build
net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer$Provider -> net.kyori.adventure.text.e.c.a$b:
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer legacyAmpersand() -> a
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer legacySection() -> b
    java.util.function.Consumer legacy() -> c
net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl -> net.kyori.adventure.text.e.c.b:
    net.kyori.adventure.text.format.TextDecoration[] DECORATIONS -> b
    java.util.List FORMATS -> c
    java.lang.String LEGACY_CHARS -> d
    java.util.Optional SERVICE -> e
    java.util.function.Consumer BUILDER -> a
    char character -> f
    char hexCharacter -> g
    net.kyori.adventure.text.TextReplacementConfig urlReplacementConfig -> h
    boolean hexColours -> i
    boolean useTerriblyStupidHexFormat -> j
    net.kyori.adventure.text.flattener.ComponentFlattener flattener -> k
    125:132:void <init>(char,char,net.kyori.adventure.text.TextReplacementConfig,boolean,boolean,net.kyori.adventure.text.flattener.ComponentFlattener) -> <init>
    170:191:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$DecodedFormat decodeTextFormat(char,java.lang.String,int) -> a
    1135:1151:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$FormatCodeType determineFormatType(char,java.lang.String,int):135:151 -> a
    1135:1151:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$DecodedFormat decodeTextFormat(char,java.lang.String,int):170 -> a
    196:199:net.kyori.adventure.text.format.TextColor tryParseHexColor(java.lang.String) -> b
    234:237:net.kyori.adventure.text.TextComponent extractUrl(net.kyori.adventure.text.TextComponent) -> a
    242:299:net.kyori.adventure.text.TextComponent deserialize(java.lang.String) -> a
    1311:1320:boolean applyFormat(net.kyori.adventure.text.TextComponent$Builder,net.kyori.adventure.text.format.TextFormat):311:320 -> a
    1311:1320:net.kyori.adventure.text.TextComponent deserialize(java.lang.String):276 -> a
    305:307:java.lang.String serialize(net.kyori.adventure.text.Component) -> a
    54:54:java.lang.Object serialize(net.kyori.adventure.text.Component) -> serialize
    54:54:net.kyori.adventure.text.Component deserialize(java.lang.Object) -> deserialize
    54:54:net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
    1325:1325:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer$Builder toBuilder():325:325 -> toBuilder
    1325:1325:net.kyori.adventure.util.Buildable$Builder toBuilder():54 -> toBuilder
    104:104:java.util.function.Consumer lambda$static$1() -> e
    106:106:void lambda$static$0(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer$Builder) -> a
    54:54:java.util.Optional access$000() -> c
    54:54:java.lang.String access$300(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl,net.kyori.adventure.text.format.TextFormat) -> a
    2208:2230:java.lang.String toLegacyCode(net.kyori.adventure.text.format.TextFormat):208:230 -> a
    2208:2230:java.lang.String access$300(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl,net.kyori.adventure.text.format.TextFormat):54 -> a
    3204:3204:boolean isHexTextColor(net.kyori.adventure.text.format.TextFormat):204:204 -> a
    3204:3204:java.lang.String toLegacyCode(net.kyori.adventure.text.format.TextFormat):208 -> a
    3204:3204:java.lang.String access$300(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl,net.kyori.adventure.text.format.TextFormat):54 -> a
    54:54:char access$400(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl) -> a
    54:54:net.kyori.adventure.text.format.TextDecoration[] access$500() -> d
    54:54:char access$800(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl) -> b
    54:54:net.kyori.adventure.text.TextReplacementConfig access$900(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl) -> c
    54:54:boolean access$1000(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl) -> d
    54:54:boolean access$1100(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl) -> e
    54:54:net.kyori.adventure.text.flattener.ComponentFlattener access$1200(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl) -> f
    55:104:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$1 -> net.kyori.adventure.text.e.c.b$1:
    int[] $SwitchMap$net$kyori$adventure$text$format$TextDecoration$State -> a
    420:420:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$BuilderImpl -> net.kyori.adventure.text.e.c.b$a:
    char character -> a
    char hexCharacter -> b
    net.kyori.adventure.text.TextReplacementConfig urlReplacementConfig -> c
    boolean hexColours -> d
    boolean useTerriblyStupidHexFormat -> e
    net.kyori.adventure.text.flattener.ComponentFlattener flattener -> f
    484:493:void <init>() -> <init>
    1061:1061:net.kyori.adventure.text.flattener.ComponentFlattener net.kyori.adventure.text.flattener.ComponentFlattener.basic():61:61 -> <init>
    1061:1061:void <init>():489 -> <init>
    496:503:void <init>(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl) -> <init>
    507:508:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer$Builder character(char) -> a
    550:551:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer$Builder hexColors() -> a
    556:557:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer$Builder useUnusualXRepeatedCharacterHexFormat() -> b
    562:563:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer$Builder flattener(net.kyori.adventure.text.flattener.ComponentFlattener) -> a
    568:568:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer build() -> c
    483:483:java.lang.Object build() -> build
net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Cereal -> net.kyori.adventure.text.e.c.b$b:
    java.lang.StringBuilder sb -> a
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Cereal$StyleState style -> b
    net.kyori.adventure.text.format.TextFormat lastWritten -> c
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Cereal$StyleState[] styles -> d
    int head -> e
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl this$0 -> f
    333:338:void <init>(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl) -> <init>
    342:361:void pushStyle(net.kyori.adventure.text.format.Style) -> a
    1402:1405:void net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Cereal$StyleState.set(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Cereal$StyleState):402:405 -> a
    1402:1405:void pushStyle(net.kyori.adventure.text.format.Style):355 -> a
    1408:1410:void net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Cereal$StyleState.clear():408:410 -> a
    1408:1410:void pushStyle(net.kyori.adventure.text.format.Style):357 -> a
    1413:1432:void net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Cereal$StyleState.apply(net.kyori.adventure.text.format.Style):413:432 -> a
    1413:1432:void pushStyle(net.kyori.adventure.text.format.Style):360 -> a
    365:371:void component(java.lang.String) -> component
    375:378:void popStyle$53aaeff9() -> a
    381:385:void append(net.kyori.adventure.text.format.TextFormat) -> a
    389:389:java.lang.String toString() -> toString
    333:333:void <init>(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl,byte) -> <init>
    333:333:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Cereal$StyleState access$600(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Cereal) -> a
    333:333:net.kyori.adventure.text.format.TextFormat access$700(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Cereal) -> b
net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Cereal$StyleState -> net.kyori.adventure.text.e.c.b$b$a:
    net.kyori.adventure.text.format.TextColor color -> a
    java.util.Set decorations -> b
    boolean needsReset -> c
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Cereal this$1 -> d
    397:399:void <init>(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Cereal) -> <init>
    435:463:void applyFormat() -> a
    466:479:void applyFullFormat() -> b
net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$DecodedFormat -> net.kyori.adventure.text.e.c.b$c:
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$FormatCodeType encodedFormat -> a
    net.kyori.adventure.text.format.TextFormat format -> b
    582:588:void <init>(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$FormatCodeType,net.kyori.adventure.text.format.TextFormat) -> <init>
    578:578:void <init>(net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$FormatCodeType,net.kyori.adventure.text.format.TextFormat,byte) -> <init>
net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$FormatCodeType -> net.kyori.adventure.text.e.c.b$d:
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$FormatCodeType MOJANG_LEGACY -> a
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$FormatCodeType KYORI_HEX -> b
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$FormatCodeType BUNGEECORD_UNUSUAL_HEX -> c
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$FormatCodeType[] $VALUES -> d
    572:572:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$FormatCodeType[] values() -> values
    572:572:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$FormatCodeType valueOf(java.lang.String) -> valueOf
    572:572:void <init>(java.lang.String,int) -> <init>
    572:575:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Instances -> net.kyori.adventure.text.e.c.b$e:
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer SECTION -> a
    115:115:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer lambda$static$1() -> a
    1061:1061:net.kyori.adventure.text.flattener.ComponentFlattener net.kyori.adventure.text.flattener.ComponentFlattener.basic():61:61 -> a
    1061:1061:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer lambda$static$1():115 -> a
    112:112:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer lambda$static$0() -> b
    2061:2061:net.kyori.adventure.text.flattener.ComponentFlattener net.kyori.adventure.text.flattener.ComponentFlattener.basic():61:61 -> b
    2061:2061:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer lambda$static$0():112 -> b
    110:115:void <clinit>() -> <clinit>
net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Reset -> net.kyori.adventure.text.e.c.b$f:
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Reset INSTANCE -> a
    net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Reset[] $VALUES -> b
    328:328:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Reset[] values() -> values
    328:328:net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializerImpl$Reset valueOf(java.lang.String) -> valueOf
    328:328:void <init>(java.lang.String,int) -> <init>
    328:329:void <clinit>() -> <clinit>
net.kyori.adventure.translation.GlobalTranslatorImpl -> net.kyori.adventure.m.a:
    net.kyori.adventure.translation.GlobalTranslatorImpl INSTANCE -> a
    net.kyori.adventure.text.renderer.TranslatableComponentRenderer renderer -> b
    java.util.Set sources -> c
    45:49:void <init>() -> <init>
    58:58:java.lang.Iterable sources() -> b
    76:82:java.text.MessageFormat translate(java.lang.String,java.util.Locale) -> a
    87:93:net.kyori.adventure.text.Component translate(net.kyori.adventure.text.TranslatableComponent,java.util.Locale) -> a
    98:98:java.util.stream.Stream examinableProperties() -> examinableProperties
    43:44:void <clinit>() -> <clinit>
net.kyori.adventure.translation.Translatable -> net.kyori.adventure.m.b:
net.kyori.adventure.translation.TranslationRegistry -> net.kyori.adventure.m.c:
    boolean contains$552c4dfd() -> a
    60:60:void <clinit>() -> <clinit>
net.kyori.adventure.translation.Translator -> net.kyori.adventure.m.d:
    java.text.MessageFormat translate(java.lang.String,java.util.Locale) -> a
    103:103:net.kyori.adventure.text.Component translate(net.kyori.adventure.text.TranslatableComponent,java.util.Locale) -> a
net.kyori.adventure.util.Buildable -> net.kyori.adventure.n.a:
    net.kyori.adventure.util.Buildable$Builder toBuilder() -> toBuilder
net.kyori.adventure.util.Buildable$Builder -> net.kyori.adventure.n.a$a:
net.kyori.adventure.util.Codec -> net.kyori.adventure.n.b:
    java.lang.Object decode(java.lang.Object) -> a
    java.lang.Object encode(java.lang.Object) -> b
net.kyori.adventure.util.Codec$1 -> net.kyori.adventure.n.b$1:
    net.kyori.adventure.util.Codec$Decoder val$decoder -> a
    net.kyori.adventure.util.Codec$Encoder val$encoder -> b
    52:52:void <init>(net.kyori.adventure.util.Codec$Decoder,net.kyori.adventure.util.Codec$Encoder) -> <init>
    55:55:java.lang.Object decode(java.lang.Object) -> a
    60:60:java.lang.Object encode(java.lang.Object) -> b
net.kyori.adventure.util.Codec$Decoder -> net.kyori.adventure.n.b$a:
    java.lang.Object decode(java.lang.Object) -> decode
net.kyori.adventure.util.Codec$Encoder -> net.kyori.adventure.n.b$b:
    java.lang.Object encode(java.lang.Object) -> encode
net.kyori.adventure.util.HSVLike -> net.kyori.adventure.n.c:
    51:51:net.kyori.adventure.util.HSVLike hsvLike(float,float,float) -> a
    80:112:net.kyori.adventure.util.HSVLike fromRGB(int,int,int) -> a
    float h() -> b
    float s() -> c
    float v() -> d
    141:144:java.util.stream.Stream examinableProperties() -> examinableProperties
net.kyori.adventure.util.HSVLikeImpl -> net.kyori.adventure.n.d:
    float h -> a
    float s -> b
    float v -> c
    35:42:void <init>(float,float,float) -> <init>
    46:46:float h() -> b
    51:51:float s() -> c
    56:56:float v() -> d
    60:64:void requireInsideRange(float,java.lang.String) -> a
    68:71:boolean equals(java.lang.Object) -> equals
    76:76:int hashCode() -> hashCode
    81:81:java.lang.String toString() -> toString
    void toJson$19(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter) -> a
    1000:1000:void toJsonBody$19(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0:0 -> a
    1000:1000:void toJson$19(com.google.gson.Gson,com.google.gson.stream.JsonWriter,proguard.optimize.gson._OptimizedJsonWriter):0 -> a
    void <init>() -> <init>
    void fromJson$19(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader) -> a
    2000:2000:void fromJsonField$19(com.google.gson.Gson,com.google.gson.stream.JsonReader,int):0:0 -> a
    2000:2000:void fromJson$19(com.google.gson.Gson,com.google.gson.stream.JsonReader,proguard.optimize.gson._OptimizedJsonReader):0 -> a
net.kyori.adventure.util.Index -> net.kyori.adventure.n.e:
    java.util.Map keyToValue -> a
    java.util.Map valueToKey -> b
    51:54:void <init>(java.util.Map,java.util.Map) -> <init>
    67:67:net.kyori.adventure.util.Index create(java.lang.Class,java.util.function.Function) -> a
    84:84:net.kyori.adventure.util.Index create(java.lang.Class,java.util.function.Function,java.lang.Enum[]) -> a
    100:100:net.kyori.adventure.util.Index create(java.util.function.Function,java.lang.Object[]) -> a
    114:114:net.kyori.adventure.util.Index create(java.util.function.Function,java.util.List) -> a
    118:118:net.kyori.adventure.util.Index create(java.lang.Object[],java.util.function.IntFunction,java.util.function.Function) -> a
    122:135:net.kyori.adventure.util.Index create(java.util.List,java.util.function.IntFunction,java.util.function.Function) -> a
    145:145:java.util.Set keys() -> a
    156:156:java.lang.Object key(java.lang.Object) -> a
    207:207:java.lang.Object value(java.lang.Object) -> b
    84:84:java.util.Map lambda$create$0(java.lang.Class,int) -> a
net.kyori.adventure.util.OptimizedHSVLikeImplTypeAdapter -> net.kyori.adventure.n.f:
    com.google.gson.Gson gson -> a
    proguard.optimize.gson._OptimizedJsonReader optimizedJsonReader -> b
    proguard.optimize.gson._OptimizedJsonWriter optimizedJsonWriter -> c
    52:56:void <init>(com.google.gson.Gson,proguard.optimize.gson._OptimizedJsonReader,proguard.optimize.gson._OptimizedJsonWriter) -> <init>
    64:64:void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> write
    69:69:java.lang.Object read(com.google.gson.stream.JsonReader) -> read
net.kyori.adventure.util.RGBLike -> net.kyori.adventure.n.g:
    int red() -> e
    int green() -> f
    int blue() -> g
    66:66:net.kyori.adventure.util.HSVLike asHSV() -> c
net.kyori.adventure.util.Services -> net.kyori.adventure.n.h:
    boolean SERVICE_LOAD_FAILURES_ARE_FATAL -> a
    52:70:java.util.Optional service(java.lang.Class) -> a
    1033:1033:java.util.ServiceLoader net.kyori.adventure.util.Services0.loader(java.lang.Class):33:33 -> a
    1033:1033:java.util.Optional service(java.lang.Class):52 -> a
    38:38:void <clinit>() -> <clinit>
net.kyori.adventure.util.TriState -> net.kyori.adventure.n.i:
    net.kyori.adventure.util.TriState NOT_SET -> a
    net.kyori.adventure.util.TriState FALSE -> b
    net.kyori.adventure.util.TriState TRUE -> c
    net.kyori.adventure.util.TriState[] $VALUES -> d
    35:35:net.kyori.adventure.util.TriState[] values() -> values
    35:35:net.kyori.adventure.util.TriState valueOf(java.lang.String) -> valueOf
    35:35:void <init>(java.lang.String,int) -> <init>
    35:53:void <clinit>() -> <clinit>
net.kyori.examination.AbstractExaminer -> net.kyori.a.a:
    45:45:void <init>() -> <init>
    48:109:java.lang.Object examine(java.lang.Object) -> a
    1141:1141:java.lang.Object collection(java.util.Collection):141:141 -> a
    1141:1141:java.lang.Object examine(java.lang.Object):55 -> a
    1177:1177:java.lang.Object map(java.util.Map):177:177 -> a
    1177:1177:java.lang.Object examine(java.lang.Object):57 -> a
    1241:1242:java.lang.Object examine(boolean[]):241:242 -> a
    1241:1242:java.lang.Object examine(java.lang.Object):62 -> a
    1253:1254:java.lang.Object examine(char[]):253:254 -> a
    1253:1254:java.lang.Object examine(java.lang.Object):66 -> a
    1259:1260:java.lang.Object examine(double[]):259:260 -> a
    1259:1260:java.lang.Object examine(java.lang.Object):68 -> a
    1265:1266:java.lang.Object examine(float[]):265:266 -> a
    1265:1266:java.lang.Object examine(java.lang.Object):70 -> a
    1283:1284:java.lang.Object examine(short[]):283:284 -> a
    1283:1284:java.lang.Object examine(java.lang.Object):76 -> a
    2120:2120:java.lang.Object array(java.lang.Object[]):120:120 -> a
    2120:2120:java.lang.Object examine(java.lang.Object):79 -> a
    java.lang.Object array(java.lang.Object[],java.util.stream.Stream) -> a
    java.lang.Object collection(java.util.Collection,java.util.stream.Stream) -> a
    156:156:java.lang.Object examine(java.lang.String,java.util.stream.Stream) -> a
    java.lang.Object examinable(java.lang.String,java.util.stream.Stream) -> b
    java.lang.Object map(java.util.Map,java.util.stream.Stream) -> a
    java.lang.Object nil() -> a
    java.lang.Object scalar(java.lang.Object) -> b
    java.lang.Object stream(java.util.stream.Stream) -> a
    java.lang.Object stream(java.util.stream.DoubleStream) -> a
    java.lang.Object stream(java.util.stream.IntStream) -> a
    java.lang.Object stream(java.util.stream.LongStream) -> a
    247:248:java.lang.Object examine(byte[]) -> a
    271:272:java.lang.Object examine(int[]) -> a
    277:278:java.lang.Object examine(long[]) -> a
    java.lang.Object array(int,java.util.function.IntFunction) -> a
    284:284:java.lang.Object lambda$examine$9(short[],int) -> a
    278:278:java.lang.Object lambda$examine$8(long[],int) -> a
    272:272:java.lang.Object lambda$examine$7(int[],int) -> a
    266:266:java.lang.Object lambda$examine$6(float[],int) -> a
    260:260:java.lang.Object lambda$examine$5(double[],int) -> a
    254:254:java.lang.Object lambda$examine$4(char[],int) -> a
    248:248:java.lang.Object lambda$examine$3(byte[],int) -> a
    242:242:java.lang.Object lambda$examine$2(boolean[],int) -> a
    177:177:java.util.Map$Entry lambda$map$1(java.util.Map$Entry) -> a
    156:156:java.util.Map$Entry lambda$examine$0(net.kyori.examination.ExaminableProperty) -> a
net.kyori.examination.Examinable -> net.kyori.a.b:
    42:42:java.lang.String examinableName() -> c_
    52:52:java.util.stream.Stream examinableProperties() -> examinableProperties
    66:66:java.lang.Object examine(net.kyori.examination.Examiner) -> a
net.kyori.examination.ExaminableProperty -> net.kyori.a.c:
    35:36:void <init>() -> <init>
    java.lang.String name() -> a
    java.lang.Object examine(net.kyori.examination.Examiner) -> a
    58:58:java.lang.String toString() -> toString
    71:71:net.kyori.examination.ExaminableProperty of(java.lang.String,java.lang.Object) -> a
    94:94:net.kyori.examination.ExaminableProperty of(java.lang.String,java.lang.String) -> a
    117:117:net.kyori.examination.ExaminableProperty of(java.lang.String,boolean) -> a
    186:186:net.kyori.examination.ExaminableProperty of(java.lang.String,byte[]) -> a
    255:255:net.kyori.examination.ExaminableProperty of(java.lang.String,double) -> a
    301:301:net.kyori.examination.ExaminableProperty of(java.lang.String,float) -> a
    347:347:net.kyori.examination.ExaminableProperty of(java.lang.String,int) -> a
    393:393:net.kyori.examination.ExaminableProperty of(java.lang.String,long) -> a
    34:34:void <init>(byte) -> <init>
net.kyori.examination.ExaminableProperty$1 -> net.kyori.a.c$1:
    java.lang.String val$name -> a
    java.lang.Object val$value -> b
    71:71:void <init>(java.lang.String,java.lang.Object) -> <init>
    74:74:java.lang.String name() -> a
    79:79:java.lang.Object examine(net.kyori.examination.Examiner) -> a
net.kyori.examination.ExaminableProperty$11 -> net.kyori.a.c$2:
    java.lang.String val$name -> a
    float val$value -> b
    301:301:void <init>(java.lang.String,float) -> <init>
    304:304:java.lang.String name() -> a
    309:309:java.lang.Object examine(net.kyori.examination.Examiner) -> a
net.kyori.examination.ExaminableProperty$13 -> net.kyori.a.c$3:
    java.lang.String val$name -> a
    int val$value -> b
    347:347:void <init>(java.lang.String,int) -> <init>
    350:350:java.lang.String name() -> a
    355:355:java.lang.Object examine(net.kyori.examination.Examiner) -> a
net.kyori.examination.ExaminableProperty$14 -> net.kyori.a.c$4:
    java.lang.String val$name -> a
    int[] val$value -> b
    370:370:void <init>(java.lang.String,int[]) -> <init>
    373:373:java.lang.String name() -> a
    378:378:java.lang.Object examine(net.kyori.examination.Examiner) -> a
net.kyori.examination.ExaminableProperty$15 -> net.kyori.a.c$5:
    java.lang.String val$name -> a
    long val$value -> b
    393:393:void <init>(java.lang.String,long) -> <init>
    396:396:java.lang.String name() -> a
    401:401:java.lang.Object examine(net.kyori.examination.Examiner) -> a
net.kyori.examination.ExaminableProperty$16 -> net.kyori.a.c$6:
    java.lang.String val$name -> a
    long[] val$value -> b
    416:416:void <init>(java.lang.String,long[]) -> <init>
    419:419:java.lang.String name() -> a
    424:424:java.lang.Object examine(net.kyori.examination.Examiner) -> a
net.kyori.examination.ExaminableProperty$17 -> net.kyori.a.c$7:
    java.lang.String val$name -> a
    short val$value -> b
    439:439:void <init>(java.lang.String,short) -> <init>
    442:442:java.lang.String name() -> a
    447:447:java.lang.Object examine(net.kyori.examination.Examiner) -> a
net.kyori.examination.ExaminableProperty$2 -> net.kyori.a.c$8:
    java.lang.String val$name -> a
    java.lang.String val$value -> b
    94:94:void <init>(java.lang.String,java.lang.String) -> <init>
    97:97:java.lang.String name() -> a
    102:102:java.lang.Object examine(net.kyori.examination.Examiner) -> a
net.kyori.examination.ExaminableProperty$3 -> net.kyori.a.c$9:
    java.lang.String val$name -> a
    boolean val$value -> b
    117:117:void <init>(java.lang.String,boolean) -> <init>
    120:120:java.lang.String name() -> a
    125:125:java.lang.Object examine(net.kyori.examination.Examiner) -> a
net.kyori.examination.ExaminableProperty$5 -> net.kyori.a.c$10:
    java.lang.String val$name -> a
    byte val$value -> b
    163:163:void <init>(java.lang.String,byte) -> <init>
    166:166:java.lang.String name() -> a
    171:171:java.lang.Object examine(net.kyori.examination.Examiner) -> a
net.kyori.examination.ExaminableProperty$6 -> net.kyori.a.c$11:
    java.lang.String val$name -> a
    byte[] val$value -> b
    186:186:void <init>(java.lang.String,byte[]) -> <init>
    189:189:java.lang.String name() -> a
    194:194:java.lang.Object examine(net.kyori.examination.Examiner) -> a
net.kyori.examination.ExaminableProperty$9 -> net.kyori.a.c$12:
    java.lang.String val$name -> a
    double val$value -> b
    255:255:void <init>(java.lang.String,double) -> <init>
    258:258:java.lang.String name() -> a
    263:263:java.lang.Object examine(net.kyori.examination.Examiner) -> a
net.kyori.examination.Examiner -> net.kyori.a.d:
    45:45:java.lang.Object examine(net.kyori.examination.Examinable) -> a
    java.lang.Object examine(java.lang.String,java.util.stream.Stream) -> a
    java.lang.Object examine(java.lang.Object) -> a
    java.lang.Object examine(boolean) -> a
    java.lang.Object examine(byte) -> a
    java.lang.Object examine(byte[]) -> a
    java.lang.Object examine(char) -> a
    java.lang.Object examine(double) -> a
    java.lang.Object examine(float) -> a
    java.lang.Object examine(int) -> a
    java.lang.Object examine(int[]) -> a
    java.lang.Object examine(long) -> a
    java.lang.Object examine(long[]) -> a
    java.lang.Object examine(short) -> a
    java.lang.Object examine(java.lang.String) -> a
net.kyori.examination.string.MultiLineStringExaminer -> net.kyori.a.a.a:
    net.kyori.examination.string.StringExaminer examiner -> a
    69:71:void <init>(net.kyori.examination.string.StringExaminer) -> <init>
    124:124:java.util.stream.Stream examine(double) -> b
    134:134:java.util.stream.Stream examine(int) -> b
    139:139:java.util.stream.Stream examine(long) -> b
    178:178:java.util.stream.Stream examine(java.lang.String) -> b
    182:184:java.util.stream.Stream arrayLike(java.util.stream.Stream) -> b
    188:188:java.util.stream.Stream enclose(java.util.stream.Stream,java.lang.String,java.lang.String) -> a
    192:199:java.util.stream.Stream enclose(java.util.List,java.lang.String,java.lang.String) -> a
    203:211:java.util.stream.Stream flatten(java.lang.String,java.util.stream.Stream) -> c
    215:218:java.util.stream.Stream association(java.util.stream.Stream,java.lang.String,java.util.stream.Stream) -> a
    1223:1239:java.util.stream.Stream association(java.util.List,java.lang.String,java.util.List):223:239 -> a
    1223:1239:java.util.stream.Stream association(java.util.stream.Stream,java.lang.String,java.util.stream.Stream):215 -> a
    2059:2061:java.lang.String net.kyori.examination.string.Strings.padEnd(java.lang.String,int,char):59:61 -> a
    2059:2061:java.util.stream.Stream association(java.util.List,java.lang.String,java.util.List):234 -> a
    2059:2061:java.util.stream.Stream association(java.util.stream.Stream,java.lang.String,java.util.stream.Stream):215 -> a
    243:243:java.util.stream.Stream indent(java.util.stream.Stream) -> c
    49:49:java.lang.Object array(int,java.util.function.IntFunction) -> a
    2149:2152:java.util.stream.Stream array(int,java.util.function.IntFunction):149:152 -> a
    2149:2152:java.lang.Object array(int,java.util.function.IntFunction):49 -> a
    49:49:java.lang.Object stream(java.util.stream.LongStream) -> a
    2173:2173:java.util.stream.Stream stream(java.util.stream.LongStream):173:173 -> a
    2173:2173:java.lang.Object stream(java.util.stream.LongStream):49 -> a
    49:49:java.lang.Object stream(java.util.stream.IntStream) -> a
    3168:3168:java.util.stream.Stream stream(java.util.stream.IntStream):168:168 -> a
    3168:3168:java.lang.Object stream(java.util.stream.IntStream):49 -> a
    49:49:java.lang.Object stream(java.util.stream.DoubleStream) -> a
    4163:4163:java.util.stream.Stream stream(java.util.stream.DoubleStream):163:163 -> a
    4163:4163:java.lang.Object stream(java.util.stream.DoubleStream):49 -> a
    49:49:java.lang.Object stream(java.util.stream.Stream) -> a
    5158:5158:java.util.stream.Stream stream(java.util.stream.Stream):158:158 -> a
    5158:5158:java.lang.Object stream(java.util.stream.Stream):49 -> a
    49:49:java.lang.Object scalar(java.lang.Object) -> b
    6104:6104:java.util.stream.Stream scalar(java.lang.Object):104:104 -> b
    6104:6104:java.lang.Object scalar(java.lang.Object):49 -> b
    49:49:java.lang.Object nil() -> a
    7099:7099:java.util.stream.Stream nil():99:99 -> a
    7099:7099:java.lang.Object nil():49 -> a
    49:49:java.lang.Object map(java.util.Map,java.util.stream.Stream) -> a
    8092:8094:java.util.stream.Stream map$5a0aa9c(java.util.stream.Stream):92:94 -> a
    8092:8094:java.lang.Object map(java.util.Map,java.util.stream.Stream):49 -> a
    49:49:java.lang.Object examinable(java.lang.String,java.util.stream.Stream) -> b
    9085:9087:java.util.stream.Stream examinable(java.lang.String,java.util.stream.Stream):85:87 -> b
    9085:9087:java.lang.Object examinable(java.lang.String,java.util.stream.Stream):49 -> b
    49:49:java.lang.Object collection(java.util.Collection,java.util.stream.Stream) -> a
    10080:10080:java.util.stream.Stream collection$6166c2e(java.util.stream.Stream):80:80 -> a
    10080:10080:java.lang.Object collection(java.util.Collection,java.util.stream.Stream):49 -> a
    49:49:java.lang.Object array(java.lang.Object[],java.util.stream.Stream) -> a
    11075:11075:java.util.stream.Stream array$5cbde0b8(java.util.stream.Stream):75:75 -> a
    11075:11075:java.lang.Object array(java.lang.Object[],java.util.stream.Stream):49 -> a
    49:49:java.lang.Object examine(java.lang.String) -> a
    49:49:java.lang.Object examine(short) -> a
    11144:11144:java.util.stream.Stream examine(short):144:144 -> a
    11144:11144:java.lang.Object examine(short):49 -> a
    49:49:java.lang.Object examine(long) -> a
    49:49:java.lang.Object examine(int) -> a
    49:49:java.lang.Object examine(float) -> a
    12129:12129:java.util.stream.Stream examine(float):129:129 -> a
    12129:12129:java.lang.Object examine(float):49 -> a
    49:49:java.lang.Object examine(double) -> a
    49:49:java.lang.Object examine(char) -> a
    13119:13119:java.util.stream.Stream examine(char):119:119 -> a
    13119:13119:java.lang.Object examine(char):49 -> a
    49:49:java.lang.Object examine(byte) -> a
    14114:14114:java.util.stream.Stream examine(byte):114:114 -> a
    14114:14114:java.lang.Object examine(byte):49 -> a
    49:49:java.lang.Object examine(boolean) -> a
    15109:15109:java.util.stream.Stream examine(boolean):109:109 -> a
    15109:15109:java.lang.Object examine(boolean):49 -> a
    243:243:java.lang.String lambda$indent$3(java.lang.String) -> c
    205:210:void lambda$flatten$2(java.util.List,java.lang.String,java.util.stream.Stream) -> a
    92:92:java.util.stream.Stream lambda$map$1(java.util.Map$Entry) -> a
    85:85:java.util.stream.Stream lambda$examinable$0(java.util.Map$Entry) -> b
net.kyori.examination.string.MultiLineStringExaminer$Instances -> net.kyori.a.a.a$a:
    net.kyori.examination.string.MultiLineStringExaminer SIMPLE_ESCAPING -> a
    247:247:void <clinit>() -> <clinit>
net.kyori.examination.string.StringExaminer -> net.kyori.a.a.b:
    java.util.function.Function DEFAULT_ESCAPER -> a
    java.util.stream.Collector COMMA_CURLY -> b
    java.util.stream.Collector COMMA_SQUARE -> c
    java.util.function.Function escaper -> d
    66:66:net.kyori.examination.string.StringExaminer simpleEscaping() -> b
    75:77:void <init>(java.util.function.Function) -> <init>
    101:101:java.lang.String nil() -> c
    106:106:java.lang.String scalar(java.lang.Object) -> c
    111:111:java.lang.String examine(boolean) -> b
    116:116:java.lang.String examine(byte) -> b
    121:121:java.lang.String examine(char) -> b
    126:126:java.lang.String examine(double) -> b
    131:131:java.lang.String examine(float) -> b
    136:136:java.lang.String examine(int) -> b
    141:141:java.lang.String examine(long) -> b
    146:146:java.lang.String examine(short) -> b
    171:172:java.lang.String examine(java.lang.String) -> b
    1101:1101:java.lang.String nil():101:101 -> b
    1101:1101:java.lang.String examine(java.lang.String):171 -> b
    46:46:java.lang.Object array(int,java.util.function.IntFunction) -> a
    1177:1186:java.lang.String array(int,java.util.function.IntFunction):177:186 -> a
    1177:1186:java.lang.Object array(int,java.util.function.IntFunction):46 -> a
    46:46:java.lang.Object stream(java.util.stream.LongStream) -> a
    2166:2166:java.lang.String stream(java.util.stream.LongStream):166:166 -> a
    2166:2166:java.lang.Object stream(java.util.stream.LongStream):46 -> a
    46:46:java.lang.Object stream(java.util.stream.IntStream) -> a
    3161:3161:java.lang.String stream(java.util.stream.IntStream):161:161 -> a
    3161:3161:java.lang.Object stream(java.util.stream.IntStream):46 -> a
    46:46:java.lang.Object stream(java.util.stream.DoubleStream) -> a
    4156:4156:java.lang.String stream(java.util.stream.DoubleStream):156:156 -> a
    4156:4156:java.lang.Object stream(java.util.stream.DoubleStream):46 -> a
    46:46:java.lang.Object stream(java.util.stream.Stream) -> a
    5151:5151:java.lang.String stream(java.util.stream.Stream):151:151 -> a
    5151:5151:java.lang.Object stream(java.util.stream.Stream):46 -> a
    46:46:java.lang.Object scalar(java.lang.Object) -> b
    6106:6106:java.lang.String scalar(java.lang.Object):106:106 -> b
    6106:6106:java.lang.Object scalar(java.lang.Object):46 -> b
    46:46:java.lang.Object nil() -> a
    7101:7101:java.lang.String nil():101:101 -> a
    7101:7101:java.lang.Object nil():46 -> a
    46:46:java.lang.Object map(java.util.Map,java.util.stream.Stream) -> a
    8096:8096:java.lang.String map$6dc1ad42(java.util.stream.Stream):96:96 -> a
    8096:8096:java.lang.Object map(java.util.Map,java.util.stream.Stream):46 -> a
    46:46:java.lang.Object examinable(java.lang.String,java.util.stream.Stream) -> b
    9091:9091:java.lang.String examinable(java.lang.String,java.util.stream.Stream):91:91 -> b
    9091:9091:java.lang.Object examinable(java.lang.String,java.util.stream.Stream):46 -> b
    46:46:java.lang.Object collection(java.util.Collection,java.util.stream.Stream) -> a
    10086:10086:java.lang.String collection$3bf6eb34(java.util.stream.Stream):86:86 -> a
    10086:10086:java.lang.Object collection(java.util.Collection,java.util.stream.Stream):46 -> a
    46:46:java.lang.Object array(java.lang.Object[],java.util.stream.Stream) -> a
    11081:11081:java.lang.String array$5e91dea(java.util.stream.Stream):81:81 -> a
    11081:11081:java.lang.Object array(java.lang.Object[],java.util.stream.Stream):46 -> a
    46:46:java.lang.Object examine(java.lang.String) -> a
    46:46:java.lang.Object examine(short) -> a
    11146:11146:java.lang.String examine(short):146:146 -> a
    11146:11146:java.lang.Object examine(short):46 -> a
    46:46:java.lang.Object examine(long) -> a
    46:46:java.lang.Object examine(int) -> a
    46:46:java.lang.Object examine(float) -> a
    46:46:java.lang.Object examine(double) -> a
    46:46:java.lang.Object examine(char) -> a
    46:46:java.lang.Object examine(byte) -> a
    12116:12116:java.lang.String examine(byte):116:116 -> a
    12116:12116:java.lang.Object examine(byte):46 -> a
    46:46:java.lang.Object examine(boolean) -> a
    13111:13111:java.lang.String examine(boolean):111:111 -> a
    13111:13111:java.lang.Object examine(boolean):46 -> a
    96:96:java.lang.String lambda$map$2(java.util.Map$Entry) -> a
    91:91:java.lang.String lambda$examinable$1(java.util.Map$Entry) -> b
    47:54:java.lang.String lambda$static$0(java.lang.String) -> c
    46:46:java.util.function.Function access$000() -> d
    47:56:void <clinit>() -> <clinit>
net.kyori.examination.string.StringExaminer$Instances -> net.kyori.a.a.b$a:
    net.kyori.examination.string.StringExaminer SIMPLE_ESCAPING -> a
    190:190:void <clinit>() -> <clinit>
net.kyori.examination.string.Strings -> net.kyori.a.a.c:
    com.mongodb.client.MongoClient client -> a
    34:34:java.lang.String withSuffix(java.lang.String,char) -> a
    38:38:java.lang.String wrapIn(java.lang.String,char) -> b
    42:42:int maxLength(java.util.stream.Stream) -> a
    46:55:java.lang.String repeat(java.lang.String,int) -> a
    1035:1035:org.bson.BsonDocument com.mongodb.client.internal.CollectionInfoRetriever.filter(java.lang.String,org.bson.BsonDocument):35:35 -> a
org.bson.AbstractBsonReader -> org.a.a:
    org.bson.AbstractBsonReader$State state -> a
    org.bson.AbstractBsonReader$Context context -> b
    org.bson.BsonType currentBsonType -> c
    java.lang.String currentName -> d
    boolean closed -> e
    39:41:void <init>() -> <init>
    45:45:org.bson.BsonType getCurrentBsonType() -> a
    50:53:java.lang.String getCurrentName() -> b
    62:63:void setCurrentBsonType(org.bson.BsonType) -> a
    69:69:org.bson.AbstractBsonReader$State getState() -> c
    78:79:void setState(org.bson.AbstractBsonReader$State) -> a
    87:88:void setCurrentName(java.lang.String) -> a
    94:95:void close() -> close
    103:103:boolean isClosed() -> d
    org.bson.BsonBinary doReadBinaryData() -> e
    byte doPeekBinarySubType() -> f
    int doPeekBinarySize() -> g
    boolean doReadBoolean() -> h
    long doReadDateTime() -> i
    double doReadDouble() -> j
    void doReadEndArray() -> k
    void doReadEndDocument() -> l
    int doReadInt32() -> m
    long doReadInt64() -> n
    org.bson.types.Decimal128 doReadDecimal128() -> o
    java.lang.String doReadJavaScript() -> p
    java.lang.String doReadJavaScriptWithScope() -> q
    org.bson.types.ObjectId doReadObjectId() -> r
    org.bson.BsonRegularExpression doReadRegularExpression() -> s
    org.bson.BsonDbPointer doReadDBPointer() -> t
    void doReadStartArray() -> u
    void doReadStartDocument() -> v
    java.lang.String doReadString() -> w
    java.lang.String doReadSymbol() -> x
    org.bson.BsonTimestamp doReadTimestamp() -> y
    void doSkipValue() -> z
    280:282:org.bson.BsonBinary readBinaryData() -> A
    1078:1079:void setState(org.bson.AbstractBsonReader$State):78:79 -> A
    1078:1079:org.bson.BsonBinary readBinaryData():281 -> A
    287:288:byte peekBinarySubType() -> B
    293:294:int peekBinarySize() -> C
    299:301:boolean readBoolean() -> D
    2078:2079:void setState(org.bson.AbstractBsonReader$State):78:79 -> D
    2078:2079:boolean readBoolean():300 -> D
    org.bson.BsonType readBsonType() -> E
    309:311:long readDateTime() -> F
    3078:3079:void setState(org.bson.AbstractBsonReader$State):78:79 -> F
    3078:3079:long readDateTime():310 -> F
    316:318:double readDouble() -> G
    4078:4079:void setState(org.bson.AbstractBsonReader$State):78:79 -> G
    4078:4079:double readDouble():317 -> G
    323:339:void readEndArray() -> H
    4103:4103:boolean isClosed():103:103 -> H
    4103:4103:void readEndArray():323 -> H
    5069:5069:org.bson.AbstractBsonReader$State getState():69:69 -> H
    5069:5069:void readEndArray():329 -> H
    6069:6069:org.bson.AbstractBsonReader$State getState():69:69 -> H
    6069:6069:void readEndArray():332 -> H
    343:360:void readEndDocument() -> I
    6103:6103:boolean isClosed():103:103 -> I
    6103:6103:void readEndDocument():343 -> I
    7069:7069:org.bson.AbstractBsonReader$State getState():69:69 -> I
    7069:7069:void readEndDocument():350 -> I
    8069:8069:org.bson.AbstractBsonReader$State getState():69:69 -> I
    8069:8069:void readEndDocument():353 -> I
    364:366:int readInt32() -> J
    8078:8079:void setState(org.bson.AbstractBsonReader$State):78:79 -> J
    8078:8079:int readInt32():365 -> J
    372:374:long readInt64() -> K
    9078:9079:void setState(org.bson.AbstractBsonReader$State):78:79 -> K
    9078:9079:long readInt64():373 -> K
    379:381:org.bson.types.Decimal128 readDecimal128() -> L
    10078:10079:void setState(org.bson.AbstractBsonReader$State):78:79 -> L
    10078:10079:org.bson.types.Decimal128 readDecimal128():380 -> L
    386:388:java.lang.String readJavaScript() -> M
    11078:11079:void setState(org.bson.AbstractBsonReader$State):78:79 -> M
    11078:11079:java.lang.String readJavaScript():387 -> M
    393:395:java.lang.String readJavaScriptWithScope() -> N
    12078:12079:void setState(org.bson.AbstractBsonReader$State):78:79 -> N
    12078:12079:java.lang.String readJavaScriptWithScope():394 -> N
    400:403:void readMaxKey() -> O
    13078:13079:void setState(org.bson.AbstractBsonReader$State):78:79 -> O
    13078:13079:void readMaxKey():401 -> O
    407:410:void readMinKey() -> P
    14078:14079:void setState(org.bson.AbstractBsonReader$State):78:79 -> P
    14078:14079:void readMinKey():408 -> P
    414:417:void readNull() -> Q
    15078:15079:void setState(org.bson.AbstractBsonReader$State):78:79 -> Q
    15078:15079:void readNull():415 -> Q
    421:423:org.bson.types.ObjectId readObjectId() -> R
    16078:16079:void setState(org.bson.AbstractBsonReader$State):78:79 -> R
    16078:16079:org.bson.types.ObjectId readObjectId():422 -> R
    428:430:org.bson.BsonRegularExpression readRegularExpression() -> S
    17078:17079:void setState(org.bson.AbstractBsonReader$State):78:79 -> S
    17078:17079:org.bson.BsonRegularExpression readRegularExpression():429 -> S
    435:437:org.bson.BsonDbPointer readDBPointer() -> T
    18078:18079:void setState(org.bson.AbstractBsonReader$State):78:79 -> T
    18078:18079:org.bson.BsonDbPointer readDBPointer():436 -> T
    442:445:void readStartArray() -> U
    19078:19079:void setState(org.bson.AbstractBsonReader$State):78:79 -> U
    19078:19079:void readStartArray():444 -> U
    449:452:void readStartDocument() -> V
    20078:20079:void setState(org.bson.AbstractBsonReader$State):78:79 -> V
    20078:20079:void readStartDocument():451 -> V
    456:458:java.lang.String readString() -> W
    21078:21079:void setState(org.bson.AbstractBsonReader$State):78:79 -> W
    21078:21079:java.lang.String readString():457 -> W
    463:465:java.lang.String readSymbol() -> X
    22078:22079:void setState(org.bson.AbstractBsonReader$State):78:79 -> X
    22078:22079:java.lang.String readSymbol():464 -> X
    470:472:org.bson.BsonTimestamp readTimestamp() -> Y
    23078:23079:void setState(org.bson.AbstractBsonReader$State):78:79 -> Y
    23078:23079:org.bson.BsonTimestamp readTimestamp():471 -> Y
    477:480:void readUndefined() -> Z
    24078:24079:void setState(org.bson.AbstractBsonReader$State):78:79 -> Z
    24078:24079:void readUndefined():478 -> Z
    484:492:void skipName() -> aa
    24103:24103:boolean isClosed():103:103 -> aa
    24103:24103:void skipName():484 -> aa
    25069:25069:org.bson.AbstractBsonReader$State getState():69:69 -> aa
    25069:25069:void skipName():487 -> aa
    25078:25079:void setState(org.bson.AbstractBsonReader$State):78:79 -> aa
    25078:25079:void skipName():490 -> aa
    496:506:void skipValue() -> ab
    25103:25103:boolean isClosed():103:103 -> ab
    25103:25103:void skipValue():496 -> ab
    26069:26069:org.bson.AbstractBsonReader$State getState():69:69 -> ab
    26069:26069:void skipValue():499 -> ab
    26078:26079:void setState(org.bson.AbstractBsonReader$State):78:79 -> ab
    26078:26079:void skipValue():505 -> ab
    576:584:java.lang.String readName() -> ac
    651:654:void throwInvalidContextType(java.lang.String,org.bson.BsonContextType,org.bson.BsonContextType[]) -> a
    665:668:void throwInvalidState(java.lang.String,org.bson.AbstractBsonReader$State[]) -> a
    678:693:void verifyBSONType(java.lang.String,org.bson.BsonType) -> a
    717:722:void checkPreconditions(java.lang.String,org.bson.BsonType) -> b
    26103:26103:boolean isClosed():103:103 -> b
    26103:26103:void checkPreconditions(java.lang.String,org.bson.BsonType):717 -> b
    730:730:org.bson.AbstractBsonReader$Context getContext() -> ad
    739:740:void setContext(org.bson.AbstractBsonReader$Context) -> a
    748:756:org.bson.AbstractBsonReader$State getNextState() -> ae
    761:772:void setStateOnEnd() -> ag
    27078:27079:void setState(org.bson.AbstractBsonReader$State):78:79 -> ag
    27078:27079:void setStateOnEnd():764 -> ag
    28078:28079:void setState(org.bson.AbstractBsonReader$State):78:79 -> ag
    28078:28079:void setStateOnEnd():767 -> ag
    29:29:org.bson.AbstractBsonReader$State access$000(org.bson.AbstractBsonReader) -> a
    29:29:org.bson.AbstractBsonReader$Context access$100(org.bson.AbstractBsonReader) -> b
    29:29:org.bson.BsonType access$400(org.bson.AbstractBsonReader) -> c
    29:29:java.lang.String access$500(org.bson.AbstractBsonReader) -> d
    29:29:org.bson.AbstractBsonReader$State access$002(org.bson.AbstractBsonReader,org.bson.AbstractBsonReader$State) -> a
    29:29:org.bson.BsonType access$402(org.bson.AbstractBsonReader,org.bson.BsonType) -> a
    29:29:java.lang.String access$502(org.bson.AbstractBsonReader,java.lang.String) -> a
org.bson.AbstractBsonReader$1 -> org.a.a$1:
    int[] $SwitchMap$org$bson$BsonContextType -> a
    748:748:void <clinit>() -> <clinit>
org.bson.AbstractBsonReader$Context -> org.a.a$a:
    org.bson.AbstractBsonReader$Context parentContext -> a
    org.bson.BsonContextType contextType -> b
    838:841:void <init>(org.bson.AbstractBsonReader,org.bson.AbstractBsonReader$Context,org.bson.BsonContextType) -> <init>
    849:849:org.bson.AbstractBsonReader$Context getParentContext() -> a
    858:858:org.bson.BsonContextType getContextType() -> b
org.bson.AbstractBsonReader$Mark -> org.a.a$b:
    org.bson.AbstractBsonReader$State state -> a
    org.bson.AbstractBsonReader$Context parentContext -> b
    org.bson.BsonContextType contextType -> c
    org.bson.BsonType currentBsonType -> d
    java.lang.String currentName -> e
    org.bson.AbstractBsonReader this$0 -> f
    790:790:org.bson.AbstractBsonReader$Context getParentContext() -> a
    799:799:org.bson.BsonContextType getContextType() -> b
    805:811:void <init>(org.bson.AbstractBsonReader) -> <init>
    1827:1827:org.bson.AbstractBsonReader$Context org.bson.AbstractBsonReader$Context.access$200(org.bson.AbstractBsonReader$Context):827:827 -> <init>
    1827:1827:void <init>(org.bson.AbstractBsonReader):807 -> <init>
    2827:2827:org.bson.BsonContextType org.bson.AbstractBsonReader$Context.access$300(org.bson.AbstractBsonReader$Context):827:827 -> <init>
    2827:2827:void <init>(org.bson.AbstractBsonReader):808 -> <init>
    815:818:void reset() -> c
org.bson.AbstractBsonReader$State -> org.a.a$c:
    org.bson.AbstractBsonReader$State INITIAL -> a
    org.bson.AbstractBsonReader$State TYPE -> b
    org.bson.AbstractBsonReader$State NAME -> c
    org.bson.AbstractBsonReader$State VALUE -> d
    org.bson.AbstractBsonReader$State SCOPE_DOCUMENT -> e
    org.bson.AbstractBsonReader$State END_OF_DOCUMENT -> f
    org.bson.AbstractBsonReader$State END_OF_ARRAY -> g
    org.bson.AbstractBsonReader$State DONE -> h
    org.bson.AbstractBsonReader$State CLOSED -> i
    org.bson.AbstractBsonReader$State[] $VALUES -> j
    865:865:org.bson.AbstractBsonReader$State[] values() -> values
    865:865:org.bson.AbstractBsonReader$State valueOf(java.lang.String) -> valueOf
    865:865:void <init>(java.lang.String,int) -> <init>
    865:909:void <clinit>() -> <clinit>
    1865:1865:org.bson.AbstractBsonReader$State[] $values():865:865 -> <clinit>
    1865:1865:void <clinit>():865 -> <clinit>
org.bson.AbstractBsonWriter -> org.a.b:
    org.bson.BsonWriterSettings settings -> b
    java.util.Stack fieldNameValidatorStack -> c
    org.bson.AbstractBsonWriter$State state -> a
    org.bson.AbstractBsonWriter$Context context -> d
    int serializationDepth -> e
    boolean closed -> f
    50:51:void <init>(org.bson.BsonWriterSettings) -> <init>
    38:66:void <init>(org.bson.BsonWriterSettings,org.bson.FieldNameValidator) -> <init>
    74:74:java.lang.String getName() -> i
    2040:2040:java.lang.String org.bson.AbstractBsonWriter$Context.access$000(org.bson.AbstractBsonWriter$Context):1040:1040 -> i
    2040:2040:java.lang.String getName():74 -> i
    92:93:void setState(org.bson.AbstractBsonWriter$State) -> a
    101:101:org.bson.AbstractBsonWriter$State getState() -> j
    110:110:org.bson.AbstractBsonWriter$Context getContext() -> k
    119:120:void setContext(org.bson.AbstractBsonWriter$Context) -> a
    void doWriteStartDocument() -> l
    void doWriteEndDocument() -> m
    void doWriteStartArray() -> n
    void doWriteEndArray() -> o
    void doWriteBinaryData(org.bson.BsonBinary) -> b
    void doWriteBoolean(boolean) -> b
    void doWriteDateTime(long) -> c
    void doWriteDBPointer(org.bson.BsonDbPointer) -> b
    void doWriteDouble(double) -> b
    void doWriteInt32(int) -> b
    void doWriteInt64(long) -> d
    void doWriteDecimal128(org.bson.types.Decimal128) -> b
    void doWriteJavaScript(java.lang.String) -> h
    void doWriteJavaScriptWithScope(java.lang.String) -> i
    void doWriteMaxKey() -> p
    void doWriteMinKey() -> q
    void doWriteNull() -> r
    void doWriteObjectId(org.bson.types.ObjectId) -> b
    void doWriteRegularExpression(org.bson.BsonRegularExpression) -> b
    void doWriteString(java.lang.String) -> j
    void doWriteSymbol(java.lang.String) -> k
    void doWriteTimestamp(org.bson.BsonTimestamp) -> b
    void doWriteUndefined() -> s
    271:273:void writeStartDocument(java.lang.String) -> a
    277:291:void writeStartDocument() -> a
    3040:3040:java.lang.String org.bson.AbstractBsonWriter$Context.access$000(org.bson.AbstractBsonWriter$Context):1040:1040 -> a
    3040:3040:void writeStartDocument():278 -> a
    3049:3049:int org.bson.BsonWriterSettings.getMaxSerializationDepth():49:49 -> a
    3049:3049:void writeStartDocument():284 -> a
    3092:3093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> a
    3092:3093:void writeStartDocument():290 -> a
    295:314:void writeEndDocument() -> b
    4081:4081:org.bson.BsonContextType org.bson.AbstractBsonWriter$Context.getContextType():1081:1081 -> b
    4081:4081:void writeEndDocument():297 -> b
    5040:5040:java.lang.String org.bson.AbstractBsonWriter$Context.access$000(org.bson.AbstractBsonWriter$Context):1040:1040 -> b
    5040:5040:void writeEndDocument():302 -> b
    5081:5081:org.bson.BsonContextType org.bson.AbstractBsonWriter$Context.getContextType():1081:1081 -> b
    5081:5081:void writeEndDocument():309 -> b
    5092:5093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> b
    5092:5093:void writeEndDocument():310 -> b
    6092:6093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> b
    6092:6093:void writeEndDocument():312 -> b
    318:320:void writeStartArray(java.lang.String) -> b
    324:337:void writeStartArray() -> c
    7040:7040:java.lang.String org.bson.AbstractBsonWriter$Context.access$000(org.bson.AbstractBsonWriter$Context):1040:1040 -> c
    7040:7040:void writeStartArray():326 -> c
    7049:7049:int org.bson.BsonWriterSettings.getMaxSerializationDepth():49:49 -> c
    7049:7049:void writeStartArray():330 -> c
    7092:7093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> c
    7092:7093:void writeStartArray():336 -> c
    341:354:void writeEndArray() -> d
    8081:8081:org.bson.BsonContextType org.bson.AbstractBsonWriter$Context.getContextType():1081:1081 -> d
    8081:8081:void writeEndArray():343 -> d
    9081:9081:org.bson.BsonContextType org.bson.AbstractBsonWriter$Context.getContextType():1081:1081 -> d
    9081:9081:void writeEndArray():344 -> d
    10040:10040:java.lang.String org.bson.AbstractBsonWriter$Context.access$000(org.bson.AbstractBsonWriter$Context):1040:1040 -> d
    10040:10040:void writeEndArray():347 -> d
    10092:10093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> d
    10092:10093:void writeEndArray():353 -> d
    366:370:void writeBinaryData(org.bson.BsonBinary) -> a
    11092:11093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> a
    11092:11093:void writeBinaryData(org.bson.BsonBinary):369 -> a
    374:376:void writeBoolean(java.lang.String,boolean) -> a
    380:383:void writeBoolean(boolean) -> a
    12092:12093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> a
    12092:12093:void writeBoolean(boolean):382 -> a
    393:396:void writeDateTime(long) -> a
    13092:13093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> a
    13092:13093:void writeDateTime(long):395 -> a
    408:412:void writeDBPointer(org.bson.BsonDbPointer) -> a
    14092:14093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> a
    14092:14093:void writeDBPointer(org.bson.BsonDbPointer):411 -> a
    422:425:void writeDouble(double) -> a
    15092:15093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> a
    15092:15093:void writeDouble(double):424 -> a
    429:431:void writeInt32(java.lang.String,int) -> a
    435:438:void writeInt32(int) -> a
    16092:16093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> a
    16092:16093:void writeInt32(int):437 -> a
    448:451:void writeInt64(long) -> b
    17092:17093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> b
    17092:17093:void writeInt64(long):450 -> b
    455:459:void writeDecimal128(org.bson.types.Decimal128) -> a
    18092:18093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> a
    18092:18093:void writeDecimal128(org.bson.types.Decimal128):458 -> a
    479:483:void writeJavaScript(java.lang.String) -> c
    19092:19093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> c
    19092:19093:void writeJavaScript(java.lang.String):482 -> c
    495:499:void writeJavaScriptWithScope(java.lang.String) -> d
    20092:20093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> d
    20092:20093:void writeJavaScriptWithScope(java.lang.String):498 -> d
    509:512:void writeMaxKey() -> e
    21092:21093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> e
    21092:21093:void writeMaxKey():511 -> e
    522:525:void writeMinKey() -> f
    22092:22093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> f
    22092:22093:void writeMinKey():524 -> f
    529:540:void writeName(java.lang.String) -> e
    23040:23040:java.lang.String org.bson.AbstractBsonWriter$Context.access$002(org.bson.AbstractBsonWriter$Context,java.lang.String):1040:1040 -> e
    23040:23040:void writeName(java.lang.String):538 -> e
    549:549:void doWriteName(java.lang.String) -> l
    559:562:void writeNull() -> g
    23092:23093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> g
    23092:23093:void writeNull():561 -> g
    566:570:void writeObjectId(java.lang.String,org.bson.types.ObjectId) -> a
    574:578:void writeObjectId(org.bson.types.ObjectId) -> a
    24092:24093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> a
    24092:24093:void writeObjectId(org.bson.types.ObjectId):577 -> a
    590:594:void writeRegularExpression(org.bson.BsonRegularExpression) -> a
    25092:25093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> a
    25092:25093:void writeRegularExpression(org.bson.BsonRegularExpression):593 -> a
    598:602:void writeString(java.lang.String,java.lang.String) -> a
    606:611:void writeString(java.lang.String) -> f
    26092:26093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> f
    26092:26093:void writeString(java.lang.String):609 -> f
    623:627:void writeSymbol(java.lang.String) -> g
    27092:27093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> g
    27092:27093:void writeSymbol(java.lang.String):626 -> g
    639:643:void writeTimestamp(org.bson.BsonTimestamp) -> a
    28092:28093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> a
    28092:28093:void writeTimestamp(org.bson.BsonTimestamp):642 -> a
    653:656:void writeUndefined() -> h
    29092:29093:void setState(org.bson.AbstractBsonWriter$State):92:93 -> h
    29092:29093:void writeUndefined():655 -> h
    665:668:org.bson.AbstractBsonWriter$State getNextState() -> t
    30081:30081:org.bson.BsonContextType org.bson.AbstractBsonWriter$Context.getContextType():1081:1081 -> t
    30081:30081:org.bson.AbstractBsonWriter$State getNextState():665 -> t
    679:684:boolean checkState(org.bson.AbstractBsonWriter$State[]) -> a
    30101:30101:org.bson.AbstractBsonWriter$State getState():101:101 -> a
    30101:30101:boolean checkState(org.bson.AbstractBsonWriter$State[]):680 -> a
    697:704:void checkPreconditions(java.lang.String,org.bson.AbstractBsonWriter$State[]) -> a
    31083:31083:boolean isClosed():83:83 -> a
    31083:31083:void checkPreconditions(java.lang.String,org.bson.AbstractBsonWriter$State[]):697 -> a
    716:717:void throwInvalidContextType(java.lang.String,org.bson.BsonContextType,org.bson.BsonContextType[]) -> a
    730:747:void throwInvalidState(java.lang.String,org.bson.AbstractBsonWriter$State[]) -> b
    753:754:void close() -> close
    758:760:void pipe(org.bson.BsonReader) -> a
    770:773:void pipe(org.bson.BsonReader,java.util.List) -> a
    781:786:void pipeExtraElements(java.util.List) -> a
    32046:32046:java.lang.String org.bson.BsonElement.getName():46:46 -> a
    32046:32046:void pipeExtraElements(java.util.List):783 -> a
    32055:32055:org.bson.BsonValue org.bson.BsonElement.getValue():55:55 -> a
    32055:32055:void pipeExtraElements(java.util.List):784 -> a
    796:796:boolean abortPipe() -> u
    800:814:void pipeDocument(org.bson.BsonReader,java.util.List) -> b
    817:819:void pipeJavascriptWithScope(org.bson.BsonReader) -> b
    822:893:void pipeValue(org.bson.BsonReader) -> c
    896:902:void pipeDocument(org.bson.BsonDocument) -> a
    905:915:void pipeArray(org.bson.BsonReader) -> d
    918:923:void pipeArray(org.bson.BsonArray) -> a
    926:928:void pipeJavascriptWithScope(org.bson.BsonJavaScriptWithScope) -> a
    32057:32057:java.lang.String org.bson.BsonJavaScriptWithScope.getCode():57:57 -> a
    32057:32057:void pipeJavascriptWithScope(org.bson.BsonJavaScriptWithScope):926 -> a
    32066:32066:org.bson.BsonDocument org.bson.BsonJavaScriptWithScope.getScope():66:66 -> a
    32066:32066:void pipeJavascriptWithScope(org.bson.BsonJavaScriptWithScope):927 -> a
    931:998:void pipeValue(org.bson.BsonValue) -> a
    33057:33057:double org.bson.BsonDouble.getValue():57:57 -> a
    33057:33057:void pipeValue(org.bson.BsonValue):939 -> a
    34056:34056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    34056:34056:void pipeValue(org.bson.BsonValue):942 -> a
    35054:35054:org.bson.types.ObjectId org.bson.BsonObjectId.getValue():54:54 -> a
    35054:35054:void pipeValue(org.bson.BsonValue):951 -> a
    35073:35073:boolean org.bson.BsonBoolean.getValue():73:73 -> a
    35073:35073:void pipeValue(org.bson.BsonValue):954 -> a
    36053:36053:long org.bson.BsonDateTime.getValue():53:53 -> a
    36053:36053:void pipeValue(org.bson.BsonValue):957 -> a
    37048:37048:java.lang.String org.bson.BsonJavaScript.getCode():48:48 -> a
    37048:37048:void pipeValue(org.bson.BsonValue):966 -> a
    37053:37053:java.lang.String org.bson.BsonSymbol.getSymbol():53:53 -> a
    37053:37053:void pipeValue(org.bson.BsonValue):969 -> a
    37055:37055:int org.bson.BsonInt32.getValue():55:55 -> a
    37055:37055:void pipeValue(org.bson.BsonValue):975 -> a
    38054:38054:long org.bson.BsonInt64.getValue():54:54 -> a
    38054:38054:void pipeValue(org.bson.BsonValue):981 -> a
    39052:39052:org.bson.types.Decimal128 org.bson.BsonDecimal128.getValue():52:52 -> a
    39052:39052:void pipeValue(org.bson.BsonValue):984 -> a
org.bson.AbstractBsonWriter$1 -> org.a.b$1:
    int[] $SwitchMap$org$bson$BsonType -> a
    822:822:void <clinit>() -> <clinit>
org.bson.AbstractBsonWriter$Context -> org.a.b$a:
    org.bson.AbstractBsonWriter$Context parentContext -> c
    org.bson.BsonContextType contextType -> a
    java.lang.String name -> b
    1061:1064:void <init>(org.bson.AbstractBsonWriter,org.bson.AbstractBsonWriter$Context,org.bson.BsonContextType) -> <init>
    1072:1072:org.bson.AbstractBsonWriter$Context getParentContext() -> a
org.bson.AbstractBsonWriter$State -> org.a.b$b:
    org.bson.AbstractBsonWriter$State INITIAL -> a
    org.bson.AbstractBsonWriter$State NAME -> b
    org.bson.AbstractBsonWriter$State VALUE -> c
    org.bson.AbstractBsonWriter$State SCOPE_DOCUMENT -> d
    org.bson.AbstractBsonWriter$State DONE -> e
    org.bson.AbstractBsonWriter$State CLOSED -> f
    org.bson.AbstractBsonWriter$State[] $VALUES -> g
    1003:1003:org.bson.AbstractBsonWriter$State[] values() -> values
    1003:1003:org.bson.AbstractBsonWriter$State valueOf(java.lang.String) -> valueOf
    1003:1003:void <init>(java.lang.String,int) -> <init>
    1003:1032:void <clinit>() -> <clinit>
    2003:2003:org.bson.AbstractBsonWriter$State[] $values():1003:1003 -> <clinit>
    2003:2003:void <clinit>():1003 -> <clinit>
org.bson.BSON -> org.a.c:
    int[] FLAG_LOOKUP -> a
    98:112:java.lang.String regexFlags(int) -> a
    37:49:void <clinit>() -> <clinit>
org.bson.BSONEncoder -> org.a.d:
    byte[] encode(org.bson.BSONObject) -> a
org.bson.BSONException -> org.a.e:
    27:34:void <init>(java.lang.String) -> <init>
    27:51:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.bson.BSONObject -> org.a.f:
    java.lang.Object put(java.lang.String,java.lang.Object) -> a
    java.lang.Object get(java.lang.String) -> a
    boolean containsField(java.lang.String) -> b
    java.util.Set keySet() -> keySet
org.bson.BasicBSONEncoder -> org.a.g:
    org.bson.UuidRepresentation defaultUuidRepresentation -> a
    org.bson.BsonBinaryWriter bsonWriter -> b
    org.bson.io.OutputBuffer outputBuffer -> c
    46:46:void <init>() -> <init>
    88:92:byte[] encode(org.bson.BSONObject) -> a
    1103:1108:void set(org.bson.io.OutputBuffer):103:108 -> a
    1103:1108:byte[] encode(org.bson.BSONObject):89 -> a
    2097:2099:void done():97:99 -> a
    2097:2099:byte[] encode(org.bson.BSONObject):91 -> a
    136:150:int putObject(org.bson.BSONObject) -> b
    2116:2116:org.bson.io.OutputBuffer getOutputBuffer():116:116 -> b
    2116:2116:int putObject(org.bson.BSONObject):136 -> b
    3116:3116:org.bson.io.OutputBuffer getOutputBuffer():116:116 -> b
    3116:3116:int putObject(org.bson.BSONObject):150 -> b
    154:154:boolean isTopLevelDocument() -> a
    163:166:void putName(java.lang.String) -> a
    4101:4101:org.bson.AbstractBsonWriter$State org.bson.AbstractBsonWriter.getState():101:101 -> a
    4101:4101:void putName(java.lang.String):163 -> a
    175:236:void _putObjectField(java.lang.String,java.lang.Object) -> a
    245:247:void putNull(java.lang.String) -> b
    268:270:void putTimestamp(java.lang.String,org.bson.types.BSONTimestamp) -> a
    5079:5079:int org.bson.types.BSONTimestamp.getInc():79:79 -> a
    5079:5079:void putTimestamp(java.lang.String,org.bson.types.BSONTimestamp):269 -> a
    279:281:void putCode(java.lang.String,org.bson.types.Code) -> a
    6050:6050:java.lang.String org.bson.types.Code.getCode():50:50 -> a
    6050:6050:void putCode(java.lang.String,org.bson.types.Code):280 -> a
    290:293:void putCodeWScope(java.lang.String,org.bson.types.CodeWScope) -> a
    7050:7050:java.lang.String org.bson.types.Code.getCode():50:50 -> a
    7050:7050:void putCodeWScope(java.lang.String,org.bson.types.CodeWScope):291 -> a
    8050:8050:org.bson.BSONObject org.bson.types.CodeWScope.getScope():50:50 -> a
    8050:8050:void putCodeWScope(java.lang.String,org.bson.types.CodeWScope):292 -> a
    302:304:void putBoolean(java.lang.String,java.lang.Boolean) -> a
    314:316:void putDate(java.lang.String,java.util.Date) -> a
    325:335:void putNumber(java.lang.String,java.lang.Number) -> a
    346:348:void putDecimal128(java.lang.String,org.bson.types.Decimal128) -> a
    358:360:void putBinary(java.lang.String,byte[]) -> a
    370:372:void putBinary(java.lang.String,org.bson.types.Binary) -> a
    8076:8076:byte org.bson.types.Binary.getType():76:76 -> a
    8076:8076:void putBinary(java.lang.String,org.bson.types.Binary):371 -> a
    382:388:void putUUID(java.lang.String,java.util.UUID) -> a
    398:400:void putSymbol(java.lang.String,org.bson.types.Symbol) -> a
    9050:9050:java.lang.String org.bson.types.Symbol.getSymbol():50:50 -> a
    9050:9050:void putSymbol(java.lang.String,org.bson.types.Symbol):399 -> a
    410:412:void putString(java.lang.String,java.lang.String) -> a
    423:425:void putPattern(java.lang.String,java.util.regex.Pattern) -> a
    434:436:void putObjectId(java.lang.String,org.bson.types.ObjectId) -> a
    445:486:void putArray(java.lang.String,java.lang.Object) -> b
    496:503:void putIterable(java.lang.String,java.lang.Iterable) -> a
    513:519:void putMap(java.lang.String,java.util.Map) -> a
    529:530:int putObject(java.lang.String,org.bson.BSONObject) -> a
    550:552:void putMinKey(java.lang.String) -> c
    560:562:void putMaxKey(java.lang.String) -> d
    81:81:void <clinit>() -> <clinit>
org.bson.BasicBSONObject -> org.a.h:
    43:44:void <init>() -> <init>
    101:101:boolean containsField(java.lang.String) -> b
    111:111:java.lang.Object get(java.lang.String) -> a
    307:310:void putAll(java.util.Map) -> putAll
    340:354:boolean equals(java.lang.Object) -> equals
    1367:1367:org.bson.BSONEncoder getEncoder():367:367 -> equals
    1367:1367:boolean equals(java.lang.Object):354 -> equals
    2367:2367:org.bson.BSONEncoder getEncoder():367:367 -> equals
    2367:2367:boolean equals(java.lang.Object):354 -> equals
    359:359:int hashCode() -> hashCode
    3363:3363:byte[] encode():363:363 -> hashCode
    3363:3363:int hashCode():359 -> hashCode
    3367:3367:org.bson.BSONEncoder getEncoder():367:367 -> hashCode
    3367:3367:byte[] encode():363 -> hashCode
    3367:3367:int hashCode():359 -> hashCode
    373:380:java.lang.Object canonicalize(java.lang.Object) -> a
    3405:3409:java.util.List canonicalizeList(java.util.List):405:409 -> a
    3405:3409:java.lang.Object canonicalize(java.lang.Object):376 -> a
    385:391:java.util.Map canonicalizeMap(java.util.Map) -> a
    395:401:org.bson.BasicBSONObject canonicalizeBSONObject(org.bson.BSONObject) -> a
    35:35:java.lang.Object put(java.lang.String,java.lang.Object) -> a
org.bson.BsonArray -> org.a.i:
    java.util.List values -> a
    45:46:void <init>(java.util.List) -> <init>
    52:53:void <init>() -> <init>
    64:65:void <init>(int) -> <init>
    68:74:void <init>(java.util.List,boolean) -> <init>
    96:96:java.util.List getValues() -> a
    101:101:org.bson.BsonType getBsonType() -> c
    106:106:int size() -> size
    111:111:boolean isEmpty() -> isEmpty
    116:116:boolean contains(java.lang.Object) -> contains
    121:121:java.util.Iterator iterator() -> iterator
    126:126:java.lang.Object[] toArray() -> toArray
    131:131:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    136:136:boolean add(org.bson.BsonValue) -> a
    141:141:boolean remove(java.lang.Object) -> remove
    146:146:boolean containsAll(java.util.Collection) -> containsAll
    151:151:boolean addAll(java.util.Collection) -> addAll
    156:156:boolean addAll(int,java.util.Collection) -> addAll
    161:161:boolean removeAll(java.util.Collection) -> removeAll
    166:166:boolean retainAll(java.util.Collection) -> retainAll
    171:172:void clear() -> clear
    176:176:org.bson.BsonValue get(int) -> a
    181:181:org.bson.BsonValue set(int,org.bson.BsonValue) -> a
    186:187:void add(int,org.bson.BsonValue) -> b
    191:191:org.bson.BsonValue remove(int) -> b
    196:196:int indexOf(java.lang.Object) -> indexOf
    201:201:int lastIndexOf(java.lang.Object) -> lastIndexOf
    206:206:java.util.ListIterator listIterator() -> listIterator
    211:211:java.util.ListIterator listIterator(int) -> listIterator
    216:216:java.util.List subList(int,int) -> subList
    221:229:boolean equals(java.lang.Object) -> equals
    234:234:int hashCode() -> hashCode
    239:239:java.lang.String toString() -> toString
    246:265:org.bson.BsonArray clone() -> b
    35:35:java.lang.Object clone() -> clone
    35:35:java.lang.Object remove(int) -> remove
    35:35:void add(int,java.lang.Object) -> add
    35:35:java.lang.Object set(int,java.lang.Object) -> set
    35:35:java.lang.Object get(int) -> get
    35:35:boolean add(java.lang.Object) -> add
org.bson.BsonArray$1 -> org.a.i$1:
    int[] $SwitchMap$org$bson$BsonType -> a
    248:248:void <clinit>() -> <clinit>
org.bson.BsonBinary -> org.a.j:
    byte type -> a
    byte[] data -> b
    44:45:void <init>(byte[]) -> <init>
    55:64:void <init>(org.bson.BsonBinarySubType,byte[]) -> <init>
    1097:1097:byte org.bson.BsonBinarySubType.getValue():97:97 -> <init>
    1097:1097:void <init>(org.bson.BsonBinarySubType,byte[]):62 -> <init>
    74:80:void <init>(byte,byte[]) -> <init>
    89:90:void <init>(java.util.UUID) -> <init>
    99:110:void <init>(java.util.UUID,org.bson.UuidRepresentation) -> <init>
    2097:2097:byte org.bson.BsonBinarySubType.getValue():97:97 -> <init>
    2097:2097:void <init>(java.util.UUID,org.bson.UuidRepresentation):108 -> <init>
    3097:3097:byte org.bson.BsonBinarySubType.getValue():97:97 -> <init>
    3097:3097:void <init>(java.util.UUID,org.bson.UuidRepresentation):109 -> <init>
    153:153:org.bson.BsonType getBsonType() -> c
    179:195:boolean equals(java.lang.Object) -> equals
    200:202:int hashCode() -> hashCode
    207:209:java.lang.String toString() -> toString
    214:214:org.bson.BsonBinary clone(org.bson.BsonBinary) -> a
org.bson.BsonBinaryReader -> org.a.k:
    org.bson.io.BsonInput bsonInput -> d
    45:46:void <init>(java.nio.ByteBuffer) -> <init>
    53:59:void <init>(org.bson.io.BsonInput) -> <init>
    63:64:void close() -> close
    77:129:org.bson.BsonType readBsonType() -> E
    1389:1389:org.bson.BsonBinaryReader$Context getContext():389:389 -> E
    1389:1389:org.bson.BsonType readBsonType():102 -> E
    2389:2389:org.bson.BsonBinaryReader$Context getContext():389:389 -> E
    2389:2389:org.bson.BsonType readBsonType():112 -> E
    3389:3389:org.bson.BsonBinaryReader$Context getContext():389:389 -> E
    3389:3389:org.bson.BsonType readBsonType():115 -> E
    135:147:org.bson.BsonBinary doReadBinaryData() -> e
    4097:4097:byte org.bson.BsonBinarySubType.getValue():97:97 -> e
    4097:4097:org.bson.BsonBinary doReadBinaryData():138 -> e
    152:156:byte doPeekBinarySubType() -> f
    161:164:int doPeekBinarySize() -> g
    169:173:boolean doReadBoolean() -> h
    178:178:long doReadDateTime() -> i
    183:183:double doReadDouble() -> j
    188:188:int doReadInt32() -> m
    193:193:long doReadInt64() -> n
    198:200:org.bson.types.Decimal128 doReadDecimal128() -> o
    205:205:java.lang.String doReadJavaScript() -> p
    210:213:java.lang.String doReadJavaScriptWithScope() -> q
    4389:4389:org.bson.BsonBinaryReader$Context getContext():389:389 -> q
    4389:4389:java.lang.String doReadJavaScriptWithScope():212 -> q
    230:230:org.bson.types.ObjectId doReadObjectId() -> r
    235:235:org.bson.BsonRegularExpression doReadRegularExpression() -> s
    240:240:org.bson.BsonDbPointer doReadDBPointer() -> t
    245:245:java.lang.String doReadString() -> w
    250:250:java.lang.String doReadSymbol() -> x
    255:255:org.bson.BsonTimestamp doReadTimestamp() -> y
    264:267:void doReadStartArray() -> u
    5389:5389:org.bson.BsonBinaryReader$Context getContext():389:389 -> u
    5389:5389:void doReadStartArray():266 -> u
    271:276:void doReadStartDocument() -> v
    6389:6389:org.bson.BsonBinaryReader$Context getContext():389:389 -> v
    6389:6389:void doReadStartDocument():275 -> v
    280:281:void doReadEndArray() -> k
    7389:7389:org.bson.BsonBinaryReader$Context getContext():389:389 -> k
    7389:7389:void doReadEndArray():280 -> k
    285:289:void doReadEndDocument() -> l
    8389:8389:org.bson.BsonBinaryReader$Context getContext():389:389 -> l
    8389:8389:void doReadEndDocument():285 -> l
    9389:9389:org.bson.BsonBinaryReader$Context getContext():389:389 -> l
    9389:9389:void doReadEndDocument():286 -> l
    10389:10389:org.bson.BsonBinaryReader$Context getContext():389:389 -> l
    10389:10389:void doReadEndDocument():287 -> l
    297:377:void doSkipValue() -> z
    380:385:int readSize() -> ag
    389:389:org.bson.BsonBinaryReader$Context getContext() -> ae
    394:394:org.bson.BsonReaderMark getMark() -> af
    35:35:org.bson.AbstractBsonReader$Context getContext() -> ad
    11389:11389:org.bson.BsonBinaryReader$Context getContext():389:389 -> ad
    11389:11389:org.bson.AbstractBsonReader$Context getContext():35 -> ad
    35:35:org.bson.io.BsonInput access$200(org.bson.BsonBinaryReader) -> a
org.bson.BsonBinaryReader$1 -> org.a.k$1:
    int[] $SwitchMap$org$bson$BsonContextType -> a
    int[] $SwitchMap$org$bson$BsonType -> b
    102:305:void <clinit>() -> <clinit>
org.bson.BsonBinaryReader$Context -> org.a.k$a:
    int startPosition -> c
    int size -> d
    429:433:void <init>(org.bson.BsonBinaryReader,org.bson.BsonBinaryReader$Context,org.bson.BsonContextType,int,int) -> <init>
    436:440:org.bson.BsonBinaryReader$Context popContext(int) -> a
    1445:1445:org.bson.BsonBinaryReader$Context getParentContext():445:445 -> a
    1445:1445:org.bson.BsonBinaryReader$Context popContext(int):440 -> a
    425:425:org.bson.AbstractBsonReader$Context getParentContext() -> a
    2445:2445:org.bson.BsonBinaryReader$Context getParentContext():445:445 -> a
    2445:2445:org.bson.AbstractBsonReader$Context getParentContext():425 -> a
org.bson.BsonBinaryReader$Mark -> org.a.k$b:
    int startPosition -> a
    int size -> b
    org.bson.BsonReaderMark bsonInputMark$6467fdeb -> c
    org.bson.BsonBinaryReader this$0 -> d
    408:412:void <init>(org.bson.BsonBinaryReader) -> <init>
    1425:1425:int org.bson.BsonBinaryReader$Context.access$000(org.bson.BsonBinaryReader$Context):425:425 -> <init>
    1425:1425:void <init>(org.bson.BsonBinaryReader):409 -> <init>
    2425:2425:int org.bson.BsonBinaryReader$Context.access$100(org.bson.BsonBinaryReader$Context):425:425 -> <init>
    2425:2425:void <init>(org.bson.BsonBinaryReader):410 -> <init>
    416:419:void reset() -> c
    2739:2740:void org.bson.AbstractBsonReader.setContext(org.bson.AbstractBsonReader$Context):739:740 -> c
    2739:2740:void reset():418 -> c
org.bson.BsonBinarySubType -> org.a.l:
    org.bson.BsonBinarySubType BINARY -> a
    org.bson.BsonBinarySubType FUNCTION -> f
    org.bson.BsonBinarySubType OLD_BINARY -> b
    org.bson.BsonBinarySubType UUID_LEGACY -> c
    org.bson.BsonBinarySubType UUID_STANDARD -> d
    org.bson.BsonBinarySubType MD5 -> g
    org.bson.BsonBinarySubType ENCRYPTED -> h
    org.bson.BsonBinarySubType COLUMN -> i
    org.bson.BsonBinarySubType USER_DEFINED -> j
    byte value -> e
    org.bson.BsonBinarySubType[] $VALUES -> k
    24:24:org.bson.BsonBinarySubType[] values() -> values
    24:24:org.bson.BsonBinarySubType valueOf(java.lang.String) -> valueOf
    84:84:boolean isUuid(byte) -> a
    1097:1097:byte getValue():97:97 -> a
    1097:1097:boolean isUuid(byte):84 -> a
    2097:2097:byte getValue():97:97 -> a
    2097:2097:boolean isUuid(byte):84 -> a
    87:89:void <init>(java.lang.String,int,byte) -> <init>
    24:72:void <clinit>() -> <clinit>
    3024:3024:org.bson.BsonBinarySubType[] $values():24:24 -> <clinit>
    3024:3024:void <clinit>():24 -> <clinit>
org.bson.BsonBinaryWriter -> org.a.m:
    org.bson.io.BsonOutput bsonOutput -> b
    java.util.Stack maxDocumentSizeStack -> c
    49:50:void <init>(org.bson.io.BsonOutput,org.bson.FieldNameValidator) -> <init>
    58:59:void <init>(org.bson.io.BsonOutput) -> <init>
    70:71:void <init>(org.bson.BsonWriterSettings,org.bson.BsonBinaryWriterSettings,org.bson.io.BsonOutput) -> <init>
    39:87:void <init>(org.bson.BsonWriterSettings,org.bson.BsonBinaryWriterSettings,org.bson.io.BsonOutput,org.bson.FieldNameValidator) -> <init>
    2049:2049:int org.bson.BsonBinaryWriterSettings.getMaxDocumentSize():49:49 -> <init>
    2049:2049:void <init>(org.bson.BsonWriterSettings,org.bson.BsonBinaryWriterSettings,org.bson.io.BsonOutput,org.bson.FieldNameValidator):86 -> <init>
    91:92:void close() -> close
    117:117:org.bson.BsonBinaryWriter$Context getContext() -> v
    122:128:void doWriteStartDocument() -> l
    2137:2137:int org.bson.BsonType.getValue():137:137 -> l
    2137:2137:void doWriteStartDocument():123 -> l
    3117:3117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> l
    3117:3117:void doWriteStartDocument():126 -> l
    132:140:void doWriteEndDocument() -> m
    4117:4117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> m
    4117:4117:void doWriteEndDocument():135 -> m
    5117:5117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> m
    5117:5117:void doWriteEndDocument():136 -> m
    6117:6117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> m
    6117:6117:void doWriteEndDocument():136 -> m
    7081:7081:org.bson.BsonContextType org.bson.AbstractBsonWriter$Context.getContextType():1081:1081 -> m
    7081:7081:void doWriteEndDocument():136 -> m
    7117:7117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> m
    7117:7117:void doWriteEndDocument():138 -> m
    144:148:void doWriteStartArray() -> n
    7137:7137:int org.bson.BsonType.getValue():137:137 -> n
    7137:7137:void doWriteStartArray():144 -> n
    8117:8117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> n
    8117:8117:void doWriteStartArray():146 -> n
    152:155:void doWriteEndArray() -> o
    9117:9117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> o
    9117:9117:void doWriteEndArray():154 -> o
    159:174:void doWriteBinaryData(org.bson.BsonBinary) -> b
    9137:9137:int org.bson.BsonType.getValue():137:137 -> b
    9137:9137:void doWriteBinaryData(org.bson.BsonBinary):159 -> b
    9174:9174:byte[] org.bson.BsonBinary.getData():174:174 -> b
    9174:9174:void doWriteBinaryData(org.bson.BsonBinary):162 -> b
    10162:10162:byte org.bson.BsonBinary.getType():162:162 -> b
    10162:10162:void doWriteBinaryData(org.bson.BsonBinary):164 -> b
    11097:11097:byte org.bson.BsonBinarySubType.getValue():97:97 -> b
    11097:11097:void doWriteBinaryData(org.bson.BsonBinary):164 -> b
    11162:11162:byte org.bson.BsonBinary.getType():162:162 -> b
    11162:11162:void doWriteBinaryData(org.bson.BsonBinary):169 -> b
    12162:12162:byte org.bson.BsonBinary.getType():162:162 -> b
    12162:12162:void doWriteBinaryData(org.bson.BsonBinary):170 -> b
    13097:13097:byte org.bson.BsonBinarySubType.getValue():97:97 -> b
    13097:13097:void doWriteBinaryData(org.bson.BsonBinary):170 -> b
    13174:13174:byte[] org.bson.BsonBinary.getData():174:174 -> b
    13174:13174:void doWriteBinaryData(org.bson.BsonBinary):173 -> b
    178:181:void doWriteBoolean(boolean) -> b
    14137:14137:int org.bson.BsonType.getValue():137:137 -> b
    14137:14137:void doWriteBoolean(boolean):178 -> b
    185:188:void doWriteDateTime(long) -> c
    15137:15137:int org.bson.BsonType.getValue():137:137 -> c
    15137:15137:void doWriteDateTime(long):185 -> c
    192:197:void doWriteDBPointer(org.bson.BsonDbPointer) -> b
    16137:16137:int org.bson.BsonType.getValue():137:137 -> b
    16137:16137:void doWriteDBPointer(org.bson.BsonDbPointer):192 -> b
    17059:17059:java.lang.String org.bson.BsonDbPointer.getNamespace():59:59 -> b
    17059:17059:void doWriteDBPointer(org.bson.BsonDbPointer):195 -> b
    17068:17068:org.bson.types.ObjectId org.bson.BsonDbPointer.getId():68:68 -> b
    17068:17068:void doWriteDBPointer(org.bson.BsonDbPointer):196 -> b
    201:204:void doWriteDouble(double) -> b
    17137:17137:int org.bson.BsonType.getValue():137:137 -> b
    17137:17137:void doWriteDouble(double):201 -> b
    208:211:void doWriteInt32(int) -> b
    18137:18137:int org.bson.BsonType.getValue():137:137 -> b
    18137:18137:void doWriteInt32(int):208 -> b
    215:218:void doWriteInt64(long) -> d
    19137:19137:int org.bson.BsonType.getValue():137:137 -> d
    19137:19137:void doWriteInt64(long):215 -> d
    222:226:void doWriteDecimal128(org.bson.types.Decimal128) -> b
    20137:20137:int org.bson.BsonType.getValue():137:137 -> b
    20137:20137:void doWriteDecimal128(org.bson.types.Decimal128):222 -> b
    20273:20273:long org.bson.types.Decimal128.getLow():273:273 -> b
    20273:20273:void doWriteDecimal128(org.bson.types.Decimal128):224 -> b
    21263:21263:long org.bson.types.Decimal128.getHigh():263:263 -> b
    21263:21263:void doWriteDecimal128(org.bson.types.Decimal128):225 -> b
    230:233:void doWriteJavaScript(java.lang.String) -> h
    22137:22137:int org.bson.BsonType.getValue():137:137 -> h
    22137:22137:void doWriteJavaScript(java.lang.String):230 -> h
    237:242:void doWriteJavaScriptWithScope(java.lang.String) -> i
    23137:23137:int org.bson.BsonType.getValue():137:137 -> i
    23137:23137:void doWriteJavaScriptWithScope(java.lang.String):237 -> i
    24117:24117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> i
    24117:24117:void doWriteJavaScriptWithScope(java.lang.String):239 -> i
    246:248:void doWriteMaxKey() -> p
    24137:24137:int org.bson.BsonType.getValue():137:137 -> p
    24137:24137:void doWriteMaxKey():246 -> p
    252:254:void doWriteMinKey() -> q
    25137:25137:int org.bson.BsonType.getValue():137:137 -> q
    25137:25137:void doWriteMinKey():252 -> q
    258:260:void doWriteNull() -> r
    26137:26137:int org.bson.BsonType.getValue():137:137 -> r
    26137:26137:void doWriteNull():258 -> r
    264:267:void doWriteObjectId(org.bson.types.ObjectId) -> b
    27137:27137:int org.bson.BsonType.getValue():137:137 -> b
    27137:27137:void doWriteObjectId(org.bson.types.ObjectId):264 -> b
    271:275:void doWriteRegularExpression(org.bson.BsonRegularExpression) -> b
    28137:28137:int org.bson.BsonType.getValue():137:137 -> b
    28137:28137:void doWriteRegularExpression(org.bson.BsonRegularExpression):271 -> b
    29064:29064:java.lang.String org.bson.BsonRegularExpression.getPattern():64:64 -> b
    29064:29064:void doWriteRegularExpression(org.bson.BsonRegularExpression):273 -> b
    29073:29073:java.lang.String org.bson.BsonRegularExpression.getOptions():73:73 -> b
    29073:29073:void doWriteRegularExpression(org.bson.BsonRegularExpression):274 -> b
    279:282:void doWriteString(java.lang.String) -> j
    29137:29137:int org.bson.BsonType.getValue():137:137 -> j
    29137:29137:void doWriteString(java.lang.String):279 -> j
    286:289:void doWriteSymbol(java.lang.String) -> k
    30137:30137:int org.bson.BsonType.getValue():137:137 -> k
    30137:30137:void doWriteSymbol(java.lang.String):286 -> k
    293:296:void doWriteTimestamp(org.bson.BsonTimestamp) -> b
    31137:31137:int org.bson.BsonType.getValue():137:137 -> b
    31137:31137:void doWriteTimestamp(org.bson.BsonTimestamp):293 -> b
    32070:32070:long org.bson.BsonTimestamp.getValue():70:70 -> b
    32070:32070:void doWriteTimestamp(org.bson.BsonTimestamp):295 -> b
    300:302:void doWriteUndefined() -> s
    32137:32137:int org.bson.BsonType.getValue():137:137 -> s
    32137:32137:void doWriteUndefined():300 -> s
    306:308:void pipe(org.bson.BsonReader) -> a
    312:315:void pipe(org.bson.BsonReader,java.util.List) -> a
    318:363:void pipeDocument(org.bson.BsonReader,java.util.List) -> b
    33137:33137:int org.bson.BsonType.getValue():137:137 -> b
    33137:33137:void pipeDocument(org.bson.BsonReader,java.util.List):321 -> b
    34072:34072:org.bson.io.BsonInput org.bson.BsonBinaryReader.getBsonInput():72:72 -> b
    34072:34072:void pipeDocument(org.bson.BsonReader,java.util.List):324 -> b
    34078:34079:void org.bson.AbstractBsonReader.setState(org.bson.AbstractBsonReader$State):78:79 -> b
    34078:34079:void pipeDocument(org.bson.BsonReader,java.util.List):335 -> b
    34117:34117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> b
    34117:34117:void pipeDocument(org.bson.BsonReader,java.util.List):339 -> b
    35117:35117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> b
    35117:35117:void pipeDocument(org.bson.BsonReader,java.util.List):344 -> b
    36117:36117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> b
    36117:36117:void pipeDocument(org.bson.BsonReader,java.util.List):347 -> b
    37117:37117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> b
    37117:37117:void pipeDocument(org.bson.BsonReader,java.util.List):350 -> b
    38081:38081:org.bson.BsonContextType org.bson.AbstractBsonWriter$Context.getContextType():1081:1081 -> b
    38081:38081:void pipeDocument(org.bson.BsonReader,java.util.List):350 -> b
    38117:38117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> b
    38117:38117:void pipeDocument(org.bson.BsonReader,java.util.List):352 -> b
    403:408:void writeCurrentName() -> w
    39117:39117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> w
    39117:39117:void writeCurrentName():403 -> w
    40081:40081:org.bson.BsonContextType org.bson.AbstractBsonWriter$Context.getContextType():1081:1081 -> w
    40081:40081:void writeCurrentName():403 -> w
    40117:40117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> w
    40117:40117:void writeCurrentName():404 -> w
    411:414:void backpatchSize() -> x
    41117:41117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> x
    41117:41117:void backpatchSize():411 -> x
    41426:41426:int org.bson.BsonBinaryWriter$Context.access$100(org.bson.BsonBinaryWriter$Context):426:426 -> x
    41426:41426:void backpatchSize():411 -> x
    417:421:void validateSize(int) -> c
    35:35:org.bson.AbstractBsonWriter$Context getContext() -> k
    42117:42117:org.bson.BsonBinaryWriter$Context getContext():117:117 -> k
    42117:42117:org.bson.AbstractBsonWriter$Context getContext():35 -> k
org.bson.BsonBinaryWriter$Context -> org.a.m$a:
    int startPosition -> c
    int index -> d
    437:440:void <init>(org.bson.BsonBinaryWriter,org.bson.BsonBinaryWriter$Context,org.bson.BsonContextType,int) -> <init>
    455:455:org.bson.BsonBinaryWriter$Context getParentContext() -> b
    426:426:org.bson.AbstractBsonWriter$Context getParentContext() -> a
    1455:1455:org.bson.BsonBinaryWriter$Context getParentContext():455:455 -> a
    1455:1455:org.bson.AbstractBsonWriter$Context getParentContext():426 -> a
    426:426:int access$008(org.bson.BsonBinaryWriter$Context) -> a
org.bson.BsonBinaryWriterSettings -> org.a.n:
    int maxDocumentSize -> a
    32:34:void <init>(int) -> <init>
    40:41:void <init>() -> <init>
org.bson.BsonBoolean -> org.a.o:
    boolean value -> a
    org.bson.BsonBoolean TRUE -> b
    org.bson.BsonBoolean FALSE -> c
    45:45:org.bson.BsonBoolean valueOf(boolean) -> a
    53:55:void <init>(boolean) -> <init>
    64:64:org.bson.BsonType getBsonType() -> c
    78:91:boolean equals(java.lang.Object) -> equals
    96:96:int hashCode() -> hashCode
    101:101:java.lang.String toString() -> toString
    24:24:int compareTo(java.lang.Object) -> compareTo
    1059:1059:int compareTo(org.bson.BsonBoolean):59:59 -> compareTo
    1059:1059:int compareTo(java.lang.Object):24 -> compareTo
    31:36:void <clinit>() -> <clinit>
org.bson.BsonContextType -> org.a.p:
    org.bson.BsonContextType TOP_LEVEL -> a
    org.bson.BsonContextType DOCUMENT -> b
    org.bson.BsonContextType ARRAY -> c
    org.bson.BsonContextType JAVASCRIPT_WITH_SCOPE -> d
    org.bson.BsonContextType SCOPE_DOCUMENT -> e
    org.bson.BsonContextType[] $VALUES -> f
    24:24:org.bson.BsonContextType[] values() -> values
    24:24:org.bson.BsonContextType valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    24:48:void <clinit>() -> <clinit>
    1024:1024:org.bson.BsonContextType[] $values():24:24 -> <clinit>
    1024:1024:void <clinit>():24 -> <clinit>
org.bson.BsonDateTime -> org.a.q:
    long value -> a
    33:35:void <init>(long) -> <init>
    44:44:org.bson.BsonType getBsonType() -> c
    58:71:boolean equals(java.lang.Object) -> equals
    76:76:int hashCode() -> hashCode
    81:81:java.lang.String toString() -> toString
    24:24:int compareTo(java.lang.Object) -> compareTo
    1039:1039:int compareTo(org.bson.BsonDateTime):39:39 -> compareTo
    1039:1039:int compareTo(java.lang.Object):24 -> compareTo
org.bson.BsonDbPointer -> org.a.r:
    java.lang.String namespace -> a
    org.bson.types.ObjectId id -> b
    37:46:void <init>(java.lang.String,org.bson.types.ObjectId) -> <init>
    50:50:org.bson.BsonType getBsonType() -> c
    73:89:boolean equals(java.lang.Object) -> equals
    94:96:int hashCode() -> hashCode
    101:101:java.lang.String toString() -> toString
org.bson.BsonDecimal128 -> org.a.s:
    org.bson.types.Decimal128 value -> a
    36:39:void <init>(org.bson.types.Decimal128) -> <init>
    43:43:org.bson.BsonType getBsonType() -> c
    57:70:boolean equals(java.lang.Object) -> equals
    75:75:int hashCode() -> hashCode
    80:80:java.lang.String toString() -> toString
    87:87:int intValue() -> a
    92:92:long longValue() -> b
org.bson.BsonDocument -> org.a.t:
    java.util.Map map -> a
    66:66:org.bson.BsonDocument parse(java.lang.String) -> a
    75:79:void <init>(java.util.List) -> <init>
    1046:1046:java.lang.String org.bson.BsonElement.getName():46:46 -> <init>
    1046:1046:void <init>(java.util.List):77 -> <init>
    1055:1055:org.bson.BsonValue org.bson.BsonElement.getValue():55:55 -> <init>
    1055:1055:void <init>(java.util.List):77 -> <init>
    88:90:void <init>(java.lang.String,org.bson.BsonValue) -> <init>
    99:101:void <init>(int) -> <init>
    106:108:void <init>() -> <init>
    112:112:org.bson.BsonDocument toBsonDocument$283f4ed1(org.bson.codecs.configuration.CodecRegistry) -> a
    117:117:org.bson.BsonType getBsonType() -> c
    122:122:int size() -> size
    127:127:boolean isEmpty() -> isEmpty
    132:132:boolean containsKey(java.lang.Object) -> containsKey
    137:137:boolean containsValue(java.lang.Object) -> containsValue
    142:142:org.bson.BsonValue get(java.lang.Object) -> b
    153:154:org.bson.BsonDocument getDocument(java.lang.Object) -> c
    165:167:org.bson.BsonArray getArray(java.lang.Object) -> d
    178:179:org.bson.BsonNumber getNumber(java.lang.Object) -> e
    251:252:org.bson.BsonString getString(java.lang.Object) -> f
    263:264:org.bson.BsonDateTime getDateTime(java.lang.Object) -> g
    275:276:org.bson.BsonTimestamp getTimestamp(java.lang.Object) -> h
    287:288:org.bson.BsonObjectId getObjectId(java.lang.Object) -> i
    311:312:org.bson.BsonBinary getBinary(java.lang.Object) -> j
    348:351:boolean isArray(java.lang.Object) -> k
    1267:1267:boolean org.bson.BsonValue.isArray():267:267 -> k
    1267:1267:boolean isArray(java.lang.Object):351 -> k
    361:364:boolean isNumber(java.lang.Object) -> l
    441:444:boolean isString(java.lang.Object) -> m
    1276:1276:boolean org.bson.BsonValue.isString():276:276 -> m
    1276:1276:boolean isString(java.lang.Object):444 -> m
    507:508:org.bson.BsonValue get(java.lang.Object,org.bson.BsonValue) -> a
    521:524:org.bson.BsonDocument getDocument(java.lang.Object,org.bson.BsonDocument) -> a
    537:540:org.bson.BsonArray getArray(java.lang.Object,org.bson.BsonArray) -> a
    553:556:org.bson.BsonNumber getNumber(java.lang.Object,org.bson.BsonNumber) -> a
    569:572:org.bson.BsonInt32 getInt32(java.lang.Object,org.bson.BsonInt32) -> a
    634:637:org.bson.BsonBoolean getBoolean(java.lang.Object,org.bson.BsonBoolean) -> a
    650:653:org.bson.BsonString getString(java.lang.Object,org.bson.BsonString) -> a
    682:685:org.bson.BsonTimestamp getTimestamp(java.lang.Object,org.bson.BsonTimestamp) -> a
    738:741:org.bson.BsonValue put(java.lang.String,org.bson.BsonValue) -> a
    746:746:org.bson.BsonValue remove(java.lang.Object) -> a
    751:754:void putAll(java.util.Map) -> putAll
    758:759:void clear() -> clear
    763:763:java.util.Set keySet() -> keySet
    768:768:java.util.Collection values() -> values
    773:773:java.util.Set entrySet() -> entrySet
    784:785:org.bson.BsonDocument append(java.lang.String,org.bson.BsonValue) -> b
    796:796:java.lang.String getFirstKey() -> a
    807:807:org.bson.BsonReader asBsonReader() -> d
    812:821:boolean equals(java.lang.Object) -> equals
    826:826:int hashCode() -> hashCode
    838:838:java.lang.String toJson() -> a_
    847:849:java.lang.String toJson(org.bson.json.JsonWriterSettings) -> a
    854:854:java.lang.String toString() -> toString
    859:878:org.bson.BsonDocument clone() -> e
    882:885:void throwIfKeyAbsent(java.lang.Object) -> n
    49:49:java.lang.Object clone() -> clone
    49:49:java.lang.Object remove(java.lang.Object) -> remove
    49:49:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    49:49:java.lang.Object get(java.lang.Object) -> get
org.bson.BsonDocument$1 -> org.a.t$1:
    int[] $SwitchMap$org$bson$BsonType -> a
    861:861:void <clinit>() -> <clinit>
org.bson.BsonDocumentReader -> org.a.u:
    org.bson.BsonValue currentValue -> d
    44:47:void <init>(org.bson.BsonDocument) -> <init>
    51:51:org.bson.BsonBinary doReadBinaryData() -> e
    56:56:byte doPeekBinarySubType() -> f
    1162:1162:byte org.bson.BsonBinary.getType():162:162 -> f
    1162:1162:byte doPeekBinarySubType():56 -> f
    61:61:int doPeekBinarySize() -> g
    1174:1174:byte[] org.bson.BsonBinary.getData():174:174 -> g
    1174:1174:int doPeekBinarySize():61 -> g
    66:66:boolean doReadBoolean() -> h
    2073:2073:boolean org.bson.BsonBoolean.getValue():73:73 -> h
    2073:2073:boolean doReadBoolean():66 -> h
    71:71:long doReadDateTime() -> i
    3053:3053:long org.bson.BsonDateTime.getValue():53:53 -> i
    3053:3053:long doReadDateTime():71 -> i
    76:76:double doReadDouble() -> j
    3057:3057:double org.bson.BsonDouble.getValue():57:57 -> j
    3057:3057:double doReadDouble():76 -> j
    81:82:void doReadEndArray() -> k
    3243:3243:org.bson.BsonDocumentReader$Context getContext():243:243 -> k
    3243:3243:void doReadEndArray():81 -> k
    86:98:void doReadEndDocument() -> l
    4243:4243:org.bson.BsonDocumentReader$Context getContext():243:243 -> l
    4243:4243:void doReadEndDocument():86 -> l
    5243:5243:org.bson.BsonDocumentReader$Context getContext():243:243 -> l
    5243:5243:void doReadEndDocument():87 -> l
    102:102:int doReadInt32() -> m
    6055:6055:int org.bson.BsonInt32.getValue():55:55 -> m
    6055:6055:int doReadInt32():102 -> m
    107:107:long doReadInt64() -> n
    7054:7054:long org.bson.BsonInt64.getValue():54:54 -> n
    7054:7054:long doReadInt64():107 -> n
    112:112:org.bson.types.Decimal128 doReadDecimal128() -> o
    8052:8052:org.bson.types.Decimal128 org.bson.BsonDecimal128.getValue():52:52 -> o
    8052:8052:org.bson.types.Decimal128 doReadDecimal128():112 -> o
    117:117:java.lang.String doReadJavaScript() -> p
    9048:9048:java.lang.String org.bson.BsonJavaScript.getCode():48:48 -> p
    9048:9048:java.lang.String doReadJavaScript():117 -> p
    122:122:java.lang.String doReadJavaScriptWithScope() -> q
    9057:9057:java.lang.String org.bson.BsonJavaScriptWithScope.getCode():57:57 -> q
    9057:9057:java.lang.String doReadJavaScriptWithScope():122 -> q
    139:139:org.bson.types.ObjectId doReadObjectId() -> r
    10054:10054:org.bson.types.ObjectId org.bson.BsonObjectId.getValue():54:54 -> r
    10054:10054:org.bson.types.ObjectId doReadObjectId():139 -> r
    144:144:org.bson.BsonRegularExpression doReadRegularExpression() -> s
    149:149:org.bson.BsonDbPointer doReadDBPointer() -> t
    154:156:void doReadStartArray() -> u
    10243:10243:org.bson.BsonDocumentReader$Context getContext():243:243 -> u
    10243:10243:void doReadStartArray():155 -> u
    161:167:void doReadStartDocument() -> v
    11066:11066:org.bson.BsonDocument org.bson.BsonJavaScriptWithScope.getScope():66:66 -> v
    11066:11066:void doReadStartDocument():162 -> v
    11243:11243:org.bson.BsonDocumentReader$Context getContext():243:243 -> v
    11243:11243:void doReadStartDocument():166 -> v
    171:171:java.lang.String doReadString() -> w
    12056:12056:java.lang.String org.bson.BsonString.getValue():56:56 -> w
    12056:12056:java.lang.String doReadString():171 -> w
    176:176:java.lang.String doReadSymbol() -> x
    13053:13053:java.lang.String org.bson.BsonSymbol.getSymbol():53:53 -> x
    13053:13053:java.lang.String doReadSymbol():176 -> x
    181:181:org.bson.BsonTimestamp doReadTimestamp() -> y
    194:194:void doSkipValue() -> z
    198:233:org.bson.BsonType readBsonType() -> E
    13243:13243:org.bson.BsonDocumentReader$Context getContext():243:243 -> E
    13243:13243:org.bson.BsonType readBsonType():209 -> E
    14243:14243:org.bson.BsonDocumentReader$Context getContext():243:243 -> E
    14243:14243:org.bson.BsonType readBsonType():211 -> E
    14415:14418:org.bson.BsonValue org.bson.BsonDocumentReader$Context.getNextValue():415:418 -> E
    14415:14418:org.bson.BsonType readBsonType():211 -> E
    15243:15243:org.bson.BsonDocumentReader$Context getContext():243:243 -> E
    15243:15243:org.bson.BsonType readBsonType():219 -> E
    15372:15375:java.util.Map$Entry org.bson.BsonDocumentReader$Context.getNextElement():372:375 -> E
    15372:15375:org.bson.BsonType readBsonType():219 -> E
    238:238:org.bson.BsonReaderMark getMark() -> af
    243:243:org.bson.BsonDocumentReader$Context getContext() -> ae
    36:36:org.bson.AbstractBsonReader$Context getContext() -> ad
    16243:16243:org.bson.BsonDocumentReader$Context getContext():243:243 -> ad
    16243:16243:org.bson.AbstractBsonReader$Context getContext():36 -> ad
    36:36:org.bson.BsonValue access$000(org.bson.BsonDocumentReader) -> a
    36:36:org.bson.BsonValue access$002(org.bson.BsonDocumentReader,org.bson.BsonValue) -> a
org.bson.BsonDocumentReader$1 -> org.a.u$1:
    int[] $SwitchMap$org$bson$BsonContextType -> a
    87:87:void <clinit>() -> <clinit>
org.bson.BsonDocumentReader$BsonDocumentMarkableIterator -> org.a.u$a:
    java.util.Iterator baseIterator -> b
    java.util.List markIterator -> c
    int curIndex -> d
    boolean marking -> a
    274:282:void <init>(java.util.Iterator) -> <init>
    295:297:void reset() -> a
    302:302:boolean hasNext() -> hasNext
    309:325:java.lang.Object next() -> next
    331:331:void remove() -> remove
org.bson.BsonDocumentReader$Context -> org.a.u$b:
    org.bson.BsonDocumentReader$BsonDocumentMarkableIterator documentIterator -> c
    org.bson.BsonDocumentReader$BsonDocumentMarkableIterator arrayIterator -> d
    349:352:void <init>(org.bson.BsonDocumentReader,org.bson.BsonDocumentReader$Context,org.bson.BsonContextType,org.bson.BsonArray) -> <init>
    361:364:void <init>(org.bson.BsonDocumentReader,org.bson.BsonDocumentReader$Context,org.bson.BsonContextType,org.bson.BsonDocument) -> <init>
    383:392:void mark() -> c
    1288:1289:void org.bson.BsonDocumentReader$BsonDocumentMarkableIterator.mark():288:289 -> c
    1288:1289:void mark():384 -> c
    2288:2289:void org.bson.BsonDocumentReader$BsonDocumentMarkableIterator.mark():288:289 -> c
    2288:2289:void mark():386 -> c
    398:407:void reset() -> d
org.bson.BsonDocumentReader$Mark -> org.a.u$c:
    org.bson.BsonValue currentValue -> a
    org.bson.BsonDocumentReader$Context context -> b
    org.bson.BsonDocumentReader this$0 -> c
    256:260:void <init>(org.bson.BsonDocumentReader) -> <init>
    264:268:void reset() -> c
    1739:1740:void org.bson.AbstractBsonReader.setContext(org.bson.AbstractBsonReader$Context):739:740 -> c
    1739:1740:void reset():266 -> c
org.bson.BsonDocumentWrapper -> org.a.v:
    java.lang.Object wrappedDocument -> a
    org.bson.codecs.Encoder encoder -> b
    org.bson.BsonDocument unwrapped -> c
    61:67:org.bson.BsonDocument asBsonDocument(java.lang.Object,org.bson.codecs.configuration.CodecRegistry) -> a
    77:83:void <init>(java.lang.Object,org.bson.codecs.Encoder) -> <init>
    114:114:int size() -> size
    119:119:boolean isEmpty() -> isEmpty
    124:124:boolean containsKey(java.lang.Object) -> containsKey
    129:129:boolean containsValue(java.lang.Object) -> containsValue
    134:134:org.bson.BsonValue get(java.lang.Object) -> b
    139:139:org.bson.BsonValue put(java.lang.String,org.bson.BsonValue) -> a
    144:144:org.bson.BsonValue remove(java.lang.Object) -> a
    149:150:void putAll(java.util.Map) -> putAll
    154:155:void clear() -> clear
    159:159:java.util.Set keySet() -> keySet
    164:164:java.util.Collection values() -> values
    169:169:java.util.Set entrySet() -> entrySet
    174:174:boolean equals(java.lang.Object) -> equals
    179:179:int hashCode() -> hashCode
    184:184:java.lang.String toString() -> toString
    189:189:org.bson.BsonDocument clone() -> e
    193:202:org.bson.BsonDocument getUnwrapped() -> b
    39:39:java.lang.Object remove(java.lang.Object) -> remove
    39:39:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    39:39:java.lang.Object get(java.lang.Object) -> get
    39:39:java.lang.Object clone() -> clone
    1189:1189:org.bson.BsonDocument clone():189:189 -> clone
    1189:1189:java.lang.Object clone():39 -> clone
org.bson.BsonDocumentWriter -> org.a.w:
    org.bson.BsonDocument document -> b
    44:47:void <init>(org.bson.BsonDocument) -> <init>
    60:73:void doWriteStartDocument() -> l
    1203:1203:org.bson.BsonDocumentWriter$Context getContext():203:203 -> l
    1203:1203:void doWriteStartDocument():62 -> l
    2203:2203:org.bson.BsonDocumentWriter$Context getContext():203:203 -> l
    2203:2203:void doWriteStartDocument():65 -> l
    3203:3203:org.bson.BsonDocumentWriter$Context getContext():203:203 -> l
    3203:3203:void doWriteStartDocument():68 -> l
    77:88:void doWriteEndDocument() -> m
    4203:4203:org.bson.BsonDocumentWriter$Context getContext():203:203 -> m
    4203:4203:void doWriteEndDocument():77 -> m
    4210:4210:org.bson.BsonValue org.bson.BsonDocumentWriter$Context.access$000(org.bson.BsonDocumentWriter$Context):210:210 -> m
    4210:4210:void doWriteEndDocument():77 -> m
    5203:5203:org.bson.BsonDocumentWriter$Context getContext():203:203 -> m
    5203:5203:void doWriteEndDocument():78 -> m
    6203:6203:org.bson.BsonDocumentWriter$Context getContext():203:203 -> m
    6203:6203:void doWriteEndDocument():80 -> m
    7081:7081:org.bson.BsonContextType org.bson.AbstractBsonWriter$Context.getContextType():1081:1081 -> m
    7081:7081:void doWriteEndDocument():80 -> m
    7203:7203:org.bson.BsonDocumentWriter$Context getContext():203:203 -> m
    7203:7203:void doWriteEndDocument():82 -> m
    7210:7210:org.bson.BsonValue org.bson.BsonDocumentWriter$Context.access$000(org.bson.BsonDocumentWriter$Context):210:210 -> m
    7210:7210:void doWriteEndDocument():82 -> m
    8203:8203:org.bson.BsonDocumentWriter$Context getContext():203:203 -> m
    8203:8203:void doWriteEndDocument():83 -> m
    9056:9056:java.lang.String org.bson.BsonString.getValue():56:56 -> m
    9056:9056:void doWriteEndDocument():84 -> m
    9203:9203:org.bson.BsonDocumentWriter$Context getContext():203:203 -> m
    9203:9203:void doWriteEndDocument():85 -> m
    10081:10081:org.bson.BsonContextType org.bson.AbstractBsonWriter$Context.getContextType():1081:1081 -> m
    10081:10081:void doWriteEndDocument():85 -> m
    92:93:void doWriteStartArray() -> n
    10203:10203:org.bson.BsonDocumentWriter$Context getContext():203:203 -> n
    10203:10203:void doWriteStartArray():92 -> n
    97:100:void doWriteEndArray() -> o
    11203:11203:org.bson.BsonDocumentWriter$Context getContext():203:203 -> o
    11203:11203:void doWriteEndArray():97 -> o
    11210:11210:org.bson.BsonValue org.bson.BsonDocumentWriter$Context.access$000(org.bson.BsonDocumentWriter$Context):210:210 -> o
    11210:11210:void doWriteEndArray():97 -> o
    12203:12203:org.bson.BsonDocumentWriter$Context getContext():203:203 -> o
    12203:12203:void doWriteEndArray():98 -> o
    104:105:void doWriteBinaryData(org.bson.BsonBinary) -> b
    109:110:void doWriteBoolean(boolean) -> b
    114:115:void doWriteDateTime(long) -> c
    119:120:void doWriteDBPointer(org.bson.BsonDbPointer) -> b
    124:125:void doWriteDouble(double) -> b
    129:130:void doWriteInt32(int) -> b
    134:135:void doWriteInt64(long) -> d
    139:140:void doWriteDecimal128(org.bson.types.Decimal128) -> b
    144:145:void doWriteJavaScript(java.lang.String) -> h
    149:150:void doWriteJavaScriptWithScope(java.lang.String) -> i
    13203:13203:org.bson.BsonDocumentWriter$Context getContext():203:203 -> i
    13203:13203:void doWriteJavaScriptWithScope(java.lang.String):149 -> i
    154:155:void doWriteMaxKey() -> p
    159:160:void doWriteMinKey() -> q
    164:165:void doWriteNull() -> r
    169:170:void doWriteObjectId(org.bson.types.ObjectId) -> b
    174:175:void doWriteRegularExpression(org.bson.BsonRegularExpression) -> b
    179:180:void doWriteString(java.lang.String) -> j
    184:185:void doWriteSymbol(java.lang.String) -> k
    189:190:void doWriteTimestamp(org.bson.BsonTimestamp) -> b
    194:195:void doWriteUndefined() -> s
    207:208:void write(org.bson.BsonValue) -> a
    14203:14203:org.bson.BsonDocumentWriter$Context getContext():203:203 -> a
    14203:14203:void write(org.bson.BsonValue):207 -> a
    34:34:org.bson.AbstractBsonWriter$Context getContext() -> k
    15203:15203:org.bson.BsonDocumentWriter$Context getContext():203:203 -> k
    15203:15203:org.bson.AbstractBsonWriter$Context getContext():34 -> k
org.bson.BsonDocumentWriter$1 -> org.a.w$1:
    int[] $SwitchMap$org$bson$AbstractBsonWriter$State -> a
    60:60:void <clinit>() -> <clinit>
org.bson.BsonDocumentWriter$Context -> org.a.w$a:
    org.bson.BsonValue container -> c
    org.bson.BsonDocumentWriter this$0 -> d
    213:216:void <init>(org.bson.BsonDocumentWriter,org.bson.BsonValue,org.bson.BsonContextType,org.bson.BsonDocumentWriter$Context) -> <init>
    218:220:void <init>(org.bson.BsonDocumentWriter) -> <init>
    223:228:void add(org.bson.BsonValue) -> a
org.bson.BsonDouble -> org.a.x:
    double value -> a
    37:39:void <init>(double) -> <init>
    48:48:org.bson.BsonType getBsonType() -> c
    62:62:int intValue() -> a
    67:67:long longValue() -> b
    89:102:boolean equals(java.lang.Object) -> equals
    107:108:int hashCode() -> hashCode
    113:113:java.lang.String toString() -> toString
    28:28:int compareTo(java.lang.Object) -> compareTo
    1043:1043:int compareTo(org.bson.BsonDouble):43:43 -> compareTo
    1043:1043:int compareTo(java.lang.Object):28 -> compareTo
org.bson.BsonElement -> org.a.y:
    java.lang.String name -> a
    org.bson.BsonValue value -> b
    35:38:void <init>(java.lang.String,org.bson.BsonValue) -> <init>
    60:76:boolean equals(java.lang.Object) -> equals
    1046:1046:java.lang.String getName():46:46 -> equals
    1046:1046:boolean equals(java.lang.Object):69 -> equals
    2046:2046:java.lang.String getName():46:46 -> equals
    2046:2046:boolean equals(java.lang.Object):69 -> equals
    3046:3046:java.lang.String getName():46:46 -> equals
    3046:3046:boolean equals(java.lang.Object):69 -> equals
    4046:4046:java.lang.String getName():46:46 -> equals
    4046:4046:boolean equals(java.lang.Object):69 -> equals
    4055:4055:org.bson.BsonValue getValue():55:55 -> equals
    4055:4055:boolean equals(java.lang.Object):72 -> equals
    5055:5055:org.bson.BsonValue getValue():55:55 -> equals
    5055:5055:boolean equals(java.lang.Object):72 -> equals
    6055:6055:org.bson.BsonValue getValue():55:55 -> equals
    6055:6055:boolean equals(java.lang.Object):72 -> equals
    7055:7055:org.bson.BsonValue getValue():55:55 -> equals
    7055:7055:boolean equals(java.lang.Object):72 -> equals
    81:83:int hashCode() -> hashCode
    8046:8046:java.lang.String getName():46:46 -> hashCode
    8046:8046:int hashCode():81 -> hashCode
    9046:9046:java.lang.String getName():46:46 -> hashCode
    9046:9046:int hashCode():81 -> hashCode
    9055:9055:org.bson.BsonValue getValue():55:55 -> hashCode
    9055:9055:int hashCode():82 -> hashCode
    10055:10055:org.bson.BsonValue getValue():55:55 -> hashCode
    10055:10055:int hashCode():82 -> hashCode
org.bson.BsonInt32 -> org.a.z:
    int value -> a
    35:37:void <init>(int) -> <init>
    46:46:org.bson.BsonType getBsonType() -> c
    60:60:int intValue() -> a
    65:65:long longValue() -> b
    80:93:boolean equals(java.lang.Object) -> equals
    98:98:int hashCode() -> hashCode
    103:103:java.lang.String toString() -> toString
    26:26:int compareTo(java.lang.Object) -> compareTo
    1041:1041:int compareTo(org.bson.BsonInt32):41:41 -> compareTo
    1041:1041:int compareTo(java.lang.Object):26 -> compareTo
org.bson.BsonInt64 -> org.a.A:
    long value -> a
    33:35:void <init>(long) -> <init>
    44:44:org.bson.BsonType getBsonType() -> c
    59:59:int intValue() -> a
    64:64:long longValue() -> b
    79:92:boolean equals(java.lang.Object) -> equals
    97:97:int hashCode() -> hashCode
    102:102:java.lang.String toString() -> toString
    24:24:int compareTo(java.lang.Object) -> compareTo
    1039:1039:int compareTo(org.bson.BsonInt64):39:39 -> compareTo
    1039:1039:int compareTo(java.lang.Object):24 -> compareTo
org.bson.BsonInvalidOperationException -> org.a.B:
    33:34:void <init>(java.lang.String) -> <init>
org.bson.BsonJavaScript -> org.a.C:
    java.lang.String code -> a
    33:35:void <init>(java.lang.String) -> <init>
    39:39:org.bson.BsonType getBsonType() -> c
    53:66:boolean equals(java.lang.Object) -> equals
    71:71:int hashCode() -> hashCode
    76:76:java.lang.String toString() -> toString
org.bson.BsonJavaScriptWithScope -> org.a.D:
    java.lang.String code -> a
    org.bson.BsonDocument scope -> b
    35:44:void <init>(java.lang.String,org.bson.BsonDocument) -> <init>
    48:48:org.bson.BsonType getBsonType() -> c
    71:87:boolean equals(java.lang.Object) -> equals
    92:94:int hashCode() -> hashCode
    99:100:java.lang.String toString() -> toString
    1057:1057:java.lang.String getCode():57:57 -> toString
    1057:1057:java.lang.String toString():100 -> toString
    106:106:org.bson.BsonJavaScriptWithScope clone(org.bson.BsonJavaScriptWithScope) -> a
org.bson.BsonMaxKey -> org.a.E:
    22:22:void <init>() -> <init>
    26:26:org.bson.BsonType getBsonType() -> c
    31:31:boolean equals(java.lang.Object) -> equals
    36:36:int hashCode() -> hashCode
    41:41:java.lang.String toString() -> toString
org.bson.BsonMaximumSizeExceededException -> org.a.F:
    33:34:void <init>(java.lang.String) -> <init>
org.bson.BsonMinKey -> org.a.G:
    22:22:void <init>() -> <init>
    26:26:org.bson.BsonType getBsonType() -> c
    31:31:boolean equals(java.lang.Object) -> equals
    36:36:int hashCode() -> hashCode
    41:41:java.lang.String toString() -> toString
org.bson.BsonNull -> org.a.H:
    org.bson.BsonNull VALUE -> a
    24:24:void <init>() -> <init>
    33:33:org.bson.BsonType getBsonType() -> c
    38:44:boolean equals(java.lang.Object) -> equals
    49:49:int hashCode() -> hashCode
    54:54:java.lang.String toString() -> toString
    29:29:void <clinit>() -> <clinit>
org.bson.BsonNumber -> org.a.I:
    26:26:void <init>() -> <init>
    int intValue() -> a
    long longValue() -> b
org.bson.BsonObjectId -> org.a.J:
    org.bson.types.ObjectId value -> a
    34:35:void <init>() -> <init>
    41:46:void <init>(org.bson.types.ObjectId) -> <init>
    59:59:org.bson.BsonType getBsonType() -> c
    69:82:boolean equals(java.lang.Object) -> equals
    87:87:int hashCode() -> hashCode
    92:93:java.lang.String toString() -> toString
    26:26:int compareTo(java.lang.Object) -> compareTo
    1064:1064:int compareTo(org.bson.BsonObjectId):64:64 -> compareTo
    1064:1064:int compareTo(java.lang.Object):26 -> compareTo
org.bson.BsonReader -> org.a.K:
    org.bson.BsonType getCurrentBsonType() -> a
    java.lang.String getCurrentName() -> b
    org.bson.BsonBinary readBinaryData() -> A
    byte peekBinarySubType() -> B
    int peekBinarySize() -> C
    boolean readBoolean() -> D
    org.bson.BsonType readBsonType() -> E
    long readDateTime() -> F
    double readDouble() -> G
    void readEndArray() -> H
    void readEndDocument() -> I
    int readInt32() -> J
    long readInt64() -> K
    org.bson.types.Decimal128 readDecimal128() -> L
    java.lang.String readJavaScript() -> M
    java.lang.String readJavaScriptWithScope() -> N
    void readMaxKey() -> O
    void readMinKey() -> P
    java.lang.String readName() -> ac
    void readNull() -> Q
    org.bson.types.ObjectId readObjectId() -> R
    org.bson.BsonRegularExpression readRegularExpression() -> S
    org.bson.BsonDbPointer readDBPointer() -> T
    void readStartArray() -> U
    void readStartDocument() -> V
    java.lang.String readString() -> W
    java.lang.String readSymbol() -> X
    org.bson.BsonTimestamp readTimestamp() -> Y
    void readUndefined() -> Z
    void skipName() -> aa
    void skipValue() -> ab
    org.bson.BsonReaderMark getMark() -> af
    void close() -> close
org.bson.BsonReaderMark -> org.a.L:
    void reset() -> c
org.bson.BsonRegularExpression -> org.a.M:
    java.lang.String pattern -> a
    java.lang.String options -> b
    39:42:void <init>(java.lang.String,java.lang.String) -> <init>
    1113:1115:java.lang.String sortOptionCharacters(java.lang.String):113:115 -> <init>
    1113:1115:void <init>(java.lang.String,java.lang.String):41 -> <init>
    55:55:org.bson.BsonType getBsonType() -> c
    78:94:boolean equals(java.lang.Object) -> equals
    99:101:int hashCode() -> hashCode
    106:106:java.lang.String toString() -> toString
org.bson.BsonSerializationException -> org.a.N:
    33:34:void <init>(java.lang.String) -> <init>
org.bson.BsonString -> org.a.O:
    java.lang.String value -> a
    33:38:void <init>(java.lang.String) -> <init>
    47:47:org.bson.BsonType getBsonType() -> c
    61:74:boolean equals(java.lang.Object) -> equals
    79:79:int hashCode() -> hashCode
    84:84:java.lang.String toString() -> toString
    24:24:int compareTo(java.lang.Object) -> compareTo
    1042:1042:int compareTo(org.bson.BsonString):42:42 -> compareTo
    1042:1042:int compareTo(java.lang.Object):24 -> compareTo
org.bson.BsonSymbol -> org.a.P:
    java.lang.String symbol -> a
    35:40:void <init>(java.lang.String) -> <init>
    44:44:org.bson.BsonType getBsonType() -> c
    64:77:boolean equals(java.lang.Object) -> equals
    82:82:int hashCode() -> hashCode
    87:87:java.lang.String toString() -> toString
org.bson.BsonTimestamp -> org.a.Q:
    long value -> a
    33:35:void <init>() -> <init>
    43:45:void <init>(long) -> <init>
    53:55:void <init>(int,int) -> <init>
    59:59:org.bson.BsonType getBsonType() -> c
    79:79:int getTime() -> a
    93:96:java.lang.String toString() -> toString
    1070:1070:long getValue():70:70 -> toString
    1070:1070:java.lang.String toString():94 -> toString
    1088:1088:int getInc():88:88 -> toString
    1088:1088:java.lang.String toString():96 -> toString
    102:102:int compareTo(org.bson.BsonTimestamp) -> a
    107:120:boolean equals(java.lang.Object) -> equals
    125:125:int hashCode() -> hashCode
    26:26:int compareTo(java.lang.Object) -> compareTo
org.bson.BsonType -> org.a.R:
    org.bson.BsonType END_OF_DOCUMENT -> a
    org.bson.BsonType DOUBLE -> b
    org.bson.BsonType STRING -> c
    org.bson.BsonType DOCUMENT -> d
    org.bson.BsonType ARRAY -> e
    org.bson.BsonType BINARY -> f
    org.bson.BsonType UNDEFINED -> g
    org.bson.BsonType OBJECT_ID -> h
    org.bson.BsonType BOOLEAN -> i
    org.bson.BsonType DATE_TIME -> j
    org.bson.BsonType NULL -> k
    org.bson.BsonType REGULAR_EXPRESSION -> l
    org.bson.BsonType DB_POINTER -> m
    org.bson.BsonType JAVASCRIPT -> n
    org.bson.BsonType SYMBOL -> o
    org.bson.BsonType JAVASCRIPT_WITH_SCOPE -> p
    org.bson.BsonType INT32 -> q
    org.bson.BsonType TIMESTAMP -> r
    org.bson.BsonType INT64 -> s
    org.bson.BsonType DECIMAL128 -> t
    org.bson.BsonType MIN_KEY -> u
    org.bson.BsonType MAX_KEY -> v
    org.bson.BsonType[] LOOKUP_TABLE -> x
    int value -> w
    org.bson.BsonType[] $VALUES -> y
    24:24:org.bson.BsonType[] values() -> values
    24:24:org.bson.BsonType valueOf(java.lang.String) -> valueOf
    127:129:void <init>(java.lang.String,int,int) -> <init>
    147:147:org.bson.BsonType findByValue(int) -> a
    156:156:boolean isContainer() -> a
    24:125:void <clinit>() -> <clinit>
    1024:1024:org.bson.BsonType[] $values():24:24 -> <clinit>
    1024:1024:void <clinit>():24 -> <clinit>
    1137:1137:int getValue():137:137 -> <clinit>
    1137:1137:void <clinit>():117 -> <clinit>
    2137:2137:int getValue():137:137 -> <clinit>
    2137:2137:void <clinit>():123 -> <clinit>
org.bson.BsonUndefined -> org.a.S:
    27:27:void <init>() -> <init>
    31:31:org.bson.BsonType getBsonType() -> c
    36:44:boolean equals(java.lang.Object) -> equals
    49:49:int hashCode() -> hashCode
org.bson.BsonValue -> org.a.T:
    30:31:void <init>() -> <init>
    org.bson.BsonType getBsonType() -> c
    47:48:org.bson.BsonDocument asDocument() -> f
    58:59:org.bson.BsonArray asArray() -> g
    69:70:org.bson.BsonString asString() -> h
    80:84:org.bson.BsonNumber asNumber() -> i
    94:95:org.bson.BsonInt32 asInt32() -> j
    105:106:org.bson.BsonInt64 asInt64() -> k
    117:118:org.bson.BsonDecimal128 asDecimal128() -> l
    128:129:org.bson.BsonDouble asDouble() -> m
    139:140:org.bson.BsonBoolean asBoolean() -> n
    150:151:org.bson.BsonObjectId asObjectId() -> o
    161:162:org.bson.BsonDbPointer asDBPointer() -> p
    172:173:org.bson.BsonTimestamp asTimestamp() -> q
    183:184:org.bson.BsonBinary asBinary() -> r
    194:195:org.bson.BsonDateTime asDateTime() -> s
    205:206:org.bson.BsonSymbol asSymbol() -> t
    216:217:org.bson.BsonRegularExpression asRegularExpression() -> u
    227:228:org.bson.BsonJavaScript asJavaScript() -> v
    238:239:org.bson.BsonJavaScriptWithScope asJavaScriptWithScope() -> w
    285:285:boolean isNumber() -> x
    1294:1294:boolean isInt32():294:294 -> x
    1294:1294:boolean isNumber():285 -> x
    1303:1303:boolean isInt64():303:303 -> x
    1303:1303:boolean isNumber():285 -> x
    1322:1322:boolean isDouble():322:322 -> x
    1322:1322:boolean isNumber():285 -> x
    418:422:void throwIfInvalidType(org.bson.BsonType) -> a
org.bson.BsonWriter -> org.a.U:
    void writeBinaryData(org.bson.BsonBinary) -> a
    void writeBoolean(boolean) -> a
    void writeBoolean(java.lang.String,boolean) -> a
    void writeDateTime(long) -> a
    void writeDBPointer(org.bson.BsonDbPointer) -> a
    void writeDouble(double) -> a
    void writeEndArray() -> d
    void writeEndDocument() -> b
    void writeInt32(int) -> a
    void writeInt32(java.lang.String,int) -> a
    void writeInt64(long) -> b
    void writeDecimal128(org.bson.types.Decimal128) -> a
    void writeJavaScript(java.lang.String) -> c
    void writeJavaScriptWithScope(java.lang.String) -> d
    void writeMaxKey() -> e
    void writeMinKey() -> f
    void writeName(java.lang.String) -> e
    void writeNull() -> g
    void writeObjectId(org.bson.types.ObjectId) -> a
    void writeObjectId(java.lang.String,org.bson.types.ObjectId) -> a
    void writeRegularExpression(org.bson.BsonRegularExpression) -> a
    void writeStartArray() -> c
    void writeStartArray(java.lang.String) -> b
    void writeStartDocument() -> a
    void writeStartDocument(java.lang.String) -> a
    void writeString(java.lang.String) -> f
    void writeString(java.lang.String,java.lang.String) -> a
    void writeSymbol(java.lang.String) -> g
    void writeTimestamp(org.bson.BsonTimestamp) -> a
    void writeUndefined() -> h
    void pipe(org.bson.BsonReader) -> a
org.bson.BsonWriterSettings -> org.a.V:
    int maxSerializationDepth -> a
    32:34:void <init>(int) -> <init>
    40:41:void <init>() -> <init>
org.bson.ByteBuf -> org.a.W:
    int capacity() -> a
    org.bson.ByteBuf put(int,byte) -> a
    int remaining() -> b
    org.bson.ByteBuf put(byte[],int,int) -> b
    boolean hasRemaining() -> c
    org.bson.ByteBuf put(byte) -> a
    org.bson.ByteBuf flip() -> k
    byte[] array() -> j
    int limit() -> e
    org.bson.ByteBuf position(int) -> a
    org.bson.ByteBuf order(java.nio.ByteOrder) -> a
    byte get() -> f
    byte get(int) -> b
    org.bson.ByteBuf get(byte[]) -> a
    org.bson.ByteBuf get(int,byte[]) -> a
    org.bson.ByteBuf get(byte[],int,int) -> a
    org.bson.ByteBuf get(int,byte[],int,int) -> a
    long getLong() -> g
    long getLong(int) -> c
    double getDouble() -> h
    int getInt() -> i
    int getInt(int) -> d
    int position() -> d
    org.bson.ByteBuf limit(int) -> e
    org.bson.ByteBuf asReadOnly() -> l
    org.bson.ByteBuf duplicate() -> m
    java.nio.ByteBuffer asNIO() -> n
    void release() -> o
org.bson.ByteBufNIO -> org.a.X:
    java.nio.ByteBuffer buf -> a
    java.util.concurrent.atomic.AtomicInteger referenceCount -> b
    31:40:void <init>(java.nio.ByteBuffer) -> <init>
    44:44:int getReferenceCount() -> p
    58:65:void release() -> o
    69:69:int capacity() -> a
    74:75:org.bson.ByteBuf put(int,byte) -> a
    80:80:int remaining() -> b
    85:86:org.bson.ByteBuf put(byte[],int,int) -> b
    91:91:boolean hasRemaining() -> c
    96:97:org.bson.ByteBuf put(byte) -> a
    102:103:org.bson.ByteBuf flip() -> k
    108:108:byte[] array() -> j
    113:113:int limit() -> e
    118:119:org.bson.ByteBuf position(int) -> a
    130:131:org.bson.ByteBuf order(java.nio.ByteOrder) -> a
    136:136:byte get() -> f
    141:141:byte get(int) -> b
    146:147:org.bson.ByteBuf get(byte[]) -> a
    152:152:org.bson.ByteBuf get(int,byte[]) -> a
    157:158:org.bson.ByteBuf get(byte[],int,int) -> a
    163:166:org.bson.ByteBuf get(int,byte[],int,int) -> a
    171:171:long getLong() -> g
    176:176:long getLong(int) -> c
    181:181:double getDouble() -> h
    191:191:int getInt() -> i
    196:196:int getInt(int) -> d
    201:201:int position() -> d
    206:207:org.bson.ByteBuf limit(int) -> e
    212:212:org.bson.ByteBuf asReadOnly() -> l
    217:217:org.bson.ByteBuf duplicate() -> m
    222:222:java.nio.ByteBuffer asNIO() -> n
org.bson.Document -> org.a.Y:
    java.util.LinkedHashMap documentAsMap -> a
    80:82:void <init>() -> <init>
    90:93:void <init>(java.lang.String,java.lang.Object) -> <init>
    100:102:void <init>(java.util.Map) -> <init>
    134:134:org.bson.BsonDocument toBsonDocument$283f4ed1(org.bson.codecs.configuration.CodecRegistry) -> a
    147:148:org.bson.Document append(java.lang.String,java.lang.Object) -> a
    286:286:java.lang.Long getLong(java.lang.Object) -> a
    297:297:java.lang.Double getDouble(java.lang.Object) -> b
    308:308:java.lang.String getString(java.lang.Object) -> c
    342:342:org.bson.types.ObjectId getObjectId(java.lang.Object) -> d
    465:465:int size() -> size
    470:470:boolean isEmpty() -> isEmpty
    475:475:boolean containsValue(java.lang.Object) -> containsValue
    480:480:boolean containsKey(java.lang.Object) -> containsKey
    485:485:java.lang.Object get(java.lang.Object) -> get
    490:490:java.lang.Object put(java.lang.String,java.lang.Object) -> b
    495:495:java.lang.Object remove(java.lang.Object) -> remove
    500:501:void putAll(java.util.Map) -> putAll
    505:506:void clear() -> clear
    510:510:java.util.Set keySet() -> keySet
    515:515:java.util.Collection values() -> values
    520:520:java.util.Set entrySet() -> entrySet
    525:538:boolean equals(java.lang.Object) -> equals
    543:543:int hashCode() -> hashCode
    548:548:java.lang.String toString() -> toString
    63:63:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    64:68:void <clinit>() -> <clinit>
org.bson.FieldNameValidator -> org.a.Z:
    boolean validate(java.lang.String) -> a
    44:45:java.lang.String getValidationErrorMessage(java.lang.String) -> b
    org.bson.FieldNameValidator getValidatorForField(java.lang.String) -> c
    62:62:void start() -> a
    70:70:void end() -> b
org.bson.NoOpFieldNameValidator -> org.a.aa:
    19:19:void <init>() -> <init>
    22:22:boolean validate(java.lang.String) -> a
    27:27:org.bson.FieldNameValidator getValidatorForField(java.lang.String) -> c
org.bson.RawBsonArray -> org.a.ab:
    org.bson.RawBsonArray$RawBsonArrayList delegate -> a
    67:68:void <init>(byte[],int,int) -> <init>
    71:73:void <init>(org.bson.RawBsonArray$RawBsonArrayList) -> <init>
    81:81:boolean add(org.bson.BsonValue) -> a
    86:86:boolean remove(java.lang.Object) -> remove
    91:91:boolean addAll(java.util.Collection) -> addAll
    96:96:boolean addAll(int,java.util.Collection) -> addAll
    101:101:boolean removeAll(java.util.Collection) -> removeAll
    106:106:boolean retainAll(java.util.Collection) -> retainAll
    111:111:void clear() -> clear
    116:116:org.bson.BsonValue set(int,org.bson.BsonValue) -> a
    121:121:void add(int,org.bson.BsonValue) -> b
    126:126:org.bson.BsonValue remove(int) -> b
    131:131:org.bson.BsonArray clone() -> b
    136:136:boolean equals(java.lang.Object) -> equals
    141:141:int hashCode() -> hashCode
    40:40:java.lang.Object remove(int) -> remove
    40:40:void add(int,java.lang.Object) -> add
    40:40:java.lang.Object set(int,java.lang.Object) -> set
    40:40:boolean add(java.lang.Object) -> add
    40:40:java.lang.Object clone() -> clone
org.bson.RawBsonArray$RawBsonArrayList -> org.a.ab$a:
    java.lang.Integer cachedSize -> a
    byte[] bytes -> b
    int offset -> c
    int length -> d
    197:206:void <init>(byte[],int,int) -> <init>
    210:226:org.bson.BsonValue get(int) -> a
    231:245:int size() -> size
    250:250:java.util.Iterator iterator() -> iterator
    255:255:java.util.ListIterator listIterator() -> listIterator
    260:260:java.util.ListIterator listIterator(int) -> listIterator
    365:365:org.bson.BsonBinaryReader createReader() -> a
    369:371:org.bson.ByteBuf getByteBuffer() -> b
    190:190:java.lang.Object get(int) -> get
    190:190:byte[] access$000(org.bson.RawBsonArray$RawBsonArrayList) -> a
    190:190:int access$100(org.bson.RawBsonArray$RawBsonArrayList) -> b
    190:190:int access$200(org.bson.RawBsonArray$RawBsonArrayList) -> c
    190:190:org.bson.BsonBinaryReader access$300(org.bson.RawBsonArray$RawBsonArrayList) -> d
org.bson.RawBsonArray$RawBsonArrayList$Itr -> org.a.ab$a$a:
    int cursor -> a
    org.bson.BsonBinaryReader bsonReader -> b
    int currentPosition -> c
    org.bson.RawBsonArray$RawBsonArrayList this$0 -> d
    269:270:void <init>(org.bson.RawBsonArray$RawBsonArrayList) -> <init>
    264:274:void <init>(org.bson.RawBsonArray$RawBsonArrayList,int) -> <init>
    277:281:boolean hasNext() -> hasNext
    304:304:void remove() -> remove
    308:308:int getCursor() -> a
    316:323:void setIterator(int) -> a
    263:263:java.lang.Object next() -> next
    1285:1298:org.bson.BsonValue next():285:298 -> next
    1285:1298:java.lang.Object next():263 -> next
org.bson.RawBsonArray$RawBsonArrayList$ListItr -> org.a.ab$a$b:
    org.bson.RawBsonArray$RawBsonArrayList this$0 -> a
    327:329:void <init>(org.bson.RawBsonArray$RawBsonArrayList,int) -> <init>
    332:332:boolean hasPrevious() -> hasPrevious
    337:341:org.bson.BsonValue previous() -> b
    346:346:int nextIndex() -> nextIndex
    350:350:int previousIndex() -> previousIndex
    326:326:void add(java.lang.Object) -> add
    1360:1360:void add$2ccdca97():360:360 -> add
    1360:1360:void add(java.lang.Object):326 -> add
    326:326:void set(java.lang.Object) -> set
    2355:2355:void set$2ccdca97():355:355 -> set
    2355:2355:void set(java.lang.Object):326 -> set
    326:326:java.lang.Object previous() -> previous
org.bson.RawBsonDocument -> org.a.ac:
    byte[] bytes -> a
    int offset -> b
    int length -> c
    80:81:org.bson.RawBsonDocument parse(java.lang.String) -> b
    92:93:void <init>(byte[]) -> <init>
    105:114:void <init>(byte[],int,int) -> <init>
    142:144:org.bson.ByteBuf getByteBuffer() -> b
    174:174:void clear() -> clear
    179:179:org.bson.BsonValue put(java.lang.String,org.bson.BsonValue) -> a
    184:184:org.bson.BsonDocument append(java.lang.String,org.bson.BsonValue) -> b
    189:189:void putAll(java.util.Map) -> putAll
    194:194:org.bson.BsonValue remove(java.lang.Object) -> a
    199:207:boolean isEmpty() -> isEmpty
    212:223:int size() -> size
    228:228:java.util.Set entrySet() -> entrySet
    233:233:java.util.Collection values() -> values
    238:238:java.util.Set keySet() -> keySet
    243:250:java.lang.String getFirstKey() -> a
    255:270:boolean containsKey(java.lang.Object) -> containsKey
    275:286:boolean containsValue(java.lang.Object) -> containsValue
    291:304:org.bson.BsonValue get(java.lang.Object) -> b
    309:309:java.lang.String toJson() -> a_
    314:316:java.lang.String toJson(org.bson.json.JsonWriterSettings) -> a
    321:321:boolean equals(java.lang.Object) -> equals
    326:326:int hashCode() -> hashCode
    331:331:org.bson.BsonDocument clone() -> e
    335:335:org.bson.BsonBinaryReader createReader() -> y
    340:342:org.bson.BsonDocument toBaseBsonDocument() -> z
    51:51:java.lang.Object remove(java.lang.Object) -> remove
    51:51:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    51:51:java.lang.Object get(java.lang.Object) -> get
    51:51:java.lang.Object clone() -> clone
org.bson.RawBsonValueHelper -> org.a.ad:
    org.bson.codecs.configuration.CodecRegistry REGISTRY -> a
    31:43:org.bson.BsonValue decode(byte[],org.bson.BsonBinaryReader) -> a
    1045:1045:org.bson.BsonType org.bson.AbstractBsonReader.getCurrentBsonType():45:45 -> a
    1045:1045:org.bson.BsonValue decode(byte[],org.bson.BsonBinaryReader):31 -> a
    2045:2045:org.bson.BsonType org.bson.AbstractBsonReader.getCurrentBsonType():45:45 -> a
    2045:2045:org.bson.BsonValue decode(byte[],org.bson.BsonBinaryReader):31 -> a
    2072:2072:org.bson.io.BsonInput org.bson.BsonBinaryReader.getBsonInput():72:72 -> a
    2072:2072:org.bson.BsonValue decode(byte[],org.bson.BsonBinaryReader):32 -> a
    3072:3072:org.bson.io.BsonInput org.bson.BsonBinaryReader.getBsonInput():72:72 -> a
    3072:3072:org.bson.BsonValue decode(byte[],org.bson.BsonBinaryReader):33 -> a
    4072:4072:org.bson.io.BsonInput org.bson.BsonBinaryReader.getBsonInput():72:72 -> a
    4072:4072:org.bson.BsonValue decode(byte[],org.bson.BsonBinaryReader):34 -> a
    5045:5045:org.bson.BsonType org.bson.AbstractBsonReader.getCurrentBsonType():45:45 -> a
    5045:5045:org.bson.BsonValue decode(byte[],org.bson.BsonBinaryReader):37 -> a
    6045:6045:org.bson.BsonType org.bson.AbstractBsonReader.getCurrentBsonType():45:45 -> a
    6045:6045:org.bson.BsonValue decode(byte[],org.bson.BsonBinaryReader):43 -> a
    28:28:void <clinit>() -> <clinit>
    6085:6085:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.fromProviders(org.bson.codecs.configuration.CodecProvider[]):85:85 -> <clinit>
    6085:6085:void <clinit>():28 -> <clinit>
org.bson.StringUtils -> org.a.ae:
    com.mongodb.client.MongoClient client -> a
    com.mongodb.MongoNamespace namespace -> b
    26:26:java.lang.String join(java.lang.String,java.lang.Object[]) -> a
    1039:1041:java.util.List com.mongodb.client.internal.KeyRetriever.find(org.bson.BsonDocument):39:41 -> a
    1125:1125:java.lang.String com.mongodb.MongoNamespace.getDatabaseName():125:125 -> a
    1125:1125:java.util.List com.mongodb.client.internal.KeyRetriever.find(org.bson.BsonDocument):39 -> a
    1135:1135:java.lang.String com.mongodb.MongoNamespace.getCollectionName():135:135 -> a
    1135:1135:java.util.List com.mongodb.client.internal.KeyRetriever.find(org.bson.BsonDocument):39 -> a
org.bson.Transformer -> org.a.af:
    java.lang.Object transform(java.lang.Object) -> transform
org.bson.UuidRepresentation -> org.a.ag:
    org.bson.UuidRepresentation UNSPECIFIED -> a
    org.bson.UuidRepresentation STANDARD -> b
    org.bson.UuidRepresentation C_SHARP_LEGACY -> c
    org.bson.UuidRepresentation JAVA_LEGACY -> d
    org.bson.UuidRepresentation PYTHON_LEGACY -> e
    org.bson.UuidRepresentation[] $VALUES -> f
    30:30:org.bson.UuidRepresentation[] values() -> values
    30:30:org.bson.UuidRepresentation valueOf(java.lang.String) -> valueOf
    30:30:void <init>(java.lang.String,int) -> <init>
    30:66:void <clinit>() -> <clinit>
    1030:1030:org.bson.UuidRepresentation[] $values():30:30 -> <clinit>
    1030:1030:void <clinit>():30 -> <clinit>
org.bson.codecs.AbstractCollectionCodec -> org.a.a.a:
    java.lang.Class clazz -> a
    java.util.function.Supplier supplier -> b
    48:79:void <init>(java.lang.Class) -> <init>
    java.lang.Object readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    void writeValue(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> b
    119:119:java.lang.Class getEncoderClass() -> a
    42:42:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1106:1115:void encode(org.bson.BsonWriter,java.util.Collection,org.bson.codecs.EncoderContext):106:115 -> a
    1106:1115:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):42 -> a
    42:42:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2087:2101:java.util.Collection decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):87:101 -> a
    2087:2101:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):42 -> a
    74:74:java.util.Collection lambda$new$4(java.lang.Class,java.lang.NoSuchMethodException) -> a
    66:68:java.util.Collection lambda$new$3(java.lang.reflect.Constructor,java.lang.Class) -> a
    58:58:java.util.Collection lambda$new$2() -> b
    55:55:java.util.Collection lambda$new$1() -> c
    53:53:java.util.Collection lambda$new$0() -> d
org.bson.codecs.AbstractMapCodec -> org.a.a.b:
    java.util.function.Supplier supplier -> a
    java.lang.Class clazz -> b
    43:69:void <init>(java.lang.Class) -> <init>
    java.lang.Object readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    void writeValue(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> b
    112:112:java.lang.Class getEncoderClass() -> a
    37:37:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1077:1088:void encode(org.bson.BsonWriter,java.util.Map,org.bson.codecs.EncoderContext):77:88 -> a
    1077:1088:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):37 -> a
    37:37:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1093:1107:java.util.Map decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):93:107 -> a
    1093:1107:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):37 -> a
    64:64:java.util.Map lambda$new$3(java.lang.Class,java.lang.NoSuchMethodException) -> a
    57:59:java.util.Map lambda$new$2(java.lang.reflect.Constructor) -> a
    49:49:java.util.Map lambda$new$1() -> b
    47:47:java.util.Map lambda$new$0() -> c
org.bson.codecs.AtomicBooleanCodec -> org.a.a.c:
    30:30:void <init>() -> <init>
    43:43:java.lang.Class getEncoderClass() -> a
    30:30:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1033:1034:void encode$12c82339(org.bson.BsonWriter,java.util.concurrent.atomic.AtomicBoolean):33:34 -> a
    1033:1034:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):30 -> a
    30:30:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1038:1038:java.util.concurrent.atomic.AtomicBoolean decode$3ce348b(org.bson.BsonReader):38:38 -> a
    1038:1038:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):30 -> a
org.bson.codecs.AtomicIntegerCodec -> org.a.a.d:
    32:32:void <init>() -> <init>
    46:46:java.lang.Class getEncoderClass() -> a
    32:32:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1036:1037:void encode$2f43399d(org.bson.BsonWriter,java.util.concurrent.atomic.AtomicInteger):36:37 -> a
    1036:1037:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):32 -> a
    32:32:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1041:1041:java.util.concurrent.atomic.AtomicInteger decode$51c93dcb(org.bson.BsonReader):41:41 -> a
    1041:1041:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):32 -> a
org.bson.codecs.AtomicLongCodec -> org.a.a.e:
    32:32:void <init>() -> <init>
    46:46:java.lang.Class getEncoderClass() -> a
    32:32:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1036:1037:void encode$3d559e4f(org.bson.BsonWriter,java.util.concurrent.atomic.AtomicLong):36:37 -> a
    1036:1037:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):32 -> a
    32:32:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1041:1041:java.util.concurrent.atomic.AtomicLong decode$46f460c7(org.bson.BsonReader):41:41 -> a
    1041:1041:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):32 -> a
org.bson.codecs.BigDecimalCodec -> org.a.a.f:
    30:30:void <init>() -> <init>
    44:44:java.lang.Class getEncoderClass() -> a
    30:30:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1034:1035:void encode$107c29c9(org.bson.BsonWriter,java.math.BigDecimal):34:35 -> a
    1034:1035:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):30 -> a
    30:30:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1039:1039:java.math.BigDecimal decode$44da0a91(org.bson.BsonReader):39:39 -> a
    1039:1039:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):30 -> a
org.bson.codecs.BinaryCodec -> org.a.a.g:
    29:29:void <init>() -> <init>
    43:43:java.lang.Class getEncoderClass() -> a
    29:29:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1032:1033:void encode$268b0941(org.bson.BsonWriter,org.bson.types.Binary):32:33 -> a
    1032:1033:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):29 -> a
    1076:1076:byte org.bson.types.Binary.getType():76:76 -> a
    1076:1076:void encode$268b0941(org.bson.BsonWriter,org.bson.types.Binary):32 -> a
    1076:1076:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):29 -> a
    29:29:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2037:2038:org.bson.types.Binary decode$84b35ef(org.bson.BsonReader):37:38 -> a
    2037:2038:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):29 -> a
    2162:2162:byte org.bson.BsonBinary.getType():162:162 -> a
    2162:2162:org.bson.types.Binary decode$84b35ef(org.bson.BsonReader):38 -> a
    2162:2162:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):29 -> a
    2174:2174:byte[] org.bson.BsonBinary.getData():174:174 -> a
    2174:2174:org.bson.types.Binary decode$84b35ef(org.bson.BsonReader):38 -> a
    2174:2174:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):29 -> a
org.bson.codecs.BooleanCodec -> org.a.a.h:
    27:27:void <init>() -> <init>
    40:40:java.lang.Class getEncoderClass() -> a
    27:27:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1030:1031:void encode$14ac5ca(org.bson.BsonWriter,java.lang.Boolean):30:31 -> a
    1030:1031:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):27 -> a
    27:27:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1035:1035:java.lang.Boolean decode$179941c8(org.bson.BsonReader):35:35 -> a
    1035:1035:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):27 -> a
org.bson.codecs.BsonArrayCodec -> org.a.a.i:
    org.bson.codecs.configuration.CodecRegistry DEFAULT_REGISTRY -> a
    org.bson.codecs.configuration.CodecRegistry codecRegistry -> b
    49:50:void <init>() -> <init>
    57:59:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    63:72:org.bson.BsonArray decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    90:90:java.lang.Class getEncoderClass() -> a
    102:102:org.bson.BsonValue readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> c
    37:37:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1078:1086:void encode(org.bson.BsonWriter,org.bson.BsonArray,org.bson.codecs.EncoderContext):78:86 -> a
    1078:1086:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):37 -> a
    37:37:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    39:39:void <clinit>() -> <clinit>
    2085:2085:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.fromProviders(org.bson.codecs.configuration.CodecProvider[]):85:85 -> <clinit>
    2085:2085:void <clinit>():39 -> <clinit>
org.bson.codecs.BsonBinaryCodec -> org.a.a.j:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1031:1032:void encode$4a1c5b3b(org.bson.BsonWriter,org.bson.BsonBinary):31:32 -> a
    1031:1032:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1036:1036:org.bson.BsonBinary decode$504a84d7(org.bson.BsonReader):36:36 -> a
    1036:1036:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonBooleanCodec -> org.a.a.k:
    28:28:void <init>() -> <init>
    42:42:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1037:1038:void encode$3ab878c2(org.bson.BsonWriter,org.bson.BsonBoolean):37:38 -> a
    1037:1038:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    1073:1073:boolean org.bson.BsonBoolean.getValue():73:73 -> a
    1073:1073:void encode$3ab878c2(org.bson.BsonWriter,org.bson.BsonBoolean):37 -> a
    1073:1073:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2031:2032:org.bson.BsonBoolean decode$74ae7ca(org.bson.BsonReader):31:32 -> a
    2031:2032:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonCodec -> org.a.a.l:
    org.bson.codecs.Codec BSON_DOCUMENT_CODEC -> a
    org.bson.codecs.configuration.CodecRegistry registry -> b
    42:44:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    63:63:java.lang.Class getEncoderClass() -> a
    33:33:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1054:1059:void encode(org.bson.BsonWriter,org.bson.conversions.Bson,org.bson.codecs.EncoderContext):54:59 -> a
    1054:1059:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):33 -> a
    33:33:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2048:2048:org.bson.conversions.Bson decode$483e90a6():48:48 -> a
    2048:2048:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):33 -> a
    34:34:void <clinit>() -> <clinit>
org.bson.codecs.BsonCodecProvider -> org.a.a.m:
    28:28:void <init>() -> <init>
    33:36:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    41:41:java.lang.String toString() -> toString
org.bson.codecs.BsonDBPointerCodec -> org.a.a.n:
    28:28:void <init>() -> <init>
    42:42:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1037:1038:void encode$648b8027(org.bson.BsonWriter,org.bson.BsonDbPointer):37:38 -> a
    1037:1038:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2032:2032:org.bson.BsonDbPointer decode$12e55e9f(org.bson.BsonReader):32:32 -> a
    2032:2032:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonDateTimeCodec -> org.a.a.o:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1036:1037:void encode$6d510aeb(org.bson.BsonWriter,org.bson.BsonDateTime):36:37 -> a
    1036:1037:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    1053:1053:long org.bson.BsonDateTime.getValue():53:53 -> a
    1053:1053:void encode$6d510aeb(org.bson.BsonWriter,org.bson.BsonDateTime):36 -> a
    1053:1053:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2031:2031:org.bson.BsonDateTime decode$6c3856c3(org.bson.BsonReader):31:31 -> a
    2031:2031:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonDecimal128Codec -> org.a.a.p:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1036:1037:void encode$273e5aa0(org.bson.BsonWriter,org.bson.BsonDecimal128):36:37 -> a
    1036:1037:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    1052:1052:org.bson.types.Decimal128 org.bson.BsonDecimal128.getValue():52:52 -> a
    1052:1052:void encode$273e5aa0(org.bson.BsonWriter,org.bson.BsonDecimal128):36 -> a
    1052:1052:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2031:2031:org.bson.BsonDecimal128 decode$755095b2(org.bson.BsonReader):31:31 -> a
    2031:2031:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonDocumentCodec -> org.a.a.q:
    org.bson.codecs.configuration.CodecRegistry DEFAULT_REGISTRY -> a
    org.bson.codecs.BsonTypeCodecMap DEFAULT_BSON_TYPE_CODEC_MAP -> b
    org.bson.codecs.configuration.CodecRegistry codecRegistry -> c
    org.bson.codecs.BsonTypeCodecMap bsonTypeCodecMap -> d
    54:55:void <init>() -> <init>
    63:64:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    66:69:void <init>(org.bson.codecs.configuration.CodecRegistry,org.bson.codecs.BsonTypeCodecMap) -> <init>
    77:77:org.bson.codecs.configuration.CodecRegistry getCodecRegistry() -> b
    82:92:org.bson.BsonDocument decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> c
    104:104:org.bson.BsonValue readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    109:122:void encode(org.bson.BsonWriter,org.bson.BsonDocument,org.bson.codecs.EncoderContext) -> a
    125:129:void beforeFields(org.bson.BsonWriter,org.bson.codecs.EncoderContext,org.bson.BsonDocument) -> a
    1079:1079:boolean org.bson.codecs.EncoderContext.isEncodingCollectibleDocument():79:79 -> a
    1079:1079:void beforeFields(org.bson.BsonWriter,org.bson.codecs.EncoderContext,org.bson.BsonDocument):125 -> a
    132:132:boolean skipField(org.bson.codecs.EncoderContext,java.lang.String) -> a
    2079:2079:boolean org.bson.codecs.EncoderContext.isEncodingCollectibleDocument():79:79 -> a
    2079:2079:boolean skipField(org.bson.codecs.EncoderContext,java.lang.String):132 -> a
    138:140:void writeValue(org.bson.BsonWriter,org.bson.codecs.EncoderContext,org.bson.BsonValue) -> a
    144:144:java.lang.Class getEncoderClass() -> a
    42:42:java.lang.Object generateIdIfAbsentFromDocument(java.lang.Object) -> a
    2149:2152:org.bson.BsonDocument generateIdIfAbsentFromDocument(org.bson.BsonDocument):149:152 -> a
    2149:2152:java.lang.Object generateIdIfAbsentFromDocument(java.lang.Object):42 -> a
    2157:2157:boolean documentHasId(org.bson.BsonDocument):157:157 -> a
    2157:2157:org.bson.BsonDocument generateIdIfAbsentFromDocument(org.bson.BsonDocument):149 -> a
    2157:2157:java.lang.Object generateIdIfAbsentFromDocument(java.lang.Object):42 -> a
    42:42:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    42:42:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    44:45:void <clinit>() -> <clinit>
    3085:3085:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.fromProviders(org.bson.codecs.configuration.CodecProvider[]):85:85 -> <clinit>
    3085:3085:void <clinit>():44 -> <clinit>
org.bson.codecs.BsonDocumentWrapperCodec -> org.a.a.r:
    org.bson.codecs.Codec bsonDocumentCodec -> a
    39:41:void <init>(org.bson.codecs.Codec) -> <init>
    69:69:java.lang.Class getEncoderClass() -> a
    29:29:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1059:1065:void encode(org.bson.BsonWriter,org.bson.BsonDocumentWrapper,org.bson.codecs.EncoderContext):59:65 -> a
    1059:1065:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):29 -> a
    1109:1109:boolean org.bson.BsonDocumentWrapper.isUnwrapped():109:109 -> a
    1109:1109:void encode(org.bson.BsonWriter,org.bson.BsonDocumentWrapper,org.bson.codecs.EncoderContext):59 -> a
    1109:1109:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):29 -> a
    2100:2100:org.bson.codecs.Encoder org.bson.BsonDocumentWrapper.getEncoder():100:100 -> a
    2100:2100:void encode(org.bson.BsonWriter,org.bson.BsonDocumentWrapper,org.bson.codecs.EncoderContext):62 -> a
    2100:2100:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):29 -> a
    3091:3091:java.lang.Object org.bson.BsonDocumentWrapper.getWrappedDocument():91:91 -> a
    3091:3091:void encode(org.bson.BsonWriter,org.bson.BsonDocumentWrapper,org.bson.codecs.EncoderContext):63 -> a
    3091:3091:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):29 -> a
    29:29:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    4053:4053:org.bson.BsonDocumentWrapper decode$2fcbdb9a():53:53 -> a
    4053:4053:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):29 -> a
org.bson.codecs.BsonDoubleCodec -> org.a.a.s:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1036:1037:void encode$2f51a2f5(org.bson.BsonWriter,org.bson.BsonDouble):36:37 -> a
    1036:1037:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    1057:1057:double org.bson.BsonDouble.getValue():57:57 -> a
    1057:1057:void encode$2f51a2f5(org.bson.BsonWriter,org.bson.BsonDouble):36 -> a
    1057:1057:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2031:2031:org.bson.BsonDouble decode$3b48f0f9(org.bson.BsonReader):31:31 -> a
    2031:2031:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonInt32Codec -> org.a.a.t:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1036:1037:void encode$3c684b18(org.bson.BsonWriter,org.bson.BsonInt32):36:37 -> a
    1036:1037:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    1055:1055:int org.bson.BsonInt32.getValue():55:55 -> a
    1055:1055:void encode$3c684b18(org.bson.BsonWriter,org.bson.BsonInt32):36 -> a
    1055:1055:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2031:2031:org.bson.BsonInt32 decode$3b8120b0(org.bson.BsonReader):31:31 -> a
    2031:2031:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonInt64Codec -> org.a.a.u:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1036:1037:void encode$5fde3659(org.bson.BsonWriter,org.bson.BsonInt64):36:37 -> a
    1036:1037:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    1054:1054:long org.bson.BsonInt64.getValue():54:54 -> a
    1054:1054:void encode$5fde3659(org.bson.BsonWriter,org.bson.BsonInt64):36 -> a
    1054:1054:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2031:2031:org.bson.BsonInt64 decode$3b81152f(org.bson.BsonReader):31:31 -> a
    2031:2031:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonJavaScriptCodec -> org.a.a.v:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1036:1037:void encode$62f3e047(org.bson.BsonWriter,org.bson.BsonJavaScript):36:37 -> a
    1036:1037:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    1048:1048:java.lang.String org.bson.BsonJavaScript.getCode():48:48 -> a
    1048:1048:void encode$62f3e047(org.bson.BsonWriter,org.bson.BsonJavaScript):36 -> a
    1048:1048:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2031:2031:org.bson.BsonJavaScript decode$77f789b5(org.bson.BsonReader):31:31 -> a
    2031:2031:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonJavaScriptWithScopeCodec -> org.a.a.w:
    org.bson.codecs.Codec documentCodec -> a
    37:39:void <init>(org.bson.codecs.Codec) -> <init>
    56:56:java.lang.Class getEncoderClass() -> a
    29:29:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1050:1052:void encode(org.bson.BsonWriter,org.bson.BsonJavaScriptWithScope,org.bson.codecs.EncoderContext):50:52 -> a
    1050:1052:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):29 -> a
    1057:1057:java.lang.String org.bson.BsonJavaScriptWithScope.getCode():57:57 -> a
    1057:1057:void encode(org.bson.BsonWriter,org.bson.BsonJavaScriptWithScope,org.bson.codecs.EncoderContext):50 -> a
    1057:1057:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):29 -> a
    1066:1066:org.bson.BsonDocument org.bson.BsonJavaScriptWithScope.getScope():66:66 -> a
    1066:1066:void encode(org.bson.BsonWriter,org.bson.BsonJavaScriptWithScope,org.bson.codecs.EncoderContext):51 -> a
    1066:1066:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):29 -> a
    29:29:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2043:2045:org.bson.BsonJavaScriptWithScope decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):43:45 -> a
    2043:2045:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):29 -> a
org.bson.codecs.BsonMaxKeyCodec -> org.a.a.x:
    28:28:void <init>() -> <init>
    42:42:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1031:1032:void encode$7abf93d5(org.bson.BsonWriter):31:32 -> a
    1031:1032:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1036:1037:org.bson.BsonMaxKey decode$76f4fa43(org.bson.BsonReader):36:37 -> a
    1036:1037:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonMinKeyCodec -> org.a.a.y:
    28:28:void <init>() -> <init>
    42:42:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1031:1032:void encode$64264a99(org.bson.BsonWriter):31:32 -> a
    1031:1032:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1036:1037:org.bson.BsonMinKey decode$69db2055(org.bson.BsonReader):36:37 -> a
    1036:1037:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonNullCodec -> org.a.a.z:
    28:28:void <init>() -> <init>
    43:43:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1038:1039:void encode$16c54d7f(org.bson.BsonWriter):38:39 -> a
    1038:1039:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2032:2033:org.bson.BsonNull decode$1a6808af(org.bson.BsonReader):32:33 -> a
    2032:2033:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonObjectIdCodec -> org.a.a.A:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1031:1032:void encode$71f96a94(org.bson.BsonWriter,org.bson.BsonObjectId):31:32 -> a
    1031:1032:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    1054:1054:org.bson.types.ObjectId org.bson.BsonObjectId.getValue():54:54 -> a
    1054:1054:void encode$71f96a94(org.bson.BsonWriter,org.bson.BsonObjectId):31 -> a
    1054:1054:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2036:2036:org.bson.BsonObjectId decode$4a7323fe(org.bson.BsonReader):36:36 -> a
    2036:2036:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonRegularExpressionCodec -> org.a.a.B:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1036:1037:void encode$5786f76e(org.bson.BsonWriter,org.bson.BsonRegularExpression):36:37 -> a
    1036:1037:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2031:2031:org.bson.BsonRegularExpression decode$24e5a136(org.bson.BsonReader):31:31 -> a
    2031:2031:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonStringCodec -> org.a.a.C:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1036:1037:void encode$7e5756b5(org.bson.BsonWriter,org.bson.BsonString):36:37 -> a
    1036:1037:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    1056:1056:java.lang.String org.bson.BsonString.getValue():56:56 -> a
    1056:1056:void encode$7e5756b5(org.bson.BsonWriter,org.bson.BsonString):36 -> a
    1056:1056:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2031:2031:org.bson.BsonString decode$196a4d39(org.bson.BsonReader):31:31 -> a
    2031:2031:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonSymbolCodec -> org.a.a.D:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1036:1037:void encode$b762432(org.bson.BsonWriter,org.bson.BsonSymbol):36:37 -> a
    1036:1037:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    1053:1053:java.lang.String org.bson.BsonSymbol.getSymbol():53:53 -> a
    1053:1053:void encode$b762432(org.bson.BsonWriter,org.bson.BsonSymbol):36 -> a
    1053:1053:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2031:2031:org.bson.BsonSymbol decode$112bb1e0(org.bson.BsonReader):31:31 -> a
    2031:2031:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonTimestampCodec -> org.a.a.E:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1031:1032:void encode$36decc70(org.bson.BsonWriter,org.bson.BsonTimestamp):31:32 -> a
    1031:1032:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1036:1036:org.bson.BsonTimestamp decode$2a3bbc48(org.bson.BsonReader):36:36 -> a
    1036:1036:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.BsonTypeClassMap -> org.a.a.F:
    org.bson.codecs.BsonTypeClassMap DEFAULT_BSON_TYPE_CLASS_MAP -> a
    java.util.Map map -> b
    74:85:void <init>(java.util.Map) -> <init>
    1109:1129:void addDefaults():109:129 -> <init>
    1109:1129:void <init>(java.util.Map):83 -> <init>
    91:92:void <init>() -> <init>
    105:105:java.lang.Class get(org.bson.BsonType) -> a
    133:146:boolean equals(java.lang.Object) -> equals
    151:151:int hashCode() -> hashCode
    73:73:void <clinit>() -> <clinit>
org.bson.codecs.BsonTypeCodecMap -> org.a.a.G:
    org.bson.codecs.BsonTypeClassMap bsonTypeClassMap -> a
    org.bson.codecs.Codec[] codecs -> b
    33:53:void <init>(org.bson.codecs.BsonTypeClassMap,org.bson.codecs.configuration.CodecRegistry) -> <init>
    1095:1095:java.util.Set org.bson.codecs.BsonTypeClassMap.keys():95:95 -> <init>
    1095:1095:void <init>(org.bson.codecs.BsonTypeClassMap,org.bson.codecs.configuration.CodecRegistry):43 -> <init>
    1137:1137:int org.bson.BsonType.getValue():137:137 -> <init>
    1137:1137:void <init>(org.bson.codecs.BsonTypeClassMap,org.bson.codecs.configuration.CodecRegistry):47 -> <init>
    62:71:org.bson.codecs.Codec get(org.bson.BsonType) -> a
    2137:2137:int org.bson.BsonType.getValue():137:137 -> a
    2137:2137:org.bson.codecs.Codec get(org.bson.BsonType):62 -> a
org.bson.codecs.BsonUndefinedCodec -> org.a.a.H:
    34:34:void <init>() -> <init>
    48:48:java.lang.Class getEncoderClass() -> a
    34:34:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1043:1044:void encode$6acd3eea(org.bson.BsonWriter):43:44 -> a
    1043:1044:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):34 -> a
    34:34:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2037:2038:org.bson.BsonUndefined decode$462c8b4e(org.bson.BsonReader):37:38 -> a
    2037:2038:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):34 -> a
org.bson.codecs.BsonValueCodec -> org.a.a.I:
    org.bson.codecs.configuration.CodecRegistry codecRegistry -> a
    41:42:void <init>() -> <init>
    1085:1085:org.bson.codecs.configuration.CodecRegistry org.bson.codecs.configuration.CodecRegistries.fromProviders(org.bson.codecs.configuration.CodecProvider[]):85:85 -> <init>
    1085:1085:void <init>():41 -> <init>
    49:51:void <init>(org.bson.codecs.configuration.CodecRegistry) -> <init>
    67:67:java.lang.Class getEncoderClass() -> a
    33:33:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    2061:2063:void encode(org.bson.BsonWriter,org.bson.BsonValue,org.bson.codecs.EncoderContext):61:63 -> a
    2061:2063:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):33 -> a
    33:33:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    3055:3055:org.bson.BsonValue decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):55:55 -> a
    3055:3055:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):33 -> a
org.bson.codecs.BsonValueCodecProvider -> org.a.a.J:
    org.bson.codecs.BsonTypeClassMap DEFAULT_BSON_TYPE_CLASS_MAP -> a
    java.util.Map codecs -> b
    58:65:void <init>() -> <init>
    1122:1140:void addCodecs():122:140 -> <init>
    1122:1140:void <init>():64 -> <init>
    74:74:java.lang.Class getClassForBsonType(org.bson.BsonType) -> a
    84:84:org.bson.codecs.BsonTypeClassMap getBsonTypeClassMap() -> a
    90:118:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    143:144:void addCodec(org.bson.codecs.Codec) -> a
    176:176:java.lang.String toString() -> toString
    147:172:void <clinit>() -> <clinit>
org.bson.codecs.ByteArrayCodec -> org.a.a.K:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1031:1032:void encode$377b3a46(org.bson.BsonWriter,byte[]):31:32 -> a
    1031:1032:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1036:1036:byte[] decode$5bbb9ace(org.bson.BsonReader):36:36 -> a
    1036:1036:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
    1174:1174:byte[] org.bson.BsonBinary.getData():174:174 -> a
    1174:1174:byte[] decode$5bbb9ace(org.bson.BsonReader):36 -> a
    1174:1174:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.ByteCodec -> org.a.a.L:
    31:31:void <init>() -> <init>
    49:49:java.lang.Class getEncoderClass() -> a
    31:31:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1035:1036:void encode$6327d59a(org.bson.BsonWriter,java.lang.Byte):35:36 -> a
    1035:1036:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):31 -> a
    31:31:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1040:1044:java.lang.Byte decode$fdd5b9e(org.bson.BsonReader):40:44 -> a
    1040:1044:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):31 -> a
org.bson.codecs.CharacterCodec -> org.a.a.M:
    31:31:void <init>() -> <init>
    52:52:java.lang.Class getEncoderClass() -> a
    31:31:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1034:1037:void encode$5d936595(org.bson.BsonWriter,java.lang.Character):34:37 -> a
    1034:1037:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):31 -> a
    31:31:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1041:1047:java.lang.Character decode$51b79a7(org.bson.BsonReader):41:47 -> a
    1041:1047:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):31 -> a
org.bson.codecs.CodeCodec -> org.a.a.N:
    28:28:void <init>() -> <init>
    42:42:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1032:1033:void encode$4d5c9c2d(org.bson.BsonWriter,org.bson.types.Code):32:33 -> a
    1032:1033:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    1050:1050:java.lang.String org.bson.types.Code.getCode():50:50 -> a
    1050:1050:void encode$4d5c9c2d(org.bson.BsonWriter,org.bson.types.Code):32 -> a
    1050:1050:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2037:2037:org.bson.types.Code decode$3937989b(org.bson.BsonReader):37:37 -> a
    2037:2037:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.CodeWithScopeCodec -> org.a.a.O:
    org.bson.codecs.Codec documentCodec -> a
    37:39:void <init>(org.bson.codecs.Codec) -> <init>
    56:56:java.lang.Class getEncoderClass() -> a
    29:29:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1050:1052:void encode(org.bson.BsonWriter,org.bson.types.CodeWithScope,org.bson.codecs.EncoderContext):50:52 -> a
    1050:1052:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):29 -> a
    2050:2050:java.lang.String org.bson.types.Code.getCode():50:50 -> a
    2050:2050:void encode(org.bson.BsonWriter,org.bson.types.CodeWithScope,org.bson.codecs.EncoderContext):50 -> a
    2050:2050:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):29 -> a
    2054:2054:org.bson.Document org.bson.types.CodeWithScope.getScope():54:54 -> a
    2054:2054:void encode(org.bson.BsonWriter,org.bson.types.CodeWithScope,org.bson.codecs.EncoderContext):51 -> a
    2054:2054:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):29 -> a
    29:29:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    3043:3045:org.bson.types.CodeWithScope decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):43:45 -> a
    3043:3045:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):29 -> a
org.bson.codecs.Codec -> org.a.a.P:
org.bson.codecs.CollectibleCodec -> org.a.a.Q:
    java.lang.Object generateIdIfAbsentFromDocument(java.lang.Object) -> a
org.bson.codecs.CollectionCodec -> org.a.a.R:
    org.bson.codecs.configuration.CodecRegistry registry -> a
    org.bson.codecs.BsonTypeCodecMap bsonTypeCodecMap -> b
    org.bson.Transformer valueTransformer -> c
    org.bson.UuidRepresentation uuidRepresentation -> d
    67:69:void <init>(org.bson.codecs.configuration.CodecRegistry,org.bson.codecs.BsonTypeClassMap,org.bson.Transformer,java.lang.Class) -> <init>
    72:77:void <init>(org.bson.codecs.configuration.CodecRegistry,org.bson.codecs.BsonTypeCodecMap,org.bson.Transformer,java.lang.Class,org.bson.UuidRepresentation) -> <init>
    83:87:org.bson.codecs.Codec parameterize(org.bson.codecs.configuration.CodecRegistry,java.util.List) -> a
    92:95:org.bson.codecs.Codec withUuidRepresentation(org.bson.UuidRepresentation) -> a
    100:100:java.lang.Object readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    106:108:void writeValue(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> b
    75:75:java.lang.Object lambda$new$0(java.lang.Object) -> a
org.bson.codecs.CollectionCodecProvider -> org.a.a.S:
    org.bson.codecs.BsonTypeClassMap bsonTypeClassMap -> a
    org.bson.Transformer valueTransformer -> b
    42:43:void <init>() -> <init>
    52:53:void <init>(org.bson.Transformer) -> <init>
    62:63:void <init>(org.bson.codecs.BsonTypeClassMap) -> <init>
    72:75:void <init>(org.bson.codecs.BsonTypeClassMap,org.bson.Transformer) -> <init>
    80:84:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    89:105:boolean equals(java.lang.Object) -> equals
    110:110:int hashCode() -> hashCode
    115:115:java.lang.String toString() -> toString
org.bson.codecs.DateCodec -> org.a.a.T:
    29:29:void <init>() -> <init>
    42:42:java.lang.Class getEncoderClass() -> a
    29:29:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1032:1033:void encode$7892dbec(org.bson.BsonWriter,java.util.Date):32:33 -> a
    1032:1033:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):29 -> a
    29:29:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1037:1037:java.util.Date decode$574edf34(org.bson.BsonReader):37:37 -> a
    1037:1037:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):29 -> a
org.bson.codecs.Decimal128Codec -> org.a.a.U:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1036:1037:void encode$4f056a5a(org.bson.BsonWriter,org.bson.types.Decimal128):36:37 -> a
    1036:1037:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2031:2031:org.bson.types.Decimal128 decode$2741adec(org.bson.BsonReader):31:31 -> a
    2031:2031:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.Decoder -> org.a.a.V:
    java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
org.bson.codecs.DecoderContext -> org.a.a.W:
    org.bson.codecs.DecoderContext DEFAULT_CONTEXT -> a
    46:46:org.bson.codecs.DecoderContext$Builder builder() -> a
    95:96:java.lang.Object decodeWithChildContext(org.bson.codecs.Decoder,org.bson.BsonReader) -> a
    99:101:void <init>(org.bson.codecs.DecoderContext$Builder) -> <init>
    1062:1062:boolean org.bson.codecs.DecoderContext$Builder.hasCheckedDiscriminator():62:62 -> <init>
    1062:1062:void <init>(org.bson.codecs.DecoderContext$Builder):100 -> <init>
    29:29:void <init>(org.bson.codecs.DecoderContext$Builder,byte) -> <init>
    30:30:void <clinit>() -> <clinit>
org.bson.codecs.DecoderContext$Builder -> org.a.a.W$a:
    53:54:void <init>() -> <init>
    81:81:org.bson.codecs.DecoderContext build() -> a
    52:52:void <init>(byte) -> <init>
org.bson.codecs.DocumentCodec -> org.a.a.X:
    org.bson.codecs.configuration.CodecRegistry DEFAULT_REGISTRY -> a
    org.bson.codecs.BsonTypeCodecMap DEFAULT_BSON_TYPE_CODEC_MAP -> b
    org.bson.codecs.IdGenerator DEFAULT_ID_GENERATOR -> c
    org.bson.codecs.BsonTypeCodecMap bsonTypeCodecMap -> d
    org.bson.codecs.configuration.CodecRegistry registry -> e
    org.bson.codecs.IdGenerator idGenerator -> f
    org.bson.Transformer valueTransformer -> g
    org.bson.UuidRepresentation uuidRepresentation -> h
    63:64:void <init>() -> <init>
    96:97:void <init>(org.bson.codecs.configuration.CodecRegistry,org.bson.codecs.BsonTypeClassMap,org.bson.Transformer) -> <init>
    100:101:void <init>(org.bson.codecs.configuration.CodecRegistry,org.bson.codecs.BsonTypeCodecMap,org.bson.Transformer) -> <init>
    104:110:void <init>(org.bson.codecs.configuration.CodecRegistry,org.bson.codecs.BsonTypeCodecMap,org.bson.codecs.IdGenerator,org.bson.Transformer,org.bson.UuidRepresentation) -> <init>
    114:117:org.bson.codecs.Codec withUuidRepresentation(org.bson.UuidRepresentation) -> a
    186:186:java.lang.Class getEncoderClass() -> a
    202:208:void writeValue(org.bson.BsonWriter,org.bson.codecs.EncoderContext,java.lang.Object) -> a
    44:44:java.lang.Object generateIdIfAbsentFromDocument(java.lang.Object) -> a
    1147:1150:org.bson.Document generateIdIfAbsentFromDocument(org.bson.Document):147:150 -> a
    1147:1150:java.lang.Object generateIdIfAbsentFromDocument(java.lang.Object):44 -> a
    2122:2122:boolean documentHasId(org.bson.Document):122:122 -> a
    2122:2122:org.bson.Document generateIdIfAbsentFromDocument(org.bson.Document):147 -> a
    2122:2122:java.lang.Object generateIdIfAbsentFromDocument(java.lang.Object):44 -> a
    44:44:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    2155:2167:void encode(org.bson.BsonWriter,org.bson.Document,org.bson.codecs.EncoderContext):155:167 -> a
    2155:2167:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):44 -> a
    2190:2194:void beforeFields(org.bson.BsonWriter,org.bson.codecs.EncoderContext,java.util.Map):190:194 -> a
    2190:2194:void encode(org.bson.BsonWriter,org.bson.Document,org.bson.codecs.EncoderContext):157 -> a
    2190:2194:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):44 -> a
    3079:3079:boolean org.bson.codecs.EncoderContext.isEncodingCollectibleDocument():79:79 -> a
    3079:3079:void beforeFields(org.bson.BsonWriter,org.bson.codecs.EncoderContext,java.util.Map):190 -> a
    3079:3079:void encode(org.bson.BsonWriter,org.bson.Document,org.bson.codecs.EncoderContext):157 -> a
    3079:3079:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):44 -> a
    3197:3197:boolean skipField(org.bson.codecs.EncoderContext,java.lang.String):197:197 -> a
    3197:3197:void encode(org.bson.BsonWriter,org.bson.Document,org.bson.codecs.EncoderContext):160 -> a
    3197:3197:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):44 -> a
    4079:4079:boolean org.bson.codecs.EncoderContext.isEncodingCollectibleDocument():79:79 -> a
    4079:4079:boolean skipField(org.bson.codecs.EncoderContext,java.lang.String):197 -> a
    4079:4079:void encode(org.bson.BsonWriter,org.bson.Document,org.bson.codecs.EncoderContext):160 -> a
    4079:4079:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):44 -> a
    44:44:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    4171:4181:org.bson.Document decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):171:181 -> a
    4171:4181:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):44 -> a
    108:108:java.lang.Object lambda$new$0(java.lang.Object) -> b
    47:51:void <clinit>() -> <clinit>
org.bson.codecs.DocumentCodecProvider -> org.a.a.Y:
    org.bson.codecs.BsonTypeClassMap bsonTypeClassMap -> a
    org.bson.Transformer valueTransformer -> b
    43:44:void <init>() -> <init>
    54:55:void <init>(org.bson.Transformer) -> <init>
    64:65:void <init>(org.bson.codecs.BsonTypeClassMap) -> <init>
    74:77:void <init>(org.bson.codecs.BsonTypeClassMap,org.bson.Transformer) -> <init>
    82:90:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    95:111:boolean equals(java.lang.Object) -> equals
    116:118:int hashCode() -> hashCode
    123:123:java.lang.String toString() -> toString
org.bson.codecs.DoubleCodec -> org.a.a.Z:
    29:29:void <init>() -> <init>
    42:42:java.lang.Class getEncoderClass() -> a
    29:29:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1032:1033:void encode$1865b0fd(org.bson.BsonWriter,java.lang.Double):32:33 -> a
    1032:1033:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):29 -> a
    29:29:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1037:1037:java.lang.Double decode$194194cb(org.bson.BsonReader):37:37 -> a
    1037:1037:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):29 -> a
org.bson.codecs.Encoder -> org.a.a.aa:
    void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    java.lang.Class getEncoderClass() -> a
org.bson.codecs.EncoderContext -> org.a.a.ab:
    org.bson.codecs.EncoderContext DEFAULT_CONTEXT -> b
    boolean encodingCollectibleDocument -> a
    39:39:org.bson.codecs.EncoderContext$Builder builder() -> a
    91:92:void encodeWithChildContext(org.bson.codecs.Encoder,org.bson.BsonWriter,java.lang.Object) -> a
    100:100:org.bson.codecs.EncoderContext getChildContext() -> b
    103:105:void <init>(org.bson.codecs.EncoderContext$Builder) -> <init>
    1045:1045:boolean org.bson.codecs.EncoderContext$Builder.access$200(org.bson.codecs.EncoderContext$Builder):45:45 -> <init>
    1045:1045:void <init>(org.bson.codecs.EncoderContext$Builder):104 -> <init>
    27:27:void <init>(org.bson.codecs.EncoderContext$Builder,byte) -> <init>
    29:29:void <clinit>() -> <clinit>
org.bson.codecs.EncoderContext$Builder -> org.a.a.ab$a:
    boolean encodingCollectibleDocument -> a
    48:49:void <init>() -> <init>
    67:67:org.bson.codecs.EncoderContext build() -> a
    45:45:void <init>(byte) -> <init>
org.bson.codecs.EnumCodec -> org.a.a.ac:
    java.lang.Class clazz -> a
    36:38:void <init>(java.lang.Class) -> <init>
    52:52:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1047:1048:void encode$7eefebcd(org.bson.BsonWriter,java.lang.Enum):47:48 -> a
    1047:1048:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2042:2042:java.lang.Enum decode$1002a6c5(org.bson.BsonReader):42:42 -> a
    2042:2042:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.EnumCodecProvider -> org.a.a.ad:
    27:27:void <init>() -> <init>
    31:34:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    39:39:java.lang.String toString() -> toString
org.bson.codecs.FloatCodec -> org.a.a.ae:
    31:31:void <init>() -> <init>
    49:49:java.lang.Class getEncoderClass() -> a
    31:31:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1035:1036:void encode$146dea7e(org.bson.BsonWriter,java.lang.Float):35:36 -> a
    1035:1036:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):31 -> a
    31:31:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1040:1044:java.lang.Float decode$e1804ac(org.bson.BsonReader):40:44 -> a
    1040:1044:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):31 -> a
org.bson.codecs.IdGenerator -> org.a.a.af:
    java.lang.Object generate() -> a
org.bson.codecs.IntegerCodec -> org.a.a.ag:
    29:29:void <init>() -> <init>
    43:43:java.lang.Class getEncoderClass() -> a
    29:29:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1033:1034:void encode$435622a0(org.bson.BsonWriter,java.lang.Integer):33:34 -> a
    1033:1034:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):29 -> a
    29:29:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1038:1038:java.lang.Integer decode$3dfe308e(org.bson.BsonReader):38:38 -> a
    1038:1038:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):29 -> a
org.bson.codecs.IterableCodec -> org.a.a.ah:
    org.bson.codecs.configuration.CodecRegistry registry -> a
    org.bson.codecs.BsonTypeCodecMap bsonTypeCodecMap -> b
    org.bson.Transformer valueTransformer -> c
    org.bson.UuidRepresentation uuidRepresentation -> d
    65:67:void <init>(org.bson.codecs.configuration.CodecRegistry,org.bson.codecs.BsonTypeClassMap,org.bson.Transformer) -> <init>
    70:75:void <init>(org.bson.codecs.configuration.CodecRegistry,org.bson.codecs.BsonTypeCodecMap,org.bson.Transformer,org.bson.UuidRepresentation) -> <init>
    80:80:org.bson.codecs.Codec withUuidRepresentation(org.bson.UuidRepresentation) -> a
    108:108:java.lang.Class getEncoderClass() -> a
    38:38:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1099:1104:void encode(org.bson.BsonWriter,java.lang.Iterable,org.bson.codecs.EncoderContext):99:104 -> a
    1099:1104:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):38 -> a
    1113:1119:void writeValue(org.bson.BsonWriter,org.bson.codecs.EncoderContext,java.lang.Object):113:119 -> a
    1113:1119:void encode(org.bson.BsonWriter,java.lang.Iterable,org.bson.codecs.EncoderContext):101 -> a
    1113:1119:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):38 -> a
    38:38:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2085:2094:java.lang.Iterable decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):85:94 -> a
    2085:2094:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):38 -> a
    73:73:java.lang.Object lambda$new$0(java.lang.Object) -> a
org.bson.codecs.IterableCodecProvider -> org.a.a.ai:
    org.bson.codecs.BsonTypeClassMap bsonTypeClassMap -> a
    org.bson.Transformer valueTransformer -> b
    41:42:void <init>() -> <init>
    51:52:void <init>(org.bson.Transformer) -> <init>
    61:62:void <init>(org.bson.codecs.BsonTypeClassMap) -> <init>
    71:74:void <init>(org.bson.codecs.BsonTypeClassMap,org.bson.Transformer) -> <init>
    79:83:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    88:104:boolean equals(java.lang.Object) -> equals
    109:111:int hashCode() -> hashCode
    116:116:java.lang.String toString() -> toString
org.bson.codecs.JsonObjectCodec -> org.a.a.aj:
    org.bson.json.JsonWriterSettings writerSettings -> a
    40:41:void <init>() -> <init>
    48:50:void <init>(org.bson.json.JsonWriterSettings) -> <init>
    66:66:java.lang.Class getEncoderClass() -> a
    33:33:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1054:1055:void encode$348ab188(org.bson.BsonWriter,org.bson.json.JsonObject):54:55 -> a
    1054:1055:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):33 -> a
    1067:1067:java.lang.String org.bson.json.JsonObject.getJson():67:67 -> a
    1067:1067:void encode$348ab188(org.bson.BsonWriter,org.bson.json.JsonObject):54 -> a
    1067:1067:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):33 -> a
    33:33:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2059:2061:org.bson.json.JsonObject decode$7de8ab80(org.bson.BsonReader):59:61 -> a
    2059:2061:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):33 -> a
org.bson.codecs.JsonObjectCodecProvider -> org.a.a.ak:
    28:28:void <init>() -> <init>
    33:36:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    41:41:java.lang.String toString() -> toString
org.bson.codecs.LongCodec -> org.a.a.al:
    30:30:void <init>() -> <init>
    44:44:java.lang.Class getEncoderClass() -> a
    30:30:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1034:1035:void encode$1c373072(org.bson.BsonWriter,java.lang.Long):34:35 -> a
    1034:1035:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):30 -> a
    30:30:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1039:1039:java.lang.Long decode$1065a4aa(org.bson.BsonReader):39:39 -> a
    1039:1039:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):30 -> a
org.bson.codecs.MapCodecProvider -> org.a.a.am:
    org.bson.codecs.BsonTypeClassMap bsonTypeClassMap -> a
    org.bson.Transformer valueTransformer -> b
    42:43:void <init>() -> <init>
    52:53:void <init>(org.bson.codecs.BsonTypeClassMap) -> <init>
    62:63:void <init>(org.bson.Transformer) -> <init>
    71:74:void <init>(org.bson.codecs.BsonTypeClassMap,org.bson.Transformer) -> <init>
    79:83:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    88:103:boolean equals(java.lang.Object) -> equals
    108:110:int hashCode() -> hashCode
    115:115:java.lang.String toString() -> toString
org.bson.codecs.MapCodecV2 -> org.a.a.an:
    org.bson.codecs.BsonTypeCodecMap bsonTypeCodecMap -> a
    org.bson.codecs.configuration.CodecRegistry registry -> b
    org.bson.Transformer valueTransformer -> c
    org.bson.UuidRepresentation uuidRepresentation -> d
    67:69:void <init>(org.bson.codecs.configuration.CodecRegistry,org.bson.codecs.BsonTypeClassMap,org.bson.Transformer,java.lang.Class) -> <init>
    73:78:void <init>(org.bson.codecs.configuration.CodecRegistry,org.bson.codecs.BsonTypeCodecMap,org.bson.Transformer,org.bson.UuidRepresentation,java.lang.Class) -> <init>
    82:85:org.bson.codecs.Codec withUuidRepresentation(org.bson.UuidRepresentation) -> a
    91:99:org.bson.codecs.Codec parameterize(org.bson.codecs.configuration.CodecRegistry,java.util.List) -> a
    104:104:java.lang.Object readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    110:112:void writeValue(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> b
    76:76:java.lang.Object lambda$new$0(java.lang.Object) -> a
org.bson.codecs.MaxKeyCodec -> org.a.a.ao:
    28:28:void <init>() -> <init>
    42:42:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1031:1032:void encode$572e41db(org.bson.BsonWriter):31:32 -> a
    1031:1032:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1036:1037:org.bson.types.MaxKey decode$30754af7(org.bson.BsonReader):36:37 -> a
    1036:1037:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.MinKeyCodec -> org.a.a.ap:
    28:28:void <init>() -> <init>
    42:42:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1031:1032:void encode$7848636d(org.bson.BsonWriter):31:32 -> a
    1031:1032:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1036:1037:org.bson.types.MinKey decode$3d8f24e5(org.bson.BsonReader):36:37 -> a
    1036:1037:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.NumberCodecHelper -> org.a.a.aq:
    boolean ordered -> a
    java.lang.Boolean bypassDocumentValidation -> b
    org.bson.BsonValue comment -> c
    org.bson.conversions.Bson variables -> d
    32:61:int decodeInt(org.bson.BsonReader) -> a
    66:91:long decodeLong(org.bson.BsonReader) -> b
    96:125:double decodeDouble(org.bson.BsonReader) -> c
    129:129:org.bson.BsonInvalidOperationException invalidConversion(java.lang.Class,java.lang.Number) -> a
    1029:1030:void com.mongodb.client.model.BulkWriteOptions.<init>():29:30 -> <init>
    1043:1043:boolean com.mongodb.client.model.BulkWriteOptions.isOrdered():43:43 -> a
    1068:1068:java.lang.Boolean com.mongodb.client.model.BulkWriteOptions.getBypassDocumentValidation():68:68 -> b
    1080:1081:com.mongodb.client.model.BulkWriteOptions com.mongodb.client.model.BulkWriteOptions.bypassDocumentValidation(java.lang.Boolean):80:81 -> a
    1093:1093:org.bson.BsonValue com.mongodb.client.model.BulkWriteOptions.getComment():93:93 -> c
    1118:1119:com.mongodb.client.model.BulkWriteOptions com.mongodb.client.model.BulkWriteOptions.comment(org.bson.BsonValue):118:119 -> a
    1131:1131:org.bson.conversions.Bson com.mongodb.client.model.BulkWriteOptions.getLet():131:131 -> d
    1146:1147:com.mongodb.client.model.BulkWriteOptions com.mongodb.client.model.BulkWriteOptions.let(org.bson.conversions.Bson):146:147 -> a
    1152:1152:java.lang.String com.mongodb.client.model.BulkWriteOptions.toString():152:152 -> toString
org.bson.codecs.NumberCodecHelper$1 -> org.a.a.aq$1:
    int[] $SwitchMap$org$bson$BsonType -> a
    33:33:void <clinit>() -> <clinit>
org.bson.codecs.ObjectIdCodec -> org.a.a.ar:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1031:1032:void encode$128b50e6(org.bson.BsonWriter,org.bson.types.ObjectId):31:32 -> a
    1031:1032:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1036:1036:org.bson.types.ObjectId decode$3f9efd48(org.bson.BsonReader):36:36 -> a
    1036:1036:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.ObjectIdGenerator -> org.a.a.as:
    26:26:void <init>() -> <init>
    29:29:java.lang.Object generate() -> a
org.bson.codecs.OverridableUuidRepresentationCodec -> org.a.a.at:
    org.bson.codecs.Codec withUuidRepresentation(org.bson.UuidRepresentation) -> a
org.bson.codecs.OverridableUuidRepresentationUuidCodec -> org.a.a.au:
    34:35:void <init>() -> <init>
    43:44:void <init>(org.bson.UuidRepresentation) -> <init>
    48:51:org.bson.codecs.Codec withUuidRepresentation(org.bson.UuidRepresentation) -> a
org.bson.codecs.Parameterizable -> org.a.a.av:
    org.bson.codecs.Codec parameterize(org.bson.codecs.configuration.CodecRegistry,java.util.List) -> a
org.bson.codecs.ParameterizedCollectionCodec -> org.a.a.aw:
    org.bson.codecs.Codec codec -> a
    28:30:void <init>(org.bson.codecs.Codec,java.lang.Class) -> <init>
    34:34:java.lang.Object readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    39:40:void writeValue(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> b
org.bson.codecs.ParameterizedMapCodec -> org.a.a.ax:
    org.bson.codecs.Codec codec -> a
    33:35:void <init>(org.bson.codecs.Codec,java.lang.Class) -> <init>
    39:39:java.lang.Object readValue(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    44:45:void writeValue(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> b
org.bson.codecs.PatternCodec -> org.a.a.ay:
    32:32:void <init>() -> <init>
    46:46:java.lang.Class getEncoderClass() -> a
    50:64:java.lang.String getOptionsAsString(java.util.regex.Pattern) -> a
    32:32:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1035:1036:void encode$6bbc3b02(org.bson.BsonWriter,java.util.regex.Pattern):35:36 -> a
    1035:1036:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):32 -> a
    32:32:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1040:1041:java.util.regex.Pattern decode$f2933d4(org.bson.BsonReader):40:41 -> a
    1040:1041:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):32 -> a
    1064:1064:java.lang.String org.bson.BsonRegularExpression.getPattern():64:64 -> a
    1064:1064:java.util.regex.Pattern decode$f2933d4(org.bson.BsonReader):41 -> a
    1064:1064:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):32 -> a
    1068:1091:int getOptionsAsInt(org.bson.BsonRegularExpression):68:91 -> a
    1068:1091:java.util.regex.Pattern decode$f2933d4(org.bson.BsonReader):41 -> a
    1068:1091:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):32 -> a
    2073:2073:java.lang.String org.bson.BsonRegularExpression.getOptions():73:73 -> a
    2073:2073:int getOptionsAsInt(org.bson.BsonRegularExpression):70 -> a
    2073:2073:java.util.regex.Pattern decode$f2933d4(org.bson.BsonReader):41 -> a
    2073:2073:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):32 -> a
org.bson.codecs.PatternCodec$RegexFlag -> org.a.a.ay$a:
    org.bson.codecs.PatternCodec$RegexFlag CANON_EQ -> a
    org.bson.codecs.PatternCodec$RegexFlag UNIX_LINES -> b
    org.bson.codecs.PatternCodec$RegexFlag GLOBAL -> c
    org.bson.codecs.PatternCodec$RegexFlag CASE_INSENSITIVE -> d
    org.bson.codecs.PatternCodec$RegexFlag MULTILINE -> e
    org.bson.codecs.PatternCodec$RegexFlag DOTALL -> f
    org.bson.codecs.PatternCodec$RegexFlag LITERAL -> g
    org.bson.codecs.PatternCodec$RegexFlag UNICODE_CASE -> h
    org.bson.codecs.PatternCodec$RegexFlag COMMENTS -> i
    java.util.Map BY_CHARACTER -> j
    int javaFlag -> k
    char flagChar -> l
    java.lang.String unsupported -> m
    org.bson.codecs.PatternCodec$RegexFlag[] $VALUES -> n
    97:97:org.bson.codecs.PatternCodec$RegexFlag[] values() -> values
    97:97:org.bson.codecs.PatternCodec$RegexFlag valueOf(java.lang.String) -> valueOf
    121:121:org.bson.codecs.PatternCodec$RegexFlag getByCharacter(char) -> a
    124:128:void <init>(java.lang.String,int,int,char,java.lang.String) -> <init>
    97:97:int access$000(org.bson.codecs.PatternCodec$RegexFlag) -> a
    97:97:char access$100(org.bson.codecs.PatternCodec$RegexFlag) -> b
    97:97:java.lang.String access$200(org.bson.codecs.PatternCodec$RegexFlag) -> c
    97:118:void <clinit>() -> <clinit>
    1097:1097:org.bson.codecs.PatternCodec$RegexFlag[] $values():97:97 -> <clinit>
    1097:1097:void <clinit>():97 -> <clinit>
org.bson.codecs.RawBsonDocumentCodec -> org.a.a.az:
    38:39:void <init>() -> <init>
    43:46:void encode$2d094603(org.bson.BsonWriter,org.bson.RawBsonDocument) -> a
    50:58:org.bson.RawBsonDocument decode$5b043145(org.bson.BsonReader) -> a
    1061:1061:byte[] org.bson.io.BasicOutputBuffer.getInternalBuffer():61:61 -> a
    1061:1061:org.bson.RawBsonDocument decode$5b043145(org.bson.BsonReader):54 -> a
    63:63:java.lang.Class getEncoderClass() -> a
    33:33:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    33:33:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
org.bson.codecs.RepresentationConfigurable -> org.a.a.aA:
    org.bson.codecs.Codec withRepresentation(org.bson.BsonType) -> a
org.bson.codecs.ShortCodec -> org.a.a.aB:
    31:31:void <init>() -> <init>
    49:49:java.lang.Class getEncoderClass() -> a
    31:31:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1035:1036:void encode$7dc7809e(org.bson.BsonWriter,java.lang.Short):35:36 -> a
    1035:1036:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):31 -> a
    31:31:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1040:1044:java.lang.Short decode$7dedd34(org.bson.BsonReader):40:44 -> a
    1040:1044:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):31 -> a
org.bson.codecs.StringCodec -> org.a.a.aC:
    org.bson.BsonType representation -> a
    37:39:void <init>() -> <init>
    41:43:void <init>(org.bson.BsonType) -> <init>
    52:55:org.bson.codecs.Codec withRepresentation(org.bson.BsonType) -> a
    91:91:java.lang.Class getEncoderClass() -> a
    31:31:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1061:1071:void encode$676b64bd(org.bson.BsonWriter,java.lang.String):61:71 -> a
    1061:1071:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):31 -> a
    31:31:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1075:1085:java.lang.String decode$89d0ef5(org.bson.BsonReader):75:85 -> a
    1075:1085:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):31 -> a
org.bson.codecs.StringCodec$1 -> org.a.a.aC$1:
    int[] $SwitchMap$org$bson$BsonType -> a
    61:61:void <clinit>() -> <clinit>
org.bson.codecs.SymbolCodec -> org.a.a.aD:
    28:28:void <init>() -> <init>
    41:41:java.lang.Class getEncoderClass() -> a
    28:28:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1036:1037:void encode$181b2dc8(org.bson.BsonWriter,org.bson.types.Symbol):36:37 -> a
    1036:1037:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    1050:1050:java.lang.String org.bson.types.Symbol.getSymbol():50:50 -> a
    1050:1050:void encode$181b2dc8(org.bson.BsonWriter,org.bson.types.Symbol):36 -> a
    1050:1050:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):28 -> a
    28:28:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2031:2031:org.bson.types.Symbol decode$69c16ca6(org.bson.BsonReader):31:31 -> a
    2031:2031:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):28 -> a
org.bson.codecs.UuidCodec -> org.a.a.aE:
    org.bson.UuidRepresentation uuidRepresentation -> a
    47:50:void <init>(org.bson.UuidRepresentation) -> <init>
    55:57:void <init>() -> <init>
    66:66:org.bson.UuidRepresentation getUuidRepresentation() -> b
    71:81:void encode$7476d07(org.bson.BsonWriter,java.util.UUID) -> a
    98:98:java.lang.Class getEncoderClass() -> a
    103:103:java.lang.String toString() -> toString
    37:37:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    37:37:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    1085:1093:java.util.UUID decode$56656981(org.bson.BsonReader):85:93 -> a
    1085:1093:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):37 -> a
    1097:1097:byte org.bson.BsonBinarySubType.getValue():97:97 -> a
    1097:1097:java.util.UUID decode$56656981(org.bson.BsonReader):87 -> a
    1097:1097:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):37 -> a
    2097:2097:byte org.bson.BsonBinarySubType.getValue():97:97 -> a
    2097:2097:java.util.UUID decode$56656981(org.bson.BsonReader):87 -> a
    2097:2097:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):37 -> a
    2174:2174:byte[] org.bson.BsonBinary.getData():174:174 -> a
    2174:2174:java.util.UUID decode$56656981(org.bson.BsonReader):91 -> a
    2174:2174:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):37 -> a
    3093:3124:java.util.UUID org.bson.internal.UuidHelper.decodeBinaryToUuid(byte[],byte,org.bson.UuidRepresentation):93:124 -> a
    3093:3124:java.util.UUID decode$56656981(org.bson.BsonReader):93 -> a
    3093:3124:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):37 -> a
    4097:4097:byte org.bson.BsonBinarySubType.getValue():97:97 -> a
    4097:4097:java.util.UUID org.bson.internal.UuidHelper.decodeBinaryToUuid(byte[],byte,org.bson.UuidRepresentation):99 -> a
    4097:4097:java.util.UUID decode$56656981(org.bson.BsonReader):93 -> a
    4097:4097:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):37 -> a
org.bson.codecs.ValueCodecProvider -> org.a.a.aF:
    java.util.Map codecs -> a
    57:64:void <init>() -> <init>
    1073:1098:void addCodecs():73:98 -> <init>
    1073:1098:void <init>():63 -> <init>
    69:69:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    101:102:void addCodec(org.bson.codecs.Codec) -> a
    106:113:boolean equals(java.lang.Object) -> equals
    118:118:int hashCode() -> hashCode
    123:123:java.lang.String toString() -> toString
org.bson.codecs.configuration.CodecConfigurationException -> org.a.a.a.a:
    35:36:void <init>(java.lang.String) -> <init>
    46:47:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.bson.codecs.configuration.CodecProvider -> org.a.a.a.b:
    org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
org.bson.codecs.configuration.CodecRegistry -> org.a.a.a.c:
    org.bson.codecs.Codec get(java.lang.Class) -> a
    71:71:org.bson.codecs.Codec get(java.lang.Class,java.util.List) -> a
    1103:1103:java.lang.AssertionError org.bson.assertions.Assertions.fail(java.lang.String):103:103 -> a
    1103:1103:org.bson.codecs.Codec get(java.lang.Class,java.util.List):71 -> a
org.bson.codecs.configuration.OverridableUuidRepresentationCodecProvider -> org.a.a.a.d:
    org.bson.codecs.configuration.CodecProvider wrapped -> a
    org.bson.UuidRepresentation uuidRepresentation -> b
    30:33:void <init>(org.bson.codecs.configuration.CodecProvider,org.bson.UuidRepresentation) -> <init>
    38:42:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    47:59:boolean equals(java.lang.Object) -> equals
    64:66:int hashCode() -> hashCode
    71:71:java.lang.String toString() -> toString
org.bson.codecs.jsr310.DateTimeBasedCodec -> org.a.a.b.a:
    26:26:void <init>() -> <init>
    29:34:long validateAndReadDateTime(org.bson.BsonReader) -> a
org.bson.codecs.jsr310.InstantCodec -> org.a.a.b.b:
    41:41:void <init>() -> <init>
    64:64:java.lang.Class getEncoderClass() -> a
    41:41:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1055:1060:void encode$2adc5862(org.bson.BsonWriter,java.time.Instant):55:60 -> a
    1055:1060:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):41 -> a
    41:41:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2045:2045:java.time.Instant decode$ab476d0(org.bson.BsonReader):45:45 -> a
    2045:2045:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):41 -> a
org.bson.codecs.jsr310.Jsr310CodecProvider -> org.a.a.b.c:
    java.util.Map JSR310_CODEC_MAP -> a
    41:41:void <init>() -> <init>
    51:52:void putCodec(org.bson.codecs.Codec) -> a
    57:57:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    62:62:java.lang.String toString() -> toString
    42:48:void <clinit>() -> <clinit>
org.bson.codecs.jsr310.LocalDateCodec -> org.a.a.b.d:
    42:42:void <init>() -> <init>
    66:66:java.lang.Class getEncoderClass() -> a
    42:42:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1057:1062:void encode$7b49617a(org.bson.BsonWriter,java.time.LocalDate):57:62 -> a
    1057:1062:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):42 -> a
    42:42:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2046:2046:java.time.LocalDate decode$190cc128(org.bson.BsonReader):46:46 -> a
    2046:2046:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):42 -> a
org.bson.codecs.jsr310.LocalDateTimeCodec -> org.a.a.b.e:
    41:41:void <init>() -> <init>
    65:65:java.lang.Class getEncoderClass() -> a
    41:41:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1056:1061:void encode$75db3879(org.bson.BsonWriter,java.time.LocalDateTime):56:61 -> a
    1056:1061:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):41 -> a
    41:41:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2045:2045:java.time.LocalDateTime decode$536640f5(org.bson.BsonReader):45:45 -> a
    2045:2045:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):41 -> a
org.bson.codecs.jsr310.LocalTimeCodec -> org.a.a.b.f:
    39:39:void <init>() -> <init>
    58:58:java.lang.Class getEncoderClass() -> a
    39:39:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1053:1054:void encode$6a3bd0f9(org.bson.BsonWriter,java.time.LocalTime):53:54 -> a
    1053:1054:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):39 -> a
    39:39:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    2043:2043:java.time.LocalTime decode$1827c067(org.bson.BsonReader):43:43 -> a
    2043:2043:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext):39 -> a
org.bson.codecs.pojo.annotations.BsonCreator -> org.a.a.c.a.a:
org.bson.codecs.pojo.annotations.BsonDiscriminator -> org.a.a.c.a.b:
org.bson.codecs.pojo.annotations.BsonExtraElements -> org.a.a.c.a.c:
org.bson.codecs.pojo.annotations.BsonId -> org.a.a.c.a.d:
org.bson.codecs.pojo.annotations.BsonIgnore -> org.a.a.c.a.e:
org.bson.codecs.pojo.annotations.BsonProperty -> org.a.a.c.a.f:
    java.lang.String value() -> a
org.bson.codecs.pojo.annotations.BsonRepresentation -> org.a.a.c.a.g:
    org.bson.BsonType value() -> a
org.bson.codecs.record.RecordCodec -> org.a.a.d.a:
    com.mongodb.internal.connection.ScramShaAuthenticator$RandomStringGenerator LOGGER$6d351fa0 -> a
    java.lang.Class clazz -> b
    boolean requiresParameterization -> c
    java.lang.reflect.Constructor canonicalConstructor -> d
    java.util.List componentModels -> e
    org.bson.codecs.record.RecordCodec$ComponentModel componentModelForId -> f
    java.util.Map fieldNameToComponentModel -> g
    254:270:void <init>(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> <init>
    272:283:void <init>(java.lang.Class,org.bson.codecs.configuration.CodecRegistry,java.util.List) -> <init>
    287:287:org.bson.codecs.Codec parameterize(org.bson.codecs.configuration.CodecRegistry,java.util.List) -> a
    293:317:java.lang.Record decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> b
    343:343:java.lang.Class getEncoderClass() -> a
    349:358:void writeComponent(org.bson.BsonWriter,java.lang.Record,org.bson.codecs.record.RecordCodec$ComponentModel) -> a
    1078:1078:java.lang.String org.bson.codecs.record.RecordCodec$ComponentModel.getComponentName():78:78 -> a
    1078:1078:void writeComponent(org.bson.BsonWriter,java.lang.Record,org.bson.codecs.record.RecordCodec$ComponentModel):356 -> a
    362:367:java.util.List getComponentModels(java.lang.Class,org.bson.codecs.configuration.CodecRegistry,java.util.List) -> a
    372:377:org.bson.codecs.record.RecordCodec$ComponentModel getComponentModelForId(java.lang.Class,java.util.List) -> a
    383:387:java.lang.reflect.Constructor getCanonicalConstructor(java.lang.Class) -> a
    392:409:java.lang.Class toWrapper(java.lang.Class) -> b
    53:53:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    1323:1339:void encode$32ccf07d(org.bson.BsonWriter,java.lang.Record):323:339 -> a
    1323:1339:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext):53 -> a
    53:53:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    385:385:java.lang.Class[] lambda$getCanonicalConstructor$1(int) -> a
    373:373:boolean lambda$getComponentModelForId$0(org.bson.codecs.record.RecordCodec$ComponentModel) -> a
    54:54:void <clinit>() -> <clinit>
org.bson.codecs.record.RecordCodec$ComponentModel -> org.a.a.d.a$a:
    java.lang.reflect.RecordComponent component -> a
    org.bson.codecs.Codec codec -> b
    int index -> c
    java.lang.String fieldName -> d
    69:75:void <init>(java.util.List,java.lang.reflect.RecordComponent,org.bson.codecs.configuration.CodecRegistry,int) -> <init>
    1184:1192:void validateAnnotations(java.lang.reflect.RecordComponent,int):184:192 -> <init>
    1184:1192:void <init>(java.util.List,java.lang.reflect.RecordComponent,org.bson.codecs.configuration.CodecRegistry,int):70 -> <init>
    1196:1200:void validateAnnotationNotPresentOnType(java.lang.Class,java.lang.Class):196:200 -> <init>
    1196:1200:void validateAnnotations(java.lang.reflect.RecordComponent,int):184 -> <init>
    1196:1200:void <init>(java.util.List,java.lang.reflect.RecordComponent,org.bson.codecs.configuration.CodecRegistry,int):70 -> <init>
    2092:2114:org.bson.codecs.Codec computeCodec(java.util.List,java.lang.reflect.RecordComponent,org.bson.codecs.configuration.CodecRegistry):92:114 -> <init>
    2092:2114:void <init>(java.util.List,java.lang.reflect.RecordComponent,org.bson.codecs.configuration.CodecRegistry,int):72 -> <init>
    2118:2119:java.lang.Class resolveComponentType(java.util.List,java.lang.reflect.RecordComponent):118:119 -> <init>
    2118:2119:org.bson.codecs.Codec computeCodec(java.util.List,java.lang.reflect.RecordComponent,org.bson.codecs.configuration.CodecRegistry):92 -> <init>
    2118:2119:void <init>(java.util.List,java.lang.reflect.RecordComponent,org.bson.codecs.configuration.CodecRegistry,int):72 -> <init>
    2124:2126:java.util.List resolveActualTypeArguments(java.util.List,java.lang.Class,java.lang.reflect.ParameterizedType):124:126 -> <init>
    2124:2126:org.bson.codecs.Codec computeCodec(java.util.List,java.lang.reflect.RecordComponent,org.bson.codecs.configuration.CodecRegistry):95 -> <init>
    2124:2126:void <init>(java.util.List,java.lang.reflect.RecordComponent,org.bson.codecs.configuration.CodecRegistry,int):72 -> <init>
    2149:2158:java.lang.String computeFieldName(java.lang.reflect.RecordComponent):149:158 -> <init>
    2149:2158:void <init>(java.util.List,java.lang.reflect.RecordComponent,org.bson.codecs.configuration.CodecRegistry,int):74 -> <init>
    82:82:java.lang.String getFieldName() -> a
    86:86:java.lang.Object getValue(java.lang.Record) -> a
    130:132:java.lang.reflect.Type resolveType(java.lang.reflect.Type,java.util.List,java.lang.Class) -> a
    137:144:int getIndexOfTypeParameter(java.lang.String,java.lang.Class) -> a
    164:166:boolean isAnnotationPresentOnField(java.lang.reflect.RecordComponent,java.lang.Class) -> a
    172:172:boolean isAnnotationPresentOnCanonicalConstructorParameter(java.lang.reflect.RecordComponent,int,java.lang.Class) -> a
    177:179:java.lang.annotation.Annotation getAnnotationOnField(java.lang.reflect.RecordComponent,java.lang.Class) -> b
    204:211:void validateAnnotationNotPresentOnConstructor(java.lang.Class,java.lang.Class) -> a
    215:222:void validateAnnotationNotPresentOnMethod(java.lang.Class,java.lang.Class) -> b
    226:236:void validateAnnotationNotPresentOnFieldOrAccessor(java.lang.reflect.RecordComponent,java.lang.Class) -> c
    240:251:void validateAnnotationOnlyOnField(java.lang.reflect.RecordComponent,int,java.lang.Class) -> b
    125:125:java.lang.reflect.Type lambda$resolveActualTypeArguments$0(java.util.List,java.lang.Class,java.lang.reflect.Type) -> a
org.bson.codecs.record.RecordCodecProvider -> org.a.a.d.b:
    29:29:void <init>() -> <init>
    33:37:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
org.bson.codecs.record.annotations.BsonId -> org.a.a.d.a.a:
org.bson.codecs.record.annotations.BsonProperty -> org.a.a.d.a.b:
    java.lang.String value() -> a
org.bson.codecs.record.annotations.BsonRepresentation -> org.a.a.d.a.c:
    org.bson.BsonType value() -> a
org.bson.conversions.Bson -> org.a.b.a:
    org.bson.BsonDocument toBsonDocument$283f4ed1(org.bson.codecs.configuration.CodecRegistry) -> a
    61:62:void <clinit>() -> <clinit>
org.bson.diagnostics.Loggers -> org.a.c.a:
    boolean USE_SLF4J -> a
    42:52:com.mongodb.internal.connection.ScramShaAuthenticator$RandomStringGenerator getLogger$fbcd637(java.lang.String) -> a
    58:63:boolean shouldUseSLF4J() -> a
    32:32:void <clinit>() -> <clinit>
org.bson.diagnostics.NoOpLogger -> org.a.c.b:
    25:27:void <init>(java.lang.String) -> <init>
org.bson.diagnostics.SLF4JLogger -> org.a.c.c:
    org.slf4j.Logger delegate -> a
    25:27:void <init>(java.lang.String) -> <init>
    36:36:boolean isTraceEnabled() -> a
    41:42:void trace(java.lang.String) -> a
org.bson.internal.ChildCodecRegistry -> org.a.d.a:
    org.bson.internal.ChildCodecRegistry parent -> c
    org.bson.internal.CycleDetectingCodecRegistry registry -> d
    java.lang.Class codecClass -> a
    java.util.List types -> b
    40:45:void <init>(org.bson.internal.CycleDetectingCodecRegistry,java.lang.Class,java.util.List) -> <init>
    47:52:void <init>(org.bson.internal.ChildCodecRegistry,java.lang.Class,java.util.List) -> <init>
    64:67:org.bson.codecs.Codec get(java.lang.Class) -> a
    73:81:org.bson.codecs.Codec get(java.lang.Class,java.util.List) -> a
    87:87:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    91:100:java.lang.Boolean hasCycles(java.lang.Class) -> b
    105:124:boolean equals(java.lang.Object) -> equals
    129:132:int hashCode() -> hashCode
org.bson.internal.CodecCache -> org.a.d.b:
    java.util.concurrent.ConcurrentMap codecCache -> a
    30:67:void <init>() -> <init>
    78:79:java.util.Optional get(org.bson.internal.CodecCache$CodecCacheKey) -> a
org.bson.internal.CodecCache$CodecCacheKey -> org.a.d.b$a:
    java.lang.Class clazz -> a
    java.util.List types -> b
    36:39:void <init>(java.lang.Class,java.util.List) -> <init>
    43:50:boolean equals(java.lang.Object) -> equals
    55:55:int hashCode() -> hashCode
    60:60:java.lang.String toString() -> toString
org.bson.internal.CycleDetectingCodecRegistry -> org.a.d.c:
    org.bson.codecs.Codec get(org.bson.internal.ChildCodecRegistry) -> a
org.bson.internal.LazyCodec -> org.a.d.d:
    org.bson.codecs.configuration.CodecRegistry registry -> a
    java.lang.Class clazz -> b
    java.util.List types -> c
    org.bson.codecs.Codec wrapped -> d
    35:39:void <init>(org.bson.codecs.configuration.CodecRegistry,java.lang.Class,java.util.List) -> <init>
    43:44:void encode(org.bson.BsonWriter,java.lang.Object,org.bson.codecs.EncoderContext) -> a
    48:48:java.lang.Class getEncoderClass() -> a
    53:53:java.lang.Object decode(org.bson.BsonReader,org.bson.codecs.DecoderContext) -> a
    57:65:org.bson.codecs.Codec getWrapped() -> b
org.bson.internal.ProvidersCodecRegistry -> org.a.d.e:
    java.util.List codecProviders -> a
    org.bson.internal.CodecCache codecCache -> b
    39:44:void <init>(java.util.List) -> <init>
    48:48:org.bson.codecs.Codec get(java.lang.Class) -> a
    53:58:org.bson.codecs.Codec get(java.lang.Class,java.util.List) -> a
    62:68:org.bson.codecs.Codec get(java.lang.Class,org.bson.codecs.configuration.CodecRegistry) -> a
    73:74:org.bson.codecs.Codec get(org.bson.internal.ChildCodecRegistry) -> a
    1055:1055:java.lang.Class org.bson.internal.ChildCodecRegistry.getCodecClass():55:55 -> a
    1055:1055:org.bson.codecs.Codec get(org.bson.internal.ChildCodecRegistry):73 -> a
    1059:1059:java.util.Optional org.bson.internal.ChildCodecRegistry.getTypes():59:59 -> a
    1059:1059:org.bson.codecs.Codec get(org.bson.internal.ChildCodecRegistry):73 -> a
    90:106:boolean equals(java.lang.Object) -> equals
    111:111:int hashCode() -> hashCode
    116:116:java.lang.String toString() -> toString
    75:84:org.bson.codecs.Codec lambda$get$0(org.bson.internal.ChildCodecRegistry,org.bson.internal.CodecCache$CodecCacheKey) -> a
    2055:2055:java.lang.Class org.bson.internal.ChildCodecRegistry.getCodecClass():55:55 -> a
    2055:2055:org.bson.codecs.Codec lambda$get$0(org.bson.internal.ChildCodecRegistry,org.bson.internal.CodecCache$CodecCacheKey):76 -> a
    2059:2059:java.util.Optional org.bson.internal.ChildCodecRegistry.getTypes():59:59 -> a
    2059:2059:org.bson.codecs.Codec lambda$get$0(org.bson.internal.ChildCodecRegistry,org.bson.internal.CodecCache$CodecCacheKey):78 -> a
    3059:3059:java.util.Optional org.bson.internal.ChildCodecRegistry.getTypes():59:59 -> a
    3059:3059:org.bson.codecs.Codec lambda$get$0(org.bson.internal.ChildCodecRegistry,org.bson.internal.CodecCache$CodecCacheKey):79 -> a
    3070:3073:org.bson.codecs.Codec org.bson.internal.CodecCache.putIfAbsent(org.bson.internal.CodecCache$CodecCacheKey,org.bson.codecs.Codec):70:73 -> a
    3070:3073:org.bson.codecs.Codec lambda$get$0(org.bson.internal.ChildCodecRegistry,org.bson.internal.CodecCache$CodecCacheKey):81 -> a
org.bson.internal.UuidHelper -> org.a.d.f:
    34:42:void writeLongToArrayBigEndian(byte[],int,long) -> a
    45:54:long readLongFromArrayBigEndian(byte[],int) -> a
    59:65:void reverseByteArray(byte[],int,int) -> a
    68:88:byte[] encodeUuidToBinary(java.util.UUID,org.bson.UuidRepresentation) -> a
    1049:1049:java.lang.String com.mongodb.client.model.ChangeStreamPreAndPostImagesOptions.toString():49:49 -> toString
org.bson.internal.UuidHelper$1 -> org.a.d.f$1:
    int[] $SwitchMap$org$bson$UuidRepresentation -> a
    71:71:void <clinit>() -> <clinit>
org.bson.io.BasicOutputBuffer -> org.a.e.a:
    byte[] buffer -> a
    int position -> b
    42:43:void <init>() -> <init>
    50:52:void <init>(int) -> <init>
    66:68:void write(byte[]) -> write
    72:77:void writeBytes(byte[],int,int) -> a
    81:85:void writeByte(int) -> a
    89:99:void write(int,int) -> a
    103:104:int getPosition() -> a
    112:113:int getSize() -> b
    118:120:int pipe(java.io.OutputStream) -> a
    125:130:void truncateToPosition(int) -> b
    140:141:void close() -> close
    144:147:void ensureOpen() -> c
    150:163:void ensure(int) -> d
org.bson.io.BsonInput -> org.a.e.b:
    int getPosition() -> a
    byte readByte() -> b
    void readBytes(byte[]) -> a
    long readInt64() -> c
    double readDouble() -> d
    int readInt32() -> e
    java.lang.String readString() -> f
    org.bson.types.ObjectId readObjectId() -> g
    java.lang.String readCString() -> h
    void skipCString() -> i
    void skip(int) -> a
    org.bson.BsonReaderMark getMark$fd529ed$5e721b8c() -> j
    void close() -> close
org.bson.io.BsonOutput -> org.a.e.c:
    int getPosition() -> a
    int getSize() -> b
    void truncateToPosition(int) -> b
    void writeBytes(byte[]) -> a
    void writeBytes(byte[],int,int) -> a
    void writeByte(int) -> a
    void writeCString(java.lang.String) -> a
    void writeString(java.lang.String) -> b
    void writeDouble(double) -> a
    void writeInt32(int) -> c
    void writeInt32(int,int) -> b
    void writeInt64(long) -> a
org.bson.io.ByteBufferBsonInput -> org.a.e.d:
    java.lang.String[] ONE_BYTE_ASCII_STRINGS -> a
    org.bson.ByteBuf buffer -> b
    51:57:void <init>(org.bson.ByteBuf) -> <init>
    61:62:int getPosition() -> a
    68:70:byte readByte() -> b
    75:78:void readBytes(byte[]) -> a
    89:91:long readInt64() -> c
    96:98:double readDouble() -> d
    103:105:int readInt32() -> e
    110:113:org.bson.types.ObjectId readObjectId() -> g
    118:125:java.lang.String readString() -> f
    130:134:java.lang.String readCString() -> h
    138:155:java.lang.String readString(int) -> b
    161:169:void skipCString() -> i
    173:175:void skip(int) -> a
    179:179:org.bson.BsonReaderMark getMark$fd529ed$5e721b8c() -> j
    197:199:void close() -> close
    202:205:void ensureOpen() -> k
    207:211:void ensureAvailable(int) -> c
    33:33:org.bson.ByteBuf access$000(org.bson.io.ByteBufferBsonInput) -> a
    33:33:void access$100(org.bson.io.ByteBufferBsonInput) -> b
    35:41:void <clinit>() -> <clinit>
org.bson.io.ByteBufferBsonInput$1 -> org.a.e.d$1:
    int mark -> a
    org.bson.io.ByteBufferBsonInput this$0 -> b
    179:180:void <init>(org.bson.io.ByteBufferBsonInput) -> <init>
    183:185:void reset() -> c
org.bson.io.OutputBuffer -> org.a.e.e:
    33:33:void <init>() -> <init>
    37:38:void write(byte[]) -> write
    42:42:void close() -> close
    46:47:void write(byte[],int,int) -> write
    51:52:void writeBytes(byte[]) -> a
    56:60:void writeInt32(int) -> c
    64:68:void writeInt32(int,int) -> b
    72:80:void writeInt64(long) -> a
    84:85:void writeDouble(double) -> a
    1183:1184:void writeLong(long):183:184 -> a
    1183:1184:void writeDouble(double):84 -> a
    89:92:void writeString(java.lang.String) -> b
    2160:2161:void writeInt(int):160:161 -> b
    2160:2161:void writeString(java.lang.String):89 -> b
    96:97:void writeCString(java.lang.String) -> a
    int pipe(java.io.OutputStream) -> a
    140:144:byte[] toByteArray() -> d
    3109:3109:int size():109:109 -> d
    3109:3109:byte[] toByteArray():140 -> d
    150:151:void write(int) -> write
    165:165:java.lang.String toString() -> toString
    4109:4109:int size():109:109 -> toString
    4109:4109:java.lang.String toString():165 -> toString
    void write(int,int) -> a
    187:222:int writeCharacters(java.lang.String,boolean) -> a
org.bson.json.Converter -> org.a.f.a:
    void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
org.bson.json.DateTimeFormatter -> org.a.f.b:
    int DATE_STRING_LENGTH -> a
    33:36:long parse(java.lang.String) -> a
    41:41:java.lang.String format(long) -> a
    36:36:java.time.Instant lambda$parse$0(java.time.temporal.TemporalAccessor) -> a
    29:29:void <clinit>() -> <clinit>
org.bson.json.ExtendedJsonBinaryConverter -> org.a.f.c:
    23:23:void <init>() -> <init>
    23:23:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1027:1033:void convert(org.bson.BsonBinary,org.bson.json.StrictJsonWriter):27:33 -> a
    1027:1033:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):23 -> a
    1174:1174:byte[] org.bson.BsonBinary.getData():174:174 -> a
    1174:1174:void convert(org.bson.BsonBinary,org.bson.json.StrictJsonWriter):29 -> a
    1174:1174:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):23 -> a
    2162:2162:byte org.bson.BsonBinary.getType():162:162 -> a
    2162:2162:void convert(org.bson.BsonBinary,org.bson.json.StrictJsonWriter):30 -> a
    2162:2162:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):23 -> a
org.bson.json.ExtendedJsonDateTimeConverter -> org.a.f.d:
    19:19:void <init>() -> <init>
    19:19:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1022:1027:void convert(java.lang.Long,org.bson.json.StrictJsonWriter):22:27 -> a
    1022:1027:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):19 -> a
org.bson.json.ExtendedJsonDecimal128Converter -> org.a.f.e:
    21:21:void <init>() -> <init>
    21:21:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1024:1028:void convert(org.bson.types.Decimal128,org.bson.json.StrictJsonWriter):24:28 -> a
    1024:1028:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
org.bson.json.ExtendedJsonDoubleConverter -> org.a.f.f:
    19:19:void <init>() -> <init>
    19:19:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1022:1027:void convert(java.lang.Double,org.bson.json.StrictJsonWriter):22:27 -> a
    1022:1027:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):19 -> a
org.bson.json.ExtendedJsonInt32Converter -> org.a.f.g:
    19:19:void <init>() -> <init>
    19:19:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1022:1026:void convert(java.lang.Integer,org.bson.json.StrictJsonWriter):22:26 -> a
    1022:1026:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):19 -> a
org.bson.json.ExtendedJsonInt64Converter -> org.a.f.h:
    19:19:void <init>() -> <init>
    19:19:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1022:1026:void convert(java.lang.Long,org.bson.json.StrictJsonWriter):22:26 -> a
    1022:1026:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):19 -> a
org.bson.json.ExtendedJsonMaxKeyConverter -> org.a.f.i:
    21:21:void <init>() -> <init>
    21:21:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1024:1027:void convert$aaa65bb(org.bson.json.StrictJsonWriter):24:27 -> a
    1024:1027:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
org.bson.json.ExtendedJsonMinKeyConverter -> org.a.f.j:
    21:21:void <init>() -> <init>
    21:21:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1024:1027:void convert$2bc4874d(org.bson.json.StrictJsonWriter):24:27 -> a
    1024:1027:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
org.bson.json.ExtendedJsonObjectIdConverter -> org.a.f.k:
    21:21:void <init>() -> <init>
    21:21:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1025:1028:void convert(org.bson.types.ObjectId,org.bson.json.StrictJsonWriter):25:28 -> a
    1025:1028:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
org.bson.json.ExtendedJsonRegularExpressionConverter -> org.a.f.l:
    21:21:void <init>() -> <init>
    21:21:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1024:1030:void convert(org.bson.BsonRegularExpression,org.bson.json.StrictJsonWriter):24:30 -> a
    1024:1030:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
    1064:1064:java.lang.String org.bson.BsonRegularExpression.getPattern():64:64 -> a
    1064:1064:void convert(org.bson.BsonRegularExpression,org.bson.json.StrictJsonWriter):26 -> a
    1064:1064:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
    1073:1073:java.lang.String org.bson.BsonRegularExpression.getOptions():73:73 -> a
    1073:1073:void convert(org.bson.BsonRegularExpression,org.bson.json.StrictJsonWriter):27 -> a
    1073:1073:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
org.bson.json.ExtendedJsonTimestampConverter -> org.a.f.m:
    24:24:void <init>() -> <init>
    24:24:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1027:1033:void convert(org.bson.BsonTimestamp,org.bson.json.StrictJsonWriter):27:33 -> a
    1027:1033:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):24 -> a
    1088:1088:int org.bson.BsonTimestamp.getInc():88:88 -> a
    1088:1088:void convert(org.bson.BsonTimestamp,org.bson.json.StrictJsonWriter):30 -> a
    1088:1088:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):24 -> a
org.bson.json.ExtendedJsonUndefinedConverter -> org.a.f.n:
    21:21:void <init>() -> <init>
    21:21:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1024:1027:void convert$78ba6cf0(org.bson.json.StrictJsonWriter):24:27 -> a
    1024:1027:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
org.bson.json.JsonBooleanConverter -> org.a.f.o:
    19:19:void <init>() -> <init>
    19:19:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1022:1023:void convert(java.lang.Boolean,org.bson.json.StrictJsonWriter):22:23 -> a
    1022:1023:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):19 -> a
org.bson.json.JsonBuffer -> org.a.f.p:
    int getPosition() -> a
    int read() -> b
    void unread(int) -> a
    int mark() -> c
    void reset(int) -> b
org.bson.json.JsonDoubleConverter -> org.a.f.q:
    19:19:void <init>() -> <init>
    19:19:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1022:1023:void convert(java.lang.Double,org.bson.json.StrictJsonWriter):22:23 -> a
    1022:1023:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):19 -> a
org.bson.json.JsonInt32Converter -> org.a.f.r:
    19:19:void <init>() -> <init>
    19:19:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1022:1023:void convert(java.lang.Integer,org.bson.json.StrictJsonWriter):22:23 -> a
    1022:1023:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):19 -> a
org.bson.json.JsonJavaScriptConverter -> org.a.f.s:
    19:19:void <init>() -> <init>
    19:19:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1022:1025:void convert(java.lang.String,org.bson.json.StrictJsonWriter):22:25 -> a
    1022:1025:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):19 -> a
org.bson.json.JsonMode -> org.a.f.t:
    org.bson.json.JsonMode STRICT -> a
    org.bson.json.JsonMode SHELL -> d
    org.bson.json.JsonMode EXTENDED -> b
    org.bson.json.JsonMode RELAXED -> c
    org.bson.json.JsonMode[] $VALUES -> e
    25:25:org.bson.json.JsonMode[] values() -> values
    25:25:org.bson.json.JsonMode valueOf(java.lang.String) -> valueOf
    25:25:void <init>(java.lang.String,int) -> <init>
    25:56:void <clinit>() -> <clinit>
    1025:1025:org.bson.json.JsonMode[] $values():25:25 -> <clinit>
    1025:1025:void <clinit>():25 -> <clinit>
org.bson.json.JsonNullConverter -> org.a.f.u:
    21:21:void <init>() -> <init>
    21:21:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1024:1025:void convert$5845c399(org.bson.json.StrictJsonWriter):24:25 -> a
    1024:1025:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
org.bson.json.JsonObject -> org.a.f.v:
    java.lang.String json -> a
    44:59:void <init>(java.lang.String) -> <init>
    72:72:org.bson.BsonDocument toBsonDocument$283f4ed1(org.bson.codecs.configuration.CodecRegistry) -> a
    77:91:boolean equals(java.lang.Object) -> equals
    1067:1067:java.lang.String getJson():67:67 -> equals
    1067:1067:boolean equals(java.lang.Object):87 -> equals
    96:96:int hashCode() -> hashCode
    101:101:java.lang.String toString() -> toString
org.bson.json.JsonParseException -> org.a.f.w:
    35:36:void <init>() -> <init>
    44:45:void <init>(java.lang.String) -> <init>
    55:56:void <init>(java.lang.String,java.lang.Object[]) -> <init>
    66:67:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    75:76:void <init>(java.lang.Throwable) -> <init>
org.bson.json.JsonReader -> org.a.f.x:
    org.bson.json.JsonScanner scanner -> d
    org.bson.json.JsonToken pushedToken -> e
    java.lang.Object currentValue -> f
    78:79:void <init>(java.lang.String) -> <init>
    95:98:void <init>(org.bson.json.JsonScanner) -> <init>
    102:102:org.bson.BsonBinary doReadBinaryData() -> e
    107:107:byte doPeekBinarySubType() -> f
    2102:2102:org.bson.BsonBinary doReadBinaryData():102:102 -> f
    2102:2102:byte doPeekBinarySubType():107 -> f
    2162:2162:byte org.bson.BsonBinary.getType():162:162 -> f
    2162:2162:byte doPeekBinarySubType():107 -> f
    112:112:int doPeekBinarySize() -> g
    3102:3102:org.bson.BsonBinary doReadBinaryData():102:102 -> g
    3102:3102:int doPeekBinarySize():112 -> g
    3174:3174:byte[] org.bson.BsonBinary.getData():174:174 -> g
    3174:3174:int doPeekBinarySize():112 -> g
    117:117:boolean doReadBoolean() -> h
    123:284:org.bson.BsonType readBsonType() -> E
    3344:3344:org.bson.json.JsonReader$Context getContext():1344:1344 -> E
    3344:3344:org.bson.BsonType readBsonType():134 -> E
    4076:4076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> E
    4076:4076:org.bson.BsonType readBsonType():136 -> E
    5038:5038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> E
    5038:5038:org.bson.BsonType readBsonType():145 -> E
    5076:5076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> E
    5076:5076:org.bson.BsonType readBsonType():149 -> E
    6038:6038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> E
    6038:6038:org.bson.BsonType readBsonType():150 -> E
    6344:6344:org.bson.json.JsonReader$Context getContext():1344:1344 -> E
    6344:6344:org.bson.BsonType readBsonType():155 -> E
    7076:7076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> E
    7076:7076:org.bson.BsonType readBsonType():155 -> E
    8076:8076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> E
    8076:8076:org.bson.BsonType readBsonType():161 -> E
    8600:8682:void visitExtendedJSON():600:682 -> E
    8600:8682:org.bson.BsonType readBsonType():166 -> E
    9076:9076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> E
    9076:9076:void visitExtendedJSON():602 -> E
    9076:9076:org.bson.BsonType readBsonType():166 -> E
    9214:9233:void visitJavaScriptExtendedJson():1214:1233 -> E
    9214:9233:void visitExtendedJSON():623 -> E
    9214:9233:org.bson.BsonType readBsonType():166 -> E
    10076:10076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> E
    10076:10076:void visitJavaScriptExtendedJson():1217 -> E
    10076:10076:void visitExtendedJSON():623 -> E
    10076:10076:org.bson.BsonType readBsonType():166 -> E
    10344:10344:org.bson.json.JsonReader$Context getContext():1344:1344 -> E
    10344:10344:void visitJavaScriptExtendedJson():1224 -> E
    10344:10344:void visitExtendedJSON():623 -> E
    10344:10344:org.bson.BsonType readBsonType():166 -> E
    11060:11063:org.bson.types.MaxKey visitMaxKeyExtendedJson():1060:1063 -> E
    11060:11063:void visitExtendedJSON():630 -> E
    11060:11063:org.bson.BsonType readBsonType():166 -> E
    11067:11070:org.bson.types.MinKey visitMinKeyExtendedJson():1067:1070 -> E
    11067:11070:void visitExtendedJSON():634 -> E
    11067:11070:org.bson.BsonType readBsonType():166 -> E
    11081:11107:org.bson.BsonRegularExpression visitNewRegularExpressionExtendedJson():1081:1107 -> E
    11081:11107:void visitExtendedJSON():642 -> E
    11081:11107:org.bson.BsonType readBsonType():166 -> E
    11151:11154:java.lang.String visitSymbolExtendedJson():1151:1154 -> E
    11151:11154:void visitExtendedJSON():646 -> E
    11151:11154:org.bson.BsonType readBsonType():166 -> E
    11158:11185:org.bson.BsonTimestamp visitTimestampExtendedJson():1158:1185 -> E
    11158:11185:void visitExtendedJSON():650 -> E
    11158:11185:org.bson.BsonType readBsonType():166 -> E
    11236:11243:org.bson.BsonUndefined visitUndefinedExtendedJson():1236:1243 -> E
    11236:11243:void visitExtendedJSON():654 -> E
    11236:11243:org.bson.BsonType readBsonType():166 -> E
    12038:12038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> E
    12038:12038:org.bson.BsonUndefined visitUndefinedExtendedJson():1240 -> E
    12038:12038:void visitExtendedJSON():654 -> E
    12038:12038:org.bson.BsonType readBsonType():166 -> E
    12300:12325:org.bson.BsonDbPointer visitDbPointerExtendedJson():1300:1325 -> E
    12300:12325:void visitExtendedJSON():674 -> E
    12300:12325:org.bson.BsonType readBsonType():166 -> E
    13038:13038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> E
    13038:13038:org.bson.BsonType readBsonType():170 -> E
    14038:14038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> E
    14038:14038:org.bson.BsonType readBsonType():177 -> E
    15038:15038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> E
    15038:15038:org.bson.BsonType readBsonType():181 -> E
    16038:16038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> E
    16038:16038:org.bson.BsonType readBsonType():185 -> E
    17038:17038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> E
    17038:17038:org.bson.BsonType readBsonType():189 -> E
    17739:17757:org.bson.BsonTimestamp visitTimestampConstructor():739:757 -> E
    17739:17757:org.bson.BsonType readBsonType():241 -> E
    18076:18076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> E
    18076:18076:org.bson.BsonTimestamp visitTimestampConstructor():742 -> E
    18076:18076:org.bson.BsonType readBsonType():241 -> E
    19038:19038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> E
    19038:19038:org.bson.BsonTimestamp visitTimestampConstructor():743 -> E
    19038:19038:org.bson.BsonType readBsonType():241 -> E
    19076:19076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> E
    19076:19076:org.bson.BsonTimestamp visitTimestampConstructor():750 -> E
    19076:19076:org.bson.BsonType readBsonType():241 -> E
    20038:20038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> E
    20038:20038:org.bson.BsonTimestamp visitTimestampConstructor():751 -> E
    20038:20038:org.bson.BsonType readBsonType():241 -> E
    20546:20597:void visitNew():546:597 -> E
    20546:20597:org.bson.BsonType readBsonType():252 -> E
    21076:21076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> E
    21076:21076:void visitNew():547 -> E
    21076:21076:org.bson.BsonType readBsonType():252 -> E
    22038:22038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> E
    22038:22038:void visitNew():548 -> E
    22038:22038:org.bson.BsonType readBsonType():252 -> E
    23038:23038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> E
    23038:23038:org.bson.BsonType readBsonType():262 -> E
    23344:23344:org.bson.json.JsonReader$Context getContext():1344:1344 -> E
    23344:23344:org.bson.BsonType readBsonType():265 -> E
    24344:24344:org.bson.json.JsonReader$Context getContext():1344:1344 -> E
    24344:24344:org.bson.BsonType readBsonType():265 -> E
    25076:25076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> E
    25076:25076:org.bson.BsonType readBsonType():267 -> E
    25344:25344:org.bson.json.JsonReader$Context getContext():1344:1344 -> E
    25344:25344:org.bson.BsonType readBsonType():272 -> E
    290:290:org.bson.types.Decimal128 doReadDecimal128() -> o
    295:295:long doReadDateTime() -> i
    300:300:double doReadDouble() -> j
    305:313:void doReadEndArray() -> k
    26344:26344:org.bson.json.JsonReader$Context getContext():1344:1344 -> k
    26344:26344:void doReadEndArray():305 -> k
    27344:27344:org.bson.json.JsonReader$Context getContext():1344:1344 -> k
    27344:27344:void doReadEndArray():307 -> k
    28344:28344:org.bson.json.JsonReader$Context getContext():1344:1344 -> k
    28344:28344:void doReadEndArray():307 -> k
    29076:29076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> k
    29076:29076:void doReadEndArray():309 -> k
    317:333:void doReadEndDocument() -> l
    29344:29344:org.bson.json.JsonReader$Context getContext():1344:1344 -> l
    29344:29344:void doReadEndDocument():317 -> l
    30344:30344:org.bson.json.JsonReader$Context getContext():1344:1344 -> l
    30344:30344:void doReadEndDocument():318 -> l
    31344:31344:org.bson.json.JsonReader$Context getContext():1344:1344 -> l
    31344:31344:void doReadEndDocument():318 -> l
    32344:32344:org.bson.json.JsonReader$Context getContext():1344:1344 -> l
    32344:32344:void doReadEndDocument():319 -> l
    33344:33344:org.bson.json.JsonReader$Context getContext():1344:1344 -> l
    33344:33344:void doReadEndDocument():323 -> l
    34344:34344:org.bson.json.JsonReader$Context getContext():1344:1344 -> l
    34344:34344:void doReadEndDocument():327 -> l
    35344:35344:org.bson.json.JsonReader$Context getContext():1344:1344 -> l
    35344:35344:void doReadEndDocument():327 -> l
    36076:36076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> l
    36076:36076:void doReadEndDocument():329 -> l
    337:337:int doReadInt32() -> m
    342:342:long doReadInt64() -> n
    347:347:java.lang.String doReadJavaScript() -> p
    352:352:java.lang.String doReadJavaScriptWithScope() -> q
    369:369:org.bson.types.ObjectId doReadObjectId() -> r
    374:374:org.bson.BsonRegularExpression doReadRegularExpression() -> s
    379:379:org.bson.BsonDbPointer doReadDBPointer() -> t
    384:385:void doReadStartArray() -> u
    36344:36344:org.bson.json.JsonReader$Context getContext():1344:1344 -> u
    36344:36344:void doReadStartArray():384 -> u
    389:390:void doReadStartDocument() -> v
    37344:37344:org.bson.json.JsonReader$Context getContext():1344:1344 -> v
    37344:37344:void doReadStartDocument():389 -> v
    394:394:java.lang.String doReadString() -> w
    399:399:java.lang.String doReadSymbol() -> x
    404:404:org.bson.BsonTimestamp doReadTimestamp() -> y
    417:495:void doSkipValue() -> z
    498:503:org.bson.json.JsonToken popToken() -> ae
    508:513:void pushToken(org.bson.json.JsonToken) -> a
    516:520:void verifyToken(org.bson.json.JsonTokenType) -> a
    38076:38076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> a
    38076:38076:void verifyToken(org.bson.json.JsonTokenType):517 -> a
    39038:39038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> a
    39038:39038:void verifyToken(org.bson.json.JsonTokenType):518 -> a
    523:530:void verifyToken(org.bson.json.JsonTokenType,java.lang.Object) -> a
    39076:39076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> a
    39076:39076:void verifyToken(org.bson.json.JsonTokenType,java.lang.Object):524 -> a
    40038:40038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> a
    40038:40038:void verifyToken(org.bson.json.JsonTokenType,java.lang.Object):525 -> a
    41038:41038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> a
    41038:41038:void verifyToken(org.bson.json.JsonTokenType,java.lang.Object):527 -> a
    42038:42038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> a
    42038:42038:void verifyToken(org.bson.json.JsonTokenType,java.lang.Object):528 -> a
    533:543:void verifyString(java.lang.String) -> b
    42076:42076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> b
    42076:42076:void verifyString(java.lang.String):538 -> b
    43038:43038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> b
    43038:43038:void verifyString(java.lang.String):540 -> b
    44038:44038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> b
    44038:44038:void verifyString(java.lang.String):541 -> b
    685:691:void visitEmptyConstructor() -> ag
    44076:44076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ag
    44076:44076:void visitEmptyConstructor():686 -> ag
    694:707:org.bson.BsonBinary visitBinDataConstructor() -> ah
    45076:45076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ah
    45076:45076:org.bson.BsonBinary visitBinDataConstructor():696 -> ah
    46038:46038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> ah
    46038:46038:org.bson.BsonBinary visitBinDataConstructor():697 -> ah
    46076:46076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ah
    46076:46076:org.bson.BsonBinary visitBinDataConstructor():701 -> ah
    47076:47076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ah
    47076:47076:org.bson.BsonBinary visitBinDataConstructor():701 -> ah
    48038:48038:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> ah
    48038:48038:org.bson.BsonBinary visitBinDataConstructor():702 -> ah
    711:714:org.bson.BsonBinary visitUUIDConstructor() -> ai
    718:728:org.bson.BsonRegularExpression visitRegularExpressionConstructor() -> aj
    48076:48076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> aj
    48076:48076:org.bson.BsonRegularExpression visitRegularExpressionConstructor():722 -> aj
    732:735:org.bson.types.ObjectId visitObjectIdConstructor() -> ak
    761:766:org.bson.BsonDbPointer visitDBPointerConstructor() -> al
    770:781:int visitNumberIntConstructor() -> am
    49076:49076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> am
    49076:49076:int visitNumberIntConstructor():773 -> am
    50076:50076:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> am
    50076:50076:int visitNumberIntConstructor():775 -> am
    50077:50077:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> am
    50077:50077:int visitNumberIntConstructor():778 -> am
    785:796:long visitNumberLongConstructor() -> an
    50078:50078:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> an
    50078:50078:long visitNumberLongConstructor():788 -> an
    50079:50079:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> an
    50079:50079:long visitNumberLongConstructor():788 -> an
    50080:50080:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> an
    50080:50080:long visitNumberLongConstructor():790 -> an
    50081:50081:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> an
    50081:50081:long visitNumberLongConstructor():793 -> an
    800:812:org.bson.types.Decimal128 visitNumberDecimalConstructor() -> ao
    50082:50082:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ao
    50082:50082:org.bson.types.Decimal128 visitNumberDecimalConstructor():803 -> ao
    50083:50083:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ao
    50083:50083:org.bson.types.Decimal128 visitNumberDecimalConstructor():803 -> ao
    50084:50084:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ao
    50084:50084:org.bson.types.Decimal128 visitNumberDecimalConstructor():804 -> ao
    50085:50085:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ao
    50085:50085:org.bson.types.Decimal128 visitNumberDecimalConstructor():806 -> ao
    50086:50086:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> ao
    50086:50086:org.bson.types.Decimal128 visitNumberDecimalConstructor():809 -> ao
    816:832:long visitISODateTimeConstructor() -> ap
    50087:50087:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ap
    50087:50087:long visitISODateTimeConstructor():819 -> ap
    50088:50088:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ap
    50088:50088:long visitISODateTimeConstructor():821 -> ap
    50089:50089:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> ap
    50089:50089:long visitISODateTimeConstructor():822 -> ap
    837:855:org.bson.BsonBinary visitHexDataConstructor() -> aq
    50090:50090:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> aq
    50090:50090:org.bson.BsonBinary visitHexDataConstructor():839 -> aq
    50091:50091:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> aq
    50091:50091:org.bson.BsonBinary visitHexDataConstructor():840 -> aq
    50092:50092:byte org.bson.BsonBinarySubType.getValue():97:97 -> aq
    50092:50092:org.bson.BsonBinary visitHexDataConstructor():851 -> aq
    859:912:long visitDateTimeConstructor() -> ar
    50093:50093:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ar
    50093:50093:long visitDateTimeConstructor():864 -> ar
    50094:50094:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ar
    50094:50094:long visitDateTimeConstructor():866 -> ar
    50095:50095:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ar
    50095:50095:long visitDateTimeConstructor():877 -> ar
    50096:50096:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ar
    50096:50096:long visitDateTimeConstructor():877 -> ar
    50097:50097:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ar
    50097:50097:long visitDateTimeConstructor():885 -> ar
    50098:50098:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ar
    50098:50098:long visitDateTimeConstructor():888 -> ar
    50099:50099:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> ar
    50099:50099:long visitDateTimeConstructor():889 -> ar
    50100:50100:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ar
    50100:50100:long visitDateTimeConstructor():892 -> ar
    50101:50101:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ar
    50101:50101:long visitDateTimeConstructor():892 -> ar
    50102:50102:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> ar
    50102:50102:long visitDateTimeConstructor():893 -> ar
    50103:50103:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> ar
    50103:50103:long visitDateTimeConstructor():912 -> ar
    917:932:java.lang.String visitDateTimeConstructorWithOutNew() -> as
    50104:50104:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> as
    50104:50104:java.lang.String visitDateTimeConstructorWithOutNew():919 -> as
    50105:50105:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> as
    50105:50105:java.lang.String visitDateTimeConstructorWithOutNew():920 -> as
    50106:50106:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> as
    50106:50106:java.lang.String visitDateTimeConstructorWithOutNew():922 -> as
    50107:50107:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> as
    50107:50107:java.lang.String visitDateTimeConstructorWithOutNew():926 -> as
    50108:50108:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> as
    50108:50108:java.lang.String visitDateTimeConstructorWithOutNew():927 -> as
    937:979:org.bson.BsonBinary visitBinDataExtendedJson(java.lang.String) -> c
    50109:50109:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> c
    50109:50109:org.bson.BsonBinary visitBinDataExtendedJson(java.lang.String):944 -> c
    984:1013:org.bson.BsonBinary visitLegacyBinaryExtendedJson(java.lang.String) -> d
    1017:1025:byte readBinarySubtypeFromExtendedJson() -> at
    50110:50110:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> at
    50110:50110:byte readBinarySubtypeFromExtendedJson():1018 -> at
    50111:50111:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> at
    50111:50111:byte readBinarySubtypeFromExtendedJson():1018 -> at
    50112:50112:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> at
    50112:50112:byte readBinarySubtypeFromExtendedJson():1019 -> at
    50113:50113:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> at
    50113:50113:byte readBinarySubtypeFromExtendedJson():1022 -> at
    1031:1056:long visitDateTimeExtendedJson() -> au
    50114:50114:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> au
    50114:50114:long visitDateTimeExtendedJson():1033 -> au
    50115:50115:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> au
    50115:50115:long visitDateTimeExtendedJson():1042 -> au
    50116:50116:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> au
    50116:50116:long visitDateTimeExtendedJson():1042 -> au
    50117:50117:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> au
    50117:50117:long visitDateTimeExtendedJson():1044 -> au
    50118:50118:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> au
    50118:50118:long visitDateTimeExtendedJson():1052 -> au
    1074:1077:org.bson.types.ObjectId visitObjectIdExtendedJson() -> av
    1111:1138:org.bson.BsonRegularExpression visitRegularExpressionExtendedJson(java.lang.String) -> e
    1142:1146:java.lang.String readStringFromExtendedJson() -> aw
    50119:50119:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> aw
    50119:50119:java.lang.String readStringFromExtendedJson():1143 -> aw
    50120:50120:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> aw
    50120:50120:java.lang.String readStringFromExtendedJson():1144 -> aw
    1189:1198:int readIntFromExtendedJson() -> ax
    50121:50121:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ax
    50121:50121:int readIntFromExtendedJson():1191 -> ax
    50122:50122:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> ax
    50122:50122:int readIntFromExtendedJson():1193 -> ax
    50123:50123:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> ax
    50123:50123:int readIntFromExtendedJson():1196 -> ax
    1202:1209:org.bson.BsonBinary visitUuidExtendedJson() -> ay
    1247:1256:java.lang.Long visitNumberLongExtendedJson() -> az
    1260:1269:java.lang.Integer visitNumberIntExtendedJson() -> aA
    1273:1282:java.lang.Double visitNumberDoubleExtendedJson() -> aB
    1286:1296:org.bson.types.Decimal128 visitNumberDecimalExtendedJson() -> aC
    1330:1334:org.bson.types.ObjectId readDbPointerIdFromExtendedJson() -> aD
    1339:1339:org.bson.BsonReaderMark getMark() -> af
    1408:1424:byte[] decodeHex(java.lang.String) -> f
    1433:1437:java.lang.String readStringKeyFromExtendedJson() -> aE
    50124:50124:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> aE
    50124:50124:java.lang.String readStringKeyFromExtendedJson():1434 -> aE
    50125:50125:org.bson.json.JsonTokenType org.bson.json.JsonToken.getType():76:76 -> aE
    50125:50125:java.lang.String readStringKeyFromExtendedJson():1434 -> aE
    50126:50126:java.lang.Object org.bson.json.JsonToken.getValue():38:38 -> aE
    50126:50126:java.lang.String readStringKeyFromExtendedJson():1435 -> aE
    66:66:org.bson.AbstractBsonReader$Context getContext() -> ad
    50127:50127:org.bson.json.JsonReader$Context getContext():1344:1344 -> ad
    50127:50127:org.bson.AbstractBsonReader$Context getContext():66 -> ad
    66:66:org.bson.json.JsonToken access$000(org.bson.json.JsonReader) -> a
    66:66:java.lang.Object access$100(org.bson.json.JsonReader) -> b
    66:66:org.bson.json.JsonScanner access$200(org.bson.json.JsonReader) -> c
    66:66:org.bson.json.JsonToken access$002(org.bson.json.JsonReader,org.bson.json.JsonToken) -> a
    66:66:java.lang.Object access$102(org.bson.json.JsonReader,java.lang.Object) -> a
    66:66:void access$300(org.bson.json.JsonReader,org.bson.AbstractBsonReader$Context) -> a
org.bson.json.JsonReader$1 -> org.a.f.x$1:
    int[] $SwitchMap$org$bson$json$JsonTokenType -> a
    int[] $SwitchMap$org$bson$BsonContextType -> b
    int[] $SwitchMap$org$bson$BsonType -> c
    136:417:void <clinit>() -> <clinit>
org.bson.json.JsonReader$Context -> org.a.f.x$a:
    1392:1394:void <init>(org.bson.json.JsonReader,org.bson.AbstractBsonReader$Context,org.bson.BsonContextType) -> <init>
    1398:1398:org.bson.json.JsonReader$Context getParentContext() -> c
    1403:1403:org.bson.BsonContextType getContextType() -> b
    1385:1385:org.bson.AbstractBsonReader$Context getParentContext() -> a
    2398:2398:org.bson.json.JsonReader$Context getParentContext():1398:1398 -> a
    2398:2398:org.bson.AbstractBsonReader$Context getParentContext():1385 -> a
org.bson.json.JsonReader$Mark -> org.a.f.x$b:
    org.bson.json.JsonToken pushedToken -> a
    java.lang.Object currentValue -> b
    int markPos -> c
    org.bson.json.JsonReader this$0 -> d
    1358:1362:void <init>(org.bson.json.JsonReader) -> <init>
    2049:2049:int org.bson.json.JsonScanner.mark():49:49 -> <init>
    2049:2049:void <init>(org.bson.json.JsonReader):1361 -> <init>
    1366:1371:void reset() -> c
    3045:3046:void org.bson.json.JsonScanner.reset(int):45:46 -> c
    3045:3046:void reset():1369 -> c
    1377:1378:void discard() -> d
org.bson.json.JsonScanner -> org.a.f.y:
    org.bson.json.JsonBuffer buffer -> a
    32:34:void <init>(org.bson.json.JsonBuffer) -> <init>
    37:38:void <init>(java.lang.String) -> <init>
    65:103:org.bson.json.JsonToken nextToken() -> a
    122:192:org.bson.json.JsonToken scanRegularExpression() -> b
    201:210:org.bson.json.JsonToken scanUnquotedString(char) -> a
    234:456:org.bson.json.JsonToken scanNumber(char) -> b
    471:529:org.bson.json.JsonToken scanString(char) -> c
org.bson.json.JsonScanner$1 -> org.a.f.y$1:
    int[] $SwitchMap$org$bson$json$JsonScanner$RegularExpressionState -> a
    int[] $SwitchMap$org$bson$json$JsonScanner$NumberState -> b
    127:257:void <clinit>() -> <clinit>
org.bson.json.JsonScanner$NumberState -> org.a.f.y$a:
    org.bson.json.JsonScanner$NumberState SAW_LEADING_MINUS -> a
    org.bson.json.JsonScanner$NumberState SAW_LEADING_ZERO -> b
    org.bson.json.JsonScanner$NumberState SAW_INTEGER_DIGITS -> c
    org.bson.json.JsonScanner$NumberState SAW_DECIMAL_POINT -> d
    org.bson.json.JsonScanner$NumberState SAW_FRACTION_DIGITS -> e
    org.bson.json.JsonScanner$NumberState SAW_EXPONENT_LETTER -> f
    org.bson.json.JsonScanner$NumberState SAW_EXPONENT_SIGN -> g
    org.bson.json.JsonScanner$NumberState SAW_EXPONENT_DIGITS -> h
    org.bson.json.JsonScanner$NumberState SAW_MINUS_I -> i
    org.bson.json.JsonScanner$NumberState DONE -> j
    org.bson.json.JsonScanner$NumberState INVALID -> k
    org.bson.json.JsonScanner$NumberState[] $VALUES -> l
    532:532:org.bson.json.JsonScanner$NumberState[] values() -> values
    532:532:org.bson.json.JsonScanner$NumberState valueOf(java.lang.String) -> valueOf
    532:532:void <init>(java.lang.String,int) -> <init>
    532:543:void <clinit>() -> <clinit>
    1532:1532:org.bson.json.JsonScanner$NumberState[] $values():532:532 -> <clinit>
    1532:1532:void <clinit>():532 -> <clinit>
org.bson.json.JsonScanner$RegularExpressionState -> org.a.f.y$b:
    org.bson.json.JsonScanner$RegularExpressionState IN_PATTERN -> a
    org.bson.json.JsonScanner$RegularExpressionState IN_ESCAPE_SEQUENCE -> b
    org.bson.json.JsonScanner$RegularExpressionState IN_OPTIONS -> c
    org.bson.json.JsonScanner$RegularExpressionState DONE -> d
    org.bson.json.JsonScanner$RegularExpressionState INVALID -> e
    org.bson.json.JsonScanner$RegularExpressionState[] $VALUES -> f
    546:546:org.bson.json.JsonScanner$RegularExpressionState[] values() -> values
    546:546:org.bson.json.JsonScanner$RegularExpressionState valueOf(java.lang.String) -> valueOf
    546:546:void <init>(java.lang.String,int) -> <init>
    546:551:void <clinit>() -> <clinit>
    1546:1546:org.bson.json.JsonScanner$RegularExpressionState[] $values():546:546 -> <clinit>
    1546:1546:void <clinit>():546 -> <clinit>
org.bson.json.JsonStringBuffer -> org.a.f.z:
    java.lang.String buffer -> a
    int position -> b
    boolean eof -> c
    25:27:void <init>(java.lang.String) -> <init>
    30:30:int getPosition() -> a
    34:40:int read() -> b
    45:49:void unread(int) -> a
    52:52:int mark() -> c
    56:60:void reset(int) -> b
org.bson.json.JsonStringConverter -> org.a.f.A:
    19:19:void <init>() -> <init>
    19:19:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1022:1023:void convert(java.lang.String,org.bson.json.StrictJsonWriter):22:23 -> a
    1022:1023:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):19 -> a
org.bson.json.JsonSymbolConverter -> org.a.f.B:
    19:19:void <init>() -> <init>
    19:19:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1022:1025:void convert(java.lang.String,org.bson.json.StrictJsonWriter):22:25 -> a
    1022:1025:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):19 -> a
org.bson.json.JsonToken -> org.a.f.C:
    java.lang.Object value -> a
    org.bson.json.JsonTokenType type -> b
    32:35:void <init>(org.bson.json.JsonTokenType,java.lang.Object) -> <init>
    43:71:java.lang.Object getValue(java.lang.Class) -> a
    1072:1079:org.bson.types.Decimal128 org.bson.BsonDouble.decimal128Value():72:79 -> a
    1072:1079:java.lang.Object getValue(java.lang.Class):63 -> a
org.bson.json.JsonTokenType -> org.a.f.D:
    org.bson.json.JsonTokenType INVALID -> p
    org.bson.json.JsonTokenType BEGIN_ARRAY -> a
    org.bson.json.JsonTokenType BEGIN_OBJECT -> b
    org.bson.json.JsonTokenType END_ARRAY -> c
    org.bson.json.JsonTokenType LEFT_PAREN -> d
    org.bson.json.JsonTokenType RIGHT_PAREN -> e
    org.bson.json.JsonTokenType END_OBJECT -> f
    org.bson.json.JsonTokenType COLON -> g
    org.bson.json.JsonTokenType COMMA -> h
    org.bson.json.JsonTokenType DOUBLE -> i
    org.bson.json.JsonTokenType INT32 -> j
    org.bson.json.JsonTokenType INT64 -> k
    org.bson.json.JsonTokenType REGULAR_EXPRESSION -> l
    org.bson.json.JsonTokenType STRING -> m
    org.bson.json.JsonTokenType UNQUOTED_STRING -> n
    org.bson.json.JsonTokenType END_OF_FILE -> o
    org.bson.json.JsonTokenType[] $VALUES -> q
    19:19:org.bson.json.JsonTokenType[] values() -> values
    19:19:org.bson.json.JsonTokenType valueOf(java.lang.String) -> valueOf
    19:19:void <init>(java.lang.String,int) -> <init>
    19:98:void <clinit>() -> <clinit>
    1019:1019:org.bson.json.JsonTokenType[] $values():19:19 -> <clinit>
    1019:1019:void <clinit>():19 -> <clinit>
org.bson.json.JsonWriter -> org.a.f.E:
    org.bson.json.JsonWriterSettings settings -> c
    org.bson.json.StrictCharacterStreamJsonWriter strictJsonWriter -> b
    45:46:void <init>(java.io.Writer) -> <init>
    55:64:void <init>(java.io.Writer,org.bson.json.JsonWriterSettings) -> <init>
    2040:2040:org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder org.bson.json.StrictCharacterStreamJsonWriterSettings.builder():40:40 -> <init>
    2040:2040:void <init>(java.io.Writer,org.bson.json.JsonWriterSettings):58 -> <init>
    2272:2272:boolean org.bson.json.JsonWriterSettings.isIndent():272:272 -> <init>
    2272:2272:void <init>(java.io.Writer,org.bson.json.JsonWriterSettings):59 -> <init>
    3115:3116:org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder.indent(boolean):115:116 -> <init>
    3115:3116:void <init>(java.io.Writer,org.bson.json.JsonWriterSettings):59 -> <init>
    3281:3281:java.lang.String org.bson.json.JsonWriterSettings.getNewLineCharacters():281:281 -> <init>
    3281:3281:void <init>(java.io.Writer,org.bson.json.JsonWriterSettings):60 -> <init>
    4126:4128:org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder.newLineCharacters(java.lang.String):126:128 -> <init>
    4126:4128:void <init>(java.io.Writer,org.bson.json.JsonWriterSettings):60 -> <init>
    4290:4290:java.lang.String org.bson.json.JsonWriterSettings.getIndentCharacters():290:290 -> <init>
    4290:4290:void <init>(java.io.Writer,org.bson.json.JsonWriterSettings):61 -> <init>
    5138:5140:org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder.indentCharacters(java.lang.String):138:140 -> <init>
    5138:5140:void <init>(java.io.Writer,org.bson.json.JsonWriterSettings):61 -> <init>
    5309:5309:int org.bson.json.JsonWriterSettings.getMaxLength():309:309 -> <init>
    5309:5309:void <init>(java.io.Writer,org.bson.json.JsonWriterSettings):62 -> <init>
    6151:6152:org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder.maxLength(int):151:152 -> <init>
    6151:6152:void <init>(java.io.Writer,org.bson.json.JsonWriterSettings):62 -> <init>
    7105:7105:org.bson.json.StrictCharacterStreamJsonWriterSettings org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder.build():105:105 -> <init>
    7105:7105:void <init>(java.io.Writer,org.bson.json.JsonWriterSettings):63 -> <init>
    82:83:void doWriteName(java.lang.String) -> l
    87:91:void doWriteStartDocument() -> l
    8077:8077:org.bson.json.JsonWriter$Context getContext():77:77 -> l
    8077:8077:void doWriteStartDocument():90 -> l
    95:102:void doWriteEndDocument() -> m
    9077:9077:org.bson.json.JsonWriter$Context getContext():77:77 -> m
    9077:9077:void doWriteEndDocument():96 -> m
    9081:9081:org.bson.BsonContextType org.bson.AbstractBsonWriter$Context.getContextType():1081:1081 -> m
    9081:9081:void doWriteEndDocument():96 -> m
    10077:10077:org.bson.json.JsonWriter$Context getContext():77:77 -> m
    10077:10077:void doWriteEndDocument():97 -> m
    11077:11077:org.bson.json.JsonWriter$Context getContext():77:77 -> m
    11077:11077:void doWriteEndDocument():100 -> m
    106:108:void doWriteStartArray() -> n
    11211:11215:void org.bson.json.StrictCharacterStreamJsonWriter.writeStartArray():211:215 -> n
    11211:11215:void doWriteStartArray():106 -> n
    12075:12075:java.lang.String org.bson.json.StrictCharacterStreamJsonWriterSettings.getIndentCharacters():75:75 -> n
    12075:12075:void org.bson.json.StrictCharacterStreamJsonWriter.writeStartArray():213 -> n
    12075:12075:void doWriteStartArray():106 -> n
    12077:12077:org.bson.json.JsonWriter$Context getContext():77:77 -> n
    12077:12077:void doWriteStartArray():107 -> n
    112:114:void doWriteEndArray() -> o
    12236:12253:void org.bson.json.StrictCharacterStreamJsonWriter.writeEndArray():236:253 -> o
    12236:12253:void doWriteEndArray():112 -> o
    13046:13046:org.bson.json.StrictCharacterStreamJsonWriter$JsonContextType org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$300(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> o
    13046:13046:void org.bson.json.StrictCharacterStreamJsonWriter.writeEndArray():238 -> o
    13046:13046:void doWriteEndArray():112 -> o
    13057:13057:boolean org.bson.json.StrictCharacterStreamJsonWriterSettings.isIndent():57:57 -> o
    13057:13057:void org.bson.json.StrictCharacterStreamJsonWriter.writeEndArray():242 -> o
    13057:13057:void doWriteEndArray():112 -> o
    14046:14046:boolean org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$000(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> o
    14046:14046:void org.bson.json.StrictCharacterStreamJsonWriter.writeEndArray():242 -> o
    14046:14046:void doWriteEndArray():112 -> o
    14066:14066:java.lang.String org.bson.json.StrictCharacterStreamJsonWriterSettings.getNewLineCharacters():66:66 -> o
    14066:14066:void org.bson.json.StrictCharacterStreamJsonWriter.writeEndArray():243 -> o
    14066:14066:void doWriteEndArray():112 -> o
    15046:15046:org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$200(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> o
    15046:15046:void org.bson.json.StrictCharacterStreamJsonWriter.writeEndArray():244 -> o
    15046:15046:void doWriteEndArray():112 -> o
    16046:16046:java.lang.String org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$100(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> o
    16046:16046:void org.bson.json.StrictCharacterStreamJsonWriter.writeEndArray():244 -> o
    16046:16046:void doWriteEndArray():112 -> o
    17046:17046:org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$200(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> o
    17046:17046:void org.bson.json.StrictCharacterStreamJsonWriter.writeEndArray():247 -> o
    17046:17046:void doWriteEndArray():112 -> o
    18046:18046:org.bson.json.StrictCharacterStreamJsonWriter$JsonContextType org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$300(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> o
    18046:18046:void org.bson.json.StrictCharacterStreamJsonWriter.writeEndArray():248 -> o
    18046:18046:void doWriteEndArray():112 -> o
    18077:18077:org.bson.json.JsonWriter$Context getContext():77:77 -> o
    18077:18077:void doWriteEndArray():113 -> o
    119:120:void doWriteBinaryData(org.bson.BsonBinary) -> b
    18339:18339:org.bson.json.Converter org.bson.json.JsonWriterSettings.getBinaryConverter():339:339 -> b
    18339:18339:void doWriteBinaryData(org.bson.BsonBinary):119 -> b
    124:125:void doWriteBoolean(boolean) -> b
    18349:18349:org.bson.json.Converter org.bson.json.JsonWriterSettings.getBooleanConverter():349:349 -> b
    18349:18349:void doWriteBoolean(boolean):124 -> b
    129:130:void doWriteDateTime(long) -> c
    18359:18359:org.bson.json.Converter org.bson.json.JsonWriterSettings.getDateTimeConverter():359:359 -> c
    18359:18359:void doWriteDateTime(long):129 -> c
    134:149:void doWriteDBPointer(org.bson.BsonDbPointer) -> b
    19299:19299:org.bson.json.JsonMode org.bson.json.JsonWriterSettings.getOutputMode():299:299 -> b
    19299:19299:void doWriteDBPointer(org.bson.BsonDbPointer):134 -> b
    20059:20059:java.lang.String org.bson.BsonDbPointer.getNamespace():59:59 -> b
    20059:20059:void doWriteDBPointer(org.bson.BsonDbPointer):137 -> b
    20068:20068:org.bson.types.ObjectId org.bson.BsonDbPointer.getId():68:68 -> b
    20068:20068:void doWriteDBPointer(org.bson.BsonDbPointer):139 -> b
    21059:21059:java.lang.String org.bson.BsonDbPointer.getNamespace():59:59 -> b
    21059:21059:void doWriteDBPointer(org.bson.BsonDbPointer):144 -> b
    21068:21068:org.bson.types.ObjectId org.bson.BsonDbPointer.getId():68:68 -> b
    21068:21068:void doWriteDBPointer(org.bson.BsonDbPointer):146 -> b
    153:154:void doWriteDouble(double) -> b
    21369:21369:org.bson.json.Converter org.bson.json.JsonWriterSettings.getDoubleConverter():369:369 -> b
    21369:21369:void doWriteDouble(double):153 -> b
    158:159:void doWriteInt32(int) -> b
    21379:21379:org.bson.json.Converter org.bson.json.JsonWriterSettings.getInt32Converter():379:379 -> b
    21379:21379:void doWriteInt32(int):158 -> b
    163:164:void doWriteInt64(long) -> d
    21389:21389:org.bson.json.Converter org.bson.json.JsonWriterSettings.getInt64Converter():389:389 -> d
    21389:21389:void doWriteInt64(long):163 -> d
    168:169:void doWriteDecimal128(org.bson.types.Decimal128) -> b
    21399:21399:org.bson.json.Converter org.bson.json.JsonWriterSettings.getDecimal128Converter():399:399 -> b
    21399:21399:void doWriteDecimal128(org.bson.types.Decimal128):168 -> b
    173:174:void doWriteJavaScript(java.lang.String) -> h
    21479:21479:org.bson.json.Converter org.bson.json.JsonWriterSettings.getJavaScriptConverter():479:479 -> h
    21479:21479:void doWriteJavaScript(java.lang.String):173 -> h
    178:181:void doWriteJavaScriptWithScope(java.lang.String) -> i
    185:186:void doWriteMaxKey() -> p
    22459:22459:org.bson.json.Converter org.bson.json.JsonWriterSettings.getMaxKeyConverter():459:459 -> p
    22459:22459:void doWriteMaxKey():185 -> p
    190:191:void doWriteMinKey() -> q
    23449:23449:org.bson.json.Converter org.bson.json.JsonWriterSettings.getMinKeyConverter():449:449 -> q
    23449:23449:void doWriteMinKey():190 -> q
    195:196:void doWriteNull() -> r
    24319:24319:org.bson.json.Converter org.bson.json.JsonWriterSettings.getNullConverter():319:319 -> r
    24319:24319:void doWriteNull():195 -> r
    200:201:void doWriteObjectId(org.bson.types.ObjectId) -> b
    24409:24409:org.bson.json.Converter org.bson.json.JsonWriterSettings.getObjectIdConverter():409:409 -> b
    24409:24409:void doWriteObjectId(org.bson.types.ObjectId):200 -> b
    205:206:void doWriteRegularExpression(org.bson.BsonRegularExpression) -> b
    24419:24419:org.bson.json.Converter org.bson.json.JsonWriterSettings.getRegularExpressionConverter():419:419 -> b
    24419:24419:void doWriteRegularExpression(org.bson.BsonRegularExpression):205 -> b
    210:211:void doWriteString(java.lang.String) -> j
    25329:25329:org.bson.json.Converter org.bson.json.JsonWriterSettings.getStringConverter():329:329 -> j
    25329:25329:void doWriteString(java.lang.String):210 -> j
    215:216:void doWriteSymbol(java.lang.String) -> k
    25439:25439:org.bson.json.Converter org.bson.json.JsonWriterSettings.getSymbolConverter():439:439 -> k
    25439:25439:void doWriteSymbol(java.lang.String):215 -> k
    220:221:void doWriteTimestamp(org.bson.BsonTimestamp) -> b
    26429:26429:org.bson.json.Converter org.bson.json.JsonWriterSettings.getTimestampConverter():429:429 -> b
    26429:26429:void doWriteTimestamp(org.bson.BsonTimestamp):220 -> b
    225:226:void doWriteUndefined() -> s
    26469:26469:org.bson.json.Converter org.bson.json.JsonWriterSettings.getUndefinedConverter():469:469 -> s
    26469:26469:void doWriteUndefined():225 -> s
    246:246:boolean abortPipe() -> u
    27264:27264:boolean org.bson.json.StrictCharacterStreamJsonWriter.isTruncated():264:264 -> u
    27264:27264:boolean abortPipe():246 -> u
    35:35:org.bson.AbstractBsonWriter$Context getContext() -> k
    28077:28077:org.bson.json.JsonWriter$Context getContext():77:77 -> k
    28077:28077:org.bson.AbstractBsonWriter$Context getContext():35 -> k
org.bson.json.JsonWriter$Context -> org.a.f.E$a:
    261:263:void <init>(org.bson.json.JsonWriter,org.bson.json.JsonWriter$Context,org.bson.BsonContextType) -> <init>
    267:267:org.bson.json.JsonWriter$Context getParentContext() -> b
    253:253:org.bson.AbstractBsonWriter$Context getParentContext() -> a
    1267:1267:org.bson.json.JsonWriter$Context getParentContext():267:267 -> a
    1267:1267:org.bson.AbstractBsonWriter$Context getParentContext():253 -> a
org.bson.json.JsonWriterSettings -> org.a.f.F:
    org.bson.json.JsonNullConverter JSON_NULL_CONVERTER -> x
    org.bson.json.JsonStringConverter JSON_STRING_CONVERTER -> y
    org.bson.json.JsonBooleanConverter JSON_BOOLEAN_CONVERTER -> z
    org.bson.json.JsonDoubleConverter JSON_DOUBLE_CONVERTER -> A
    org.bson.json.ExtendedJsonDoubleConverter EXTENDED_JSON_DOUBLE_CONVERTER -> B
    org.bson.json.RelaxedExtendedJsonDoubleConverter RELAXED_EXTENDED_JSON_DOUBLE_CONVERTER -> C
    org.bson.json.JsonInt32Converter JSON_INT_32_CONVERTER -> D
    org.bson.json.ExtendedJsonInt32Converter EXTENDED_JSON_INT_32_CONVERTER -> E
    org.bson.json.JsonSymbolConverter JSON_SYMBOL_CONVERTER -> F
    org.bson.json.ExtendedJsonMinKeyConverter EXTENDED_JSON_MIN_KEY_CONVERTER -> G
    org.bson.json.ShellMinKeyConverter SHELL_MIN_KEY_CONVERTER -> H
    org.bson.json.ExtendedJsonMaxKeyConverter EXTENDED_JSON_MAX_KEY_CONVERTER -> I
    org.bson.json.ShellMaxKeyConverter SHELL_MAX_KEY_CONVERTER -> J
    org.bson.json.ExtendedJsonUndefinedConverter EXTENDED_JSON_UNDEFINED_CONVERTER -> K
    org.bson.json.ShellUndefinedConverter SHELL_UNDEFINED_CONVERTER -> L
    org.bson.json.LegacyExtendedJsonDateTimeConverter LEGACY_EXTENDED_JSON_DATE_TIME_CONVERTER -> M
    org.bson.json.ExtendedJsonDateTimeConverter EXTENDED_JSON_DATE_TIME_CONVERTER -> N
    org.bson.json.RelaxedExtendedJsonDateTimeConverter RELAXED_EXTENDED_JSON_DATE_TIME_CONVERTER -> O
    org.bson.json.ShellDateTimeConverter SHELL_DATE_TIME_CONVERTER -> P
    org.bson.json.ExtendedJsonBinaryConverter EXTENDED_JSON_BINARY_CONVERTER -> Q
    org.bson.json.LegacyExtendedJsonBinaryConverter LEGACY_EXTENDED_JSON_BINARY_CONVERTER -> R
    org.bson.json.ShellBinaryConverter SHELL_BINARY_CONVERTER -> S
    org.bson.json.ExtendedJsonInt64Converter EXTENDED_JSON_INT_64_CONVERTER -> T
    org.bson.json.RelaxedExtendedJsonInt64Converter RELAXED_JSON_INT_64_CONVERTER -> U
    org.bson.json.ShellInt64Converter SHELL_INT_64_CONVERTER -> V
    org.bson.json.ExtendedJsonDecimal128Converter EXTENDED_JSON_DECIMAL_128_CONVERTER -> W
    org.bson.json.ShellDecimal128Converter SHELL_DECIMAL_128_CONVERTER -> X
    org.bson.json.ExtendedJsonObjectIdConverter EXTENDED_JSON_OBJECT_ID_CONVERTER -> Y
    org.bson.json.ShellObjectIdConverter SHELL_OBJECT_ID_CONVERTER -> Z
    org.bson.json.ExtendedJsonTimestampConverter EXTENDED_JSON_TIMESTAMP_CONVERTER -> aa
    org.bson.json.ShellTimestampConverter SHELL_TIMESTAMP_CONVERTER -> ab
    org.bson.json.ExtendedJsonRegularExpressionConverter EXTENDED_JSON_REGULAR_EXPRESSION_CONVERTER -> ac
    org.bson.json.LegacyExtendedJsonRegularExpressionConverter LEGACY_EXTENDED_JSON_REGULAR_EXPRESSION_CONVERTER -> ad
    org.bson.json.ShellRegularExpressionConverter SHELL_REGULAR_EXPRESSION_CONVERTER -> ae
    boolean indent -> b
    java.lang.String newLineCharacters -> c
    java.lang.String indentCharacters -> d
    int maxLength -> e
    org.bson.json.JsonMode outputMode -> f
    org.bson.json.Converter nullConverter -> g
    org.bson.json.Converter stringConverter -> h
    org.bson.json.Converter dateTimeConverter -> i
    org.bson.json.Converter binaryConverter -> j
    org.bson.json.Converter booleanConverter -> k
    org.bson.json.Converter doubleConverter -> l
    org.bson.json.Converter int32Converter -> m
    org.bson.json.Converter int64Converter -> n
    org.bson.json.Converter decimal128Converter -> o
    org.bson.json.Converter objectIdConverter -> p
    org.bson.json.Converter timestampConverter -> q
    org.bson.json.Converter regularExpressionConverter -> r
    org.bson.json.Converter symbolConverter -> s
    org.bson.json.Converter undefinedConverter -> t
    org.bson.json.Converter minKeyConverter -> u
    org.bson.json.Converter maxKeyConverter -> v
    org.bson.json.Converter javaScriptConverter -> w
    114:114:org.bson.json.JsonWriterSettings$Builder builder() -> a
    118:263:void <init>(org.bson.json.JsonWriterSettings$Builder) -> <init>
    1487:1487:boolean org.bson.json.JsonWriterSettings$Builder.access$100(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    1487:1487:void <init>(org.bson.json.JsonWriterSettings$Builder):119 -> <init>
    2487:2487:java.lang.String org.bson.json.JsonWriterSettings$Builder.access$200(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    2487:2487:void <init>(org.bson.json.JsonWriterSettings$Builder):120 -> <init>
    3487:3487:java.lang.String org.bson.json.JsonWriterSettings$Builder.access$200(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    3487:3487:void <init>(org.bson.json.JsonWriterSettings$Builder):120 -> <init>
    4487:4487:java.lang.String org.bson.json.JsonWriterSettings$Builder.access$300(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    4487:4487:void <init>(org.bson.json.JsonWriterSettings$Builder):121 -> <init>
    5487:5487:org.bson.json.JsonMode org.bson.json.JsonWriterSettings$Builder.access$400(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    5487:5487:void <init>(org.bson.json.JsonWriterSettings$Builder):122 -> <init>
    6487:6487:int org.bson.json.JsonWriterSettings$Builder.access$500(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    6487:6487:void <init>(org.bson.json.JsonWriterSettings$Builder):123 -> <init>
    7487:7487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$600(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    7487:7487:void <init>(org.bson.json.JsonWriterSettings$Builder):125 -> <init>
    8487:8487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$600(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    8487:8487:void <init>(org.bson.json.JsonWriterSettings$Builder):126 -> <init>
    9487:9487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$700(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    9487:9487:void <init>(org.bson.json.JsonWriterSettings$Builder):131 -> <init>
    10487:10487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$700(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    10487:10487:void <init>(org.bson.json.JsonWriterSettings$Builder):132 -> <init>
    11487:11487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$800(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    11487:11487:void <init>(org.bson.json.JsonWriterSettings$Builder):137 -> <init>
    12487:12487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$800(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    12487:12487:void <init>(org.bson.json.JsonWriterSettings$Builder):138 -> <init>
    13487:13487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$900(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    13487:13487:void <init>(org.bson.json.JsonWriterSettings$Builder):143 -> <init>
    14487:14487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$900(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    14487:14487:void <init>(org.bson.json.JsonWriterSettings$Builder):144 -> <init>
    15487:15487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1000(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    15487:15487:void <init>(org.bson.json.JsonWriterSettings$Builder):153 -> <init>
    16487:16487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1000(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    16487:16487:void <init>(org.bson.json.JsonWriterSettings$Builder):154 -> <init>
    17487:17487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1100(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    17487:17487:void <init>(org.bson.json.JsonWriterSettings$Builder):162 -> <init>
    18487:18487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1100(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    18487:18487:void <init>(org.bson.json.JsonWriterSettings$Builder):163 -> <init>
    19487:19487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1200(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    19487:19487:void <init>(org.bson.json.JsonWriterSettings$Builder):168 -> <init>
    20487:20487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1200(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    20487:20487:void <init>(org.bson.json.JsonWriterSettings$Builder):169 -> <init>
    21487:21487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1300(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    21487:21487:void <init>(org.bson.json.JsonWriterSettings$Builder):174 -> <init>
    22487:22487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1300(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    22487:22487:void <init>(org.bson.json.JsonWriterSettings$Builder):175 -> <init>
    23487:23487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1400(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    23487:23487:void <init>(org.bson.json.JsonWriterSettings$Builder):182 -> <init>
    24487:24487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1400(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    24487:24487:void <init>(org.bson.json.JsonWriterSettings$Builder):183 -> <init>
    25487:25487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1500(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    25487:25487:void <init>(org.bson.json.JsonWriterSettings$Builder):190 -> <init>
    26487:26487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1500(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    26487:26487:void <init>(org.bson.json.JsonWriterSettings$Builder):191 -> <init>
    27487:27487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1600(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    27487:27487:void <init>(org.bson.json.JsonWriterSettings$Builder):198 -> <init>
    28487:28487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1600(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    28487:28487:void <init>(org.bson.json.JsonWriterSettings$Builder):199 -> <init>
    29487:29487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1700(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    29487:29487:void <init>(org.bson.json.JsonWriterSettings$Builder):210 -> <init>
    30487:30487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1700(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    30487:30487:void <init>(org.bson.json.JsonWriterSettings$Builder):211 -> <init>
    31487:31487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1800(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    31487:31487:void <init>(org.bson.json.JsonWriterSettings$Builder):220 -> <init>
    32487:32487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1800(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    32487:32487:void <init>(org.bson.json.JsonWriterSettings$Builder):221 -> <init>
    33487:33487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1900(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    33487:33487:void <init>(org.bson.json.JsonWriterSettings$Builder):230 -> <init>
    34487:34487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$1900(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    34487:34487:void <init>(org.bson.json.JsonWriterSettings$Builder):231 -> <init>
    35487:35487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$2000(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    35487:35487:void <init>(org.bson.json.JsonWriterSettings$Builder):238 -> <init>
    36487:36487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$2000(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    36487:36487:void <init>(org.bson.json.JsonWriterSettings$Builder):239 -> <init>
    37487:37487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$2100(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    37487:37487:void <init>(org.bson.json.JsonWriterSettings$Builder):246 -> <init>
    38487:38487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$2100(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    38487:38487:void <init>(org.bson.json.JsonWriterSettings$Builder):247 -> <init>
    39487:39487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$2200(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    39487:39487:void <init>(org.bson.json.JsonWriterSettings$Builder):254 -> <init>
    40487:40487:org.bson.json.Converter org.bson.json.JsonWriterSettings$Builder.access$2200(org.bson.json.JsonWriterSettings$Builder):487:487 -> <init>
    40487:40487:void <init>(org.bson.json.JsonWriterSettings$Builder):255 -> <init>
    39:39:void <init>(org.bson.json.JsonWriterSettings$Builder,byte) -> <init>
    41:79:void <clinit>() -> <clinit>
org.bson.json.JsonWriterSettings$Builder -> org.a.f.F$a:
    java.lang.String newLineCharacters -> a
    java.lang.String indentCharacters -> b
    org.bson.json.JsonMode outputMode -> c
    int maxLength -> d
    org.bson.json.Converter nullConverter -> e
    org.bson.json.Converter stringConverter -> f
    org.bson.json.Converter dateTimeConverter -> g
    org.bson.json.Converter binaryConverter -> h
    org.bson.json.Converter booleanConverter -> i
    org.bson.json.Converter doubleConverter -> j
    org.bson.json.Converter int32Converter -> k
    org.bson.json.Converter int64Converter -> l
    org.bson.json.Converter decimal128Converter -> m
    org.bson.json.Converter objectIdConverter -> n
    org.bson.json.Converter timestampConverter -> o
    org.bson.json.Converter regularExpressionConverter -> p
    org.bson.json.Converter symbolConverter -> q
    org.bson.json.Converter undefinedConverter -> r
    org.bson.json.Converter minKeyConverter -> s
    org.bson.json.Converter maxKeyConverter -> t
    org.bson.json.Converter javaScriptConverter -> u
    517:517:org.bson.json.JsonWriterSettings build() -> a
    563:565:org.bson.json.JsonWriterSettings$Builder outputMode(org.bson.json.JsonMode) -> a
    489:769:void <init>() -> <init>
    487:487:void <init>(byte) -> <init>
org.bson.json.LegacyExtendedJsonBinaryConverter -> org.a.f.G:
    23:23:void <init>() -> <init>
    23:23:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1027:1031:void convert(org.bson.BsonBinary,org.bson.json.StrictJsonWriter):27:31 -> a
    1027:1031:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):23 -> a
    1174:1174:byte[] org.bson.BsonBinary.getData():174:174 -> a
    1174:1174:void convert(org.bson.BsonBinary,org.bson.json.StrictJsonWriter):28 -> a
    1174:1174:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):23 -> a
    2162:2162:byte org.bson.BsonBinary.getType():162:162 -> a
    2162:2162:void convert(org.bson.BsonBinary,org.bson.json.StrictJsonWriter):29 -> a
    2162:2162:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):23 -> a
org.bson.json.LegacyExtendedJsonDateTimeConverter -> org.a.f.H:
    19:19:void <init>() -> <init>
    19:19:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1022:1025:void convert(java.lang.Long,org.bson.json.StrictJsonWriter):22:25 -> a
    1022:1025:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):19 -> a
org.bson.json.LegacyExtendedJsonRegularExpressionConverter -> org.a.f.I:
    21:21:void <init>() -> <init>
    21:21:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1024:1028:void convert(org.bson.BsonRegularExpression,org.bson.json.StrictJsonWriter):24:28 -> a
    1024:1028:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
    1064:1064:java.lang.String org.bson.BsonRegularExpression.getPattern():64:64 -> a
    1064:1064:void convert(org.bson.BsonRegularExpression,org.bson.json.StrictJsonWriter):25 -> a
    1064:1064:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
    1073:1073:java.lang.String org.bson.BsonRegularExpression.getOptions():73:73 -> a
    1073:1073:void convert(org.bson.BsonRegularExpression,org.bson.json.StrictJsonWriter):26 -> a
    1073:1073:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
org.bson.json.RelaxedExtendedJsonDateTimeConverter -> org.a.f.J:
    org.bson.json.Converter FALLBACK_CONVERTER -> a
    19:19:void <init>() -> <init>
    19:19:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1025:1032:void convert(java.lang.Long,org.bson.json.StrictJsonWriter):25:32 -> a
    1025:1032:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):19 -> a
    20:20:void <clinit>() -> <clinit>
org.bson.json.RelaxedExtendedJsonDoubleConverter -> org.a.f.K:
    org.bson.json.Converter FALLBACK_CONVERTER -> a
    19:19:void <init>() -> <init>
    19:19:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1024:1029:void convert(java.lang.Double,org.bson.json.StrictJsonWriter):24:29 -> a
    1024:1029:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):19 -> a
    20:20:void <clinit>() -> <clinit>
org.bson.json.RelaxedExtendedJsonInt64Converter -> org.a.f.L:
    19:19:void <init>() -> <init>
    19:19:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1022:1023:void convert(java.lang.Long,org.bson.json.StrictJsonWriter):22:23 -> a
    1022:1023:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):19 -> a
org.bson.json.ShellBinaryConverter -> org.a.f.M:
    25:25:void <init>() -> <init>
    25:25:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1028:1030:void convert(org.bson.BsonBinary,org.bson.json.StrictJsonWriter):28:30 -> a
    1028:1030:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):25 -> a
    1162:1162:byte org.bson.BsonBinary.getType():162:162 -> a
    1162:1162:void convert(org.bson.BsonBinary,org.bson.json.StrictJsonWriter):28 -> a
    1162:1162:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):25 -> a
    1174:1174:byte[] org.bson.BsonBinary.getData():174:174 -> a
    1174:1174:void convert(org.bson.BsonBinary,org.bson.json.StrictJsonWriter):29 -> a
    1174:1174:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):25 -> a
org.bson.json.ShellDateTimeConverter -> org.a.f.N:
    26:26:void <init>() -> <init>
    26:26:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1029:1036:void convert(java.lang.Long,org.bson.json.StrictJsonWriter):29:36 -> a
    1029:1036:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):26 -> a
org.bson.json.ShellDecimal128Converter -> org.a.f.O:
    23:23:void <init>() -> <init>
    23:23:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1026:1027:void convert(org.bson.types.Decimal128,org.bson.json.StrictJsonWriter):26:27 -> a
    1026:1027:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):23 -> a
org.bson.json.ShellInt64Converter -> org.a.f.P:
    21:21:void <init>() -> <init>
    21:21:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1024:1029:void convert(java.lang.Long,org.bson.json.StrictJsonWriter):24:29 -> a
    1024:1029:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
org.bson.json.ShellMaxKeyConverter -> org.a.f.Q:
    21:21:void <init>() -> <init>
    21:21:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1024:1025:void convert$aaa65bb(org.bson.json.StrictJsonWriter):24:25 -> a
    1024:1025:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
org.bson.json.ShellMinKeyConverter -> org.a.f.R:
    21:21:void <init>() -> <init>
    21:21:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1024:1025:void convert$2bc4874d(org.bson.json.StrictJsonWriter):24:25 -> a
    1024:1025:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
org.bson.json.ShellObjectIdConverter -> org.a.f.S:
    23:23:void <init>() -> <init>
    23:23:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1026:1028:void convert(org.bson.types.ObjectId,org.bson.json.StrictJsonWriter):26:28 -> a
    1026:1028:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):23 -> a
org.bson.json.ShellRegularExpressionConverter -> org.a.f.T:
    21:21:void <init>() -> <init>
    21:21:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1024:1026:void convert(org.bson.BsonRegularExpression,org.bson.json.StrictJsonWriter):24:26 -> a
    1024:1026:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
    1064:1064:java.lang.String org.bson.BsonRegularExpression.getPattern():64:64 -> a
    1064:1064:void convert(org.bson.BsonRegularExpression,org.bson.json.StrictJsonWriter):24 -> a
    1064:1064:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
    2064:2064:java.lang.String org.bson.BsonRegularExpression.getPattern():64:64 -> a
    2064:2064:void convert(org.bson.BsonRegularExpression,org.bson.json.StrictJsonWriter):24 -> a
    2064:2064:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
    2073:2073:java.lang.String org.bson.BsonRegularExpression.getOptions():73:73 -> a
    2073:2073:void convert(org.bson.BsonRegularExpression,org.bson.json.StrictJsonWriter):25 -> a
    2073:2073:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
org.bson.json.ShellTimestampConverter -> org.a.f.U:
    23:23:void <init>() -> <init>
    23:23:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1026:1027:void convert(org.bson.BsonTimestamp,org.bson.json.StrictJsonWriter):26:27 -> a
    1026:1027:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):23 -> a
    1088:1088:int org.bson.BsonTimestamp.getInc():88:88 -> a
    1088:1088:void convert(org.bson.BsonTimestamp,org.bson.json.StrictJsonWriter):26 -> a
    1088:1088:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):23 -> a
org.bson.json.ShellUndefinedConverter -> org.a.f.V:
    21:21:void <init>() -> <init>
    21:21:void convert(java.lang.Object,org.bson.json.StrictJsonWriter) -> a
    1024:1025:void convert$78ba6cf0(org.bson.json.StrictJsonWriter):24:25 -> a
    1024:1025:void convert(java.lang.Object,org.bson.json.StrictJsonWriter):21 -> a
org.bson.json.StrictCharacterStreamJsonWriter -> org.a.f.W:
    java.io.Writer writer -> a
    org.bson.json.StrictCharacterStreamJsonWriterSettings settings -> b
    org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext context -> c
    org.bson.json.StrictCharacterStreamJsonWriter$State state -> d
    int curLength -> f
    boolean isTruncated -> e
    61:75:void <init>(java.io.Writer,org.bson.json.StrictCharacterStreamJsonWriterSettings) -> <init>
    88:90:void writeStartObject(java.lang.String) -> a
    100:103:void writeBoolean(java.lang.String,boolean) -> a
    107:111:void writeNumber(java.lang.String,java.lang.String) -> a
    115:119:void writeString(java.lang.String,java.lang.String) -> b
    137:153:void writeName(java.lang.String) -> b
    1046:1046:boolean org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$000(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> b
    1046:1046:void writeName(java.lang.String):140 -> b
    1057:1057:boolean org.bson.json.StrictCharacterStreamJsonWriterSettings.isIndent():57:57 -> b
    1057:1057:void writeName(java.lang.String):143 -> b
    1066:1066:java.lang.String org.bson.json.StrictCharacterStreamJsonWriterSettings.getNewLineCharacters():66:66 -> b
    1066:1066:void writeName(java.lang.String):144 -> b
    2046:2046:java.lang.String org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$100(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> b
    2046:2046:void writeName(java.lang.String):145 -> b
    3046:3046:boolean org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$000(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> b
    3046:3046:void writeName(java.lang.String):146 -> b
    157:161:void writeBoolean(boolean) -> a
    165:170:void writeNumber(java.lang.String) -> c
    174:179:void writeString(java.lang.String) -> d
    183:188:void writeRaw(java.lang.String) -> e
    192:196:void writeNull() -> a
    200:207:void writeStartObject() -> b
    3075:3075:java.lang.String org.bson.json.StrictCharacterStreamJsonWriterSettings.getIndentCharacters():75:75 -> b
    3075:3075:void writeStartObject():205 -> b
    219:232:void writeEndObject() -> c
    4057:4057:boolean org.bson.json.StrictCharacterStreamJsonWriterSettings.isIndent():57:57 -> c
    4057:4057:void writeEndObject():221 -> c
    5046:5046:boolean org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$000(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> c
    5046:5046:void writeEndObject():221 -> c
    5066:5066:java.lang.String org.bson.json.StrictCharacterStreamJsonWriterSettings.getNewLineCharacters():66:66 -> c
    5066:5066:void writeEndObject():222 -> c
    6046:6046:org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$200(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> c
    6046:6046:void writeEndObject():223 -> c
    7046:7046:java.lang.String org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$100(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> c
    7046:7046:void writeEndObject():223 -> c
    8046:8046:org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$200(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> c
    8046:8046:void writeEndObject():226 -> c
    9046:9046:org.bson.json.StrictCharacterStreamJsonWriter$JsonContextType org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$300(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> c
    9046:9046:void writeEndObject():227 -> c
    280:292:void preWriteValue() -> d
    10046:10046:org.bson.json.StrictCharacterStreamJsonWriter$JsonContextType org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$300(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> d
    10046:10046:void preWriteValue():280 -> d
    11046:11046:boolean org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$000(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> d
    11046:11046:void preWriteValue():281 -> d
    11057:11057:boolean org.bson.json.StrictCharacterStreamJsonWriterSettings.isIndent():57:57 -> d
    11057:11057:void preWriteValue():284 -> d
    11066:11066:java.lang.String org.bson.json.StrictCharacterStreamJsonWriterSettings.getNewLineCharacters():66:66 -> d
    11066:11066:void preWriteValue():285 -> d
    12046:12046:java.lang.String org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$100(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> d
    12046:12046:void preWriteValue():286 -> d
    13046:13046:boolean org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$000(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> d
    13046:13046:void preWriteValue():287 -> d
    14046:14046:boolean org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$002(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext,boolean):46:46 -> d
    14046:14046:void preWriteValue():291 -> d
    295:300:void setNextState() -> e
    15046:15046:org.bson.json.StrictCharacterStreamJsonWriter$JsonContextType org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext.access$300(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext):46:46 -> e
    15046:15046:void setNextState():295 -> e
    303:363:void writeStringHelper(java.lang.String) -> g
    367:378:void write(java.lang.String) -> f
    15085:15085:int org.bson.json.StrictCharacterStreamJsonWriterSettings.getMaxLength():85:85 -> f
    15085:15085:void write(java.lang.String):367 -> f
    16085:16085:int org.bson.json.StrictCharacterStreamJsonWriterSettings.getMaxLength():85:85 -> f
    16085:16085:void write(java.lang.String):367 -> f
    17085:17085:int org.bson.json.StrictCharacterStreamJsonWriterSettings.getMaxLength():85:85 -> f
    17085:17085:void write(java.lang.String):371 -> f
    18085:18085:int org.bson.json.StrictCharacterStreamJsonWriterSettings.getMaxLength():85:85 -> f
    18085:18085:void write(java.lang.String):372 -> f
    382:391:void write(char) -> a
    19085:19085:int org.bson.json.StrictCharacterStreamJsonWriterSettings.getMaxLength():85:85 -> a
    19085:19085:void write(char):382 -> a
    20085:20085:int org.bson.json.StrictCharacterStreamJsonWriterSettings.getMaxLength():85:85 -> a
    20085:20085:void write(char):382 -> a
    394:397:void checkState(org.bson.json.StrictCharacterStreamJsonWriter$State) -> a
    400:400:void throwBSONException(java.io.IOException) -> a
org.bson.json.StrictCharacterStreamJsonWriter$JsonContextType -> org.a.f.W$a:
    org.bson.json.StrictCharacterStreamJsonWriter$JsonContextType TOP_LEVEL -> a
    org.bson.json.StrictCharacterStreamJsonWriter$JsonContextType DOCUMENT -> b
    org.bson.json.StrictCharacterStreamJsonWriter$JsonContextType ARRAY -> c
    org.bson.json.StrictCharacterStreamJsonWriter$JsonContextType[] $VALUES -> d
    33:33:org.bson.json.StrictCharacterStreamJsonWriter$JsonContextType[] values() -> values
    33:33:org.bson.json.StrictCharacterStreamJsonWriter$JsonContextType valueOf(java.lang.String) -> valueOf
    33:33:void <init>(java.lang.String,int) -> <init>
    33:36:void <clinit>() -> <clinit>
    1033:1033:org.bson.json.StrictCharacterStreamJsonWriter$JsonContextType[] $values():33:33 -> <clinit>
    1033:1033:void <clinit>():33 -> <clinit>
org.bson.json.StrictCharacterStreamJsonWriter$State -> org.a.f.W$b:
    org.bson.json.StrictCharacterStreamJsonWriter$State INITIAL -> a
    org.bson.json.StrictCharacterStreamJsonWriter$State NAME -> b
    org.bson.json.StrictCharacterStreamJsonWriter$State VALUE -> c
    org.bson.json.StrictCharacterStreamJsonWriter$State DONE -> d
    org.bson.json.StrictCharacterStreamJsonWriter$State[] $VALUES -> e
    39:39:org.bson.json.StrictCharacterStreamJsonWriter$State[] values() -> values
    39:39:org.bson.json.StrictCharacterStreamJsonWriter$State valueOf(java.lang.String) -> valueOf
    39:39:void <init>(java.lang.String,int) -> <init>
    39:43:void <clinit>() -> <clinit>
    1039:1039:org.bson.json.StrictCharacterStreamJsonWriter$State[] $values():39:39 -> <clinit>
    1039:1039:void <clinit>():39 -> <clinit>
org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext -> org.a.f.W$c:
    org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext parentContext -> a
    org.bson.json.StrictCharacterStreamJsonWriter$JsonContextType contextType -> b
    java.lang.String indentation -> c
    boolean hasElements -> d
    52:56:void <init>(org.bson.json.StrictCharacterStreamJsonWriter$StrictJsonContext,org.bson.json.StrictCharacterStreamJsonWriter$JsonContextType,java.lang.String) -> <init>
org.bson.json.StrictCharacterStreamJsonWriterSettings -> org.a.f.X:
    boolean indent -> a
    java.lang.String newLineCharacters -> b
    java.lang.String indentCharacters -> c
    int maxLength -> d
    43:48:void <init>(org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder) -> <init>
    1093:1093:boolean org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder.access$100(org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder):93:93 -> <init>
    1093:1093:void <init>(org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder):44 -> <init>
    2093:2093:java.lang.String org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder.access$200(org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder):93:93 -> <init>
    2093:2093:void <init>(org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder):45 -> <init>
    3093:3093:java.lang.String org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder.access$200(org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder):93:93 -> <init>
    3093:3093:void <init>(org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder):45 -> <init>
    4093:4093:java.lang.String org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder.access$300(org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder):93:93 -> <init>
    4093:4093:void <init>(org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder):46 -> <init>
    5093:5093:int org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder.access$400(org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder):93:93 -> <init>
    5093:5093:void <init>(org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder):47 -> <init>
    27:27:void <init>(org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder,byte) -> <init>
org.bson.json.StrictCharacterStreamJsonWriterSettings$Builder -> org.a.f.X$a:
    boolean indent -> a
    java.lang.String newLineCharacters -> b
    java.lang.String indentCharacters -> c
    int maxLength -> d
    95:156:void <init>() -> <init>
    93:93:void <init>(byte) -> <init>
org.bson.json.StrictJsonWriter -> org.a.f.Y:
    void writeName(java.lang.String) -> b
    void writeBoolean(boolean) -> a
    void writeBoolean(java.lang.String,boolean) -> a
    void writeNumber(java.lang.String) -> c
    void writeNumber(java.lang.String,java.lang.String) -> a
    void writeString(java.lang.String) -> d
    void writeString(java.lang.String,java.lang.String) -> b
    void writeRaw(java.lang.String) -> e
    void writeNull() -> a
    void writeStartObject() -> b
    void writeStartObject(java.lang.String) -> a
    void writeEndObject() -> c
org.bson.json.UuidStringValidator -> org.a.f.Z:
    java.util.BitSet HEX_CHARS -> a
    32:39:void validateFourHexChars(java.lang.String,int) -> a
    42:45:void validateDash(java.lang.String,int) -> b
    53:69:void validate(java.lang.String) -> a
    25:29:void <clinit>() -> <clinit>
org.bson.types.BSONTimestamp -> org.a.g.a:
    int inc -> a
    java.util.Date time -> b
    44:47:void <init>() -> <init>
    56:59:void <init>(int,int) -> <init>
    67:70:int getTime() -> a
    84:84:java.lang.String toString() -> toString
    98:102:int hashCode() -> hashCode
    107:114:boolean equals(java.lang.Object) -> equals
    1079:1079:int getInc():79:79 -> equals
    1079:1079:boolean equals(java.lang.Object):112 -> equals
    2079:2079:int getInc():79:79 -> equals
    2079:2079:boolean equals(java.lang.Object):112 -> equals
    28:28:int compareTo(java.lang.Object) -> compareTo
    2089:2092:int compareTo(org.bson.types.BSONTimestamp):89:92 -> compareTo
    2089:2092:int compareTo(java.lang.Object):28 -> compareTo
    3079:3079:int getInc():79:79 -> compareTo
    3079:3079:int compareTo(org.bson.types.BSONTimestamp):92 -> compareTo
    3079:3079:int compareTo(java.lang.Object):28 -> compareTo
    4079:4079:int getInc():79:79 -> compareTo
    4079:4079:int compareTo(org.bson.types.BSONTimestamp):92 -> compareTo
    4079:4079:int compareTo(java.lang.Object):28 -> compareTo
org.bson.types.BasicBSONList -> org.a.g.b:
    50:50:void <init>() -> <init>
    64:64:java.lang.Object put(java.lang.String,java.lang.Object) -> a
    1154:1154:int _getInt(java.lang.String):154:154 -> a
    1154:1154:java.lang.Object put(java.lang.String,java.lang.Object):64 -> a
    2075:2079:java.lang.Object put(int,java.lang.Object):75:79 -> a
    2075:2079:java.lang.Object put(java.lang.String,java.lang.Object):64 -> a
    105:112:java.lang.Object get(java.lang.String) -> a
    2154:2154:int _getInt(java.lang.String):154:154 -> a
    2154:2154:java.lang.Object get(java.lang.String):105 -> a
    129:133:boolean containsField(java.lang.String) -> b
    138:138:java.util.Set keySet() -> keySet
    159:164:int _getInt(java.lang.String,boolean) -> a
org.bson.types.Binary -> org.a.g.c:
    byte type -> a
    byte[] data -> b
    65:68:void <init>(byte,byte[]) -> <init>
    85:85:byte[] getData() -> a
    99:115:boolean equals(java.lang.Object) -> equals
    120:122:int hashCode() -> hashCode
org.bson.types.Code -> org.a.g.d:
    java.lang.String code -> a
    40:42:void <init>(java.lang.String) -> <init>
    50:50:java.lang.String getCode() -> a
    55:68:boolean equals(java.lang.Object) -> equals
    73:73:int hashCode() -> hashCode
    78:78:java.lang.String toString() -> toString
org.bson.types.CodeWScope -> org.a.g.e:
    org.bson.BSONObject scope -> b
    41:43:void <init>(java.lang.String,org.bson.BSONObject) -> <init>
    55:62:boolean equals(java.lang.Object) -> equals
    67:67:int hashCode() -> hashCode
org.bson.types.CodeWithScope -> org.a.g.f:
    org.bson.Document scope -> b
    44:46:void <init>(java.lang.String,org.bson.Document) -> <init>
    59:75:boolean equals(java.lang.Object) -> equals
    80:80:int hashCode() -> hashCode
org.bson.types.Decimal128 -> org.a.g.g:
    java.math.BigInteger BIG_INT_TEN -> f
    java.math.BigInteger BIG_INT_ONE -> g
    java.math.BigInteger BIG_INT_ZERO -> h
    java.util.Set NaN_STRINGS -> i
    java.util.Set NEGATIVE_NaN_STRINGS -> j
    java.util.Set POSITIVE_INFINITY_STRINGS -> k
    java.util.Set NEGATIVE_INFINITY_STRINGS -> l
    org.bson.types.Decimal128 POSITIVE_INFINITY -> a
    org.bson.types.Decimal128 NEGATIVE_INFINITY -> b
    org.bson.types.Decimal128 NEGATIVE_NaN -> m
    org.bson.types.Decimal128 NaN -> c
    long high -> d
    long low -> e
    117:131:org.bson.types.Decimal128 parse(java.lang.String) -> a
    143:143:org.bson.types.Decimal128 fromIEEE754BIDEncoding(long,long) -> a
    152:153:void <init>(long) -> <init>
    162:163:void <init>(java.math.BigDecimal) -> <init>
    165:168:void <init>(long,long) -> <init>
    171:211:void <init>(java.math.BigDecimal,boolean) -> <init>
    1215:1242:java.math.BigDecimal clampAndRound(java.math.BigDecimal):215:242 -> <init>
    1215:1242:void <init>(java.math.BigDecimal,boolean):175 -> <init>
    246:253:int ensureExactRounding(java.math.BigDecimal,int) -> a
    285:300:java.math.BigDecimal bigDecimalValue() -> a
    305:305:boolean hasDifferentSign(java.math.BigDecimal) -> a
    309:309:boolean isZero(java.math.BigDecimal) -> b
    313:319:java.math.BigDecimal bigDecimalValueNoNegativeZeroCheck() -> b
    324:340:byte[] getBytes() -> c
    344:347:int getExponent() -> d
    352:352:boolean twoHighestCombinationBitsAreSet() -> e
    361:361:boolean isNegative() -> f
    370:370:boolean isInfinite() -> g
    388:388:boolean isNaN() -> h
    456:456:int intValue() -> intValue
    472:472:long longValue() -> longValue
    487:487:float floatValue() -> floatValue
    502:519:double doubleValue() -> doubleValue
    538:554:boolean equals(java.lang.Object) -> equals
    559:561:int hashCode() -> hashCode
    573:583:java.lang.String toString() -> toString
    1587:1628:java.lang.String toStringWithBigDecimal():587:628 -> toString
    1587:1628:java.lang.String toString():583 -> toString
    39:39:int compareTo(java.lang.Object) -> compareTo
    2394:2439:int compareTo(org.bson.types.Decimal128):394:439 -> compareTo
    2394:2439:int compareTo(java.lang.Object):39 -> compareTo
    52:95:void <clinit>() -> <clinit>
org.bson.types.MaxKey -> org.a.g.h:
    24:24:void <init>() -> <init>
    30:30:boolean equals(java.lang.Object) -> equals
    35:35:int hashCode() -> hashCode
    40:40:java.lang.String toString() -> toString
org.bson.types.MinKey -> org.a.g.i:
    24:24:void <init>() -> <init>
    30:30:boolean equals(java.lang.Object) -> equals
    35:35:int hashCode() -> hashCode
    40:40:java.lang.String toString() -> toString
org.bson.types.ObjectId -> org.a.g.j:
    int RANDOM_VALUE1 -> a
    short RANDOM_VALUE2 -> b
    java.util.concurrent.atomic.AtomicInteger NEXT_COUNTER -> c
    char[] HEX_CHARS -> d
    int timestamp -> e
    int counter -> f
    int randomValue1 -> g
    short randomValue2 -> h
    89:89:org.bson.types.ObjectId get() -> a
    146:147:void <init>() -> <init>
    155:156:void <init>(java.util.Date) -> <init>
    1443:1443:int dateToTimestampSeconds(java.util.Date):443:443 -> <init>
    1443:1443:void <init>(java.util.Date):155 -> <init>
    181:182:void <init>(int,int,boolean) -> <init>
    185:196:void <init>(int,int,short,int,boolean) -> <init>
    205:206:void <init>(java.lang.String) -> <init>
    215:216:void <init>(byte[]) -> <init>
    2081:2084:java.lang.Object org.bson.assertions.Assertions.isTrueArgument(java.lang.String,java.lang.Object,boolean):81:84 -> <init>
    2081:2084:void <init>(byte[]):215 -> <init>
    225:235:void <init>(java.nio.ByteBuffer) -> <init>
    2459:2459:short makeShort(byte,byte):459:459 -> <init>
    2459:2459:void <init>(java.nio.ByteBuffer):233 -> <init>
    243:245:byte[] toByteArray() -> b
    257:272:void putToByteBuffer(java.nio.ByteBuffer) -> a
    2464:2464:byte int3(int):464:464 -> a
    2464:2464:void putToByteBuffer(java.nio.ByteBuffer):260 -> a
    2468:2468:byte int2(int):468:468 -> a
    2468:2468:void putToByteBuffer(java.nio.ByteBuffer):261 -> a
    2472:2472:byte int1(int):472:472 -> a
    2472:2472:void putToByteBuffer(java.nio.ByteBuffer):262 -> a
    2476:2476:byte int0(int):476:476 -> a
    2476:2476:void putToByteBuffer(java.nio.ByteBuffer):263 -> a
    3468:3468:byte int2(int):468:468 -> a
    3468:3468:void putToByteBuffer(java.nio.ByteBuffer):264 -> a
    3472:3472:byte int1(int):472:472 -> a
    3472:3472:void putToByteBuffer(java.nio.ByteBuffer):265 -> a
    3476:3476:byte int0(int):476:476 -> a
    3476:3476:void putToByteBuffer(java.nio.ByteBuffer):266 -> a
    3480:3480:byte short1(short):480:480 -> a
    3480:3480:void putToByteBuffer(java.nio.ByteBuffer):267 -> a
    3484:3484:byte short0(short):484:484 -> a
    3484:3484:void putToByteBuffer(java.nio.ByteBuffer):268 -> a
    4468:4468:byte int2(int):468:468 -> a
    4468:4468:void putToByteBuffer(java.nio.ByteBuffer):269 -> a
    4472:4472:byte int1(int):472:472 -> a
    4472:4472:void putToByteBuffer(java.nio.ByteBuffer):270 -> a
    4476:4476:byte int0(int):476:476 -> a
    4476:4476:void putToByteBuffer(java.nio.ByteBuffer):271 -> a
    298:304:java.lang.String toHexString() -> c
    309:333:boolean equals(java.lang.Object) -> equals
    338:342:int hashCode() -> hashCode
    347:358:int compareTo(org.bson.types.ObjectId) -> a
    363:363:java.lang.String toString() -> toString
    418:428:byte[] parseHexString(java.lang.String) -> a
    432:439:int hexCharToInt(char) -> a
    450:450:int makeInt(byte,byte,byte,byte) -> a
    48:48:int compareTo(java.lang.Object) -> compareTo
    60:415:void <clinit>() -> <clinit>
org.bson.types.StringRangeSet -> org.a.g.k:
    java.lang.String[] STRINGS -> a
    int size -> b
    39:42:void <init>(int) -> <init>
    46:46:int size() -> size
    51:51:boolean isEmpty() -> isEmpty
    56:63:boolean contains(java.lang.Object) -> contains
    69:69:java.util.Iterator iterator() -> iterator
    94:98:java.lang.Object[] toArray() -> toArray
    104:114:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    124:124:boolean remove(java.lang.Object) -> remove
    129:134:boolean containsAll(java.util.Collection) -> containsAll
    139:139:boolean addAll(java.util.Collection) -> addAll
    144:144:boolean retainAll(java.util.Collection) -> retainAll
    149:149:boolean removeAll(java.util.Collection) -> removeAll
    154:154:void clear() -> clear
    158:160:java.lang.String intToString(int) -> a
    27:27:boolean add(java.lang.Object) -> add
    1119:1119:boolean add$552c4dfd():119:119 -> add
    1119:1119:boolean add(java.lang.Object):27 -> add
    27:27:int access$000(org.bson.types.StringRangeSet) -> a
    27:27:java.lang.String access$100(org.bson.types.StringRangeSet,int) -> a
    29:35:void <clinit>() -> <clinit>
org.bson.types.StringRangeSet$1 -> org.a.g.k$1:
    int cur -> a
    org.bson.types.StringRangeSet this$0 -> b
    69:70:void <init>(org.bson.types.StringRangeSet) -> <init>
    74:74:boolean hasNext() -> hasNext
    87:87:void remove() -> remove
    69:69:java.lang.Object next() -> next
    1079:1082:java.lang.String next():79:82 -> next
    1079:1082:java.lang.Object next():69 -> next
org.bson.types.Symbol -> org.a.g.l:
    java.lang.String symbol -> a
    40:42:void <init>(java.lang.String) -> <init>
    61:74:boolean equals(java.lang.Object) -> equals
    79:79:int hashCode() -> hashCode
    84:84:java.lang.String toString() -> toString
proguard.optimize.gson._GsonUtil -> b.a.a.a:
    org.apache.logging.log4j.Logger logger -> a
    43:43:void <init>() -> <init>
    63:75:com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.Gson,java.lang.Class,java.lang.Object) -> a
    95:108:com.google.gson.TypeAdapter getTypeAdapter(com.google.gson.Gson,com.google.gson.reflect.TypeToken,java.lang.Object) -> a
    116:120:java.lang.reflect.Type getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object) -> a
    131:131:boolean isCustomTypeAdapter(com.google.gson.TypeAdapter) -> a
    45:45:void <clinit>() -> <clinit>
proguard.optimize.gson._OptimizedJsonReader -> b.a.a.b:
    int b(com.google.gson.stream.JsonReader) -> a
    int c(com.google.gson.stream.JsonReader) -> b
proguard.optimize.gson._OptimizedJsonReaderImpl -> b.a.a.c:
    java.util.Map a -> a
    36:36:void <init>() -> <init>
    73:75:int b(com.google.gson.stream.JsonReader) -> a
    81:83:int c(com.google.gson.stream.JsonReader) -> b
    48:48:void <clinit>() -> <clinit>
    1065:1065:java.util.Map a():65:65 -> <clinit>
    1065:1065:void <clinit>():48 -> <clinit>
proguard.optimize.gson._OptimizedJsonWriter -> b.a.a.d:
    void b(com.google.gson.stream.JsonWriter,int) -> a
    void c(com.google.gson.stream.JsonWriter,int) -> b
proguard.optimize.gson._OptimizedJsonWriterImpl -> b.a.a.e:
    java.lang.String[] a -> a
    35:35:void <init>() -> <init>
    73:74:void b(com.google.gson.stream.JsonWriter,int) -> a
    79:80:void c(com.google.gson.stream.JsonWriter,int) -> b
    47:47:void <clinit>() -> <clinit>
    1064:1064:java.lang.String[] a():64:64 -> <clinit>
    1064:1064:void <clinit>():47 -> <clinit>
proguard.optimize.gson._OptimizedTypeAdapter -> b.a.a.f:
proguard.optimize.gson._OptimizedTypeAdapterFactory -> b.a.a.g:
    proguard.optimize.gson._OptimizedJsonReaderImpl optimizedJsonReaderImpl -> a
    proguard.optimize.gson._OptimizedJsonWriterImpl optimizedJsonWriterImpl -> b
    36:36:void <init>() -> <init>
    46:46:com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> create
    38:39:void <clinit>() -> <clinit>
